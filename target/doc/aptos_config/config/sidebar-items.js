window.SIDEBAR_ITEMS = {"constant":[["BUFFERED_STATE_TARGET_ITEMS",""],["CONNECTION_BACKOFF_BASE",""],["CONNECTIVITY_CHECK_INTERVAL_MS",""],["DEFAULT_ADDRESS",""],["DEFAULT_BATCH_SIZE",""],["DEFAULT_BROADCAST_BUCKETS",""],["DEFAULT_EMIT_EVERY",""],["DEFAULT_FETCH_TASKS",""],["DEFAULT_MAX_NUM_NODES_PER_LRU_CACHE_SHARD",""],["DEFAULT_MAX_PAGE_SIZE",""],["DEFAULT_MAX_SUBMIT_TRANSACTION_BATCH_SIZE",""],["DEFAULT_PORT",""],["DEFAULT_PROCESSOR_TASKS",""],["DEFAULT_REQUEST_CONTENT_LENGTH_LIMIT",""],["HANDSHAKE_VERSION","Current supported protocol negotiation handshake version. See `network::protocols::wire::v1`."],["INBOUND_TCP_RX_BUFFER_SIZE",""],["INBOUND_TCP_TX_BUFFER_SIZE",""],["IP_BYTE_BUCKET_RATE",""],["IP_BYTE_BUCKET_SIZE",""],["MAX_APPLICATION_MESSAGE_SIZE",""],["MAX_CONCURRENT_NETWORK_REQS",""],["MAX_CONNECTION_DELAY_MS",""],["MAX_FRAME_SIZE",""],["MAX_FULLNODE_OUTBOUND_CONNECTIONS",""],["MAX_INBOUND_CONNECTIONS",""],["MAX_MESSAGE_METADATA_SIZE",""],["MAX_MESSAGE_SIZE",""],["MESSAGE_PADDING_SIZE",""],["NETWORK_CHANNEL_SIZE",""],["NO_OP_STORAGE_PRUNER_CONFIG",""],["OUTBOUND_TCP_RX_BUFFER_SIZE",""],["OUTBOUND_TCP_TX_BUFFER_SIZE",""],["PING_FAILURES_TOLERATED",""],["PING_INTERVAL_MS",""],["PING_TIMEOUT_MS",""]],"enum":[["BootstrappingMode","The bootstrapping mode determines how the node will bootstrap to the latest blockchain state, e.g., directly download the latest states."],["ContinuousSyncingMode","The continuous syncing mode determines how the node will stay up-to-date once it has bootstrapped and the blockchain continues to grow, e.g., continuously executing all transactions."],["DiscoveryMethod",""],["Error",""],["Identity",""],["InitialSafetyRulesConfig",""],["PeerRole","Represents the Role that a peer plays in the network ecosystem rather than the type of node. Determines how nodes are connected to other nodes, and how discovery views them."],["RoleType",""],["SafetyRulesService","Defines how safety rules should be executed"],["SecureBackend",""],["Token","Tokens can either be directly within this config or stored somewhere on disk."],["WaypointConfig",""]],"fn":[["default_if_zero",""],["default_if_zero_u8",""],["env_or_default",""],["invariant",""],["must_be_set",""]],"struct":[["ApiConfig",""],["AptosDataClientConfig",""],["BaseConfig",""],["ConsensusConfig",""],["DataStreamingServiceConfig",""],["DeprecatedConfig","Represents a deprecated config that provides no field verification."],["EpochSnapshotPrunerConfig",""],["ExecutionConfig",""],["FirehoseStreamerConfig",""],["GitHubConfig",""],["IdentityBlob","A single struct for reading / writing to a file for identity across config"],["IdentityFromConfig","The identity is stored within the config."],["IdentityFromFile",""],["IdentityFromStorage","This represents an identity in a secure-storage as defined in NodeConfig::secure."],["IndexerConfig",""],["InspectionServiceConfig",""],["LedgerPrunerConfig",""],["LoggerConfig",""],["MempoolConfig",""],["NetworkConfig",""],["NodeConfig","Config pulls in configuration information from the config file. This is used to set up the nodes and configure various parameters. The config file is broken up into sections for each module so that only that module can be passed around"],["OnDiskStorageConfig",""],["ParseRoleError",""],["Peer","Represents a single seed configuration for a seed peer"],["PeerMonitoringServiceConfig",""],["PrunerConfig",""],["RateLimitConfig",""],["RemoteService",""],["RocksDbStorageConfig",""],["RocksdbConfig","Port selected RocksDB options for tuning underlying rocksdb instance of AptosDB. see https://github.com/facebook/rocksdb/blob/master/include/rocksdb/options.h for detailed explanations."],["RocksdbConfigs",""],["RootPath",""],["SafetyRulesConfig",""],["SafetyRulesTestConfig",""],["StateMerklePrunerConfig",""],["StateSyncConfig",""],["StateSyncDriverConfig",""],["StorageConfig",""],["StorageServiceConfig",""],["TestConfig",""],["TokenFromConfig",""],["TokenFromDisk",""],["VaultConfig",""]],"trait":[["PersistableConfig",""]],"type":[["PeerSet",""]]};