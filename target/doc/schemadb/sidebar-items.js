window.SIDEBAR_ITEMS = {"constant":[["DEFAULT_COLUMN_FAMILY_NAME","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc` The name of the default column family."]],"enum":[["DBCompressionType","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc`"]],"macro":[["define_schema","Macro for defining a SchemaDB schema."]],"mod":[["iterator",""],["schema","This module provides traits that define the behavior of a schema and its associated key and value types, along with helpers to define a new schema with ease."]],"struct":[["BlockBasedOptions","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc` For configuring block-based file storage."],["Cache","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc`"],["ColumnFamilyDescriptor","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc` A descriptor for a RocksDB column family."],["DB","This DB is a schematized RocksDB wrapper where all data passed in and out are typed according to [`Schema`]s."],["Options","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc` Database-wide options around performance and behavior."],["ReadOptions","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc`"],["SchemaBatch","`SchemaBatch` holds a collection of updates that can be applied to a DB atomically. The updates will be applied in the order in which they are added to the `SchemaBatch`."],["SliceTransform","Type alias to `rocksdb::ReadOptions`. See `rocksdb doc` A `SliceTransform` is a generic pluggable way of transforming one string to another. Its primary use-case is in configuring rocksdb to store prefix blooms by setting prefix_extractor in ColumnFamilyOptions."]],"type":[["ColumnFamilyName",""]]};