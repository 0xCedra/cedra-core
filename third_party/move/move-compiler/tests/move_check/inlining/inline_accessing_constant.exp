bug[ICE12001]: BYTECODE GENERATION FAILED
  ┌─ tests/move_check/inlining/inline_accessing_constant.move:9:18
  │
9 │ module 0xc0ffee::dummy2 {
  │                  ^^^^^^ IR ERROR: Missing constant definition for CC
Backtrace: Backtrace [
    { fn: "std::backtrace_rs::backtrace::libunwind::trace", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/../../backtrace/src/backtrace/libunwind.rs", line: 93 },
    { fn: "std::backtrace_rs::backtrace::trace_unsynchronized", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/../../backtrace/src/backtrace/mod.rs", line: 66 },
    { fn: "std::backtrace::Backtrace::create", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/backtrace.rs", line: 331 },
    { fn: "move_compiler::diagnostics::Diagnostic::add_backtrace", file: "./src/diagnostics/mod.rs", line: 303 },
    { fn: "move_compiler::diagnostics::Diagnostic::new", file: "./src/diagnostics/mod.rs", line: 287 },
    { fn: "move_compiler::to_bytecode::translate::module", file: "./src/to_bytecode/translate.rs", line: 250 },
    { fn: "move_compiler::to_bytecode::translate::program", file: "./src/to_bytecode/translate.rs", line: 133 },
    { fn: "move_compiler::command_line::compiler::run", file: "./src/command_line/compiler.rs", line: 892 },
    { fn: "move_compiler::command_line::compiler::SteppedCompiler<_>::run_impl", file: "./src/command_line/compiler.rs", line: 283 },
    { fn: "move_compiler::command_line::compiler::SteppedCompiler<_>::run", file: "./src/command_line/compiler.rs", line: 340 },
    { fn: "move_compiler::command_line::compiler::SteppedCompiler<_>::build", file: "./src/command_line/compiler.rs", line: 369 },
    { fn: "move_check_testsuite::move_check_for_errors::try_impl", file: "./tests/move_check_testsuite.rs", line: 204 },
    { fn: "move_check_testsuite::move_check_for_errors", file: "./tests/move_check_testsuite.rs", line: 208 },
    { fn: "move_check_testsuite::run_test", file: "./tests/move_check_testsuite.rs", line: 130 },
    { fn: "move_check_testsuite::move_check_testsuite", file: "./tests/move_check_testsuite.rs", line: 114 },
    { fn: "datatest_stable::runner::Requirements::expand::{{closure}}::{{closure}}", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/datatest-stable-0.1.3/src/runner.rs", line: 59 },
    { fn: "libtest_mimic::Trial::test::{{closure}}", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libtest-mimic-0.5.2/src/lib.rs", line: 110 },
    { fn: "core::ops::function::FnOnce::call_once{{vtable.shim}}", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/core/src/ops/function.rs", line: 250 },
    { fn: "<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/alloc/src/boxed.rs", line: 2007 },
    { fn: "libtest_mimic::run_single::{{closure}}", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libtest-mimic-0.5.2/src/lib.rs", line: 500 },
    { fn: "<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/core/src/panic/unwind_safe.rs", line: 271 },
    { fn: "std::panicking::try::do_call", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/panicking.rs", line: 504 },
    { fn: "___rust_try" },
    { fn: "std::panicking::try", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/panicking.rs", line: 468 },
    { fn: "std::panic::catch_unwind", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/panic.rs", line: 142 },
    { fn: "libtest_mimic::run_single", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libtest-mimic-0.5.2/src/lib.rs", line: 500 },
    { fn: "libtest_mimic::run::{{closure}}", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/libtest-mimic-0.5.2/src/lib.rs", line: 471 },
    { fn: "<F as threadpool::FnBox>::call_box", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/threadpool-1.8.1/src/lib.rs", line: 95 },
    { fn: "threadpool::spawn_in_pool::{{closure}}", file: "/Users/wrwg/.cargo/registry/src/index.crates.io-6f17d22bba15001f/threadpool-1.8.1/src/lib.rs", line: 769 },
    { fn: "std::sys_common::backtrace::__rust_begin_short_backtrace", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/sys_common/backtrace.rs", line: 154 },
    { fn: "std::thread::Builder::spawn_unchecked_::{{closure}}::{{closure}}", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/thread/mod.rs", line: 529 },
    { fn: "<core::panic::unwind_safe::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/core/src/panic/unwind_safe.rs", line: 271 },
    { fn: "std::panicking::try::do_call", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/panicking.rs", line: 504 },
    { fn: "___rust_try" },
    { fn: "std::panicking::try", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/panicking.rs", line: 468 },
    { fn: "std::panic::catch_unwind", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/panic.rs", line: 142 },
    { fn: "std::thread::Builder::spawn_unchecked_::{{closure}}", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/thread/mod.rs", line: 528 },
    { fn: "core::ops::function::FnOnce::call_once{{vtable.shim}}", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/core/src/ops/function.rs", line: 250 },
    { fn: "<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/alloc/src/boxed.rs", line: 2007 },
    { fn: "<alloc::boxed::Box<F,A> as core::ops::function::FnOnce<Args>>::call_once", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/alloc/src/boxed.rs", line: 2007 },
    { fn: "std::sys::unix::thread::Thread::new::thread_start", file: "/rustc/a28077b28a02b92985b3a3faecf92813155f1ea1/library/std/src/sys/unix/thread.rs", line: 108 },
    { fn: "__pthread_joiner_wake" },
]

