============ initial bytecode ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
  0: $t3 := 42
  1: $t2 := borrow_local($t3)
  2: $t1 := infer($t2)
  3: $t0 := read_ref($t1)
  4: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
     # live vars:
  0: $t3 := 42
     # live vars: $t3
  1: $t2 := borrow_local($t3)
     # live vars: $t2
  2: $t1 := infer($t2)
     # live vars: $t1
  3: $t0 := read_ref($t1)
     # live vars: $t0
  4: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
     # live vars:
  0: $t3 := 42
     # live vars: $t3
  1: $t2 := borrow_local($t3)
     # live vars: $t2
  2: $t1 := infer($t2)
     # live vars: $t1
  3: $t0 := read_ref($t1)
     # live vars: $t0
  4: return $t0
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
     # live vars:
     # refs: []
     #
  0: $t3 := 42
     # live vars: $t3
     # refs: []
     #
  1: $t2 := borrow_local($t3)
     # live vars: $t2
     # refs: [$t2 => #2]
     # #2
     #   <no edges>
     # #root
     #   => #2 via [value] at line 4
     #
  2: $t1 := infer($t2)
     # live vars: $t1
     # refs: [$t1 => #1]
     # #1
     #   <no edges>
     # #root
     #   => #1 via [value] at line 4
     #
  3: $t0 := read_ref($t1)
     # live vars: $t0
     # refs: []
     #
  4: return $t0
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
     # abort state: {returns}
     # live vars:
     # refs: []
     #
  0: $t3 := 42
     # abort state: {returns}
     # live vars: $t3
     # refs: []
     #
  1: $t2 := borrow_local($t3)
     # abort state: {returns}
     # live vars: $t2
     # refs: [$t2 => #2]
     # #2
     #   <no edges>
     # #root
     #   => #2 via [value] at line 4
     #
  2: $t1 := infer($t2)
     # abort state: {returns}
     # live vars: $t1
     # refs: [$t1 => #1]
     # #1
     #   <no edges>
     # #root
     #   => #1 via [value] at line 4
     #
  3: $t0 := read_ref($t1)
     # abort state: {returns}
     # live vars: $t0
     # refs: []
     #
  4: return $t0
}

============ after AbilityProcessor: ================

[variant baseline]
fun explicate_drop::test0(): u8 {
     var $t0: u8
     var $t1: &u8
     var $t2: &u8
     var $t3: u8
  0: $t3 := 42
  1: $t2 := borrow_local($t3)
  2: $t1 := move($t2)
  3: $t0 := read_ref($t1)
  4: return $t0
}
