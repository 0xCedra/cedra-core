============ initial bytecode ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: vector<u8>
     var $t10: vector<u8>
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut u64
     var $t14: u64
     var $t15: u64
     var $t16: &mut vector<u8>
     var $t17: &mut vector<u8>
     var $t18: vector<u8>
     var $t19: vector<u8>
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: bool
     var $t25: vector<u8>
     var $t26: vector<u8>
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: bool
     var $t31: u64
  0: $t0 := true
  1: if ($t0) goto 2 else goto 4
  2: label L0
  3: goto 7
  4: label L1
  5: $t1 := 42
  6: abort($t1)
  7: label L2
  8: $t2 := true
  9: if ($t2) goto 10 else goto 12
 10: label L3
 11: goto 15
 12: label L4
 13: $t3 := 42
 14: abort($t3)
 15: label L5
 16: $t5 := 0
 17: $t6 := 0
 18: $t4 := ==($t5, $t6)
 19: if ($t4) goto 20 else goto 22
 20: label L6
 21: goto 25
 22: label L7
 23: $t7 := 42
 24: abort($t7)
 25: label L8
 26: $t9 := [104, 101, 108, 108, 111]
 27: $t10 := [104, 101, 108, 108, 111]
 28: $t8 := ==($t9, $t10)
 29: if ($t8) goto 30 else goto 32
 30: label L9
 31: goto 35
 32: label L10
 33: $t11 := 42
 34: abort($t11)
 35: label L11
 36: $t14 := 0
 37: $t13 := borrow_local($t14)
 38: $t12 := infer($t13)
 39: $t15 := 1
 40: write_ref($t12, $t15)
 41: $t18 := [104, 101, 108, 108, 111]
 42: $t17 := borrow_local($t18)
 43: $t16 := infer($t17)
 44: $t19 := [98, 121, 101]
 45: write_ref($t16, $t19)
 46: $t21 := read_ref($t12)
 47: $t22 := 1
 48: $t20 := ==($t21, $t22)
 49: if ($t20) goto 50 else goto 52
 50: label L12
 51: goto 55
 52: label L13
 53: $t23 := 42
 54: abort($t23)
 55: label L14
 56: $t25 := read_ref($t16)
 57: $t26 := [98, 121, 101]
 58: $t24 := ==($t25, $t26)
 59: if ($t24) goto 60 else goto 62
 60: label L15
 61: goto 65
 62: label L16
 63: $t27 := 42
 64: abort($t27)
 65: label L17
 66: $t28 := true
 67: if ($t28) goto 68 else goto 70
 68: label L18
 69: goto 73
 70: label L19
 71: $t29 := 42
 72: abort($t29)
 73: label L20
 74: $t30 := true
 75: if ($t30) goto 76 else goto 78
 76: label L21
 77: goto 81
 78: label L22
 79: $t31 := 42
 80: abort($t31)
 81: label L23
 82: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: vector<u8>
     var $t10: vector<u8>
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut u64
     var $t14: u64
     var $t15: u64
     var $t16: &mut vector<u8>
     var $t17: &mut vector<u8>
     var $t18: vector<u8>
     var $t19: vector<u8>
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: bool
     var $t25: vector<u8>
     var $t26: vector<u8>
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: bool
     var $t31: u64
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 4
     # live vars:
  2: label L0
     # live vars:
  3: goto 7
     # live vars:
  4: label L1
     # live vars:
  5: $t1 := 42
     # live vars: $t1
  6: abort($t1)
     # live vars:
  7: label L2
     # live vars:
  8: $t2 := true
     # live vars: $t2
  9: if ($t2) goto 10 else goto 12
     # live vars:
 10: label L3
     # live vars:
 11: goto 15
     # live vars:
 12: label L4
     # live vars:
 13: $t3 := 42
     # live vars: $t3
 14: abort($t3)
     # live vars:
 15: label L5
     # live vars:
 16: $t5 := 0
     # live vars: $t5
 17: $t6 := 0
     # live vars: $t5, $t6
 18: $t4 := ==($t5, $t6)
     # live vars: $t4
 19: if ($t4) goto 20 else goto 22
     # live vars:
 20: label L6
     # live vars:
 21: goto 25
     # live vars:
 22: label L7
     # live vars:
 23: $t7 := 42
     # live vars: $t7
 24: abort($t7)
     # live vars:
 25: label L8
     # live vars:
 26: $t9 := [104, 101, 108, 108, 111]
     # live vars: $t9
 27: $t10 := [104, 101, 108, 108, 111]
     # live vars: $t9, $t10
 28: $t8 := ==($t9, $t10)
     # live vars: $t8
 29: if ($t8) goto 30 else goto 32
     # live vars:
 30: label L9
     # live vars:
 31: goto 35
     # live vars:
 32: label L10
     # live vars:
 33: $t11 := 42
     # live vars: $t11
 34: abort($t11)
     # live vars:
 35: label L11
     # live vars:
 36: $t14 := 0
     # live vars: $t14
 37: $t13 := borrow_local($t14)
     # live vars: $t13
 38: $t12 := infer($t13)
     # live vars: $t12
 39: $t15 := 1
     # live vars: $t12, $t15
 40: write_ref($t12, $t15)
     # live vars: $t12
 41: $t18 := [104, 101, 108, 108, 111]
     # live vars: $t12, $t18
 42: $t17 := borrow_local($t18)
     # live vars: $t12, $t17
 43: $t16 := infer($t17)
     # live vars: $t12, $t16
 44: $t19 := [98, 121, 101]
     # live vars: $t12, $t16, $t19
 45: write_ref($t16, $t19)
     # live vars: $t12, $t16
 46: $t21 := read_ref($t12)
     # live vars: $t16, $t21
 47: $t22 := 1
     # live vars: $t16, $t21, $t22
 48: $t20 := ==($t21, $t22)
     # live vars: $t16, $t20
 49: if ($t20) goto 50 else goto 52
     # live vars: $t16
 50: label L12
     # live vars: $t16
 51: goto 55
     # live vars: $t16
 52: label L13
     # live vars:
 53: $t23 := 42
     # live vars: $t23
 54: abort($t23)
     # live vars: $t16
 55: label L14
     # live vars: $t16
 56: $t25 := read_ref($t16)
     # live vars: $t25
 57: $t26 := [98, 121, 101]
     # live vars: $t25, $t26
 58: $t24 := ==($t25, $t26)
     # live vars: $t24
 59: if ($t24) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: goto 65
     # live vars:
 62: label L16
     # live vars:
 63: $t27 := 42
     # live vars: $t27
 64: abort($t27)
     # live vars:
 65: label L17
     # live vars:
 66: $t28 := true
     # live vars: $t28
 67: if ($t28) goto 68 else goto 70
     # live vars:
 68: label L18
     # live vars:
 69: goto 73
     # live vars:
 70: label L19
     # live vars:
 71: $t29 := 42
     # live vars: $t29
 72: abort($t29)
     # live vars:
 73: label L20
     # live vars:
 74: $t30 := true
     # live vars: $t30
 75: if ($t30) goto 76 else goto 78
     # live vars:
 76: label L21
     # live vars:
 77: goto 81
     # live vars:
 78: label L22
     # live vars:
 79: $t31 := 42
     # live vars: $t31
 80: abort($t31)
     # live vars:
 81: label L23
     # live vars:
 82: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: vector<u8>
     var $t10: vector<u8>
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut u64
     var $t14: u64
     var $t15: u64
     var $t16: &mut vector<u8>
     var $t17: &mut vector<u8>
     var $t18: vector<u8>
     var $t19: vector<u8>
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: bool
     var $t25: vector<u8>
     var $t26: vector<u8>
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: bool
     var $t31: u64
     # live vars:
  0: $t0 := true
     # live vars: $t0
  1: if ($t0) goto 2 else goto 4
     # live vars:
  2: label L0
     # live vars:
  3: goto 7
     # live vars:
  4: label L1
     # live vars:
  5: $t1 := 42
     # live vars: $t1
  6: abort($t1)
     # live vars:
  7: label L2
     # live vars:
  8: $t2 := true
     # live vars: $t2
  9: if ($t2) goto 10 else goto 12
     # live vars:
 10: label L3
     # live vars:
 11: goto 15
     # live vars:
 12: label L4
     # live vars:
 13: $t3 := 42
     # live vars: $t3
 14: abort($t3)
     # live vars:
 15: label L5
     # live vars:
 16: $t5 := 0
     # live vars: $t5
 17: $t6 := 0
     # live vars: $t5, $t6
 18: $t4 := ==($t5, $t6)
     # live vars: $t4
 19: if ($t4) goto 20 else goto 22
     # live vars:
 20: label L6
     # live vars:
 21: goto 25
     # live vars:
 22: label L7
     # live vars:
 23: $t7 := 42
     # live vars: $t7
 24: abort($t7)
     # live vars:
 25: label L8
     # live vars:
 26: $t9 := [104, 101, 108, 108, 111]
     # live vars: $t9
 27: $t10 := [104, 101, 108, 108, 111]
     # live vars: $t9, $t10
 28: $t8 := ==($t9, $t10)
     # live vars: $t8
 29: if ($t8) goto 30 else goto 32
     # live vars:
 30: label L9
     # live vars:
 31: goto 35
     # live vars:
 32: label L10
     # live vars:
 33: $t11 := 42
     # live vars: $t11
 34: abort($t11)
     # live vars:
 35: label L11
     # live vars:
 36: $t14 := 0
     # live vars: $t14
 37: $t13 := borrow_local($t14)
     # live vars: $t13
 38: $t12 := infer($t13)
     # live vars: $t12
 39: $t15 := 1
     # live vars: $t12, $t15
 40: write_ref($t12, $t15)
     # live vars: $t12
 41: $t18 := [104, 101, 108, 108, 111]
     # live vars: $t12, $t18
 42: $t17 := borrow_local($t18)
     # live vars: $t12, $t17
 43: $t16 := infer($t17)
     # live vars: $t12, $t16
 44: $t19 := [98, 121, 101]
     # live vars: $t12, $t16, $t19
 45: write_ref($t16, $t19)
     # live vars: $t12, $t16
 46: $t21 := read_ref($t12)
     # live vars: $t16, $t21
 47: $t22 := 1
     # live vars: $t16, $t21, $t22
 48: $t20 := ==($t21, $t22)
     # live vars: $t16, $t20
 49: if ($t20) goto 50 else goto 52
     # live vars: $t16
 50: label L12
     # live vars: $t16
 51: goto 55
     # live vars: $t16
 52: label L13
     # live vars:
 53: $t23 := 42
     # live vars: $t23
 54: abort($t23)
     # live vars: $t16
 55: label L14
     # live vars: $t16
 56: $t25 := read_ref($t16)
     # live vars: $t25
 57: $t26 := [98, 121, 101]
     # live vars: $t25, $t26
 58: $t24 := ==($t25, $t26)
     # live vars: $t24
 59: if ($t24) goto 60 else goto 62
     # live vars:
 60: label L15
     # live vars:
 61: goto 65
     # live vars:
 62: label L16
     # live vars:
 63: $t27 := 42
     # live vars: $t27
 64: abort($t27)
     # live vars:
 65: label L17
     # live vars:
 66: $t28 := true
     # live vars: $t28
 67: if ($t28) goto 68 else goto 70
     # live vars:
 68: label L18
     # live vars:
 69: goto 73
     # live vars:
 70: label L19
     # live vars:
 71: $t29 := 42
     # live vars: $t29
 72: abort($t29)
     # live vars:
 73: label L20
     # live vars:
 74: $t30 := true
     # live vars: $t30
 75: if ($t30) goto 76 else goto 78
     # live vars:
 76: label L21
     # live vars:
 77: goto 81
     # live vars:
 78: label L22
     # live vars:
 79: $t31 := 42
     # live vars: $t31
 80: abort($t31)
     # live vars:
 81: label L23
     # live vars:
 82: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: vector<u8>
     var $t10: vector<u8>
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut u64
     var $t14: u64
     var $t15: u64
     var $t16: &mut vector<u8>
     var $t17: &mut vector<u8>
     var $t18: vector<u8>
     var $t19: vector<u8>
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: bool
     var $t25: vector<u8>
     var $t26: vector<u8>
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: bool
     var $t31: u64
     # live vars:
     # refs: []
     #
  0: $t0 := true
     # live vars: $t0
     # refs: []
     #
  1: if ($t0) goto 2 else goto 4
     # live vars:
     # refs: []
     #
  2: label L0
     # live vars:
     # refs: []
     #
  3: goto 7
     # live vars:
     # refs: []
     #
  4: label L1
     # live vars:
     # refs: []
     #
  5: $t1 := 42
     # live vars: $t1
     # refs: []
     #
  6: abort($t1)
     # live vars:
     # refs: []
     #
  7: label L2
     # live vars:
     # refs: []
     #
  8: $t2 := true
     # live vars: $t2
     # refs: []
     #
  9: if ($t2) goto 10 else goto 12
     # live vars:
     # refs: []
     #
 10: label L3
     # live vars:
     # refs: []
     #
 11: goto 15
     # live vars:
     # refs: []
     #
 12: label L4
     # live vars:
     # refs: []
     #
 13: $t3 := 42
     # live vars: $t3
     # refs: []
     #
 14: abort($t3)
     # live vars:
     # refs: []
     #
 15: label L5
     # live vars:
     # refs: []
     #
 16: $t5 := 0
     # live vars: $t5
     # refs: []
     #
 17: $t6 := 0
     # live vars: $t5, $t6
     # refs: []
     #
 18: $t4 := ==($t5, $t6)
     # live vars: $t4
     # refs: []
     #
 19: if ($t4) goto 20 else goto 22
     # live vars:
     # refs: []
     #
 20: label L6
     # live vars:
     # refs: []
     #
 21: goto 25
     # live vars:
     # refs: []
     #
 22: label L7
     # live vars:
     # refs: []
     #
 23: $t7 := 42
     # live vars: $t7
     # refs: []
     #
 24: abort($t7)
     # live vars:
     # refs: []
     #
 25: label L8
     # live vars:
     # refs: []
     #
 26: $t9 := [104, 101, 108, 108, 111]
     # live vars: $t9
     # refs: []
     #
 27: $t10 := [104, 101, 108, 108, 111]
     # live vars: $t9, $t10
     # refs: []
     #
 28: $t8 := ==($t9, $t10)
     # live vars: $t8
     # refs: []
     #
 29: if ($t8) goto 30 else goto 32
     # live vars:
     # refs: []
     #
 30: label L9
     # live vars:
     # refs: []
     #
 31: goto 35
     # live vars:
     # refs: []
     #
 32: label L10
     # live vars:
     # refs: []
     #
 33: $t11 := 42
     # live vars: $t11
     # refs: []
     #
 34: abort($t11)
     # live vars:
     # refs: []
     #
 35: label L11
     # live vars:
     # refs: []
     #
 36: $t14 := 0
     # live vars: $t14
     # refs: []
     #
 37: $t13 := borrow_local($t14)
     # live vars: $t13
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => (mut) #13 via [value] at line 13
     #
 38: $t12 := infer($t13)
     # live vars: $t12
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 39: $t15 := 1
     # live vars: $t12, $t15
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 40: write_ref($t12, $t15)
     # live vars: $t12
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 41: $t18 := [104, 101, 108, 108, 111]
     # live vars: $t12, $t18
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 42: $t17 := borrow_local($t18)
     # live vars: $t12, $t17
     # refs: [$t12 => #12, $t17 => #17]
     # #12
     #   <no edges>
     # #17
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #17 via [value] at line 15
     #
 43: $t16 := infer($t17)
     # live vars: $t12, $t16
     # refs: [$t12 => #12, $t16 => #16]
     # #12
     #   <no edges>
     # #16
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #16 via [value] at line 15
     #
 44: $t19 := [98, 121, 101]
     # live vars: $t12, $t16, $t19
     # refs: [$t12 => #12, $t16 => #16]
     # #12
     #   <no edges>
     # #16
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #16 via [value] at line 15
     #
 45: write_ref($t16, $t19)
     # live vars: $t12, $t16
     # refs: [$t12 => #12, $t16 => #16]
     # #12
     #   <no edges>
     # #16
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #16 via [value] at line 15
     #
 46: $t21 := read_ref($t12)
     # live vars: $t16, $t21
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 47: $t22 := 1
     # live vars: $t16, $t21, $t22
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 48: $t20 := ==($t21, $t22)
     # live vars: $t16, $t20
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 49: if ($t20) goto 50 else goto 52
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 50: label L12
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 51: goto 55
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 52: label L13
     # live vars:
     # refs: []
     #
 53: $t23 := 42
     # live vars: $t23
     # refs: []
     #
 54: abort($t23)
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 55: label L14
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 56: $t25 := read_ref($t16)
     # live vars: $t25
     # refs: []
     #
 57: $t26 := [98, 121, 101]
     # live vars: $t25, $t26
     # refs: []
     #
 58: $t24 := ==($t25, $t26)
     # live vars: $t24
     # refs: []
     #
 59: if ($t24) goto 60 else goto 62
     # live vars:
     # refs: []
     #
 60: label L15
     # live vars:
     # refs: []
     #
 61: goto 65
     # live vars:
     # refs: []
     #
 62: label L16
     # live vars:
     # refs: []
     #
 63: $t27 := 42
     # live vars: $t27
     # refs: []
     #
 64: abort($t27)
     # live vars:
     # refs: []
     #
 65: label L17
     # live vars:
     # refs: []
     #
 66: $t28 := true
     # live vars: $t28
     # refs: []
     #
 67: if ($t28) goto 68 else goto 70
     # live vars:
     # refs: []
     #
 68: label L18
     # live vars:
     # refs: []
     #
 69: goto 73
     # live vars:
     # refs: []
     #
 70: label L19
     # live vars:
     # refs: []
     #
 71: $t29 := 42
     # live vars: $t29
     # refs: []
     #
 72: abort($t29)
     # live vars:
     # refs: []
     #
 73: label L20
     # live vars:
     # refs: []
     #
 74: $t30 := true
     # live vars: $t30
     # refs: []
     #
 75: if ($t30) goto 76 else goto 78
     # live vars:
     # refs: []
     #
 76: label L21
     # live vars:
     # refs: []
     #
 77: goto 81
     # live vars:
     # refs: []
     #
 78: label L22
     # live vars:
     # refs: []
     #
 79: $t31 := 42
     # live vars: $t31
     # refs: []
     #
 80: abort($t31)
     # live vars:
     # refs: []
     #
 81: label L23
     # live vars:
     # refs: []
     #
 82: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: vector<u8>
     var $t10: vector<u8>
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut u64
     var $t14: u64
     var $t15: u64
     var $t16: &mut vector<u8>
     var $t17: &mut vector<u8>
     var $t18: vector<u8>
     var $t19: vector<u8>
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: bool
     var $t25: vector<u8>
     var $t26: vector<u8>
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: bool
     var $t31: u64
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  0: $t0 := true
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  1: if ($t0) goto 2 else goto 4
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  2: label L0
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  3: goto 7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
  4: label L1
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
  5: $t1 := 42
     # abort state: {aborts}
     # live vars: $t1
     # refs: []
     #
  6: abort($t1)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  7: label L2
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  8: $t2 := true
     # abort state: {returns,aborts}
     # live vars: $t2
     # refs: []
     #
  9: if ($t2) goto 10 else goto 12
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 10: label L3
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 11: goto 15
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 12: label L4
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 13: $t3 := 42
     # abort state: {aborts}
     # live vars: $t3
     # refs: []
     #
 14: abort($t3)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 15: label L5
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 16: $t5 := 0
     # abort state: {returns,aborts}
     # live vars: $t5
     # refs: []
     #
 17: $t6 := 0
     # abort state: {returns,aborts}
     # live vars: $t5, $t6
     # refs: []
     #
 18: $t4 := ==($t5, $t6)
     # abort state: {returns,aborts}
     # live vars: $t4
     # refs: []
     #
 19: if ($t4) goto 20 else goto 22
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 20: label L6
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 21: goto 25
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 22: label L7
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 23: $t7 := 42
     # abort state: {aborts}
     # live vars: $t7
     # refs: []
     #
 24: abort($t7)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 25: label L8
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 26: $t9 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t9
     # refs: []
     #
 27: $t10 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t9, $t10
     # refs: []
     #
 28: $t8 := ==($t9, $t10)
     # abort state: {returns,aborts}
     # live vars: $t8
     # refs: []
     #
 29: if ($t8) goto 30 else goto 32
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 30: label L9
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 31: goto 35
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 32: label L10
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 33: $t11 := 42
     # abort state: {aborts}
     # live vars: $t11
     # refs: []
     #
 34: abort($t11)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 35: label L11
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 36: $t14 := 0
     # abort state: {returns,aborts}
     # live vars: $t14
     # refs: []
     #
 37: $t13 := borrow_local($t14)
     # abort state: {returns,aborts}
     # live vars: $t13
     # refs: [$t13 => #13]
     # #13
     #   <no edges>
     # #root
     #   => (mut) #13 via [value] at line 13
     #
 38: $t12 := infer($t13)
     # abort state: {returns,aborts}
     # live vars: $t12
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 39: $t15 := 1
     # abort state: {returns,aborts}
     # live vars: $t12, $t15
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 40: write_ref($t12, $t15)
     # abort state: {returns,aborts}
     # live vars: $t12
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 41: $t18 := [104, 101, 108, 108, 111]
     # abort state: {returns,aborts}
     # live vars: $t12, $t18
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #
 42: $t17 := borrow_local($t18)
     # abort state: {returns,aborts}
     # live vars: $t12, $t17
     # refs: [$t12 => #12, $t17 => #17]
     # #12
     #   <no edges>
     # #17
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #17 via [value] at line 15
     #
 43: $t16 := infer($t17)
     # abort state: {returns,aborts}
     # live vars: $t12, $t16
     # refs: [$t12 => #12, $t16 => #16]
     # #12
     #   <no edges>
     # #16
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #16 via [value] at line 15
     #
 44: $t19 := [98, 121, 101]
     # abort state: {returns,aborts}
     # live vars: $t12, $t16, $t19
     # refs: [$t12 => #12, $t16 => #16]
     # #12
     #   <no edges>
     # #16
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #16 via [value] at line 15
     #
 45: write_ref($t16, $t19)
     # abort state: {returns,aborts}
     # live vars: $t12, $t16
     # refs: [$t12 => #12, $t16 => #16]
     # #12
     #   <no edges>
     # #16
     #   <no edges>
     # #root
     #   => (mut) #12 via [value] at line 13
     #   => (mut) #16 via [value] at line 15
     #
 46: $t21 := read_ref($t12)
     # abort state: {returns,aborts}
     # live vars: $t16, $t21
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 47: $t22 := 1
     # abort state: {returns,aborts}
     # live vars: $t16, $t21, $t22
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 48: $t20 := ==($t21, $t22)
     # abort state: {returns,aborts}
     # live vars: $t16, $t20
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 49: if ($t20) goto 50 else goto 52
     # abort state: {returns,aborts}
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 50: label L12
     # abort state: {returns,aborts}
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 51: goto 55
     # abort state: {aborts}
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 52: label L13
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 53: $t23 := 42
     # abort state: {aborts}
     # live vars: $t23
     # refs: []
     #
 54: abort($t23)
     # abort state: {returns,aborts}
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 55: label L14
     # abort state: {returns,aborts}
     # live vars: $t16
     # refs: [$t16 => #16]
     # #16
     #   <no edges>
     # #root
     #   => (mut) #16 via [value] at line 15
     #
 56: $t25 := read_ref($t16)
     # abort state: {returns,aborts}
     # live vars: $t25
     # refs: []
     #
 57: $t26 := [98, 121, 101]
     # abort state: {returns,aborts}
     # live vars: $t25, $t26
     # refs: []
     #
 58: $t24 := ==($t25, $t26)
     # abort state: {returns,aborts}
     # live vars: $t24
     # refs: []
     #
 59: if ($t24) goto 60 else goto 62
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 60: label L15
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 61: goto 65
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 62: label L16
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 63: $t27 := 42
     # abort state: {aborts}
     # live vars: $t27
     # refs: []
     #
 64: abort($t27)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 65: label L17
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 66: $t28 := true
     # abort state: {returns,aborts}
     # live vars: $t28
     # refs: []
     #
 67: if ($t28) goto 68 else goto 70
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 68: label L18
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 69: goto 73
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 70: label L19
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 71: $t29 := 42
     # abort state: {aborts}
     # live vars: $t29
     # refs: []
     #
 72: abort($t29)
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 73: label L20
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 74: $t30 := true
     # abort state: {returns,aborts}
     # live vars: $t30
     # refs: []
     #
 75: if ($t30) goto 76 else goto 78
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 76: label L21
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 77: goto 81
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 78: label L22
     # abort state: {aborts}
     # live vars:
     # refs: []
     #
 79: $t31 := 42
     # abort state: {aborts}
     # live vars: $t31
     # refs: []
     #
 80: abort($t31)
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 81: label L23
     # abort state: {returns}
     # live vars:
     # refs: []
     #
 82: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
fun <SELF>_0::check() {
     var $t0: bool
     var $t1: u64
     var $t2: bool
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: bool
     var $t9: vector<u8>
     var $t10: vector<u8>
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut u64
     var $t14: u64
     var $t15: u64
     var $t16: &mut vector<u8>
     var $t17: &mut vector<u8>
     var $t18: vector<u8>
     var $t19: vector<u8>
     var $t20: bool
     var $t21: u64
     var $t22: u64
     var $t23: u64
     var $t24: bool
     var $t25: vector<u8>
     var $t26: vector<u8>
     var $t27: u64
     var $t28: bool
     var $t29: u64
     var $t30: bool
     var $t31: u64
  0: $t0 := true
  1: if ($t0) goto 2 else goto 4
  2: label L0
  3: goto 7
  4: label L1
  5: $t1 := 42
  6: abort($t1)
  7: label L2
  8: $t2 := true
  9: if ($t2) goto 10 else goto 12
 10: label L3
 11: goto 15
 12: label L4
 13: $t3 := 42
 14: abort($t3)
 15: label L5
 16: $t5 := 0
 17: $t6 := 0
 18: $t4 := ==($t5, $t6)
 19: if ($t4) goto 20 else goto 22
 20: label L6
 21: goto 25
 22: label L7
 23: $t7 := 42
 24: abort($t7)
 25: label L8
 26: $t9 := [104, 101, 108, 108, 111]
 27: $t10 := [104, 101, 108, 108, 111]
 28: $t8 := ==($t9, $t10)
 29: if ($t8) goto 30 else goto 32
 30: label L9
 31: goto 35
 32: label L10
 33: $t11 := 42
 34: abort($t11)
 35: label L11
 36: $t14 := 0
 37: $t13 := borrow_local($t14)
 38: $t12 := move($t13)
 39: $t15 := 1
 40: write_ref($t12, $t15)
 41: $t18 := [104, 101, 108, 108, 111]
 42: $t17 := borrow_local($t18)
 43: $t16 := move($t17)
 44: $t19 := [98, 121, 101]
 45: write_ref($t16, $t19)
 46: $t21 := read_ref($t12)
 47: $t22 := 1
 48: $t20 := ==($t21, $t22)
 49: if ($t20) goto 50 else goto 52
 50: label L12
 51: goto 56
 52: label L13
 53: drop($t16)
 54: $t23 := 42
 55: abort($t23)
 56: label L14
 57: $t25 := read_ref($t16)
 58: $t26 := [98, 121, 101]
 59: $t24 := ==($t25, $t26)
 60: if ($t24) goto 61 else goto 63
 61: label L15
 62: goto 66
 63: label L16
 64: $t27 := 42
 65: abort($t27)
 66: label L17
 67: $t28 := true
 68: if ($t28) goto 69 else goto 71
 69: label L18
 70: goto 74
 71: label L19
 72: $t29 := 42
 73: abort($t29)
 74: label L20
 75: $t30 := true
 76: if ($t30) goto 77 else goto 79
 77: label L21
 78: goto 82
 79: label L22
 80: $t31 := 42
 81: abort($t31)
 82: label L23
 83: return ()
}
