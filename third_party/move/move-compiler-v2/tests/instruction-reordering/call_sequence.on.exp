============ after InstructionReorderingProcessor: ================

[variant baseline]
fun m::bar($t0: u64, $t1: u64) {
     # deps: {}, dfs: []
  0: return ()
}


[variant baseline]
fun m::foo($t0: u64, $t1: &u64): u64 {
     var $t2: u64 [unused]
     var $t3: u64
     # deps: {1, 2}, dfs: [Some(0)]
  0: touch($t0)
     # deps: {1, 2}, dfs: [Some(1)]
  1: $t3 := read_ref($t1)
     # deps: {2}, dfs: [Some(2)]
  2: $t0 := +($t0, $t3)
     # deps: {}, dfs: [Some(3)]
  3: return $t0
}


[variant baseline]
public fun m::test($t0: address, $t1: u64, $t2: u64) {
     var $t3: &u64
     var $t4: &m::Foo
     var $t5: u64 [unused]
     # deps: {3, 4}, dfs: [Some(0)]
  0: touch($t2)
     # deps: {2, 3, 4}, dfs: [Some(1)]
  1: touch($t1)
     # deps: {1, 2, 3, 4}, dfs: [Some(2)]
  2: $t4 := borrow_global<m::Foo>($t0)
     # deps: {2, 3, 4}, dfs: [Some(3)]
  3: $t3 := borrow_field<m::Foo>.x($t4)
     # deps: {3, 4}, dfs: [Some(4)]
  4: $t1 := m::foo($t1, $t3)
     # deps: {4}, dfs: [Some(5)]
  5: m::bar($t2, $t1)
     # deps: {}, dfs: [None]
  6: return ()
}


============ disassembled file-format ==================
// Move bytecode v7
module c0ffee.m {
struct Foo has key {
	x: u64
}

bar(Arg0: u64, Arg1: u64) /* def_idx: 0 */ {
B0:
	0: Ret
}
foo(Arg0: u64, Arg1: &u64): u64 /* def_idx: 1 */ {
B0:
	0: MoveLoc[0](Arg0: u64)
	1: MoveLoc[1](Arg1: &u64)
	2: ReadRef
	3: Add
	4: Ret
}
public test(Arg0: address, Arg1: u64, Arg2: u64) /* def_idx: 2 */ {
B0:
	0: MoveLoc[2](Arg2: u64)
	1: MoveLoc[1](Arg1: u64)
	2: MoveLoc[0](Arg0: address)
	3: ImmBorrowGlobal[0](Foo)
	4: ImmBorrowField[0](Foo.x: u64)
	5: Call foo(u64, &u64): u64
	6: Call bar(u64, u64)
	7: Ret
}
}
============ bytecode verification succeeded ========
