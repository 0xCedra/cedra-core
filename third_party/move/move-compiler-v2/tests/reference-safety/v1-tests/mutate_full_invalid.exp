
Diagnostics:
error: cannot mutably borrow since immutable references exist
   ┌─ tests/reference-safety/v1-tests/mutate_full_invalid.move:16:17
   │
16 │         let x = &mut 0;
   │                 ^^^^^^
   │                 │
   │                 mutable borrow attempted here
   │                 previous local borrow
17 │         let f = freeze(x);
18 │         *x = 0;
   │         ------ requirement enforced here
19 │         *f;
   │         -- conflicting reference `f`used here

error: cannot mutably borrow since immutable references exist
   ┌─ tests/reference-safety/v1-tests/mutate_full_invalid.move:21:17
   │
21 │         let x = &mut 0;
   │                 ^^^^^^
   │                 │
   │                 mutable borrow attempted here
   │                 previous local borrow
22 │         let f = id(x);
   │                 ----- requirement enforced here

error: cannot mutably borrow since immutable references exist
   ┌─ tests/reference-safety/v1-tests/mutate_full_invalid.move:21:17
   │
21 │         let x = &mut 0;
   │                 ^^^^^^
   │                 │
   │                 mutable borrow attempted here
   │                 previous local borrow
22 │         let f = id(x);
   │                 ----- used by call result
23 │         *x = 0;
   │         ------ requirement enforced here
24 │         *f;
   │         -- conflicting reference `f`used here

error: cannot write to reference in local `x` which is still borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_full_invalid.move:28:9
   │
27 │         let f = id_mut(x);
   │                 --------- previous mutable call result
28 │         *x = 0;
   │         ^^^^^^ written here

error: mutable reference in local `x` requires exclusive access but is borrowed
   ┌─ tests/reference-safety/v1-tests/mutate_full_invalid.move:28:9
   │
27 │         let f = id_mut(x);
   │                 --------- previous mutable call result
28 │         *x = 0;
   │         ^^^^^^ requirement enforced here
29 │         *f;
   │         -- conflicting reference `f`used here
