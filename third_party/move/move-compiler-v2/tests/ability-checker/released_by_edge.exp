============ initial bytecode ================

[variant baseline]
fun test::test(): test::Impotent {
     var $t0: test::Impotent
     var $t1: test::Impotent
     var $t2: test::Impotent
     var $t3: bool
     var $t4: bool
     var $t5: bool
  0: $t3 := false
  1: $t2 := pack test::Impotent($t3)
  2: $t1 := infer($t2)
  3: $t4 := false
  4: if ($t4) goto 5 else goto 9
  5: label L0
  6: $t0 := infer($t1)
  7: return $t0
  8: goto 10
  9: label L1
 10: label L2
 11: $t5 := false
 12: $t0 := pack test::Impotent($t5)
 13: return $t0
 14: return $t0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test(): test::Impotent {
     var $t0: test::Impotent
     var $t1: test::Impotent
     var $t2: test::Impotent
     var $t3: bool
     var $t4: bool
     var $t5: bool
     # live vars:
  0: $t3 := false
     # live vars: $t3
  1: $t2 := pack test::Impotent($t3)
     # live vars: $t2
  2: $t1 := move($t2)
     # live vars: $t1
  3: $t4 := false
     # live vars: $t1, $t4
  4: if ($t4) goto 5 else goto 9
     # live vars: $t1
  5: label L0
     # live vars: $t1
  6: $t0 := move($t1)
     # live vars: $t0
  7: return $t0
     # live vars:
  8: goto 10
     # live vars:
  9: label L1
     # live vars:
 10: label L2
     # live vars:
 11: $t5 := false
     # live vars: $t5
 12: $t0 := pack test::Impotent($t5)
     # live vars: $t0
 13: return $t0
     # live vars: $t0
 14: return $t0
}

============ after MemorySafetyProcessor: ================

[variant baseline]
fun test::test(): test::Impotent {
     var $t0: test::Impotent
     var $t1: test::Impotent
     var $t2: test::Impotent
     var $t3: bool
     var $t4: bool
     var $t5: bool
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  0: $t3 := false
     # live vars: $t3
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  1: $t2 := pack test::Impotent($t3)
     # live vars: $t2
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t3}
     #
  2: $t1 := move($t2)
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
  3: $t4 := false
     # live vars: $t1, $t4
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
  4: if ($t4) goto 5 else goto 9
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
  5: label L0
     # live vars: $t1
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
  6: $t0 := move($t1)
     # live vars: $t0
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t1,$t2,$t3}
     #
  7: return $t0
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
  8: goto 10
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
  9: label L1
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
 10: label L2
     # live vars:
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
 11: $t5 := false
     # live vars: $t5
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3}
     #
 12: $t0 := pack test::Impotent($t5)
     # live vars: $t0
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {$t2,$t3,$t5}
     #
 13: return $t0
     # live vars: $t0
     # graph: {}
     # local_to_label: {}
     # global_to_label: {}
     # moved: {}
     #
 14: return $t0
}

============ after ExplicitDrop: ================

[variant baseline]
fun test::test(): test::Impotent {
     var $t0: test::Impotent
     var $t1: test::Impotent
     var $t2: test::Impotent
     var $t3: bool
     var $t4: bool
     var $t5: bool
  0: $t3 := false
  1: $t2 := pack test::Impotent($t3)
  2: $t1 := move($t2)
  3: $t4 := false
  4: if ($t4) goto 5 else goto 9
  5: label L0
  6: $t0 := move($t1)
  7: return $t0
  8: goto 10
  9: label L1
 10: label L2
 11: $t5 := false
 12: $t0 := pack test::Impotent($t5)
 13: return $t0
 14: return $t0
}

============ after AbilityChecker: ================

[variant baseline]
fun test::test(): test::Impotent {
     var $t0: test::Impotent
     var $t1: test::Impotent
     var $t2: test::Impotent
     var $t3: bool
     var $t4: bool
     var $t5: bool
  0: $t3 := false
  1: $t2 := pack test::Impotent($t3)
  2: $t1 := move($t2)
  3: $t4 := false
  4: if ($t4) goto 5 else goto 9
  5: label L0
  6: $t0 := move($t1)
  7: return $t0
  8: goto 10
  9: label L1
 10: label L2
 11: $t5 := false
 12: $t0 := pack test::Impotent($t5)
 13: return $t0
 14: return $t0
}
