============ initial bytecode ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
  0: $t2 := borrow_field<fields::S>.g($t0)
  1: $t3 := borrow_field<fields::T>.h($t2)
  2: $t1 := read_ref($t3)
  3: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
  0: $t3 := borrow_local($t0)
  1: $t2 := borrow_field<fields::S>.g($t3)
  2: $t4 := borrow_field<fields::T>.h($t2)
  3: $t1 := read_ref($t4)
  4: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: u64
     var $t5: fields::T
     var $t6: fields::T
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: &mut u64
     var $t11: &mut fields::T
     var $t12: &mut fields::S
  0: $t4 := 0
  1: $t3 := move($t4)
  2: $t8 := 0
  3: $t7 := move($t8)
  4: $t6 := pack fields::T($t7)
  5: $t5 := move($t6)
  6: $t2 := pack fields::S($t3, $t5)
  7: $t1 := move($t2)
  8: $t9 := 42
  9: $t12 := borrow_local($t1)
 10: $t11 := borrow_field<fields::S>.g($t12)
 11: $t10 := borrow_field<fields::T>.h($t11)
 12: write_ref($t10, $t9)
 13: $t0 := move($t1)
 14: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: u64
     var $t5: fields::T
     var $t6: fields::T
     var $t7: u64
     var $t8: u64
     var $t9: &mut fields::S
     var $t10: &mut fields::S
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut fields::T
  0: $t4 := 0
  1: $t3 := move($t4)
  2: $t8 := 0
  3: $t7 := move($t8)
  4: $t6 := pack fields::T($t7)
  5: $t5 := move($t6)
  6: $t2 := pack fields::S($t3, $t5)
  7: $t1 := move($t2)
  8: $t10 := borrow_local($t1)
  9: $t9 := move($t10)
 10: $t11 := 42
 11: $t13 := borrow_field<fields::S>.g($t9)
 12: $t12 := borrow_field<fields::T>.h($t13)
 13: write_ref($t12, $t11)
 14: $t0 := move($t1)
 15: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
  0: $t1 := 42
  1: $t3 := borrow_field<fields::S>.g($t0)
  2: $t2 := borrow_field<fields::T>.h($t3)
  3: write_ref($t2, $t1)
  4: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
  0: $t2 := 42
  1: $t5 := borrow_local($t0)
  2: $t4 := borrow_field<fields::S>.g($t5)
  3: $t3 := borrow_field<fields::T>.h($t4)
  4: write_ref($t3, $t2)
  5: $t1 := move($t0)
  6: return $t1
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun fields::read_ref($t0: &fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &u64
     # live vars: $t0
  0: $t2 := borrow_field<fields::S>.g($t0)
     # live vars: $t2
  1: $t3 := borrow_field<fields::T>.h($t2)
     # live vars: $t3
  2: $t1 := read_ref($t3)
     # live vars: $t1
  3: return $t1
}


[variant baseline]
fun fields::read_val($t0: fields::S): u64 {
     var $t1: u64
     var $t2: &fields::T
     var $t3: &fields::S
     var $t4: &u64
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t3
  1: $t2 := borrow_field<fields::S>.g($t3)
     # live vars: $t2
  2: $t4 := borrow_field<fields::T>.h($t2)
     # live vars: $t4
  3: $t1 := read_ref($t4)
     # live vars: $t1
  4: return $t1
}


[variant baseline]
fun fields::write_local_direct(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: u64
     var $t5: fields::T
     var $t6: fields::T
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: &mut u64
     var $t11: &mut fields::T
     var $t12: &mut fields::S
     # live vars:
  0: $t4 := 0
     # live vars: $t4
  1: $t3 := move($t4)
     # live vars: $t3
  2: $t8 := 0
     # live vars: $t3, $t8
  3: $t7 := move($t8)
     # live vars: $t3, $t7
  4: $t6 := pack fields::T($t7)
     # live vars: $t3, $t6
  5: $t5 := move($t6)
     # live vars: $t3, $t5
  6: $t2 := pack fields::S($t3, $t5)
     # live vars: $t2
  7: $t1 := move($t2)
     # live vars: $t1
  8: $t9 := 42
     # live vars: $t1, $t9
  9: $t12 := borrow_local($t1)
     # live vars: $t1, $t9, $t12
 10: $t11 := borrow_field<fields::S>.g($t12)
     # live vars: $t1, $t9, $t11
 11: $t10 := borrow_field<fields::T>.h($t11)
     # live vars: $t1, $t9, $t10
 12: write_ref($t10, $t9)
     # live vars: $t1
 13: $t0 := move($t1)
     # live vars: $t0
 14: return $t0
}


[variant baseline]
fun fields::write_local_via_ref(): fields::S {
     var $t0: fields::S
     var $t1: fields::S
     var $t2: fields::S
     var $t3: u64
     var $t4: u64
     var $t5: fields::T
     var $t6: fields::T
     var $t7: u64
     var $t8: u64
     var $t9: &mut fields::S
     var $t10: &mut fields::S
     var $t11: u64
     var $t12: &mut u64
     var $t13: &mut fields::T
     # live vars:
  0: $t4 := 0
     # live vars: $t4
  1: $t3 := move($t4)
     # live vars: $t3
  2: $t8 := 0
     # live vars: $t3, $t8
  3: $t7 := move($t8)
     # live vars: $t3, $t7
  4: $t6 := pack fields::T($t7)
     # live vars: $t3, $t6
  5: $t5 := move($t6)
     # live vars: $t3, $t5
  6: $t2 := pack fields::S($t3, $t5)
     # live vars: $t2
  7: $t1 := move($t2)
     # live vars: $t1
  8: $t10 := borrow_local($t1)
     # live vars: $t1, $t10
  9: $t9 := move($t10)
     # live vars: $t1, $t9
 10: $t11 := 42
     # live vars: $t1, $t9, $t11
 11: $t13 := borrow_field<fields::S>.g($t9)
     # live vars: $t1, $t11, $t13
 12: $t12 := borrow_field<fields::T>.h($t13)
     # live vars: $t1, $t11, $t12
 13: write_ref($t12, $t11)
     # live vars: $t1
 14: $t0 := move($t1)
     # live vars: $t0
 15: return $t0
}


[variant baseline]
fun fields::write_param($t0: &mut fields::S) {
     var $t1: u64
     var $t2: &mut u64
     var $t3: &mut fields::T
     # live vars: $t0
  0: $t1 := 42
     # live vars: $t0, $t1
  1: $t3 := borrow_field<fields::S>.g($t0)
     # live vars: $t1, $t3
  2: $t2 := borrow_field<fields::T>.h($t3)
     # live vars: $t1, $t2
  3: write_ref($t2, $t1)
     # live vars:
  4: return ()
}


[variant baseline]
fun fields::write_val($t0: fields::S): fields::S {
     var $t1: fields::S
     var $t2: u64
     var $t3: &mut u64
     var $t4: &mut fields::T
     var $t5: &mut fields::S
     # live vars: $t0
  0: $t2 := 42
     # live vars: $t0, $t2
  1: $t5 := borrow_local($t0)
     # live vars: $t0, $t2, $t5
  2: $t4 := borrow_field<fields::S>.g($t5)
     # live vars: $t0, $t2, $t4
  3: $t3 := borrow_field<fields::T>.h($t4)
     # live vars: $t0, $t2, $t3
  4: write_ref($t3, $t2)
     # live vars: $t0
  5: $t1 := move($t0)
     # live vars: $t1
  6: return $t1
}


============ disassembled file-format ==================
// Move bytecode v7
module 42.fields {
struct T {
	h: u64
}
struct S {
	f: u64,
	g: T
}

read_ref(Arg0: &S): u64 {
B0:
	0: MoveLoc[0](Arg0: &S)
	1: ImmBorrowField[0](S.g: T)
	2: ImmBorrowField[1](T.h: u64)
	3: ReadRef
	4: Ret
}
read_val(Arg0: S): u64 {
B0:
	0: ImmBorrowLoc[0](Arg0: S)
	1: ImmBorrowField[0](S.g: T)
	2: ImmBorrowField[1](T.h: u64)
	3: ReadRef
	4: Ret
}
write_local_direct(): S {
L0:	loc0: u64
L1:	loc1: u64
L2:	loc2: T
L3:	loc3: S
L4:	loc4: S
B0:
	0: LdU64(0)
	1: StLoc[0](loc0: u64)
	2: LdU64(0)
	3: StLoc[1](loc1: u64)
	4: MoveLoc[1](loc1: u64)
	5: Pack[0](T)
	6: StLoc[2](loc2: T)
	7: MoveLoc[0](loc0: u64)
	8: MoveLoc[2](loc2: T)
	9: Pack[1](S)
	10: StLoc[3](loc3: S)
	11: LdU64(42)
	12: MutBorrowLoc[3](loc3: S)
	13: MutBorrowField[0](S.g: T)
	14: MutBorrowField[1](T.h: u64)
	15: WriteRef
	16: MoveLoc[3](loc3: S)
	17: StLoc[4](loc4: S)
	18: MoveLoc[4](loc4: S)
	19: Ret
}
write_local_via_ref(): S {
L0:	loc0: u64
L1:	loc1: u64
L2:	loc2: T
L3:	loc3: S
L4:	loc4: &mut S
L5:	loc5: S
B0:
	0: LdU64(0)
	1: StLoc[0](loc0: u64)
	2: LdU64(0)
	3: StLoc[1](loc1: u64)
	4: MoveLoc[1](loc1: u64)
	5: Pack[0](T)
	6: StLoc[2](loc2: T)
	7: MoveLoc[0](loc0: u64)
	8: MoveLoc[2](loc2: T)
	9: Pack[1](S)
	10: StLoc[3](loc3: S)
	11: MutBorrowLoc[3](loc3: S)
	12: StLoc[4](loc4: &mut S)
	13: LdU64(42)
	14: MoveLoc[4](loc4: &mut S)
	15: MutBorrowField[0](S.g: T)
	16: MutBorrowField[1](T.h: u64)
	17: WriteRef
	18: MoveLoc[3](loc3: S)
	19: StLoc[5](loc5: S)
	20: MoveLoc[5](loc5: S)
	21: Ret
}
write_param(Arg0: &mut S) {
B0:
	0: LdU64(42)
	1: MoveLoc[0](Arg0: &mut S)
	2: MutBorrowField[0](S.g: T)
	3: MutBorrowField[1](T.h: u64)
	4: WriteRef
	5: Ret
}
write_val(Arg0: S): S {
B0:
	0: LdU64(42)
	1: MutBorrowLoc[0](Arg0: S)
	2: MutBorrowField[0](S.g: T)
	3: MutBorrowField[1](T.h: u64)
	4: WriteRef
	5: MoveLoc[0](Arg0: S)
	6: StLoc[1](loc0: S)
	7: MoveLoc[1](loc0: S)
	8: Ret
}
}
