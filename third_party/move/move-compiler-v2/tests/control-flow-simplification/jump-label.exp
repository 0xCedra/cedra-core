============ initial bytecode ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 9
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: goto 10
  9: label L1
 10: label L2
 11: $t7 := 32
 12: $t6 := %($t2, $t7)
 13: $t9 := 32
 14: $t8 := /($t2, $t9)
 15: $t12 := borrow_local($t0)
 16: $t14 := 1
 17: $t13 := -($t2, $t14)
 18: $t11 := vector::borrow<u8>($t12, $t13)
 19: $t10 := read_ref($t11)
 20: $t18 := 0
 21: $t17 := ==($t8, $t18)
 22: if ($t17) goto 23 else goto 26
 23: label L3
 24: $t16 := true
 25: goto 29
 26: label L4
 27: $t19 := 32
 28: $t16 := >($t8, $t19)
 29: label L5
 30: if ($t16) goto 31 else goto 34
 31: label L6
 32: $t15 := true
 33: goto 37
 34: label L7
 35: $t20 := 1
 36: $t15 := !=($t6, $t20)
 37: label L8
 38: if ($t15) goto 39 else goto 43
 39: label L9
 40: $t1 := option::none<u8>()
 41: return $t1
 42: goto 63
 43: label L10
 44: $t23 := 0
 45: $t22 := ==($t10, $t23)
 46: if ($t22) goto 47 else goto 50
 47: label L12
 48: $t21 := true
 49: goto 53
 50: label L13
 51: $t24 := (u8)($t8)
 52: $t21 := >($t10, $t24)
 53: label L14
 54: if ($t21) goto 55 else goto 59
 55: label L15
 56: $t1 := option::none<u8>()
 57: return $t1
 58: goto 62
 59: label L16
 60: $t1 := option::some<u8>($t10)
 61: return $t1
 62: label L17
 63: label L11
 64: return $t1
}

============ after uninitialized_use_checker: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 9
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: goto 10
  9: label L1
 10: label L2
 11: $t7 := 32
 12: $t6 := %($t2, $t7)
 13: $t9 := 32
 14: $t8 := /($t2, $t9)
 15: $t12 := borrow_local($t0)
 16: $t14 := 1
 17: $t13 := -($t2, $t14)
 18: $t11 := vector::borrow<u8>($t12, $t13)
 19: $t10 := read_ref($t11)
 20: $t18 := 0
 21: $t17 := ==($t8, $t18)
 22: if ($t17) goto 23 else goto 26
 23: label L3
 24: $t16 := true
 25: goto 29
 26: label L4
 27: $t19 := 32
 28: $t16 := >($t8, $t19)
 29: label L5
 30: if ($t16) goto 31 else goto 34
 31: label L6
 32: $t15 := true
 33: goto 37
 34: label L7
 35: $t20 := 1
 36: $t15 := !=($t6, $t20)
 37: label L8
 38: if ($t15) goto 39 else goto 43
 39: label L9
 40: $t1 := option::none<u8>()
 41: return $t1
 42: goto 63
 43: label L10
 44: $t23 := 0
 45: $t22 := ==($t10, $t23)
 46: if ($t22) goto 47 else goto 50
 47: label L12
 48: $t21 := true
 49: goto 53
 50: label L13
 51: $t24 := (u8)($t8)
 52: $t21 := >($t10, $t24)
 53: label L14
 54: if ($t21) goto 55 else goto 59
 55: label L15
 56: $t1 := option::none<u8>()
 57: return $t1
 58: goto 62
 59: label L16
 60: $t1 := option::some<u8>($t10)
 61: return $t1
 62: label L17
 63: label L11
 64: return $t1
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 9
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: goto 10
     # live vars: $t0, $t2
  9: label L1
     # live vars: $t0, $t2
 10: label L2
     # live vars: $t0, $t2
 11: $t7 := 32
     # live vars: $t0, $t2, $t7
 12: $t6 := %($t2, $t7)
     # live vars: $t0, $t2, $t6
 13: $t9 := 32
     # live vars: $t0, $t2, $t6, $t9
 14: $t8 := /($t2, $t9)
     # live vars: $t0, $t2, $t6, $t8
 15: $t12 := borrow_local($t0)
     # live vars: $t2, $t6, $t8, $t12
 16: $t14 := 1
     # live vars: $t2, $t6, $t8, $t12, $t14
 17: $t13 := -($t2, $t14)
     # live vars: $t6, $t8, $t12, $t13
 18: $t11 := vector::borrow<u8>($t12, $t13)
     # live vars: $t6, $t8, $t11
 19: $t10 := read_ref($t11)
     # live vars: $t6, $t8, $t10
 20: $t18 := 0
     # live vars: $t6, $t8, $t10, $t18
 21: $t17 := ==($t8, $t18)
     # live vars: $t6, $t8, $t10, $t17
 22: if ($t17) goto 23 else goto 26
     # live vars: $t6, $t8, $t10
 23: label L3
     # live vars: $t6, $t8, $t10
 24: $t16 := true
     # live vars: $t6, $t8, $t10, $t16
 25: goto 29
     # live vars: $t6, $t8, $t10
 26: label L4
     # live vars: $t6, $t8, $t10
 27: $t19 := 32
     # live vars: $t6, $t8, $t10, $t19
 28: $t16 := >($t8, $t19)
     # live vars: $t6, $t8, $t10, $t16
 29: label L5
     # live vars: $t6, $t8, $t10, $t16
 30: if ($t16) goto 31 else goto 34
     # live vars: $t6, $t8, $t10
 31: label L6
     # live vars: $t8, $t10
 32: $t15 := true
     # live vars: $t8, $t10, $t15
 33: goto 37
     # live vars: $t6, $t8, $t10
 34: label L7
     # live vars: $t6, $t8, $t10
 35: $t20 := 1
     # live vars: $t6, $t8, $t10, $t20
 36: $t15 := !=($t6, $t20)
     # live vars: $t8, $t10, $t15
 37: label L8
     # live vars: $t8, $t10, $t15
 38: if ($t15) goto 39 else goto 43
     # live vars: $t8, $t10
 39: label L9
     # live vars:
 40: $t1 := option::none<u8>()
     # live vars: $t1
 41: return $t1
     # live vars: $t1
 42: goto 63
     # live vars: $t8, $t10
 43: label L10
     # live vars: $t8, $t10
 44: $t23 := 0
     # live vars: $t8, $t10, $t23
 45: $t22 := ==($t10, $t23)
     # live vars: $t8, $t10, $t22
 46: if ($t22) goto 47 else goto 50
     # live vars: $t8, $t10
 47: label L12
     # live vars: $t10
 48: $t21 := true
     # live vars: $t10, $t21
 49: goto 53
     # live vars: $t8, $t10
 50: label L13
     # live vars: $t8, $t10
 51: $t24 := (u8)($t8)
     # live vars: $t10, $t24
 52: $t21 := >($t10, $t24)
     # live vars: $t10, $t21
 53: label L14
     # live vars: $t10, $t21
 54: if ($t21) goto 55 else goto 59
     # live vars: $t10
 55: label L15
     # live vars:
 56: $t1 := option::none<u8>()
     # live vars: $t1
 57: return $t1
     # live vars: $t1
 58: goto 62
     # live vars: $t10
 59: label L16
     # live vars: $t10
 60: $t1 := option::some<u8>($t10)
     # live vars: $t1
 61: return $t1
     # live vars: $t1
 62: label L17
     # live vars: $t1
 63: label L11
     # live vars: $t1
 64: return $t1
}

============ after UnusedAssignmentChecker: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 9
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: goto 10
     # live vars: $t0, $t2
  9: label L1
     # live vars: $t0, $t2
 10: label L2
     # live vars: $t0, $t2
 11: $t7 := 32
     # live vars: $t0, $t2, $t7
 12: $t6 := %($t2, $t7)
     # live vars: $t0, $t2, $t6
 13: $t9 := 32
     # live vars: $t0, $t2, $t6, $t9
 14: $t8 := /($t2, $t9)
     # live vars: $t0, $t2, $t6, $t8
 15: $t12 := borrow_local($t0)
     # live vars: $t2, $t6, $t8, $t12
 16: $t14 := 1
     # live vars: $t2, $t6, $t8, $t12, $t14
 17: $t13 := -($t2, $t14)
     # live vars: $t6, $t8, $t12, $t13
 18: $t11 := vector::borrow<u8>($t12, $t13)
     # live vars: $t6, $t8, $t11
 19: $t10 := read_ref($t11)
     # live vars: $t6, $t8, $t10
 20: $t18 := 0
     # live vars: $t6, $t8, $t10, $t18
 21: $t17 := ==($t8, $t18)
     # live vars: $t6, $t8, $t10, $t17
 22: if ($t17) goto 23 else goto 26
     # live vars: $t6, $t8, $t10
 23: label L3
     # live vars: $t6, $t8, $t10
 24: $t16 := true
     # live vars: $t6, $t8, $t10, $t16
 25: goto 29
     # live vars: $t6, $t8, $t10
 26: label L4
     # live vars: $t6, $t8, $t10
 27: $t19 := 32
     # live vars: $t6, $t8, $t10, $t19
 28: $t16 := >($t8, $t19)
     # live vars: $t6, $t8, $t10, $t16
 29: label L5
     # live vars: $t6, $t8, $t10, $t16
 30: if ($t16) goto 31 else goto 34
     # live vars: $t6, $t8, $t10
 31: label L6
     # live vars: $t8, $t10
 32: $t15 := true
     # live vars: $t8, $t10, $t15
 33: goto 37
     # live vars: $t6, $t8, $t10
 34: label L7
     # live vars: $t6, $t8, $t10
 35: $t20 := 1
     # live vars: $t6, $t8, $t10, $t20
 36: $t15 := !=($t6, $t20)
     # live vars: $t8, $t10, $t15
 37: label L8
     # live vars: $t8, $t10, $t15
 38: if ($t15) goto 39 else goto 43
     # live vars: $t8, $t10
 39: label L9
     # live vars:
 40: $t1 := option::none<u8>()
     # live vars: $t1
 41: return $t1
     # live vars: $t1
 42: goto 63
     # live vars: $t8, $t10
 43: label L10
     # live vars: $t8, $t10
 44: $t23 := 0
     # live vars: $t8, $t10, $t23
 45: $t22 := ==($t10, $t23)
     # live vars: $t8, $t10, $t22
 46: if ($t22) goto 47 else goto 50
     # live vars: $t8, $t10
 47: label L12
     # live vars: $t10
 48: $t21 := true
     # live vars: $t10, $t21
 49: goto 53
     # live vars: $t8, $t10
 50: label L13
     # live vars: $t8, $t10
 51: $t24 := (u8)($t8)
     # live vars: $t10, $t24
 52: $t21 := >($t10, $t24)
     # live vars: $t10, $t21
 53: label L14
     # live vars: $t10, $t21
 54: if ($t21) goto 55 else goto 59
     # live vars: $t10
 55: label L15
     # live vars:
 56: $t1 := option::none<u8>()
     # live vars: $t1
 57: return $t1
     # live vars: $t1
 58: goto 62
     # live vars: $t10
 59: label L16
     # live vars: $t10
 60: $t1 := option::some<u8>($t10)
     # live vars: $t1
 61: return $t1
     # live vars: $t1
 62: label L17
     # live vars: $t1
 63: label L11
     # live vars: $t1
 64: return $t1
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 9
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: goto 10
     # live vars: $t0, $t2
  9: label L1
     # live vars: $t0, $t2
 10: label L2
     # live vars: $t0, $t2
 11: $t7 := 32
     # live vars: $t0, $t2, $t7
 12: $t6 := %($t2, $t7)
     # live vars: $t0, $t2, $t6
 13: $t9 := 32
     # live vars: $t0, $t2, $t6, $t9
 14: $t8 := /($t2, $t9)
     # live vars: $t0, $t2, $t6, $t8
 15: $t12 := borrow_local($t0)
     # live vars: $t2, $t6, $t8, $t12
 16: $t14 := 1
     # live vars: $t2, $t6, $t8, $t12, $t14
 17: $t13 := -($t2, $t14)
     # live vars: $t6, $t8, $t12, $t13
 18: $t11 := vector::borrow<u8>($t12, $t13)
     # live vars: $t6, $t8, $t11
 19: $t10 := read_ref($t11)
     # live vars: $t6, $t8, $t10
 20: $t18 := 0
     # live vars: $t6, $t8, $t10, $t18
 21: $t17 := ==($t8, $t18)
     # live vars: $t6, $t8, $t10, $t17
 22: if ($t17) goto 23 else goto 26
     # live vars: $t6, $t8, $t10
 23: label L3
     # live vars: $t6, $t8, $t10
 24: $t16 := true
     # live vars: $t6, $t8, $t10, $t16
 25: goto 29
     # live vars: $t6, $t8, $t10
 26: label L4
     # live vars: $t6, $t8, $t10
 27: $t19 := 32
     # live vars: $t6, $t8, $t10, $t19
 28: $t16 := >($t8, $t19)
     # live vars: $t6, $t8, $t10, $t16
 29: label L5
     # live vars: $t6, $t8, $t10, $t16
 30: if ($t16) goto 31 else goto 34
     # live vars: $t6, $t8, $t10
 31: label L6
     # live vars: $t8, $t10
 32: $t15 := true
     # live vars: $t8, $t10, $t15
 33: goto 37
     # live vars: $t6, $t8, $t10
 34: label L7
     # live vars: $t6, $t8, $t10
 35: $t20 := 1
     # live vars: $t6, $t8, $t10, $t20
 36: $t15 := !=($t6, $t20)
     # live vars: $t8, $t10, $t15
 37: label L8
     # live vars: $t8, $t10, $t15
 38: if ($t15) goto 39 else goto 43
     # live vars: $t8, $t10
 39: label L9
     # live vars:
 40: $t1 := option::none<u8>()
     # live vars: $t1
 41: return $t1
     # live vars: $t1
 42: goto 63
     # live vars: $t8, $t10
 43: label L10
     # live vars: $t8, $t10
 44: $t23 := 0
     # live vars: $t8, $t10, $t23
 45: $t22 := ==($t10, $t23)
     # live vars: $t8, $t10, $t22
 46: if ($t22) goto 47 else goto 50
     # live vars: $t8, $t10
 47: label L12
     # live vars: $t10
 48: $t21 := true
     # live vars: $t10, $t21
 49: goto 53
     # live vars: $t8, $t10
 50: label L13
     # live vars: $t8, $t10
 51: $t24 := (u8)($t8)
     # live vars: $t10, $t24
 52: $t21 := >($t10, $t24)
     # live vars: $t10, $t21
 53: label L14
     # live vars: $t10, $t21
 54: if ($t21) goto 55 else goto 59
     # live vars: $t10
 55: label L15
     # live vars:
 56: $t1 := option::none<u8>()
     # live vars: $t1
 57: return $t1
     # live vars: $t1
 58: goto 62
     # live vars: $t10
 59: label L16
     # live vars: $t10
 60: $t1 := option::some<u8>($t10)
     # live vars: $t1
 61: return $t1
     # live vars: $t1
 62: label L17
     # live vars: $t1
 63: label L11
     # live vars: $t1
 64: return $t1
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # live vars: $t0
     # refs: []
     #
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
     # refs: [$t3 => #3]
     # #3
     #   <no edges>
     # #root
     #   => #3 via [local `bytes`] at line 50
     #
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
     # refs: []
     #
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
     # refs: []
     #
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
     # refs: []
     #
  4: if ($t4) goto 5 else goto 9
     # live vars: $t0, $t2
     # refs: []
     #
  5: label L0
     # live vars:
     # refs: []
     #
  6: $t1 := option::none<u8>()
     # live vars: $t1
     # refs: []
     #
  7: return $t1
     # live vars: $t0, $t2
  8: goto 10
     # live vars: $t0, $t2
     # refs: []
     #
  9: label L1
     # live vars: $t0, $t2
     # refs: []
     #
 10: label L2
     # live vars: $t0, $t2
     # refs: []
     #
 11: $t7 := 32
     # live vars: $t0, $t2, $t7
     # refs: []
     #
 12: $t6 := %($t2, $t7)
     # live vars: $t0, $t2, $t6
     # refs: []
     #
 13: $t9 := 32
     # live vars: $t0, $t2, $t6, $t9
     # refs: []
     #
 14: $t8 := /($t2, $t9)
     # live vars: $t0, $t2, $t6, $t8
     # refs: []
     #
 15: $t12 := borrow_local($t0)
     # live vars: $t2, $t6, $t8, $t12
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => #12 via [local `bytes`] at line 57
     #
 16: $t14 := 1
     # live vars: $t2, $t6, $t8, $t12, $t14
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => #12 via [local `bytes`] at line 57
     #
 17: $t13 := -($t2, $t14)
     # live vars: $t6, $t8, $t12, $t13
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => #12 via [local `bytes`] at line 57
     #
 18: $t11 := vector::borrow<u8>($t12, $t13)
     # live vars: $t6, $t8, $t11
     # refs: [$t11 => #11]
     # #11
     #   <no edges>
     # #root
     #   -> #11 via [local `bytes`] at line 57
     #
 19: $t10 := read_ref($t11)
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 20: $t18 := 0
     # live vars: $t6, $t8, $t10, $t18
     # refs: []
     #
 21: $t17 := ==($t8, $t18)
     # live vars: $t6, $t8, $t10, $t17
     # refs: []
     #
 22: if ($t17) goto 23 else goto 26
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 23: label L3
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 24: $t16 := true
     # live vars: $t6, $t8, $t10, $t16
     # refs: []
     #
 25: goto 29
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 26: label L4
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 27: $t19 := 32
     # live vars: $t6, $t8, $t10, $t19
     # refs: []
     #
 28: $t16 := >($t8, $t19)
     # live vars: $t6, $t8, $t10, $t16
     # refs: []
     #
 29: label L5
     # live vars: $t6, $t8, $t10, $t16
     # refs: []
     #
 30: if ($t16) goto 31 else goto 34
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 31: label L6
     # live vars: $t8, $t10
     # refs: []
     #
 32: $t15 := true
     # live vars: $t8, $t10, $t15
     # refs: []
     #
 33: goto 37
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 34: label L7
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 35: $t20 := 1
     # live vars: $t6, $t8, $t10, $t20
     # refs: []
     #
 36: $t15 := !=($t6, $t20)
     # live vars: $t8, $t10, $t15
     # refs: []
     #
 37: label L8
     # live vars: $t8, $t10, $t15
     # refs: []
     #
 38: if ($t15) goto 39 else goto 43
     # live vars: $t8, $t10
     # refs: []
     #
 39: label L9
     # live vars:
     # refs: []
     #
 40: $t1 := option::none<u8>()
     # live vars: $t1
     # refs: []
     #
 41: return $t1
     # live vars: $t1
 42: goto 63
     # live vars: $t8, $t10
     # refs: []
     #
 43: label L10
     # live vars: $t8, $t10
     # refs: []
     #
 44: $t23 := 0
     # live vars: $t8, $t10, $t23
     # refs: []
     #
 45: $t22 := ==($t10, $t23)
     # live vars: $t8, $t10, $t22
     # refs: []
     #
 46: if ($t22) goto 47 else goto 50
     # live vars: $t8, $t10
     # refs: []
     #
 47: label L12
     # live vars: $t10
     # refs: []
     #
 48: $t21 := true
     # live vars: $t10, $t21
     # refs: []
     #
 49: goto 53
     # live vars: $t8, $t10
     # refs: []
     #
 50: label L13
     # live vars: $t8, $t10
     # refs: []
     #
 51: $t24 := (u8)($t8)
     # live vars: $t10, $t24
     # refs: []
     #
 52: $t21 := >($t10, $t24)
     # live vars: $t10, $t21
     # refs: []
     #
 53: label L14
     # live vars: $t10, $t21
     # refs: []
     #
 54: if ($t21) goto 55 else goto 59
     # live vars: $t10
     # refs: []
     #
 55: label L15
     # live vars:
     # refs: []
     #
 56: $t1 := option::none<u8>()
     # live vars: $t1
     # refs: []
     #
 57: return $t1
     # live vars: $t1
 58: goto 62
     # live vars: $t10
     # refs: []
     #
 59: label L16
     # live vars: $t10
     # refs: []
     #
 60: $t1 := option::some<u8>($t10)
     # live vars: $t1
     # refs: []
     #
 61: return $t1
     # live vars: $t1
 62: label L17
     # live vars: $t1
 63: label L11
     # live vars: $t1
 64: return $t1
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # abort state: {returns,aborts}
     # live vars: $t0
     # refs: []
     #
  0: $t3 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t0, $t3
     # refs: [$t3 => #3]
     # #3
     #   <no edges>
     # #root
     #   => #3 via [local `bytes`] at line 50
     #
  1: $t2 := vector::length<u8>($t3)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  2: $t5 := 0
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t5
     # refs: []
     #
  3: $t4 := ==($t2, $t5)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t4
     # refs: []
     #
  4: if ($t4) goto 5 else goto 9
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  5: label L0
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
  6: $t1 := option::none<u8>()
     # abort state: {returns}
     # live vars: $t1
     # refs: []
     #
  7: return $t1
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
  8: goto 10
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
  9: label L1
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 10: label L2
     # abort state: {returns,aborts}
     # live vars: $t0, $t2
     # refs: []
     #
 11: $t7 := 32
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t7
     # refs: []
     #
 12: $t6 := %($t2, $t7)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t6
     # refs: []
     #
 13: $t9 := 32
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t6, $t9
     # refs: []
     #
 14: $t8 := /($t2, $t9)
     # abort state: {returns,aborts}
     # live vars: $t0, $t2, $t6, $t8
     # refs: []
     #
 15: $t12 := borrow_local($t0)
     # abort state: {returns,aborts}
     # live vars: $t2, $t6, $t8, $t12
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => #12 via [local `bytes`] at line 57
     #
 16: $t14 := 1
     # abort state: {returns,aborts}
     # live vars: $t2, $t6, $t8, $t12, $t14
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => #12 via [local `bytes`] at line 57
     #
 17: $t13 := -($t2, $t14)
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t12, $t13
     # refs: [$t12 => #12]
     # #12
     #   <no edges>
     # #root
     #   => #12 via [local `bytes`] at line 57
     #
 18: $t11 := vector::borrow<u8>($t12, $t13)
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t11
     # refs: [$t11 => #11]
     # #11
     #   <no edges>
     # #root
     #   -> #11 via [local `bytes`] at line 57
     #
 19: $t10 := read_ref($t11)
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 20: $t18 := 0
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t18
     # refs: []
     #
 21: $t17 := ==($t8, $t18)
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t17
     # refs: []
     #
 22: if ($t17) goto 23 else goto 26
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 23: label L3
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 24: $t16 := true
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t16
     # refs: []
     #
 25: goto 29
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 26: label L4
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 27: $t19 := 32
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t19
     # refs: []
     #
 28: $t16 := >($t8, $t19)
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t16
     # refs: []
     #
 29: label L5
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t16
     # refs: []
     #
 30: if ($t16) goto 31 else goto 34
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 31: label L6
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 32: $t15 := true
     # abort state: {returns,aborts}
     # live vars: $t8, $t10, $t15
     # refs: []
     #
 33: goto 37
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 34: label L7
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10
     # refs: []
     #
 35: $t20 := 1
     # abort state: {returns,aborts}
     # live vars: $t6, $t8, $t10, $t20
     # refs: []
     #
 36: $t15 := !=($t6, $t20)
     # abort state: {returns,aborts}
     # live vars: $t8, $t10, $t15
     # refs: []
     #
 37: label L8
     # abort state: {returns,aborts}
     # live vars: $t8, $t10, $t15
     # refs: []
     #
 38: if ($t15) goto 39 else goto 43
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 39: label L9
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 40: $t1 := option::none<u8>()
     # abort state: {returns}
     # live vars: $t1
     # refs: []
     #
 41: return $t1
     # abort state: {returns}
     # live vars: $t1
 42: goto 63
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 43: label L10
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 44: $t23 := 0
     # abort state: {returns,aborts}
     # live vars: $t8, $t10, $t23
     # refs: []
     #
 45: $t22 := ==($t10, $t23)
     # abort state: {returns,aborts}
     # live vars: $t8, $t10, $t22
     # refs: []
     #
 46: if ($t22) goto 47 else goto 50
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 47: label L12
     # abort state: {returns,aborts}
     # live vars: $t10
     # refs: []
     #
 48: $t21 := true
     # abort state: {returns,aborts}
     # live vars: $t10, $t21
     # refs: []
     #
 49: goto 53
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 50: label L13
     # abort state: {returns,aborts}
     # live vars: $t8, $t10
     # refs: []
     #
 51: $t24 := (u8)($t8)
     # abort state: {returns,aborts}
     # live vars: $t10, $t24
     # refs: []
     #
 52: $t21 := >($t10, $t24)
     # abort state: {returns,aborts}
     # live vars: $t10, $t21
     # refs: []
     #
 53: label L14
     # abort state: {returns,aborts}
     # live vars: $t10, $t21
     # refs: []
     #
 54: if ($t21) goto 55 else goto 59
     # abort state: {returns,aborts}
     # live vars: $t10
     # refs: []
     #
 55: label L15
     # abort state: {returns,aborts}
     # live vars:
     # refs: []
     #
 56: $t1 := option::none<u8>()
     # abort state: {returns}
     # live vars: $t1
     # refs: []
     #
 57: return $t1
     # abort state: {returns}
     # live vars: $t1
 58: goto 62
     # abort state: {returns,aborts}
     # live vars: $t10
     # refs: []
     #
 59: label L16
     # abort state: {returns,aborts}
     # live vars: $t10
     # refs: []
     #
 60: $t1 := option::some<u8>($t10)
     # abort state: {returns}
     # live vars: $t1
     # refs: []
     #
 61: return $t1
     # abort state: {returns}
     # live vars: $t1
 62: label L17
     # abort state: {returns}
     # live vars: $t1
 63: label L11
     # abort state: {returns}
     # live vars: $t1
 64: return $t1
}

============ after AbilityProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 9
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: goto 10
  9: label L1
 10: label L2
 11: $t7 := 32
 12: $t6 := %($t2, $t7)
 13: $t9 := 32
 14: $t8 := /($t2, $t9)
 15: $t12 := borrow_local($t0)
 16: $t14 := 1
 17: $t13 := -($t2, $t14)
 18: $t11 := vector::borrow<u8>($t12, $t13)
 19: $t10 := read_ref($t11)
 20: $t18 := 0
 21: $t17 := ==($t8, $t18)
 22: if ($t17) goto 23 else goto 26
 23: label L3
 24: $t16 := true
 25: goto 29
 26: label L4
 27: $t19 := 32
 28: $t16 := >($t8, $t19)
 29: label L5
 30: if ($t16) goto 31 else goto 34
 31: label L6
 32: $t15 := true
 33: goto 37
 34: label L7
 35: $t20 := 1
 36: $t15 := !=($t6, $t20)
 37: label L8
 38: if ($t15) goto 39 else goto 43
 39: label L9
 40: $t1 := option::none<u8>()
 41: return $t1
 42: goto 63
 43: label L10
 44: $t23 := 0
 45: $t22 := ==($t10, $t23)
 46: if ($t22) goto 47 else goto 50
 47: label L12
 48: $t21 := true
 49: goto 53
 50: label L13
 51: $t24 := (u8)($t8)
 52: $t21 := >($t10, $t24)
 53: label L14
 54: if ($t21) goto 55 else goto 59
 55: label L15
 56: $t1 := option::none<u8>()
 57: return $t1
 58: goto 62
 59: label L16
 60: $t1 := option::some<u8>($t10)
 61: return $t1
 62: label L17
 63: label L11
 64: return $t1
}

============ after ControlFlowGraphSimplifier: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 8
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: label L2
  9: $t7 := 32
 10: $t6 := %($t2, $t7)
 11: $t9 := 32
 12: $t8 := /($t2, $t9)
 13: $t12 := borrow_local($t0)
 14: $t14 := 1
 15: $t13 := -($t2, $t14)
 16: $t11 := vector::borrow<u8>($t12, $t13)
 17: $t10 := read_ref($t11)
 18: $t18 := 0
 19: $t17 := ==($t8, $t18)
 20: if ($t17) goto 21 else goto 54
 21: label L3
 22: $t16 := true
 23: label L5
 24: if ($t16) goto 25 else goto 50
 25: label L6
 26: $t15 := true
 27: label L8
 28: if ($t15) goto 29 else goto 32
 29: label L9
 30: $t1 := option::none<u8>()
 31: return $t1
 32: label L10
 33: $t23 := 0
 34: $t22 := ==($t10, $t23)
 35: if ($t22) goto 36 else goto 46
 36: label L12
 37: $t21 := true
 38: label L14
 39: if ($t21) goto 40 else goto 43
 40: label L15
 41: $t1 := option::none<u8>()
 42: return $t1
 43: label L16
 44: $t1 := option::some<u8>($t10)
 45: return $t1
 46: label L13
 47: $t24 := (u8)($t8)
 48: $t21 := >($t10, $t24)
 49: goto 38
 50: label L7
 51: $t20 := 1
 52: $t15 := !=($t6, $t20)
 53: goto 27
 54: label L4
 55: $t19 := 32
 56: $t16 := >($t8, $t19)
 57: goto 23
}

============ after UnreachableCodeProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # maybe
  0: $t3 := borrow_local($t0)
     # maybe
  1: $t2 := vector::length<u8>($t3)
     # maybe
  2: $t5 := 0
     # maybe
  3: $t4 := ==($t2, $t5)
     # maybe
  4: if ($t4) goto 5 else goto 8
     # maybe
  5: label L0
     # maybe
  6: $t1 := option::none<u8>()
     # maybe
  7: return $t1
     # maybe
  8: label L2
     # maybe
  9: $t7 := 32
     # maybe
 10: $t6 := %($t2, $t7)
     # maybe
 11: $t9 := 32
     # maybe
 12: $t8 := /($t2, $t9)
     # maybe
 13: $t12 := borrow_local($t0)
     # maybe
 14: $t14 := 1
     # maybe
 15: $t13 := -($t2, $t14)
     # maybe
 16: $t11 := vector::borrow<u8>($t12, $t13)
     # maybe
 17: $t10 := read_ref($t11)
     # maybe
 18: $t18 := 0
     # maybe
 19: $t17 := ==($t8, $t18)
     # maybe
 20: if ($t17) goto 21 else goto 54
     # maybe
 21: label L3
     # maybe
 22: $t16 := true
     # maybe
 23: label L5
     # maybe
 24: if ($t16) goto 25 else goto 50
     # maybe
 25: label L6
     # maybe
 26: $t15 := true
     # maybe
 27: label L8
     # maybe
 28: if ($t15) goto 29 else goto 32
     # maybe
 29: label L9
     # maybe
 30: $t1 := option::none<u8>()
     # maybe
 31: return $t1
     # maybe
 32: label L10
     # maybe
 33: $t23 := 0
     # maybe
 34: $t22 := ==($t10, $t23)
     # maybe
 35: if ($t22) goto 36 else goto 46
     # maybe
 36: label L12
     # maybe
 37: $t21 := true
     # maybe
 38: label L14
     # maybe
 39: if ($t21) goto 40 else goto 43
     # maybe
 40: label L15
     # maybe
 41: $t1 := option::none<u8>()
     # maybe
 42: return $t1
     # maybe
 43: label L16
     # maybe
 44: $t1 := option::some<u8>($t10)
     # maybe
 45: return $t1
     # maybe
 46: label L13
     # maybe
 47: $t24 := (u8)($t8)
     # maybe
 48: $t21 := >($t10, $t24)
     # maybe
 49: goto 38
     # maybe
 50: label L7
     # maybe
 51: $t20 := 1
     # maybe
 52: $t15 := !=($t6, $t20)
     # maybe
 53: goto 27
     # maybe
 54: label L4
     # maybe
 55: $t19 := 32
     # maybe
 56: $t16 := >($t8, $t19)
     # maybe
 57: goto 23
}

============ after UnreachableCodeRemover: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 8
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: label L2
  9: $t7 := 32
 10: $t6 := %($t2, $t7)
 11: $t9 := 32
 12: $t8 := /($t2, $t9)
 13: $t12 := borrow_local($t0)
 14: $t14 := 1
 15: $t13 := -($t2, $t14)
 16: $t11 := vector::borrow<u8>($t12, $t13)
 17: $t10 := read_ref($t11)
 18: $t18 := 0
 19: $t17 := ==($t8, $t18)
 20: if ($t17) goto 21 else goto 54
 21: label L3
 22: $t16 := true
 23: label L5
 24: if ($t16) goto 25 else goto 50
 25: label L6
 26: $t15 := true
 27: label L8
 28: if ($t15) goto 29 else goto 32
 29: label L9
 30: $t1 := option::none<u8>()
 31: return $t1
 32: label L10
 33: $t23 := 0
 34: $t22 := ==($t10, $t23)
 35: if ($t22) goto 36 else goto 46
 36: label L12
 37: $t21 := true
 38: label L14
 39: if ($t21) goto 40 else goto 43
 40: label L15
 41: $t1 := option::none<u8>()
 42: return $t1
 43: label L16
 44: $t1 := option::some<u8>($t10)
 45: return $t1
 46: label L13
 47: $t24 := (u8)($t8)
 48: $t21 := >($t10, $t24)
 49: goto 38
 50: label L7
 51: $t20 := 1
 52: $t15 := !=($t6, $t20)
 53: goto 27
 54: label L4
 55: $t19 := 32
 56: $t16 := >($t8, $t19)
 57: goto 23
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 8
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: label L2
     # live vars: $t0, $t2
  9: $t7 := 32
     # live vars: $t0, $t2, $t7
 10: $t6 := %($t2, $t7)
     # live vars: $t0, $t2, $t6
 11: $t9 := 32
     # live vars: $t0, $t2, $t6, $t9
 12: $t8 := /($t2, $t9)
     # live vars: $t0, $t2, $t6, $t8
 13: $t12 := borrow_local($t0)
     # live vars: $t2, $t6, $t8, $t12
 14: $t14 := 1
     # live vars: $t2, $t6, $t8, $t12, $t14
 15: $t13 := -($t2, $t14)
     # live vars: $t6, $t8, $t12, $t13
 16: $t11 := vector::borrow<u8>($t12, $t13)
     # live vars: $t6, $t8, $t11
 17: $t10 := read_ref($t11)
     # live vars: $t6, $t8, $t10
 18: $t18 := 0
     # live vars: $t6, $t8, $t10, $t18
 19: $t17 := ==($t8, $t18)
     # live vars: $t6, $t8, $t10, $t17
 20: if ($t17) goto 21 else goto 54
     # live vars: $t6, $t8, $t10
 21: label L3
     # live vars: $t6, $t8, $t10
 22: $t16 := true
     # live vars: $t6, $t8, $t10, $t16
 23: label L5
     # live vars: $t6, $t8, $t10, $t16
 24: if ($t16) goto 25 else goto 50
     # live vars: $t6, $t8, $t10
 25: label L6
     # live vars: $t8, $t10
 26: $t15 := true
     # live vars: $t8, $t10, $t15
 27: label L8
     # live vars: $t8, $t10, $t15
 28: if ($t15) goto 29 else goto 32
     # live vars: $t8, $t10
 29: label L9
     # live vars:
 30: $t1 := option::none<u8>()
     # live vars: $t1
 31: return $t1
     # live vars: $t8, $t10
 32: label L10
     # live vars: $t8, $t10
 33: $t23 := 0
     # live vars: $t8, $t10, $t23
 34: $t22 := ==($t10, $t23)
     # live vars: $t8, $t10, $t22
 35: if ($t22) goto 36 else goto 46
     # live vars: $t8, $t10
 36: label L12
     # live vars: $t10
 37: $t21 := true
     # live vars: $t10, $t21
 38: label L14
     # live vars: $t10, $t21
 39: if ($t21) goto 40 else goto 43
     # live vars: $t10
 40: label L15
     # live vars:
 41: $t1 := option::none<u8>()
     # live vars: $t1
 42: return $t1
     # live vars: $t10
 43: label L16
     # live vars: $t10
 44: $t1 := option::some<u8>($t10)
     # live vars: $t1
 45: return $t1
     # live vars: $t8, $t10
 46: label L13
     # live vars: $t8, $t10
 47: $t24 := (u8)($t8)
     # live vars: $t10, $t24
 48: $t21 := >($t10, $t24)
     # live vars: $t10, $t21
 49: goto 38
     # live vars: $t6, $t8, $t10
 50: label L7
     # live vars: $t6, $t8, $t10
 51: $t20 := 1
     # live vars: $t6, $t8, $t10, $t20
 52: $t15 := !=($t6, $t20)
     # live vars: $t8, $t10, $t15
 53: goto 27
     # live vars: $t6, $t8, $t10
 54: label L4
     # live vars: $t6, $t8, $t10
 55: $t19 := 32
     # live vars: $t6, $t8, $t10, $t19
 56: $t16 := >($t8, $t19)
     # live vars: $t6, $t8, $t10, $t16
 57: goto 23
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 8
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: label L2
  9: $t7 := 32
 10: $t6 := %($t2, $t7)
 11: $t9 := 32
 12: $t8 := /($t2, $t9)
 13: $t12 := borrow_local($t0)
 14: $t14 := 1
 15: $t13 := -($t2, $t14)
 16: $t11 := vector::borrow<u8>($t12, $t13)
 17: $t10 := read_ref($t11)
 18: $t18 := 0
 19: $t17 := ==($t8, $t18)
 20: if ($t17) goto 21 else goto 54
 21: label L3
 22: $t16 := true
 23: label L5
 24: if ($t16) goto 25 else goto 50
 25: label L6
 26: $t15 := true
 27: label L8
 28: if ($t15) goto 29 else goto 32
 29: label L9
 30: $t1 := option::none<u8>()
 31: return $t1
 32: label L10
 33: $t23 := 0
 34: $t22 := ==($t10, $t23)
 35: if ($t22) goto 36 else goto 46
 36: label L12
 37: $t21 := true
 38: label L14
 39: if ($t21) goto 40 else goto 43
 40: label L15
 41: $t1 := option::none<u8>()
 42: return $t1
 43: label L16
 44: $t1 := option::some<u8>($t10)
 45: return $t1
 46: label L13
 47: $t24 := (u8)($t8)
 48: $t21 := >($t10, $t24)
 49: goto 38
 50: label L7
 51: $t20 := 1
 52: $t15 := !=($t6, $t20)
 53: goto 27
 54: label L4
 55: $t19 := 32
 56: $t16 := >($t8, $t19)
 57: goto 23
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64
     var $t7: u64
     var $t8: u64
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8>
     var $t13: u64
     var $t14: u64
     var $t15: bool
     var $t16: bool
     var $t17: bool
     var $t18: u64
     var $t19: u64
     var $t20: u64
     var $t21: bool
     var $t22: bool
     var $t23: u8
     var $t24: u8
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 8
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: label L2
     # live vars: $t0, $t2
  9: $t7 := 32
     # live vars: $t0, $t2, $t7
 10: $t6 := %($t2, $t7)
     # live vars: $t0, $t2, $t6
 11: $t9 := 32
     # live vars: $t0, $t2, $t6, $t9
 12: $t8 := /($t2, $t9)
     # live vars: $t0, $t2, $t6, $t8
 13: $t12 := borrow_local($t0)
     # live vars: $t2, $t6, $t8, $t12
 14: $t14 := 1
     # live vars: $t2, $t6, $t8, $t12, $t14
 15: $t13 := -($t2, $t14)
     # live vars: $t6, $t8, $t12, $t13
 16: $t11 := vector::borrow<u8>($t12, $t13)
     # live vars: $t6, $t8, $t11
 17: $t10 := read_ref($t11)
     # live vars: $t6, $t8, $t10
 18: $t18 := 0
     # live vars: $t6, $t8, $t10, $t18
 19: $t17 := ==($t8, $t18)
     # live vars: $t6, $t8, $t10, $t17
 20: if ($t17) goto 21 else goto 54
     # live vars: $t6, $t8, $t10
 21: label L3
     # live vars: $t6, $t8, $t10
 22: $t16 := true
     # live vars: $t6, $t8, $t10, $t16
 23: label L5
     # live vars: $t6, $t8, $t10, $t16
 24: if ($t16) goto 25 else goto 50
     # live vars: $t6, $t8, $t10
 25: label L6
     # live vars: $t8, $t10
 26: $t15 := true
     # live vars: $t8, $t10, $t15
 27: label L8
     # live vars: $t8, $t10, $t15
 28: if ($t15) goto 29 else goto 32
     # live vars: $t8, $t10
 29: label L9
     # live vars:
 30: $t1 := option::none<u8>()
     # live vars: $t1
 31: return $t1
     # live vars: $t8, $t10
 32: label L10
     # live vars: $t8, $t10
 33: $t23 := 0
     # live vars: $t8, $t10, $t23
 34: $t22 := ==($t10, $t23)
     # live vars: $t8, $t10, $t22
 35: if ($t22) goto 36 else goto 46
     # live vars: $t8, $t10
 36: label L12
     # live vars: $t10
 37: $t21 := true
     # live vars: $t10, $t21
 38: label L14
     # live vars: $t10, $t21
 39: if ($t21) goto 40 else goto 43
     # live vars: $t10
 40: label L15
     # live vars:
 41: $t1 := option::none<u8>()
     # live vars: $t1
 42: return $t1
     # live vars: $t10
 43: label L16
     # live vars: $t10
 44: $t1 := option::some<u8>($t10)
     # live vars: $t1
 45: return $t1
     # live vars: $t8, $t10
 46: label L13
     # live vars: $t8, $t10
 47: $t24 := (u8)($t8)
     # live vars: $t10, $t24
 48: $t21 := >($t10, $t24)
     # live vars: $t10, $t21
 49: goto 38
     # live vars: $t6, $t8, $t10
 50: label L7
     # live vars: $t6, $t8, $t10
 51: $t20 := 1
     # live vars: $t6, $t8, $t10, $t20
 52: $t15 := !=($t6, $t20)
     # live vars: $t8, $t10, $t15
 53: goto 27
     # live vars: $t6, $t8, $t10
 54: label L4
     # live vars: $t6, $t8, $t10
 55: $t19 := 32
     # live vars: $t6, $t8, $t10, $t19
 56: $t16 := >($t8, $t19)
     # live vars: $t6, $t8, $t10, $t16
 57: goto 23
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8> [unused]
     var $t13: u64 [unused]
     var $t14: u64
     var $t15: bool
     var $t16: bool [unused]
     var $t17: bool [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: bool
     var $t23: u8
     var $t24: u8 [unused]
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 8
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: label L2
  9: $t5 := 32
 10: $t5 := %($t2, $t5)
 11: $t9 := 32
 12: $t9 := /($t2, $t9)
 13: $t3 := borrow_local($t0)
 14: $t14 := 1
 15: $t2 := -($t2, $t14)
 16: $t11 := vector::borrow<u8>($t3, $t2)
 17: $t10 := read_ref($t11)
 18: $t2 := 0
 19: $t4 := ==($t9, $t2)
 20: if ($t4) goto 21 else goto 54
 21: label L3
 22: $t4 := true
 23: label L5
 24: if ($t4) goto 25 else goto 50
 25: label L6
 26: $t15 := true
 27: label L8
 28: if ($t15) goto 29 else goto 32
 29: label L9
 30: $t1 := option::none<u8>()
 31: return $t1
 32: label L10
 33: $t23 := 0
 34: $t22 := ==($t10, $t23)
 35: if ($t22) goto 36 else goto 46
 36: label L12
 37: $t22 := true
 38: label L14
 39: if ($t22) goto 40 else goto 43
 40: label L15
 41: $t1 := option::none<u8>()
 42: return $t1
 43: label L16
 44: $t1 := option::some<u8>($t10)
 45: return $t1
 46: label L13
 47: $t23 := (u8)($t9)
 48: $t22 := >($t10, $t23)
 49: goto 38
 50: label L7
 51: $t2 := 1
 52: $t15 := !=($t5, $t2)
 53: goto 27
 54: label L4
 55: $t2 := 32
 56: $t4 := >($t9, $t2)
 57: goto 23
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8> [unused]
     var $t13: u64 [unused]
     var $t14: u64
     var $t15: bool
     var $t16: bool [unused]
     var $t17: bool [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: bool
     var $t23: u8
     var $t24: u8 [unused]
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 8
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: label L2
     # live vars: $t0, $t2
  9: $t5 := 32
     # live vars: $t0, $t2, $t5
 10: $t5 := %($t2, $t5)
     # live vars: $t0, $t2, $t5
 11: $t9 := 32
     # live vars: $t0, $t2, $t5, $t9
 12: $t9 := /($t2, $t9)
     # live vars: $t0, $t2, $t5, $t9
 13: $t3 := borrow_local($t0)
     # live vars: $t2, $t3, $t5, $t9
 14: $t14 := 1
     # live vars: $t2, $t3, $t5, $t9, $t14
 15: $t2 := -($t2, $t14)
     # live vars: $t2, $t3, $t5, $t9
 16: $t11 := vector::borrow<u8>($t3, $t2)
     # live vars: $t5, $t9, $t11
 17: $t10 := read_ref($t11)
     # live vars: $t5, $t9, $t10
 18: $t2 := 0
     # live vars: $t2, $t5, $t9, $t10
 19: $t4 := ==($t9, $t2)
     # live vars: $t4, $t5, $t9, $t10
 20: if ($t4) goto 21 else goto 54
     # live vars: $t5, $t9, $t10
 21: label L3
     # live vars: $t5, $t9, $t10
 22: $t4 := true
     # live vars: $t4, $t5, $t9, $t10
 23: label L5
     # live vars: $t4, $t5, $t9, $t10
 24: if ($t4) goto 25 else goto 50
     # live vars: $t5, $t9, $t10
 25: label L6
     # live vars: $t9, $t10
 26: $t15 := true
     # live vars: $t9, $t10, $t15
 27: label L8
     # live vars: $t9, $t10, $t15
 28: if ($t15) goto 29 else goto 32
     # live vars: $t9, $t10
 29: label L9
     # live vars:
 30: $t1 := option::none<u8>()
     # live vars: $t1
 31: return $t1
     # live vars: $t9, $t10
 32: label L10
     # live vars: $t9, $t10
 33: $t23 := 0
     # live vars: $t9, $t10, $t23
 34: $t22 := ==($t10, $t23)
     # live vars: $t9, $t10, $t22
 35: if ($t22) goto 36 else goto 46
     # live vars: $t9, $t10
 36: label L12
     # live vars: $t10
 37: $t22 := true
     # live vars: $t10, $t22
 38: label L14
     # live vars: $t10, $t22
 39: if ($t22) goto 40 else goto 43
     # live vars: $t10
 40: label L15
     # live vars:
 41: $t1 := option::none<u8>()
     # live vars: $t1
 42: return $t1
     # live vars: $t10
 43: label L16
     # live vars: $t10
 44: $t1 := option::some<u8>($t10)
     # live vars: $t1
 45: return $t1
     # live vars: $t9, $t10
 46: label L13
     # live vars: $t9, $t10
 47: $t23 := (u8)($t9)
     # live vars: $t10, $t23
 48: $t22 := >($t10, $t23)
     # live vars: $t10, $t22
 49: goto 38
     # live vars: $t5, $t9, $t10
 50: label L7
     # live vars: $t5, $t9, $t10
 51: $t2 := 1
     # live vars: $t2, $t5, $t9, $t10
 52: $t15 := !=($t5, $t2)
     # live vars: $t9, $t10, $t15
 53: goto 27
     # live vars: $t5, $t9, $t10
 54: label L4
     # live vars: $t5, $t9, $t10
 55: $t2 := 32
     # live vars: $t2, $t5, $t9, $t10
 56: $t4 := >($t9, $t2)
     # live vars: $t4, $t5, $t9, $t10
 57: goto 23
}

============ after DeadStoreElimination: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8> [unused]
     var $t13: u64 [unused]
     var $t14: u64
     var $t15: bool
     var $t16: bool [unused]
     var $t17: bool [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: bool
     var $t23: u8
     var $t24: u8 [unused]
  0: $t3 := borrow_local($t0)
  1: $t2 := vector::length<u8>($t3)
  2: $t5 := 0
  3: $t4 := ==($t2, $t5)
  4: if ($t4) goto 5 else goto 8
  5: label L0
  6: $t1 := option::none<u8>()
  7: return $t1
  8: label L2
  9: $t5 := 32
 10: $t5 := %($t2, $t5)
 11: $t9 := 32
 12: $t9 := /($t2, $t9)
 13: $t3 := borrow_local($t0)
 14: $t14 := 1
 15: $t2 := -($t2, $t14)
 16: $t11 := vector::borrow<u8>($t3, $t2)
 17: $t10 := read_ref($t11)
 18: $t2 := 0
 19: $t4 := ==($t9, $t2)
 20: if ($t4) goto 21 else goto 54
 21: label L3
 22: $t4 := true
 23: label L5
 24: if ($t4) goto 25 else goto 50
 25: label L6
 26: $t15 := true
 27: label L8
 28: if ($t15) goto 29 else goto 32
 29: label L9
 30: $t1 := option::none<u8>()
 31: return $t1
 32: label L10
 33: $t23 := 0
 34: $t22 := ==($t10, $t23)
 35: if ($t22) goto 36 else goto 46
 36: label L12
 37: $t22 := true
 38: label L14
 39: if ($t22) goto 40 else goto 43
 40: label L15
 41: $t1 := option::none<u8>()
 42: return $t1
 43: label L16
 44: $t1 := option::some<u8>($t10)
 45: return $t1
 46: label L13
 47: $t23 := (u8)($t9)
 48: $t22 := >($t10, $t23)
 49: goto 38
 50: label L7
 51: $t2 := 1
 52: $t15 := !=($t5, $t2)
 53: goto 27
 54: label L4
 55: $t2 := 32
 56: $t4 := >($t9, $t2)
 57: goto 23
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8> [unused]
     var $t13: u64 [unused]
     var $t14: u64
     var $t15: bool
     var $t16: bool [unused]
     var $t17: bool [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: bool
     var $t23: u8
     var $t24: u8 [unused]
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 8
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: label L2
     # live vars: $t0, $t2
  9: $t5 := 32
     # live vars: $t0, $t2, $t5
 10: $t5 := %($t2, $t5)
     # live vars: $t0, $t2, $t5
 11: $t9 := 32
     # live vars: $t0, $t2, $t5, $t9
 12: $t9 := /($t2, $t9)
     # live vars: $t0, $t2, $t5, $t9
 13: $t3 := borrow_local($t0)
     # live vars: $t2, $t3, $t5, $t9
 14: $t14 := 1
     # live vars: $t2, $t3, $t5, $t9, $t14
 15: $t2 := -($t2, $t14)
     # live vars: $t2, $t3, $t5, $t9
 16: $t11 := vector::borrow<u8>($t3, $t2)
     # live vars: $t5, $t9, $t11
 17: $t10 := read_ref($t11)
     # live vars: $t5, $t9, $t10
 18: $t2 := 0
     # live vars: $t2, $t5, $t9, $t10
 19: $t4 := ==($t9, $t2)
     # live vars: $t4, $t5, $t9, $t10
 20: if ($t4) goto 21 else goto 54
     # live vars: $t5, $t9, $t10
 21: label L3
     # live vars: $t5, $t9, $t10
 22: $t4 := true
     # live vars: $t4, $t5, $t9, $t10
 23: label L5
     # live vars: $t4, $t5, $t9, $t10
 24: if ($t4) goto 25 else goto 50
     # live vars: $t5, $t9, $t10
 25: label L6
     # live vars: $t9, $t10
 26: $t15 := true
     # live vars: $t9, $t10, $t15
 27: label L8
     # live vars: $t9, $t10, $t15
 28: if ($t15) goto 29 else goto 32
     # live vars: $t9, $t10
 29: label L9
     # live vars:
 30: $t1 := option::none<u8>()
     # live vars: $t1
 31: return $t1
     # live vars: $t9, $t10
 32: label L10
     # live vars: $t9, $t10
 33: $t23 := 0
     # live vars: $t9, $t10, $t23
 34: $t22 := ==($t10, $t23)
     # live vars: $t9, $t10, $t22
 35: if ($t22) goto 36 else goto 46
     # live vars: $t9, $t10
 36: label L12
     # live vars: $t10
 37: $t22 := true
     # live vars: $t10, $t22
 38: label L14
     # live vars: $t10, $t22
 39: if ($t22) goto 40 else goto 43
     # live vars: $t10
 40: label L15
     # live vars:
 41: $t1 := option::none<u8>()
     # live vars: $t1
 42: return $t1
     # live vars: $t10
 43: label L16
     # live vars: $t10
 44: $t1 := option::some<u8>($t10)
     # live vars: $t1
 45: return $t1
     # live vars: $t9, $t10
 46: label L13
     # live vars: $t9, $t10
 47: $t23 := (u8)($t9)
     # live vars: $t10, $t23
 48: $t22 := >($t10, $t23)
     # live vars: $t10, $t22
 49: goto 38
     # live vars: $t5, $t9, $t10
 50: label L7
     # live vars: $t5, $t9, $t10
 51: $t2 := 1
     # live vars: $t2, $t5, $t9, $t10
 52: $t15 := !=($t5, $t2)
     # live vars: $t9, $t10, $t15
 53: goto 27
     # live vars: $t5, $t9, $t10
 54: label L4
     # live vars: $t5, $t9, $t10
 55: $t2 := 32
     # live vars: $t2, $t5, $t9, $t10
 56: $t4 := >($t9, $t2)
     # live vars: $t4, $t5, $t9, $t10
 57: goto 23
}

============ after FlushWritesProcessor: ================

[variant baseline]
public fun test::check_and_get_threshold($t0: vector<u8>): option::Option<u8> {
     var $t1: option::Option<u8>
     var $t2: u64
     var $t3: &vector<u8>
     var $t4: bool
     var $t5: u64
     var $t6: u64 [unused]
     var $t7: u64 [unused]
     var $t8: u64 [unused]
     var $t9: u64
     var $t10: u8
     var $t11: &u8
     var $t12: &vector<u8> [unused]
     var $t13: u64 [unused]
     var $t14: u64
     var $t15: bool
     var $t16: bool [unused]
     var $t17: bool [unused]
     var $t18: u64 [unused]
     var $t19: u64 [unused]
     var $t20: u64 [unused]
     var $t21: bool [unused]
     var $t22: bool
     var $t23: u8
     var $t24: u8 [unused]
     # live vars: $t0
  0: $t3 := borrow_local($t0)
     # flush: $t2
     # live vars: $t0, $t3
  1: $t2 := vector::length<u8>($t3)
     # live vars: $t0, $t2
  2: $t5 := 0
     # live vars: $t0, $t2, $t5
  3: $t4 := ==($t2, $t5)
     # live vars: $t0, $t2, $t4
  4: if ($t4) goto 5 else goto 8
     # live vars: $t0, $t2
  5: label L0
     # live vars:
  6: $t1 := option::none<u8>()
     # live vars: $t1
  7: return $t1
     # live vars: $t0, $t2
  8: label L2
     # live vars: $t0, $t2
  9: $t5 := 32
     # flush: $t5
     # live vars: $t0, $t2, $t5
 10: $t5 := %($t2, $t5)
     # live vars: $t0, $t2, $t5
 11: $t9 := 32
     # flush: $t9
     # live vars: $t0, $t2, $t5, $t9
 12: $t9 := /($t2, $t9)
     # live vars: $t0, $t2, $t5, $t9
 13: $t3 := borrow_local($t0)
     # live vars: $t2, $t3, $t5, $t9
 14: $t14 := 1
     # live vars: $t2, $t3, $t5, $t9, $t14
 15: $t2 := -($t2, $t14)
     # live vars: $t2, $t3, $t5, $t9
 16: $t11 := vector::borrow<u8>($t3, $t2)
     # flush: $t10
     # live vars: $t5, $t9, $t11
 17: $t10 := read_ref($t11)
     # live vars: $t5, $t9, $t10
 18: $t2 := 0
     # live vars: $t2, $t5, $t9, $t10
 19: $t4 := ==($t9, $t2)
     # live vars: $t4, $t5, $t9, $t10
 20: if ($t4) goto 21 else goto 54
     # live vars: $t5, $t9, $t10
 21: label L3
     # flush: $t4
     # live vars: $t5, $t9, $t10
 22: $t4 := true
     # live vars: $t4, $t5, $t9, $t10
 23: label L5
     # live vars: $t4, $t5, $t9, $t10
 24: if ($t4) goto 25 else goto 50
     # live vars: $t5, $t9, $t10
 25: label L6
     # flush: $t15
     # live vars: $t9, $t10
 26: $t15 := true
     # live vars: $t9, $t10, $t15
 27: label L8
     # live vars: $t9, $t10, $t15
 28: if ($t15) goto 29 else goto 32
     # live vars: $t9, $t10
 29: label L9
     # live vars:
 30: $t1 := option::none<u8>()
     # live vars: $t1
 31: return $t1
     # live vars: $t9, $t10
 32: label L10
     # live vars: $t9, $t10
 33: $t23 := 0
     # live vars: $t9, $t10, $t23
 34: $t22 := ==($t10, $t23)
     # live vars: $t9, $t10, $t22
 35: if ($t22) goto 36 else goto 46
     # live vars: $t9, $t10
 36: label L12
     # flush: $t22
     # live vars: $t10
 37: $t22 := true
     # live vars: $t10, $t22
 38: label L14
     # live vars: $t10, $t22
 39: if ($t22) goto 40 else goto 43
     # live vars: $t10
 40: label L15
     # live vars:
 41: $t1 := option::none<u8>()
     # live vars: $t1
 42: return $t1
     # live vars: $t10
 43: label L16
     # live vars: $t10
 44: $t1 := option::some<u8>($t10)
     # live vars: $t1
 45: return $t1
     # live vars: $t9, $t10
 46: label L13
     # live vars: $t9, $t10
 47: $t23 := (u8)($t9)
     # flush: $t22
     # live vars: $t10, $t23
 48: $t22 := >($t10, $t23)
     # live vars: $t10, $t22
 49: goto 38
     # live vars: $t5, $t9, $t10
 50: label L7
     # live vars: $t5, $t9, $t10
 51: $t2 := 1
     # flush: $t15
     # live vars: $t2, $t5, $t9, $t10
 52: $t15 := !=($t5, $t2)
     # live vars: $t9, $t10, $t15
 53: goto 27
     # live vars: $t5, $t9, $t10
 54: label L4
     # live vars: $t5, $t9, $t10
 55: $t2 := 32
     # flush: $t4
     # live vars: $t2, $t5, $t9, $t10
 56: $t4 := >($t9, $t2)
     # live vars: $t4, $t5, $t9, $t10
 57: goto 23
}


============ disassembled file-format ==================
// Move bytecode v7
module 42.test {
use 0000000000000000000000000000000000000000000000000000000000000001::option;




public check_and_get_threshold(Arg0: vector<u8>): Option<u8> /* def_idx: 0 */ {
L1:	loc0: u64
L2:	loc1: u64
L3:	loc2: u64
L4:	loc3: u64
L5:	loc4: u8
L6:	loc5: bool
L7:	loc6: bool
L8:	loc7: u8
L9:	loc8: bool
B0:
	0: ImmBorrowLoc[0](Arg0: vector<u8>)
	1: VecLen(2)
	2: StLoc[1](loc0: u64)
	3: CopyLoc[1](loc0: u64)
	4: LdU64(0)
	5: Eq
	6: BrFalse(9)
B1:
	7: Call option::none<u8>(): Option<u8>
	8: Ret
B2:
	9: CopyLoc[1](loc0: u64)
	10: LdU64(32)
	11: Mod
	12: StLoc[2](loc1: u64)
	13: CopyLoc[1](loc0: u64)
	14: LdU64(32)
	15: Div
	16: StLoc[3](loc2: u64)
	17: ImmBorrowLoc[0](Arg0: vector<u8>)
	18: MoveLoc[1](loc0: u64)
	19: LdU64(1)
	20: Sub
	21: VecImmBorrow(2)
	22: ReadRef
	23: StLoc[5](loc4: u8)
	24: CopyLoc[3](loc2: u64)
	25: LdU64(0)
	26: Eq
	27: BrFalse(64)
B3:
	28: LdTrue
	29: StLoc[6](loc5: bool)
B4:
	30: MoveLoc[6](loc5: bool)
	31: BrFalse(59)
B5:
	32: LdTrue
	33: StLoc[7](loc6: bool)
B6:
	34: MoveLoc[7](loc6: bool)
	35: BrFalse(38)
B7:
	36: Call option::none<u8>(): Option<u8>
	37: Ret
B8:
	38: CopyLoc[5](loc4: u8)
	39: LdU8(0)
	40: Eq
	41: BrFalse(51)
B9:
	42: LdTrue
	43: StLoc[9](loc8: bool)
B10:
	44: MoveLoc[9](loc8: bool)
	45: BrFalse(48)
B11:
	46: Call option::none<u8>(): Option<u8>
	47: Ret
B12:
	48: MoveLoc[5](loc4: u8)
	49: Call option::some<u8>(u8): Option<u8>
	50: Ret
B13:
	51: MoveLoc[3](loc2: u64)
	52: CastU8
	53: StLoc[8](loc7: u8)
	54: CopyLoc[5](loc4: u8)
	55: MoveLoc[8](loc7: u8)
	56: Gt
	57: StLoc[9](loc8: bool)
	58: Branch(44)
B14:
	59: MoveLoc[2](loc1: u64)
	60: LdU64(1)
	61: Neq
	62: StLoc[7](loc6: bool)
	63: Branch(34)
B15:
	64: CopyLoc[3](loc2: u64)
	65: LdU64(32)
	66: Gt
	67: StLoc[6](loc5: bool)
	68: Branch(30)
}
}
============ bytecode verification succeeded ========
