============ initial bytecode ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
  2: label L1
  3: return ()
}

============ after uninitialized_use_checker: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
  2: label L1
  3: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
     # live vars:
  2: label L1
     # live vars:
  3: return ()
}

============ after UnusedAssignmentChecker: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
     # live vars:
  2: label L1
     # live vars:
  3: return ()
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
     # live vars:
  2: label L1
     # live vars:
  3: return ()
}

============ after ReferenceSafetyProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
     # refs: []
     #
  0: label L0
     # live vars:
     # refs: []
     #
  1: goto 0
     # live vars:
  2: label L1
     # live vars:
  3: return ()
}

============ after AbortAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # abort state: {}
     # live vars:
     # refs: []
     #
  0: label L0
     # abort state: {}
     # live vars:
     # refs: []
     #
  1: goto 0
     # abort state: {returns}
     # live vars:
  2: label L1
     # abort state: {returns}
     # live vars:
  3: return ()
}

============ after AbilityProcessor: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
  2: label L1
  3: return ()
}

============ after ControlFlowGraphSimplifier: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
}

============ after UnreachableCodeProcessor: ================

[variant baseline]
fun test::test() {
     # maybe
  0: label L0
     # maybe
  1: goto 0
}

============ after UnreachableCodeRemover: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
}

============ after DeadStoreElimination: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
}

============ after VariableCoalescingTransformer: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
}

============ after DeadStoreElimination: ================

[variant baseline]
fun test::test() {
  0: label L0
  1: goto 0
}

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
}

============ after FlushWritesProcessor: ================

[variant baseline]
fun test::test() {
     # live vars:
  0: label L0
     # live vars:
  1: goto 0
}


============ disassembled file-format ==================
// Move bytecode v7
module 42.test {


test() /* def_idx: 0 */ {
B0:
	0: Branch(0)
}
}
============ bytecode verification succeeded ========
