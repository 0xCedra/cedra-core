// ---- Model Dump
module 0x8675309::M {
    struct R {
        s1: M::S,
        s2: M::S,
    }
    struct S {
        f: u64,
    }
    private fun t0() {
        {
          let M::R{ s1: M::S{ f: f: u64 }, s2: s2: M::S } = {
            let .s1: M::S = {
              let .f: u64 = 0;
              pack M::S(.f)
            };
            {
              let .s2: M::S = {
                let .f: u64 = 1;
                pack M::S(.f)
              };
              pack M::R(.s1, .s2)
            }
          };
          f;
          s2;
          f: u64 = 0;
          s2: M::S = {
            let .f: u64 = 0;
            pack M::S(.f)
          };
          f;
          s2;
          Tuple()
        }
    }
    private fun t1() {
        {
          let M::R{ s1: M::S{ f: f: &u64 }, s2: s2: &M::S } = Borrow(Immutable)({
            let .s1: M::S = {
              let .f: u64 = 0;
              pack M::S(.f)
            };
            {
              let .s2: M::S = {
                let .f: u64 = 1;
                pack M::S(.f)
              };
              pack M::R(.s1, .s2)
            }
          });
          f;
          s2;
          f: &u64 = Borrow(Immutable)(0);
          s2: &M::S = Borrow(Immutable)({
            let .f: u64 = 0;
            pack M::S(.f)
          });
          f;
          s2;
          Tuple()
        }
    }
    private fun t2() {
        {
          let M::R{ s1: M::S{ f: f: &mut u64 }, s2: s2: &mut M::S } = Borrow(Mutable)({
            let .s1: M::S = {
              let .f: u64 = 0;
              pack M::S(.f)
            };
            {
              let .s2: M::S = {
                let .f: u64 = 1;
                pack M::S(.f)
              };
              pack M::R(.s1, .s2)
            }
          });
          f;
          s2;
          f: &mut u64 = Borrow(Mutable)(0);
          s2: &mut M::S = Borrow(Mutable)({
            let .f: u64 = 0;
            pack M::S(.f)
          });
          f;
          s2;
          Tuple()
        }
    }
    spec fun $t0();
    spec fun $t1();
    spec fun $t2();
} // end 0x8675309::M
