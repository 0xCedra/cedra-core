// -- Model dump before bytecode pipeline
module 0x42::example {
    struct Coin {
        0: u64,
    }
    enum Option {
        None,
        Some {
            0: #0,
        }
    }
    private fun create_coin(): example::Coin {
        pack example::Coin(0)
    }
    private fun inc_coin(x: &mut example::Coin) {
        select example::Coin.0<&mut example::Coin>(x) = Add<u64>(select example::Coin.0<&mut example::Coin>(x), 1);
        Tuple()
    }
    private fun inc_coin_2(x: &mut example::Coin) {
        {
          let example::Coin{ 0: x } = x;
          x = Add<u64>(Deref(x), 1);
          Tuple()
        }
    }
    private fun some<T>(x: #0): example::Option<#0> {
        pack example::Option::Some<T>(x)
    }
    private fun unwrap_coin_0(x: example::Coin): u64 {
        select example::Coin.0<example::Coin>(x)
    }
    private fun unwrap_coin_1(x: example::Coin): u64 {
        {
          let example::Coin{ 0: x } = x;
          x
        }
    }
    private fun unwrap_option<T>(self: example::Option<#0>): #0 {
        match (self) {
          example::Option::None<T> => {
            Abort(0)
          }
          example::Option::Some<T>{ 0: x } => {
            x
          }
        }

    }
} // end 0x42::example
