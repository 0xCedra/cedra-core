
Diagnostics:
error: type `R` is missing required ability `drop`
   ┌─ tests/checking/abilities/instantiate_signatures.move:11:15
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
11 │         f1: S<R>,
   │               ^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:12:15
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
12 │         f2: S<&u64>,
   │               ^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:12:13
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
12 │         f2: S<&u64>,
   │             ^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&&u64` is not allowed as a field type
   ┌─ tests/checking/abilities/instantiate_signatures.move:13:13
   │
13 │         f3: &(&u64),
   │             ^^^^^^^
   │
   = required by declaration of field `f3`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:14:15
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
14 │         f4: S<(u64, u64)>,
   │               ^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:14:13
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
14 │         f4: S<(u64, u64)>,
   │             ^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: type `R` is missing required ability `drop`
   ┌─ tests/checking/abilities/instantiate_signatures.move:18:16
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
18 │         _f1: S<R>,
   │                ^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:19:16
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
19 │         _f2: S<&u64>,
   │                ^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:21:16
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
21 │         _f4: S<(u64, u64)>,
   │                ^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:24:11
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
24 │         S<&u64>,
   │           ^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:26:11
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
26 │         S<(u64, u64)>,
   │           ^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: type `R` is missing required ability `drop`
   ┌─ tests/checking/abilities/instantiate_signatures.move:32:19
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
32 │         let f1: S<R> = abort 0;
   │                   ^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:33:19
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
33 │         let f2: S<&u64> = abort 0;
   │                   ^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:35:19
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
35 │         let f4: S<(u64, u64)> = abort 0;
   │                   ^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:38:14
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
38 │         id<S<&u64>>(abort 0);
   │              ^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:39:9
   │
 5 │     fun id<T>(x: T): T { x }
   │            - declaration of type parameter `T`
   ·
39 │         id<&(&u64)>(abort 0);
   │         ^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of function `id`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:40:14
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
40 │         id<S<(u64, u64)>>(abort 0);
   │              ^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: type `R` is missing required ability `drop`
   ┌─ tests/checking/abilities/instantiate_signatures.move:42:9
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
42 │         S<S<R>> { f: abort 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:43:13
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
43 │         S<S<&u64>> { f: abort 0 };
   │             ^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:43:9
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
43 │         S<S<&u64>> { f: abort 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: reference type `&&u64` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:44:9
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
44 │         S<&(&u64)> { f: abort 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:45:13
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
45 │         S<S<(u64, u64)>> { f: abort 0 };
   │             ^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`

error: tuple type `(u64, u64)` is not allowed as a type argument
   ┌─ tests/checking/abilities/instantiate_signatures.move:45:9
   │
 3 │     struct S<T: drop> has drop { f: T }
   │              - declaration of type parameter `T`
   ·
45 │         S<S<(u64, u64)>> { f: abort 0 };
   │         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
   │
   = required by instantiating type parameter `T` of struct `S`
