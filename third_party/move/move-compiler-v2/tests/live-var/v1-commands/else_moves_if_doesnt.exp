============ initial bytecode ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
  0: $t1 := 0
  1: $t0 := infer($t1)
  2: $t4 := true
  3: if ($t4) goto 4 else goto 7
  4: label L0
  5: $t3 := 0
  6: goto 9
  7: label L1
  8: $t3 := move($t0)
  9: label L2
 10: $t2 := infer($t3)
 11: $t5 := infer($t2)
 12: $t7 := 0
 13: $t6 := ==($t0, $t7)
 14: if ($t6) goto 15 else goto 17
 15: label L3
 16: goto 20
 17: label L4
 18: $t8 := 42
 19: abort($t8)
 20: label L5
 21: return ()
}


Diagnostics:
error: cannot move local `x` since it is used later
  ┌─ tests/live-var/v1-commands/else_moves_if_doesnt.move:4:30
  │
4 │     let y = if (true) 0 else move x; y;
  │                              ^^^^^^ attempted to move here
5 │     assert!(x == 0, 42);
  │             ------ used here

============ after LiveVarAnalysisProcessor: ================

[variant baseline]
fun <SELF>_0::main() {
     var $t0: u64
     var $t1: u64
     var $t2: u64
     var $t3: u64
     var $t4: bool
     var $t5: u64
     var $t6: bool
     var $t7: u64
     var $t8: u64
     # live vars:
  0: $t1 := 0
     # live vars: $t1
  1: $t0 := copy($t1)
     # live vars: $t0
  2: $t4 := true
     # live vars: $t0, $t4
  3: if ($t4) goto 4 else goto 7
     # live vars: $t0
  4: label L0
     # live vars: $t0
  5: $t3 := 0
     # live vars: $t0, $t3
  6: goto 9
     # live vars: $t0
  7: label L1
     # live vars: $t0
  8: $t3 := move($t0)
     # live vars: $t0, $t3
  9: label L2
     # live vars: $t0, $t3
 10: $t2 := copy($t3)
     # live vars: $t0, $t2
 11: $t5 := copy($t2)
     # live vars: $t0
 12: $t7 := 0
     # live vars: $t0, $t7
 13: $t6 := ==($t0, $t7)
     # live vars: $t6
 14: if ($t6) goto 15 else goto 17
     # live vars:
 15: label L3
     # live vars:
 16: goto 20
     # live vars:
 17: label L4
     # live vars:
 18: $t8 := 42
     # live vars: $t8
 19: abort($t8)
     # live vars:
 20: label L5
     # live vars:
 21: return ()
}
