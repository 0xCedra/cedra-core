processed 2 tasks

task 0 'publish'. lines 1-24:



==> Compiler v2 delivered same results!

>>> V1 Compiler {
== BEGIN Bytecode ==
// Move bytecode v6
module c0ffee.m {


public test1(Arg0: u64, Arg1: u64): u64 /* def_idx: 0 */ {
L2:	loc0: u64
L3:	loc1: u64
B0:
	0: MoveLoc[0](Arg0: u64)
	1: LdU64(1)
	2: Add
	3: StLoc[2](loc0: u64)
	4: MoveLoc[1](Arg1: u64)
	5: LdU64(1)
	6: Add
	7: StLoc[3](loc1: u64)
	8: MoveLoc[2](loc0: u64)
	9: MoveLoc[3](loc1: u64)
	10: Add
	11: Ret
}
public test2(Arg0: u64, Arg1: u64, Arg2: u64, Arg3: u64): u64 /* def_idx: 1 */ {
L4:	loc0: u64
L5:	loc1: u64
L6:	loc2: u64
L7:	loc3: u64
B0:
	0: LdU64(1)
	1: MoveLoc[0](Arg0: u64)
	2: Add
	3: StLoc[4](loc0: u64)
	4: LdU64(1)
	5: MoveLoc[1](Arg1: u64)
	6: Add
	7: StLoc[5](loc1: u64)
	8: LdU64(1)
	9: MoveLoc[2](Arg2: u64)
	10: Add
	11: StLoc[6](loc2: u64)
	12: LdU64(1)
	13: MoveLoc[3](Arg3: u64)
	14: Add
	15: StLoc[7](loc3: u64)
	16: MoveLoc[4](loc0: u64)
	17: MoveLoc[5](loc1: u64)
	18: Add
	19: Pop
	20: MoveLoc[6](loc2: u64)
	21: MoveLoc[7](loc3: u64)
	22: Add
	23: Ret
}
public test4(Arg0: u64, Arg1: u64): u64 /* def_idx: 2 */ {
L2:	loc0: u64
L3:	loc1: u64
B0:
	0: MoveLoc[0](Arg0: u64)
	1: LdU64(1)
	2: Add
	3: StLoc[2](loc0: u64)
	4: MoveLoc[1](Arg1: u64)
	5: LdU64(1)
	6: Add
	7: StLoc[3](loc1: u64)
	8: MoveLoc[2](loc0: u64)
	9: MoveLoc[3](loc1: u64)
	10: Add
	11: Ret
}
}
== END Bytecode ==

task 1 'publish'. lines 26-49:

== BEGIN Bytecode ==
// Move bytecode v6
module c0ffee.n {


public test1(): u64 /* def_idx: 0 */ {
L0:	loc0: u64
B0:
	0: LdU64(1)
	1: StLoc[0](loc0: u64)
	2: LdU64(2)
	3: MoveLoc[0](loc0: u64)
	4: Add
	5: Ret
}
public test2(): u64 /* def_idx: 1 */ {
L0:	loc0: u64
L1:	loc1: u64
B0:
	0: LdU64(1)
	1: StLoc[0](loc0: u64)
	2: LdU64(2)
	3: StLoc[1](loc1: u64)
	4: MoveLoc[0](loc0: u64)
	5: MoveLoc[1](loc1: u64)
	6: Add
	7: Ret
}
public test3(Arg0: u64, Arg1: u64): u64 /* def_idx: 2 */ {
L2:	loc0: u64
L3:	loc1: u64
B0:
	0: MoveLoc[0](Arg0: u64)
	1: LdU64(1)
	2: Add
	3: StLoc[2](loc0: u64)
	4: MoveLoc[1](Arg1: u64)
	5: LdU64(1)
	6: Add
	7: StLoc[3](loc1: u64)
	8: MoveLoc[2](loc0: u64)
	9: MoveLoc[3](loc1: u64)
	10: Add
	11: Ret
}
}
== END Bytecode ==
}

>>> V2 Compiler {
== BEGIN Bytecode ==
// Move bytecode v7
module c0ffee.m {


public test1(Arg0: u64, Arg1: u64): u64 /* def_idx: 0 */ {
L2:	loc0: u64
B0:
	0: LdU64(1)
	1: StLoc[2](loc0: u64)
	2: MoveLoc[0](Arg0: u64)
	3: MoveLoc[2](loc0: u64)
	4: Add
	5: LdU64(1)
	6: StLoc[2](loc0: u64)
	7: MoveLoc[1](Arg1: u64)
	8: MoveLoc[2](loc0: u64)
	9: Add
	10: Add
	11: Ret
}
public test2(Arg0: u64, Arg1: u64, Arg2: u64, Arg3: u64): u64 /* def_idx: 1 */ {
B0:
	0: LdU64(1)
	1: MoveLoc[0](Arg0: u64)
	2: Add
	3: LdU64(1)
	4: MoveLoc[1](Arg1: u64)
	5: Add
	6: LdU64(1)
	7: MoveLoc[2](Arg2: u64)
	8: Add
	9: LdU64(1)
	10: MoveLoc[3](Arg3: u64)
	11: Add
	12: StLoc[3](Arg3: u64)
	13: StLoc[2](Arg2: u64)
	14: StLoc[1](Arg1: u64)
	15: StLoc[0](Arg0: u64)
	16: MoveLoc[0](Arg0: u64)
	17: MoveLoc[1](Arg1: u64)
	18: Add
	19: MoveLoc[2](Arg2: u64)
	20: MoveLoc[3](Arg3: u64)
	21: Add
	22: StLoc[1](Arg1: u64)
	23: Pop
	24: MoveLoc[1](Arg1: u64)
	25: Ret
}
public test4(Arg0: u64, Arg1: u64): u64 /* def_idx: 2 */ {
L2:	loc0: u64
B0:
	0: LdU64(1)
	1: StLoc[2](loc0: u64)
	2: MoveLoc[0](Arg0: u64)
	3: MoveLoc[2](loc0: u64)
	4: Add
	5: LdU64(1)
	6: StLoc[2](loc0: u64)
	7: MoveLoc[1](Arg1: u64)
	8: MoveLoc[2](loc0: u64)
	9: Add
	10: Add
	11: Ret
}
}
== END Bytecode ==

task 1 'publish'. lines 26-49:

== BEGIN Bytecode ==
// Move bytecode v7
module c0ffee.n {


public test1(): u64 /* def_idx: 0 */ {
L0:	loc0: u64
L1:	loc1: u64
B0:
	0: LdU64(1)
	1: StLoc[0](loc0: u64)
	2: LdU64(2)
	3: StLoc[1](loc1: u64)
	4: MoveLoc[1](loc1: u64)
	5: MoveLoc[0](loc0: u64)
	6: Add
	7: Ret
}
public test2(): u64 /* def_idx: 1 */ {
L0:	loc0: u64
L1:	loc1: u64
B0:
	0: LdU64(1)
	1: StLoc[0](loc0: u64)
	2: LdU64(2)
	3: StLoc[1](loc1: u64)
	4: MoveLoc[0](loc0: u64)
	5: MoveLoc[1](loc1: u64)
	6: Add
	7: Ret
}
public test3(Arg0: u64, Arg1: u64): u64 /* def_idx: 2 */ {
L2:	loc0: u64
B0:
	0: LdU64(1)
	1: StLoc[2](loc0: u64)
	2: MoveLoc[0](Arg0: u64)
	3: MoveLoc[2](loc0: u64)
	4: Add
	5: LdU64(1)
	6: StLoc[2](loc0: u64)
	7: MoveLoc[1](Arg1: u64)
	8: MoveLoc[2](loc0: u64)
	9: Add
	10: Add
	11: Ret
}
}
== END Bytecode ==
}
