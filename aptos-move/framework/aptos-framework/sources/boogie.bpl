
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

type {:datatype} Vec _;

function {:constructor} Vec<T>(v: [int]T, l: int): Vec T;

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := l#Vec(v);
    Vec(v#Vec(v)[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v#Vec(v)[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    l#Vec(v)
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    l#Vec(v) == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := l#Vec(v) - 1;
    Vec(v#Vec(v)[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := l#Vec(v) - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v#Vec(v)[j] else v#Vec(v)[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := l#Vec(v1), v#Vec(v1), l#Vec(v2), v#Vec(v2);
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := l#Vec(v);
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v#Vec(v)[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v#Vec(v);
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v#Vec(v)[i := elem], l#Vec(v))
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v#Vec(v);
    Vec(m[i := m[j]][j := m[i]], l#Vec(v)))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := l#Vec(v);
    (exists i: int :: InRangeVec(v, i) && v#Vec(v)[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

type {:datatype} Multiset _;
function {:constructor} Multiset<T>(v: [T]int, l: int): Multiset T;

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    l#Multiset(s)
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := l#Multiset(s);
    (var cnt := v#Multiset(s)[v];
    Multiset(v#Multiset(s)[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := l#Multiset(s1);
    (var len2 := l#Multiset(s2);
    Multiset((lambda v:T :: v#Multiset(s1)[v]-v#Multiset(s2)[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (l#Multiset(s) == 0) &&
    (forall v: T :: v#Multiset(s)[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (l#Multiset(s1) <= l#Multiset(s2)) &&
    (forall v: T :: v#Multiset(s1)[v] <= v#Multiset(s2)[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    v#Multiset(s)[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

type {:datatype} Table _ _;

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
function {:constructor} Table<K, V>(v: [K]V, e: [K]bool, l: int): Table K V;

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    v#Table(t)[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    l#Table(t)
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    e#Table(t)[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(v#Table(t)[k := v], e#Table(t), l#Table(t))
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(v#Table(t)[k := v], e#Table(t)[k := true], l#Table(t) + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(v#Table(t), e#Table(t)[k := false], l#Table(t) - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

type {:datatype} $1_aggregator_Aggregator;
function {:constructor} $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int): $1_aggregator_Aggregator;
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, $key#$1_aggregator_Aggregator(s), $limit#$1_aggregator_Aggregator(s), $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), x, $limit#$1_aggregator_Aggregator(s), $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), $key#$1_aggregator_Aggregator(s), x, $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), $key#$1_aggregator_Aggregator(s), $limit#$1_aggregator_Aggregator(s), x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'($handle#$1_aggregator_Aggregator(s))
      && $IsValid'address'($key#$1_aggregator_Aggregator(s))
      && $IsValid'u128'($limit#$1_aggregator_Aggregator(s))
      && $IsValid'u128'($val#$1_aggregator_Aggregator(s))
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s1: $1_aggregator_Aggregator): int {
    $limit#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_handle(s1: $1_aggregator_Aggregator): int {
    $handle#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_key(s1: $1_aggregator_Aggregator): int {
    $key#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_val(s1: $1_aggregator_Aggregator): int {
    $val#$1_aggregator_Aggregator(s1)
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

type {:datatype} $Range;
function {:constructor} $Range(lb: int, ub: int): $Range;

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(lb#$Range(r)) &&  $IsValid'u64'(ub#$Range(r))
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   lb#$Range(r) <= i && i < ub#$Range(r)
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

type {:datatype} $Location;

// A global resource location within the statically known resource type's memory,
// where `a` is an address.
function {:constructor} $Global(a: int): $Location;

// A local location. `i` is the unique index of the local.
function {:constructor} $Local(i: int): $Location;

// The location of a reference outside of the verification scope, for example, a `&mut` parameter
// of the function being verified. References with these locations don't need to be written back
// when mutation ends.
function {:constructor} $Param(i: int): $Location;

// The location of an uninitialized mutation. Using this to make sure that the location
// will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
function {:constructor} $Uninitialized(): $Location;

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
type {:datatype} $Mutation _;
function {:constructor} $Mutation<T>(l: $Location, p: Vec int, v: T): $Mutation T;

// Representation of memory for a given type.
type {:datatype} $Memory _;
function {:constructor} $Memory<T>(domain: [int]bool, contents: [int]T): $Memory T;

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    v#$Mutation(ref)
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(l#$Mutation(m), p#$Mutation(m), v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) && p#$Mutation(parent) == p#$Mutation(child)
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) &&
    (var pp := p#$Mutation(parent);
    (var cp := p#$Mutation(child);
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) &&
    (var pp := p#$Mutation(parent);
    (var cp := p#$Mutation(child);
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    l#$Mutation(m1) == l#$Mutation(m2)
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    is#$Global(l#$Mutation(m))
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    l#$Mutation(m) == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    a#$Global(l#$Mutation(m))
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    domain#$Memory(m)[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    contents#$Memory(m)[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(domain#$Memory(m)[a := true], contents#$Memory(m)[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(domain#$Memory(m)[a := false], contents#$Memory(m))
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(domain#$Memory(m)[a := domain#$Memory(s)[a]],
            contents#$Memory(m)[a := contents#$Memory(s)[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, lb#$Range(r), ub#$Range(r))
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_stake_IndividualValidatorPerformance`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_stake_IndividualValidatorPerformance''(v1: Vec ($1_stake_IndividualValidatorPerformance), v2: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance), prefix: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance), suffix: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance): int;
axiom (forall v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance:: {$IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e)}
    (var i := $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e);
     if (!$ContainsVec'$1_stake_IndividualValidatorPerformance'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_stake_IndividualValidatorPerformance'(): Vec ($1_stake_IndividualValidatorPerformance) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_stake_IndividualValidatorPerformance'() returns (v: Vec ($1_stake_IndividualValidatorPerformance)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_stake_IndividualValidatorPerformance'(): Vec ($1_stake_IndividualValidatorPerformance) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), val: $1_stake_IndividualValidatorPerformance) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), val: $1_stake_IndividualValidatorPerformance): Vec ($1_stake_IndividualValidatorPerformance) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), other: Vec ($1_stake_IndividualValidatorPerformance)) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int) returns (dst: $1_stake_IndividualValidatorPerformance) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int): $1_stake_IndividualValidatorPerformance {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), index: int)
returns (dst: $Mutation ($1_stake_IndividualValidatorPerformance), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int): $1_stake_IndividualValidatorPerformance {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int, j: int) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int, j: int): Vec ($1_stake_IndividualValidatorPerformance) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var len: int;
    var v: Vec ($1_stake_IndividualValidatorPerformance);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance) returns (res: bool)  {
    res := $ContainsVec'$1_stake_IndividualValidatorPerformance'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_stake_ValidatorInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_stake_ValidatorInfo''(v1: Vec ($1_stake_ValidatorInfo), v2: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo), prefix: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo), suffix: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_stake_ValidatorInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo): int;
axiom (forall v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo:: {$IndexOfVec'$1_stake_ValidatorInfo'(v, e)}
    (var i := $IndexOfVec'$1_stake_ValidatorInfo'(v, e);
     if (!$ContainsVec'$1_stake_ValidatorInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_stake_ValidatorInfo'(): Vec ($1_stake_ValidatorInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_stake_ValidatorInfo'() returns (v: Vec ($1_stake_ValidatorInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_stake_ValidatorInfo'(): Vec ($1_stake_ValidatorInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), val: $1_stake_ValidatorInfo) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), val: $1_stake_ValidatorInfo): Vec ($1_stake_ValidatorInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo))) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var v: Vec ($1_stake_ValidatorInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), other: Vec ($1_stake_ValidatorInfo)) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo))) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int) returns (dst: $1_stake_ValidatorInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int): $1_stake_ValidatorInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), index: int)
returns (dst: $Mutation ($1_stake_ValidatorInfo), m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int): $1_stake_ValidatorInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int, j: int): Vec ($1_stake_ValidatorInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var len: int;
    var v: Vec ($1_stake_ValidatorInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo) returns (res: bool)  {
    res := $ContainsVec'$1_stake_ValidatorInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_stake_ValidatorInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `address`

function $EncodeKey'address'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'address'(k1), $EncodeKey'address'(k2)}
    $IsEqual'address'(k1, k2) <==> $EncodeKey'address'(k1) == $EncodeKey'address'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_delegation_pool_ObservedLockupCycle`

function $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k: $1_delegation_pool_ObservedLockupCycle): int;
axiom (
  forall k1, k2: $1_delegation_pool_ObservedLockupCycle :: {$EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k1), $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k2)}
    $IsEqual'$1_delegation_pool_ObservedLockupCycle'(k1, k2) <==> $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k1) == $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,$1_delegation_pool_ObservedLockupCycle)`

function $IsEqual'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''(t1: Table int ($1_delegation_pool_ObservedLockupCycle), t2: Table int ($1_delegation_pool_ObservedLockupCycle)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''(t: Table int ($1_delegation_pool_ObservedLockupCycle)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_delegation_pool_ObservedLockupCycle'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'address_$1_delegation_pool_ObservedLockupCycle'() returns (v: Table int ($1_delegation_pool_ObservedLockupCycle)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy'address_$1_delegation_pool_ObservedLockupCycle'(t: Table int ($1_delegation_pool_ObservedLockupCycle)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'address_$1_delegation_pool_ObservedLockupCycle'(t: (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_add'address_$1_delegation_pool_ObservedLockupCycle'(m: $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int, v: $1_delegation_pool_ObservedLockupCycle) returns (m': $Mutation(Table int ($1_delegation_pool_ObservedLockupCycle))) {
    var enc_k: int;
    var t: Table int ($1_delegation_pool_ObservedLockupCycle);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'address_$1_delegation_pool_ObservedLockupCycle'(m: $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int, v: $1_delegation_pool_ObservedLockupCycle) returns (m': $Mutation(Table int ($1_delegation_pool_ObservedLockupCycle))) {
    var enc_k: int;
    var t: Table int ($1_delegation_pool_ObservedLockupCycle);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'address_$1_delegation_pool_ObservedLockupCycle'(m: $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int)
returns (v: $1_delegation_pool_ObservedLockupCycle, m': $Mutation(Table int ($1_delegation_pool_ObservedLockupCycle))) {
    var enc_k: int;
    var t: Table int ($1_delegation_pool_ObservedLockupCycle);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'address_$1_delegation_pool_ObservedLockupCycle'(t: Table int ($1_delegation_pool_ObservedLockupCycle), k: int) returns (v: $1_delegation_pool_ObservedLockupCycle) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'address_$1_delegation_pool_ObservedLockupCycle'(m: $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int)
returns (dst: $Mutation ($1_delegation_pool_ObservedLockupCycle), m': $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle))) {
    var enc_k: int;
    var t: Table int ($1_delegation_pool_ObservedLockupCycle);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'address_$1_delegation_pool_ObservedLockupCycle'(m: $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int, default: $1_delegation_pool_ObservedLockupCycle)
returns (dst: $Mutation ($1_delegation_pool_ObservedLockupCycle), m': $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle))) {
    var enc_k: int;
    var t: Table int ($1_delegation_pool_ObservedLockupCycle);
    var t': Table int ($1_delegation_pool_ObservedLockupCycle);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(l#$Mutation(m'), ExtendVec(p#$Mutation(m'), enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'(t: (Table int ($1_delegation_pool_ObservedLockupCycle)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_set'address_$1_delegation_pool_ObservedLockupCycle'(t: Table int ($1_delegation_pool_ObservedLockupCycle), k: int, v: $1_delegation_pool_ObservedLockupCycle): Table int ($1_delegation_pool_ObservedLockupCycle) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'address_$1_delegation_pool_ObservedLockupCycle'(t: Table int ($1_delegation_pool_ObservedLockupCycle), k: int): Table int ($1_delegation_pool_ObservedLockupCycle) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_spec_get'address_$1_delegation_pool_ObservedLockupCycle'(t: Table int ($1_delegation_pool_ObservedLockupCycle), k: int): $1_delegation_pool_ObservedLockupCycle {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_delegation_pool_ObservedLockupCycle,$1_pool_u64_unbound_Pool)`

function $IsEqual'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''(t1: Table int ($1_pool_u64_unbound_Pool), t2: Table int ($1_pool_u64_unbound_Pool)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''(t: Table int ($1_pool_u64_unbound_Pool)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_pool_u64_unbound_Pool'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_new'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'() returns (v: Table int ($1_pool_u64_unbound_Pool)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_destroy'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: Table int ($1_pool_u64_unbound_Pool)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_contains'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k));
}
procedure {:inline 2} $1_table_add'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(m: $Mutation (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle, v: $1_pool_u64_unbound_Pool) returns (m': $Mutation(Table int ($1_pool_u64_unbound_Pool))) {
    var enc_k: int;
    var t: Table int ($1_pool_u64_unbound_Pool);
    enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_upsert'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(m: $Mutation (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle, v: $1_pool_u64_unbound_Pool) returns (m': $Mutation(Table int ($1_pool_u64_unbound_Pool))) {
    var enc_k: int;
    var t: Table int ($1_pool_u64_unbound_Pool);
    enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_remove'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(m: $Mutation (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle)
returns (v: $1_pool_u64_unbound_Pool, m': $Mutation(Table int ($1_pool_u64_unbound_Pool))) {
    var enc_k: int;
    var t: Table int ($1_pool_u64_unbound_Pool);
    enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_borrow'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: Table int ($1_pool_u64_unbound_Pool), k: $1_delegation_pool_ObservedLockupCycle) returns (v: $1_pool_u64_unbound_Pool) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k));
    }
}
procedure {:inline 2} $1_table_borrow_mut'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(m: $Mutation (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle)
returns (dst: $Mutation ($1_pool_u64_unbound_Pool), m': $Mutation (Table int ($1_pool_u64_unbound_Pool))) {
    var enc_k: int;
    var t: Table int ($1_pool_u64_unbound_Pool);
    enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_borrow_mut_with_default'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(m: $Mutation (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle, default: $1_pool_u64_unbound_Pool)
returns (dst: $Mutation ($1_pool_u64_unbound_Pool), m': $Mutation (Table int ($1_pool_u64_unbound_Pool))) {
    var enc_k: int;
    var t: Table int ($1_pool_u64_unbound_Pool);
    var t': Table int ($1_pool_u64_unbound_Pool);
    enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(l#$Mutation(m'), ExtendVec(p#$Mutation(m'), enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_spec_contains'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: (Table int ($1_pool_u64_unbound_Pool)), k: $1_delegation_pool_ObservedLockupCycle): bool {
    ContainsTable(t, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k))
}
function {:inline} $1_table_spec_set'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: Table int ($1_pool_u64_unbound_Pool), k: $1_delegation_pool_ObservedLockupCycle, v: $1_pool_u64_unbound_Pool): Table int ($1_pool_u64_unbound_Pool) {
    (var enc_k := $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_spec_remove'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: Table int ($1_pool_u64_unbound_Pool), k: $1_delegation_pool_ObservedLockupCycle): Table int ($1_pool_u64_unbound_Pool) {
    RemoveTable(t, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k))
}
function {:inline} $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'(t: Table int ($1_pool_u64_unbound_Pool), k: $1_delegation_pool_ObservedLockupCycle): $1_pool_u64_unbound_Pool {
    GetTable(t, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,u128)`

function $IsEqual'$1_table_with_length_TableWithLength'address_u128''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_with_length_TableWithLength'address_u128''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'u128'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_with_length_new'address_u128'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_with_length_destroy_empty'address_u128'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_with_length_length'address_u128'(t: (Table int (int))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_table_with_length_empty'address_u128'(t: (Table int (int))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_table_with_length_contains'address_u128'(t: (Table int (int)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_with_length_add'address_u128'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_upsert'address_u128'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_remove'address_u128'(m: $Mutation (Table int (int)), k: int)
returns (v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow'address_u128'(t: Table int (int), k: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut'address_u128'(m: $Mutation (Table int (int)), k: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut_with_default'address_u128'(m: $Mutation (Table int (int)), k: int, default: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    var t': Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(l#$Mutation(m'), ExtendVec(p#$Mutation(m'), enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_with_length_spec_len'address_u128'(t: (Table int (int))): int {
    LenTable(t)
}
function {:inline} $1_table_with_length_spec_contains'address_u128'(t: (Table int (int)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_with_length_spec_set'address_u128'(t: Table int (int), k: int, v: int): Table int (int) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_with_length_spec_remove'address_u128'(t: Table int (int), k: int): Table int (int) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_with_length_spec_get'address_u128'(t: Table int (int), k: int): int {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,bv128)`

function $IsEqual'$1_table_with_length_TableWithLength'address_bv128''(t1: Table int (bv128), t2: Table int (bv128)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_table_with_length_TableWithLength'address_bv128''(t: Table int (bv128)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'bv128'(GetTable(t, i)))
}
procedure {:inline 2} $1_table_with_length_new'address_bv128'() returns (v: Table int (bv128)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_table_with_length_destroy_empty'address_bv128'(t: Table int (bv128)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_table_with_length_length'address_bv128'(t: (Table int (bv128))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_table_with_length_empty'address_bv128'(t: (Table int (bv128))) returns (r: bool) {
    r := LenTable(t) == 0;
}
procedure {:inline 2} $1_table_with_length_contains'address_bv128'(t: (Table int (bv128)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_table_with_length_add'address_bv128'(m: $Mutation (Table int (bv128)), k: int, v: bv128) returns (m': $Mutation(Table int (bv128))) {
    var enc_k: int;
    var t: Table int (bv128);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_upsert'address_bv128'(m: $Mutation (Table int (bv128)), k: int, v: bv128) returns (m': $Mutation(Table int (bv128))) {
    var enc_k: int;
    var t: Table int (bv128);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, UpdateTable(t, enc_k, v));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_table_with_length_remove'address_bv128'(m: $Mutation (Table int (bv128)), k: int)
returns (v: bv128, m': $Mutation(Table int (bv128))) {
    var enc_k: int;
    var t: Table int (bv128);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow'address_bv128'(t: Table int (bv128), k: int) returns (v: bv128) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut'address_bv128'(m: $Mutation (Table int (bv128)), k: int)
returns (dst: $Mutation (bv128), m': $Mutation (Table int (bv128))) {
    var enc_k: int;
    var t: Table int (bv128);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
procedure {:inline 2} $1_table_with_length_borrow_mut_with_default'address_bv128'(m: $Mutation (Table int (bv128)), k: int, default: bv128)
returns (dst: $Mutation (bv128), m': $Mutation (Table int (bv128))) {
    var enc_k: int;
    var t: Table int (bv128);
    var t': Table int (bv128);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        m' := $UpdateMutation(m, AddTable(t, enc_k, default));
        t' := $Dereference(m');
        dst := $Mutation(l#$Mutation(m'), ExtendVec(p#$Mutation(m'), enc_k), GetTable(t', enc_k));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_table_with_length_spec_len'address_bv128'(t: (Table int (bv128))): int {
    LenTable(t)
}
function {:inline} $1_table_with_length_spec_contains'address_bv128'(t: (Table int (bv128)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_with_length_spec_set'address_bv128'(t: Table int (bv128), k: int, v: bv128): Table int (bv128) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_table_with_length_spec_remove'address_bv128'(t: Table int (bv128), k: int): Table int (bv128) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_table_with_length_spec_get'address_bv128'(t: Table int (bv128), k: int): bv128 {
    GetTable(t, $EncodeKey'address'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

type {:datatype} $signer;
function {:constructor} $signer($addr: int): $signer;
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'($addr#$signer(s))
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := $addr#$signer(signer);
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    $addr#$signer(signer)
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize


// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

type {:datatype} $TypeParamInfo;

function {:constructor} $TypeParamBool(): $TypeParamInfo;
function {:constructor} $TypeParamU8(): $TypeParamInfo;
function {:constructor} $TypeParamU16(): $TypeParamInfo;
function {:constructor} $TypeParamU32(): $TypeParamInfo;
function {:constructor} $TypeParamU64(): $TypeParamInfo;
function {:constructor} $TypeParamU128(): $TypeParamInfo;
function {:constructor} $TypeParamU256(): $TypeParamInfo;
function {:constructor} $TypeParamAddress(): $TypeParamInfo;
function {:constructor} $TypeParamSigner(): $TypeParamInfo;
function {:constructor} $TypeParamVector(e: $TypeParamInfo): $TypeParamInfo;
function {:constructor} $TypeParamStruct(a: int, m: Vec int, s: Vec int): $TypeParamInfo;



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamBool(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> is#$TypeParamBool(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU8(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> is#$TypeParamU8(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU16(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> is#$TypeParamU16(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU32(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> is#$TypeParamU32(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU64(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> is#$TypeParamU64(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU128(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> is#$TypeParamU128(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU256(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> is#$TypeParamU256(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamAddress(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> is#$TypeParamAddress(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamSigner(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> is#$TypeParamSigner(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamVector(t) ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(e#$TypeParamVector(t))), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> is#$TypeParamVector(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamStruct(t) ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(a#$TypeParamStruct(t))), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), m#$TypeParamStruct(t)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), s#$TypeParamStruct(t))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> is#$TypeParamVector(t));


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_stake_IndividualValidatorPerformance''($1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_stake_ValidatorInfo''($1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <table::Table<address, delegation_pool::ObservedLockupCycle>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''($1_from_bcs_deserialize'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''(b1), $1_from_bcs_deserialize'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <table::Table<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''($1_from_bcs_deserialize'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''(b1), $1_from_bcs_deserialize'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<delegation_pool::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<delegation_pool::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<delegation_pool::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<delegation_pool::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<delegation_pool::DistributeCommissionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_OwnerCapability'($1_from_bcs_deserialize'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserialize'$1_stake_OwnerCapability'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ReactivateStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ReactivateStakeEvent'($1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_StakePool'($1_from_bcs_deserialize'$1_stake_StakePool'(b1), $1_from_bcs_deserialize'$1_stake_StakePool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_UnlockStakeEvent'($1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorConfig'($1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorInfo'($1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorPerformance'($1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorSet'($1_from_bcs_deserialize'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorSet'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_WithdrawStakeEvent'($1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <table_with_length::TableWithLength<address, u128>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_table_with_length_TableWithLength'address_u128''($1_from_bcs_deserialize'$1_table_with_length_TableWithLength'address_u128''(b1), $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'address_u128''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <pool_u64_unbound::Pool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_pool_u64_unbound_Pool'($1_from_bcs_deserialize'$1_pool_u64_unbound_Pool'(b1), $1_from_bcs_deserialize'$1_pool_u64_unbound_Pool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_WithdrawStakeEvent'($1_from_bcs_deserialize'$1_delegation_pool_WithdrawStakeEvent'(b1), $1_from_bcs_deserialize'$1_delegation_pool_WithdrawStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::DelegationPool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_DelegationPool'($1_from_bcs_deserialize'$1_delegation_pool_DelegationPool'(b1), $1_from_bcs_deserialize'$1_delegation_pool_DelegationPool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::ObservedLockupCycle>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_ObservedLockupCycle'($1_from_bcs_deserialize'$1_delegation_pool_ObservedLockupCycle'(b1), $1_from_bcs_deserialize'$1_delegation_pool_ObservedLockupCycle'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::Ghost$ghost_coin_3>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_Ghost$ghost_coin_3'($1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_3'(b1), $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_3'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::Ghost$ghost_coin_1>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_Ghost$ghost_coin_1'($1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_1'(b1), $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_1'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::Ghost$ghost_coin_4>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_Ghost$ghost_coin_4'($1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_4'(b1), $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_4'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::Ghost$ghost_coin_2>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_Ghost$ghost_coin_2'($1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_2'(b1), $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_2'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::Ghost$ghost_bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_Ghost$ghost_bool'($1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_bool'(b1), $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_bool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <delegation_pool::Ghost$ghost_olc>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_delegation_pool_Ghost$ghost_olc'($1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_olc'(b1), $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_olc'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:8:9+113
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_keccak256(b1), $1_aptos_hash_spec_keccak256(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:13:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha2_512_internal(b1), $1_aptos_hash_spec_sha2_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:18:9+129
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_sha3_512_internal(b1), $1_aptos_hash_spec_sha3_512_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:23:9+131
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_ripemd160_internal(b1), $1_aptos_hash_spec_ripemd160_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:28:9+135
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_aptos_hash_spec_blake2b_256_internal(b1), $1_aptos_hash_spec_blake2b_256_internal(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:131:5+86
function {:inline} $1_vector_$is_empty'u64'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(v), 0)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:131:5+86
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(v), 0)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:131:5+86
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(v), 0)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'u64'(t: $1_option_Option'u64'): int {
    $1_vector_$borrow'u64'($vec#$1_option_Option'u64'(t), 0)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t), 0)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t), 0)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'u64'(t: $1_option_Option'u64'): bool {
    $1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// struct option::Option<u64> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'u64';
function {:constructor} $1_option_Option'u64'($vec: Vec (int)): $1_option_Option'u64';
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''($vec#$1_option_Option'u64'(s))
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''($vec#$1_option_Option'u64'(s1), $vec#$1_option_Option'u64'(s2))}

// struct option::Option<aggregator::Aggregator> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_aggregator_Aggregator';
function {:constructor} $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator';
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''($vec#$1_option_Option'$1_aggregator_Aggregator'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''($vec#$1_option_Option'$1_aggregator_Aggregator'(s1), $vec#$1_option_Option'$1_aggregator_Aggregator'(s2))}

// struct option::Option<optional_aggregator::Integer> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_optional_aggregator_Integer';
function {:constructor} $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer';
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''($vec#$1_option_Option'$1_optional_aggregator_Integer'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''($vec#$1_option_Option'$1_optional_aggregator_Integer'(s1), $vec#$1_option_Option'$1_optional_aggregator_Integer'(s2))}

// struct option::Option<optional_aggregator::OptionalAggregator> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_optional_aggregator_OptionalAggregator';
function {:constructor} $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s1), $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s2))}

// struct string::String at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:13:5+70
type {:datatype} $1_string_String;
function {:constructor} $1_string_String($bytes: Vec (int)): $1_string_String;
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''($bytes#$1_string_String(s))
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''($bytes#$1_string_String(s1), $bytes#$1_string_String(s2))}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+1
    assume {:print "$at(14,389,390)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:10+17
    assume {:print "$at(14,443,460)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(14,443,460)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,465,466)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,465,466)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
L2:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,465,466)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::invalid_argument [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(10,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(10,3126,3156)"} true;

    // assume WellFormed($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(10,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(10,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(10,3273,3300)"} true;

    // assume WellFormed($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(10,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(10,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(10,3497,3520)"} true;

    // assume WellFormed($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(10,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(10,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(10,3425,3456)"} true;

    // assume WellFormed($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(10,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// struct guid::GUID at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:7:5+50
type {:datatype} $1_guid_GUID;
function {:constructor} $1_guid_GUID($id: $1_guid_ID): $1_guid_GUID;
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'($id#$1_guid_GUID(s))
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:12:5+209
type {:datatype} $1_guid_ID;
function {:constructor} $1_guid_ID($creation_num: int, $addr: int): $1_guid_ID;
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, $addr#$1_guid_ID(s))
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID($creation_num#$1_guid_ID(s), x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'($creation_num#$1_guid_ID(s))
      && $IsValid'address'($addr#$1_guid_ID(s))
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(bytes: Vec (int)): Vec ($1_stake_IndividualValidatorPerformance);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(bytes);
$IsValid'vec'$1_stake_IndividualValidatorPerformance''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(bytes: Vec (int)): Vec ($1_stake_ValidatorInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(bytes);
$IsValid'vec'$1_stake_ValidatorInfo''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''(bytes: Vec (int)): Table int ($1_delegation_pool_ObservedLockupCycle);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''(bytes);
$IsValid'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''(bytes: Vec (int)): Table int ($1_pool_u64_unbound_Pool);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''(bytes);
$IsValid'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_AddStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_SetOperatorEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_UnlockStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_delegation_pool_AddStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_OwnerCapability'(bytes: Vec (int)): $1_stake_OwnerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_OwnerCapability'(bytes);
$IsValid'$1_stake_OwnerCapability'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(bytes: Vec (int)): $1_stake_ReactivateStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ReactivateStakeEvent'(bytes);
$IsValid'$1_stake_ReactivateStakeEvent'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_StakePool'(bytes: Vec (int)): $1_stake_StakePool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_StakePool'(bytes);
$IsValid'$1_stake_StakePool'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(bytes: Vec (int)): $1_stake_UnlockStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(bytes);
$IsValid'$1_stake_UnlockStakeEvent'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(bytes: Vec (int)): $1_stake_ValidatorConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(bytes);
$IsValid'$1_stake_ValidatorConfig'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(bytes: Vec (int)): $1_stake_ValidatorInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(bytes);
$IsValid'$1_stake_ValidatorInfo'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(bytes: Vec (int)): $1_stake_ValidatorPerformance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(bytes);
$IsValid'$1_stake_ValidatorPerformance'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorSet'(bytes: Vec (int)): $1_stake_ValidatorSet;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorSet'(bytes);
$IsValid'$1_stake_ValidatorSet'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(bytes: Vec (int)): $1_stake_WithdrawStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(bytes);
$IsValid'$1_stake_WithdrawStakeEvent'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'address_u128''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_table_with_length_TableWithLength'address_u128''(bytes);
$IsValid'$1_table_with_length_TableWithLength'address_u128''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_pool_u64_unbound_Pool'(bytes: Vec (int)): $1_pool_u64_unbound_Pool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_pool_u64_unbound_Pool'(bytes);
$IsValid'$1_pool_u64_unbound_Pool'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_WithdrawStakeEvent'(bytes: Vec (int)): $1_delegation_pool_WithdrawStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_WithdrawStakeEvent'(bytes);
$IsValid'$1_delegation_pool_WithdrawStakeEvent'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_DelegationPool'(bytes: Vec (int)): $1_delegation_pool_DelegationPool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_DelegationPool'(bytes);
$IsValid'$1_delegation_pool_DelegationPool'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_ObservedLockupCycle'(bytes: Vec (int)): $1_delegation_pool_ObservedLockupCycle;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_ObservedLockupCycle'(bytes);
$IsValid'$1_delegation_pool_ObservedLockupCycle'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_3'(bytes: Vec (int)): $1_delegation_pool_Ghost$ghost_coin_3;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_3'(bytes);
$IsValid'$1_delegation_pool_Ghost$ghost_coin_3'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_1'(bytes: Vec (int)): $1_delegation_pool_Ghost$ghost_coin_1;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_1'(bytes);
$IsValid'$1_delegation_pool_Ghost$ghost_coin_1'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_4'(bytes: Vec (int)): $1_delegation_pool_Ghost$ghost_coin_4;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_4'(bytes);
$IsValid'$1_delegation_pool_Ghost$ghost_coin_4'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_2'(bytes: Vec (int)): $1_delegation_pool_Ghost$ghost_coin_2;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_coin_2'(bytes);
$IsValid'$1_delegation_pool_Ghost$ghost_coin_2'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_bool'(bytes: Vec (int)): $1_delegation_pool_Ghost$ghost_bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_bool'(bytes);
$IsValid'$1_delegation_pool_Ghost$ghost_bool'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_olc'(bytes: Vec (int)): $1_delegation_pool_Ghost$ghost_olc;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_delegation_pool_Ghost$ghost_olc'(bytes);
$IsValid'$1_delegation_pool_Ghost$ghost_olc'($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// struct event::EventHandle<coin::DepositEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_coin_DepositEvent';
function {:constructor} $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent';
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, $guid#$1_event_EventHandle'$1_coin_DepositEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter#$1_event_EventHandle'$1_coin_DepositEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_coin_DepositEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_coin_DepositEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::WithdrawEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_coin_WithdrawEvent';
function {:constructor} $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent';
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, $guid#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter#$1_event_EventHandle'$1_coin_WithdrawEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::AddStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_AddStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_AddStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_AddStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_AddStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_AddStakeEvent', x: int): $1_event_EventHandle'$1_stake_AddStakeEvent' {
    $1_event_EventHandle'$1_stake_AddStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_AddStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_AddStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_AddStakeEvent' {
    $1_event_EventHandle'$1_stake_AddStakeEvent'($counter#$1_event_EventHandle'$1_stake_AddStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''(s: $1_event_EventHandle'$1_stake_AddStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''(s1: $1_event_EventHandle'$1_stake_AddStakeEvent', s2: $1_event_EventHandle'$1_stake_AddStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::DistributeRewardsEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
function {:constructor} $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''_counter(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', x: int): $1_event_EventHandle'$1_stake_DistributeRewardsEvent' {
    $1_event_EventHandle'$1_stake_DistributeRewardsEvent'(x, $guid#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''_guid(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_DistributeRewardsEvent' {
    $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($counter#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(s1: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', s2: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::IncreaseLockupEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
function {:constructor} $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''_counter(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', x: int): $1_event_EventHandle'$1_stake_IncreaseLockupEvent' {
    $1_event_EventHandle'$1_stake_IncreaseLockupEvent'(x, $guid#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''_guid(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_IncreaseLockupEvent' {
    $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($counter#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(s1: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', s2: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::JoinValidatorSetEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
function {:constructor} $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''_counter(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', x: int): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(x, $guid#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''_guid(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($counter#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(s1: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', s2: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::LeaveValidatorSetEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
function {:constructor} $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''_counter(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', x: int): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(x, $guid#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''_guid(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($counter#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(s1: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', s2: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::ReactivateStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', x: int): $1_event_EventHandle'$1_stake_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_stake_ReactivateStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($counter#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(s1: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', s2: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::RegisterValidatorCandidateEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
function {:constructor} $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''_counter(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', x: int): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent' {
    $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(x, $guid#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''_guid(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent' {
    $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($counter#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(s1: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', s2: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::RotateConsensusKeyEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
function {:constructor} $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''_counter(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', x: int): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent' {
    $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(x, $guid#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''_guid(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent' {
    $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($counter#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(s1: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', s2: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::SetOperatorEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_SetOperatorEvent';
function {:constructor} $1_event_EventHandle'$1_stake_SetOperatorEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_SetOperatorEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_SetOperatorEvent''_counter(s: $1_event_EventHandle'$1_stake_SetOperatorEvent', x: int): $1_event_EventHandle'$1_stake_SetOperatorEvent' {
    $1_event_EventHandle'$1_stake_SetOperatorEvent'(x, $guid#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_SetOperatorEvent''_guid(s: $1_event_EventHandle'$1_stake_SetOperatorEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_SetOperatorEvent' {
    $1_event_EventHandle'$1_stake_SetOperatorEvent'($counter#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''(s: $1_event_EventHandle'$1_stake_SetOperatorEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''(s1: $1_event_EventHandle'$1_stake_SetOperatorEvent', s2: $1_event_EventHandle'$1_stake_SetOperatorEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::UnlockStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_UnlockStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_UnlockStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_UnlockStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_UnlockStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent', x: int): $1_event_EventHandle'$1_stake_UnlockStakeEvent' {
    $1_event_EventHandle'$1_stake_UnlockStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_UnlockStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_UnlockStakeEvent' {
    $1_event_EventHandle'$1_stake_UnlockStakeEvent'($counter#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(s1: $1_event_EventHandle'$1_stake_UnlockStakeEvent', s2: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
function {:constructor} $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''_counter(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', x: int): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent' {
    $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(x, $guid#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''_guid(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent' {
    $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($counter#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(s1: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', s2: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::WithdrawStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', x: int): $1_event_EventHandle'$1_stake_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_stake_WithdrawStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($counter#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(s1: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', s2: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<reconfiguration::NewEpochEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
function {:constructor} $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, $guid#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<delegation_pool::AddStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_delegation_pool_AddStakeEvent';
function {:constructor} $1_event_EventHandle'$1_delegation_pool_AddStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_AddStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''_counter(s: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent', x: int): $1_event_EventHandle'$1_delegation_pool_AddStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_AddStakeEvent'(x, $guid#$1_event_EventHandle'$1_delegation_pool_AddStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''_guid(s: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_AddStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_AddStakeEvent'($counter#$1_event_EventHandle'$1_delegation_pool_AddStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''(s: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_delegation_pool_AddStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_delegation_pool_AddStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''(s1: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent', s2: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<delegation_pool::ReactivateStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent';
function {:constructor} $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''_counter(s: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent', x: int): $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'(x, $guid#$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''_guid(s: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'($counter#$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''(s: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''(s1: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent', s2: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<delegation_pool::UnlockStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent';
function {:constructor} $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''_counter(s: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent', x: int): $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'(x, $guid#$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''_guid(s: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'($counter#$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''(s: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''(s1: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent', s2: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<delegation_pool::WithdrawStakeEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent';
function {:constructor} $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''_counter(s: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent', x: int): $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'(x, $guid#$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''_guid(s: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'($counter#$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''(s: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''(s1: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent', s2: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<delegation_pool::DistributeCommissionEvent> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent';
function {:constructor} $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent';
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''_counter(s: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent', x: int): $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent' {
    $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'(x, $guid#$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''_guid(s: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent' {
    $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'($counter#$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''(s: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''(s1: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent', s2: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'): bool {
    s1 == s2
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:696:5+115
function {:inline} $1_account_$get_signer_capability_address(capability: $1_account_SignerCapability): int {
    $account#$1_account_SignerCapability(capability)
}

// struct account::SignerCapability at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:49:5+60
type {:datatype} $1_account_SignerCapability;
function {:constructor} $1_account_SignerCapability($account: int): $1_account_SignerCapability;
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'($account#$1_account_SignerCapability(s))
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::create_signer_with_capability [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:691:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+30
    assume {:print "$at(70,21510,21540)"} true;
    assume ($t1 == $account#$1_account_SignerCapability($t0));

    // trace_local[capability]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:691:5+1
    assume {:print "$at(69,39198,39199)"} true;
    assume {:print "$track_local(18,8,0):", $t0} $t0 == $t0;

    // $t2 := get_field<account::SignerCapability>.account($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:692:20+19
    assume {:print "$at(69,39299,39318)"} true;
    $t2 := $account#$1_account_SignerCapability($t0);

    // $t3 := opaque begin: create_signer::create_signer($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:693:9+20
    assume {:print "$at(69,39328,39348)"} true;

    // assume WellFormed($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:693:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($addr#$signer($t3));

    // assume Eq<address>(signer::$address_of($t3), $t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:693:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // $t3 := opaque end: create_signer::create_signer($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:693:9+20

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:693:9+20
    assume {:print "$track_return(18,8,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:694:5+1
    assume {:print "$at(69,39353,39354)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:694:5+1
    assume {:print "$at(69,39353,39354)"} true;
    $ret0 := $t3;
    return;

}

// fun account::get_signer_capability_address [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:696:5+115
procedure {:inline 1} $1_account_get_signer_capability_address(_$t0: $1_account_SignerCapability) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[capability]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:696:5+1
    assume {:print "$at(69,39360,39361)"} true;
    assume {:print "$track_local(18,13,0):", $t0} $t0 == $t0;

    // $t1 := get_field<account::SignerCapability>.account($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:697:9+18
    assume {:print "$at(69,39451,39469)"} true;
    $t1 := $account#$1_account_SignerCapability($t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:697:9+18
    assume {:print "$track_return(18,13,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:698:5+1
    assume {:print "$at(69,39474,39475)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:698:5+1
    assume {:print "$at(69,39474,39475)"} true;
    $ret0 := $t1;
    return;

}

// struct optional_aggregator::Integer at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:19:5+74
type {:datatype} $1_optional_aggregator_Integer;
function {:constructor} $1_optional_aggregator_Integer($value: int, $limit: int): $1_optional_aggregator_Integer;
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, $limit#$1_optional_aggregator_Integer(s))
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value#$1_optional_aggregator_Integer(s), x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'($value#$1_optional_aggregator_Integer(s))
      && $IsValid'u128'($limit#$1_optional_aggregator_Integer(s))
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:63:5+175
type {:datatype} $1_optional_aggregator_OptionalAggregator;
function {:constructor} $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator;
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, $integer#$1_optional_aggregator_OptionalAggregator(s))
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator#$1_optional_aggregator_OptionalAggregator(s), x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''($aggregator#$1_optional_aggregator_OptionalAggregator(s))
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''($integer#$1_optional_aggregator_OptionalAggregator(s))
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($aggregator#$1_optional_aggregator_OptionalAggregator(s1), $aggregator#$1_optional_aggregator_OptionalAggregator(s2))
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($integer#$1_optional_aggregator_OptionalAggregator(s1), $integer#$1_optional_aggregator_OptionalAggregator(s2))}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:527:5+81
function {:inline} $1_coin_$value'$1_aptos_coin_AptosCoin'(coin: $1_coin_Coin'$1_aptos_coin_AptosCoin'): int {
    $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'(coin)
}

// struct coin::Coin<aptos_coin::AptosCoin> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:74:5+112
type {:datatype} $1_coin_Coin'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int): $1_coin_Coin'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::CoinInfo<aptos_coin::AptosCoin> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:109:5+564
type {:datatype} $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x, $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x, $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_string_String'($symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'u8'($decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'$1_string_String'($symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'u8'($decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<aptos_coin::AptosCoin> at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:92:5+206
type {:datatype} $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x, $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x, $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'bool'($frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::DepositEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:123:5+64
type {:datatype} $1_coin_DepositEvent;
function {:constructor} $1_coin_DepositEvent($amount: int): $1_coin_DepositEvent;
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'($amount#$1_coin_DepositEvent(s))
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:128:5+65
type {:datatype} $1_coin_WithdrawEvent;
function {:constructor} $1_coin_WithdrawEvent($amount: int): $1_coin_WithdrawEvent;
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'($amount#$1_coin_WithdrawEvent(s))
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// fun coin::extract<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:349:5+252
procedure {:inline 1} $1_coin_extract'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation (int);
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:349:5+1
    assume {:print "$at(91,13278,13279)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:349:5+1
    assume {:print "$track_local(23,13,1):", $t1} $t1 == $t1;

    // $t2 := get_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:17+10
    assume {:print "$at(91,13381,13391)"} true;
    $t2 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t3 := >=($t2, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:28+2
    call $t3 := $Ge($t2, $t1);

    // if ($t3) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    assume {:print "$at(91,13373,13450)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
L0:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    assume {:print "$at(91,13373,13450)"} true;

    // $t4 := 6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:63+21
    $t4 := 6;
    assume $IsValid'u64'($t4);

    // $t5 := error::invalid_argument($t4) on_abort goto L4 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:39+46
    call $t5 := $1_error_invalid_argument($t4);
    if ($abort_flag) {
        assume {:print "$at(91,13403,13449)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,13):", $t6} $t6 == $t6;
        goto L4;
    }

    // trace_abort($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    assume {:print "$at(91,13373,13450)"} true;
    assume {:print "$track_abort(23,13):", $t5} $t5 == $t5;

    // $t6 := move($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    $t6 := $t5;

    // goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:350:9+77
    goto L4;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:22+4
    assume {:print "$at(91,13473,13477)"} true;
L2:

    // $t7 := get_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:22+10
    assume {:print "$at(91,13473,13483)"} true;
    $t7 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t8 := -($t7, $t1) on_abort goto L4 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:33+1
    call $t8 := $Sub($t7, $t1);
    if ($abort_flag) {
        assume {:print "$at(91,13484,13485)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,13):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t9 := borrow_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+10
    $t9 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t9, $t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+32
    $t9 := $UpdateMutation($t9, $t8);

    // write_back[Reference($t0).value (u64)]($t9) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t9)));

    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+32
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t10 := pack coin::Coin<#0>($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:9+22
    assume {:print "$at(91,13502,13524)"} true;
    $t10 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_return[0]($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:9+22
    assume {:print "$track_return(23,13,0):", $t10} $t10 == $t10;

    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:9+22
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
    assume {:print "$at(91,13529,13530)"} true;
L3:

    // return $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
    assume {:print "$at(91,13529,13530)"} true;
    $ret0 := $t10;
    $ret1 := $t0;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
L4:

    // abort($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:353:5+1
    assume {:print "$at(91,13529,13530)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::value<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:527:5+81
procedure {:inline 1} $1_coin_value'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:527:5+1
    assume {:print "$at(91,20291,20292)"} true;
    assume {:print "$track_local(23,34,0):", $t0} $t0 == $t0;

    // $t1 := get_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:528:9+10
    assume {:print "$at(91,20356,20366)"} true;
    $t1 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:528:9+10
    assume {:print "$track_return(23,34,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:529:5+1
    assume {:print "$at(91,20371,20372)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:529:5+1
    assume {:print "$at(91,20371,20372)"} true;
    $ret0 := $t1;
    return;

}

// fun coin::balance<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:228:5+274
procedure {:inline 1} $1_coin_balance'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t6: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:228:5+1
    assume {:print "$at(91,8371,8372)"} true;
    assume {:print "$track_local(23,1,0):", $t0} $t0 == $t0;

    // $t1 := coin::is_account_registered<#0>($t0) on_abort goto L4 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:230:13+38
    assume {:print "$at(91,8471,8509)"} true;
    call $t1 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(91,8471,8509)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(23,1):", $t2} $t2 == $t2;
        goto L4;
    }

    // if ($t1) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:229:9+127
    assume {:print "$at(91,8450,8577)"} true;
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:229:9+127
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:229:9+127
    assume {:print "$at(91,8450,8577)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:231:30+25
    assume {:print "$at(91,8540,8565)"} true;
L0:

    // $t3 := 5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:231:30+25
    assume {:print "$at(91,8540,8565)"} true;
    $t3 := 5;
    assume $IsValid'u64'($t3);

    // $t4 := error::not_found($t3) on_abort goto L4 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:231:13+43
    call $t4 := $1_error_not_found($t3);
    if ($abort_flag) {
        assume {:print "$at(91,8523,8566)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(23,1):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:229:9+127
    assume {:print "$at(91,8450,8577)"} true;
    assume {:print "$track_abort(23,1):", $t4} $t4 == $t4;

    // $t2 := move($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:229:9+127
    $t2 := $t4;

    // goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:229:9+127
    goto L4;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:233:44+5
    assume {:print "$at(91,8622,8627)"} true;
L2:

    // $t5 := get_global<coin::CoinStore<#0>>($t0) on_abort goto L4 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:233:9+13
    assume {:print "$at(91,8587,8600)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(91,8587,8600)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(23,1):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t6 := get_field<coin::CoinStore<#0>>.coin($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:233:9+46
    $t6 := $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t5);

    // $t7 := get_field<coin::Coin<#0>>.value($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:233:9+52
    $t7 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t6);

    // trace_return[0]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:233:9+52
    assume {:print "$track_return(23,1,0):", $t7} $t7 == $t7;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:234:5+1
    assume {:print "$at(91,8644,8645)"} true;
L3:

    // return $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:234:5+1
    assume {:print "$at(91,8644,8645)"} true;
    $ret0 := $t7;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:234:5+1
L4:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:234:5+1
    assume {:print "$at(91,8644,8645)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun coin::deposit<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:320:5+621
procedure {:inline 1} $1_coin_deposit'$1_aptos_coin_AptosCoin'(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t8: bool;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t13: int;
    var $t14: $1_coin_DepositEvent;
    var $t15: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:320:5+1
    assume {:print "$at(91,12110,12111)"} true;
    assume {:print "$track_local(23,7,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:320:5+1
    assume {:print "$track_local(23,7,1):", $t1} $t1 == $t1;

    // $t3 := coin::is_account_registered<#0>($t0) on_abort goto L7 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:322:13+45
    assume {:print "$at(91,12234,12279)"} true;
    call $t3 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(91,12234,12279)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // if ($t3) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    assume {:print "$at(91,12213,12347)"} true;
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    assume {:print "$at(91,12213,12347)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:323:30+25
    assume {:print "$at(91,12310,12335)"} true;
L0:

    // $t5 := 5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:323:30+25
    assume {:print "$at(91,12310,12335)"} true;
    $t5 := 5;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L7 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:323:13+43
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(91,12293,12336)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    assume {:print "$at(91,12213,12347)"} true;
    assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;

    // $t4 := move($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    $t4 := $t6;

    // goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:321:9+134
    goto L7;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:326:65+12
    assume {:print "$at(91,12414,12426)"} true;
L2:

    // $t7 := borrow_global<coin::CoinStore<#0>>($t0) on_abort goto L7 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:326:26+17
    assume {:print "$at(91,12375,12392)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(91,12375,12392)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_local[coin_store]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:326:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t7);
    assume {:print "$track_local(23,7,2):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t8 := get_field<coin::CoinStore<#0>>.frozen($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:328:14+17
    assume {:print "$at(91,12459,12476)"} true;
    $t8 := $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t7));

    // $t9 := !($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:328:13+1
    call $t9 := $Not($t8);

    // if ($t9) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(91,12437,12534)"} true;
    if ($t9) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
L4:

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(91,12437,12534)"} true;
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
L3:

    // destroy($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(91,12437,12534)"} true;

    // $t10 := 10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:329:38+7
    assume {:print "$at(91,12515,12522)"} true;
    $t10 := 10;
    assume $IsValid'u64'($t10);

    // $t11 := error::permission_denied($t10) on_abort goto L7 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:329:13+33
    call $t11 := $1_error_permission_denied($t10);
    if ($abort_flag) {
        assume {:print "$at(91,12490,12523)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // trace_abort($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    assume {:print "$at(91,12437,12534)"} true;
    assume {:print "$track_abort(23,7):", $t11} $t11 == $t11;

    // $t4 := move($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    $t4 := $t11;

    // goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:327:9+97
    goto L7;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:333:18+10
    assume {:print "$at(91,12595,12605)"} true;
L5:

    // $t12 := borrow_field<coin::CoinStore<#0>>.deposit_events($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:333:13+30
    assume {:print "$at(91,12590,12620)"} true;
    $t12 := $ChildMutation($t7, 2, $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t7)));

    // $t13 := get_field<coin::Coin<#0>>.value($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:36+10
    assume {:print "$at(91,12657,12667)"} true;
    $t13 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // $t14 := pack coin::DepositEvent($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:13+35
    $t14 := $1_coin_DepositEvent($t13);

    // opaque begin: event::emit_event<coin::DepositEvent>($t12, $t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:332:9+135
    assume {:print "$at(91,12545,12680)"} true;

    // opaque end: event::emit_event<coin::DepositEvent>($t12, $t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:332:9+135

    // write_back[Reference($t7).deposit_events (event::EventHandle<coin::DepositEvent>)]($t12) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:332:9+135
    $t7 := $UpdateMutation($t7, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events($Dereference($t7), $Dereference($t12)));

    // $t15 := borrow_field<coin::CoinStore<#0>>.coin($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:15+20
    assume {:print "$at(91,12697,12717)"} true;
    $t15 := $ChildMutation($t7, 0, $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t7)));

    // coin::merge<#0>($t15, $t1) on_abort goto L7 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:9+33
    call $t15 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(91,12691,12724)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,7):", $t4} $t4 == $t4;
        goto L7;
    }

    // write_back[Reference($t7).coin (coin::Coin<#0>)]($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:9+33
    $t7 := $UpdateMutation($t7, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t7), $Dereference($t15)));

    // write_back[coin::CoinStore<#0>@]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:9+33
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
    assume {:print "$at(91,12730,12731)"} true;
L6:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
    assume {:print "$at(91,12730,12731)"} true;
    return;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
L7:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:338:5+1
    assume {:print "$at(91,12730,12731)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun coin::extract_all<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:356:5+181
procedure {:inline 1} $1_coin_extract_all'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin')) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation (int);
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:356:5+1
    assume {:print "$at(91,13645,13646)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t2 := get_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:357:27+10
    assume {:print "$at(91,13749,13759)"} true;
    $t2 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // trace_local[total_value]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:357:13+11
    assume {:print "$track_local(23,14,1):", $t2} $t2 == $t2;

    // $t3 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:22+1
    assume {:print "$at(91,13782,13783)"} true;
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := borrow_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+10
    $t4 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t4, $t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+14
    $t4 := $UpdateMutation($t4, $t3);

    // write_back[Reference($t0).value (u64)]($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+14
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t4)));

    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:358:9+14
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t5 := pack coin::Coin<#0>($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:9+27
    assume {:print "$at(91,13793,13820)"} true;
    $t5 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t2);

    // trace_return[0]($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:9+27
    assume {:print "$track_return(23,14,0):", $t5} $t5 == $t5;

    // trace_local[coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:9+27
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:360:5+1
    assume {:print "$at(91,13825,13826)"} true;
L1:

    // return $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:360:5+1
    assume {:print "$at(91,13825,13826)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

}

// fun coin::is_account_registered<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:5+129
procedure {:inline 1} $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:5+1
    assume {:print "$at(91,8946,8947)"} true;
    assume {:print "$track_local(23,21,0):", $t0} $t0 == $t0;

    // $t1 := exists<coin::CoinStore<#0>>($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:9+6
    assume {:print "$at(91,9028,9034)"} true;
    $t1 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:9+41
    assume {:print "$track_return(23,21,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:246:5+1
    assume {:print "$at(91,9074,9075)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:246:5+1
    assume {:print "$at(91,9074,9075)"} true;
    $ret0 := $t1;
    return;

}

// fun coin::merge<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:471:5+277
procedure {:inline 1} $1_coin_merge'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[dst_coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:471:5+1
    assume {:print "$at(91,18299,18300)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[source_coin]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:471:5+1
    assume {:print "$track_local(23,24,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value($t0), select coin::Coin.value($t1)), 18446744073709551615) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:473:13+53
    assume {:print "$at(91,18415,18468)"} true;
    assume (($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)) + $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1)) <= 18446744073709551615);

    // $t3 := unpack coin::Coin<#0>($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:475:13+14
    assume {:print "$at(91,18492,18506)"} true;
    $t3 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_local[value]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:475:20+5
    assume {:print "$track_local(23,24,2):", $t3} $t3 == $t3;

    // $t4 := get_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:26+14
    assume {:print "$at(91,18547,18561)"} true;
    $t4 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t5 := +($t4, $t3) on_abort goto L2 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:41+1
    call $t5 := $AddU64($t4, $t3);
    if ($abort_flag) {
        assume {:print "$at(91,18562,18563)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,24):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t7 := borrow_field<coin::Coin<#0>>.value($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+14
    $t7 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t7, $t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+39
    $t7 := $UpdateMutation($t7, $t5);

    // write_back[Reference($t0).value (u64)]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t7)));

    // trace_local[dst_coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:9+39
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[dst_coin]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:476:48+1
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
    assume {:print "$at(91,18575,18576)"} true;
L1:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
    assume {:print "$at(91,18575,18576)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
L2:

    // abort($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:477:5+1
    assume {:print "$at(91,18575,18576)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::transfer<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:517:5+214
procedure {:inline 1} $1_coin_transfer'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t6: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: int;
    var $t11: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t12: int;
    var $t13: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t14: int;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$at(92,10885,10934)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<coin::CoinStore<#0>>($t4)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$at(92,10943,11012)"} true;
    assume ($t5 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t4));

    // assume Identical($t6, global<coin::CoinStore<#0>>($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:274:9+52
    assume {:print "$at(92,11109,11161)"} true;
    assume ($t6 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // trace_local[from]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:517:5+1
    assume {:print "$at(91,20025,20026)"} true;
    assume {:print "$track_local(23,31,0):", $t0} $t0 == $t0;

    // trace_local[to]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:517:5+1
    assume {:print "$track_local(23,31,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:517:5+1
    assume {:print "$track_local(23,31,2):", $t2} $t2 == $t2;

    // assume Identical($t7, signer::$address_of($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:296:9+47
    assume {:print "$at(92,12116,12163)"} true;
    assume ($t7 == $1_signer_$address_of($t0));

    // assume Identical($t8, global<coin::CoinStore<#0>>($t7)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:297:9+59
    assume {:print "$at(92,12172,12231)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t7));

    // assume Identical($t9, select coin::Coin.value(select coin::CoinStore.coin($t8))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:298:9+36
    assume {:print "$at(92,12240,12276)"} true;
    assume ($t9 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t8)));

    // assume Identical($t10, signer::$address_of($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:306:9+47
    assume {:print "$at(92,12570,12617)"} true;
    assume ($t10 == $1_signer_$address_of($t0));

    // assume Identical($t11, global<coin::CoinStore<#0>>($t10)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:307:9+59
    assume {:print "$at(92,12626,12685)"} true;
    assume ($t11 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t10));

    // assume Identical($t12, select coin::Coin.value(select coin::CoinStore.coin($t11))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:308:9+36
    assume {:print "$at(92,12694,12730)"} true;
    assume ($t12 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t11)));

    // $t13 := coin::withdraw<#0>($t0, $t2) on_abort goto L2 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:522:20+32
    assume {:print "$at(91,20173,20205)"} true;
    call $t13 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(91,20173,20205)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(23,31):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[coin]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:522:13+4
    assume {:print "$track_local(23,31,3):", $t13} $t13 == $t13;

    // coin::deposit<#0>($t1, $t13) on_abort goto L2 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:523:9+17
    assume {:print "$at(91,20215,20232)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(91,20215,20232)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(23,31):", $t14} $t14 == $t14;
        goto L2;
    }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:524:5+1
    assume {:print "$at(91,20238,20239)"} true;
L1:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:524:5+1
    assume {:print "$at(91,20238,20239)"} true;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:524:5+1
L2:

    // abort($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:524:5+1
    assume {:print "$at(91,20238,20239)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun coin::withdraw<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:532:5+697
procedure {:inline 1} $1_coin_withdraw'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t4: int;
    var $t5: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t6: int;
    var $t7: int;
    var $t8: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t16: bool;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t21: $1_coin_WithdrawEvent;
    var $t22: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t23: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:296:9+47
    assume {:print "$at(92,12116,12163)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<coin::CoinStore<#0>>($t4)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:297:9+59
    assume {:print "$at(92,12172,12231)"} true;
    assume ($t5 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t4));

    // assume Identical($t6, select coin::Coin.value(select coin::CoinStore.coin($t5))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:298:9+36
    assume {:print "$at(92,12240,12276)"} true;
    assume ($t6 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t5)));

    // assume Identical($t7, signer::$address_of($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:306:9+47
    assume {:print "$at(92,12570,12617)"} true;
    assume ($t7 == $1_signer_$address_of($t0));

    // assume Identical($t8, global<coin::CoinStore<#0>>($t7)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:307:9+59
    assume {:print "$at(92,12626,12685)"} true;
    assume ($t8 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t7));

    // assume Identical($t9, select coin::Coin.value(select coin::CoinStore.coin($t8))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:308:9+36
    assume {:print "$at(92,12694,12730)"} true;
    assume ($t9 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t8)));

    // trace_local[account]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:532:5+1
    assume {:print "$at(91,20458,20459)"} true;
    assume {:print "$track_local(23,35,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:532:5+1
    assume {:print "$track_local(23,35,1):", $t1} $t1 == $t1;

    // $t10 := signer::address_of($t0) on_abort goto L7 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:536:28+27
    assume {:print "$at(91,20606,20633)"} true;
    call $t10 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(91,20606,20633)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_local[account_addr]($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:536:13+12
    assume {:print "$track_local(23,35,2):", $t10} $t10 == $t10;

    // $t12 := coin::is_account_registered<#0>($t10) on_abort goto L7 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:538:13+45
    assume {:print "$at(91,20664,20709)"} true;
    call $t12 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t10);
    if ($abort_flag) {
        assume {:print "$at(91,20664,20709)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // if ($t12) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    assume {:print "$at(91,20643,20777)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    assume {:print "$at(91,20643,20777)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:30+25
    assume {:print "$at(91,20740,20765)"} true;
L0:

    // $t13 := 5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:30+25
    assume {:print "$at(91,20740,20765)"} true;
    $t13 := 5;
    assume $IsValid'u64'($t13);

    // $t14 := error::not_found($t13) on_abort goto L7 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:13+43
    call $t14 := $1_error_not_found($t13);
    if ($abort_flag) {
        assume {:print "$at(91,20723,20766)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_abort($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    assume {:print "$at(91,20643,20777)"} true;
    assume {:print "$track_abort(23,35):", $t14} $t14 == $t14;

    // $t11 := move($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    $t11 := $t14;

    // goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:537:9+134
    goto L7;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:65+12
    assume {:print "$at(91,20844,20856)"} true;
L2:

    // $t15 := borrow_global<coin::CoinStore<#0>>($t10) on_abort goto L7 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:26+17
    assume {:print "$at(91,20805,20822)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t10));
    }
    if ($abort_flag) {
        assume {:print "$at(91,20805,20822)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_local[coin_store]($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t15);
    assume {:print "$track_local(23,35,3):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t16 := get_field<coin::CoinStore<#0>>.frozen($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:544:14+17
    assume {:print "$at(91,20889,20906)"} true;
    $t16 := $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t15));

    // $t17 := !($t16) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:544:13+1
    call $t17 := $Not($t16);

    // if ($t17) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(91,20867,20964)"} true;
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
L4:

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(91,20867,20964)"} true;
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
L3:

    // destroy($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(91,20867,20964)"} true;

    // $t18 := 10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:545:38+7
    assume {:print "$at(91,20945,20952)"} true;
    $t18 := 10;
    assume $IsValid'u64'($t18);

    // $t19 := error::permission_denied($t18) on_abort goto L7 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:545:13+33
    call $t19 := $1_error_permission_denied($t18);
    if ($abort_flag) {
        assume {:print "$at(91,20920,20953)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // trace_abort($t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    assume {:print "$at(91,20867,20964)"} true;
    assume {:print "$track_abort(23,35):", $t19} $t19 == $t19;

    // $t11 := move($t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    $t11 := $t19;

    // goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:543:9+97
    goto L7;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:549:18+10
    assume {:print "$at(91,21026,21036)"} true;
L5:

    // $t20 := borrow_field<coin::CoinStore<#0>>.withdraw_events($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:549:13+31
    assume {:print "$at(91,21021,21052)"} true;
    $t20 := $ChildMutation($t15, 3, $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t15)));

    // $t21 := pack coin::WithdrawEvent($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:550:13+24
    assume {:print "$at(91,21066,21090)"} true;
    $t21 := $1_coin_WithdrawEvent($t1);

    // opaque begin: event::emit_event<coin::WithdrawEvent>($t20, $t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:9+126
    assume {:print "$at(91,20975,21101)"} true;

    // opaque end: event::emit_event<coin::WithdrawEvent>($t20, $t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:9+126

    // write_back[Reference($t15).withdraw_events (event::EventHandle<coin::WithdrawEvent>)]($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:9+126
    $t15 := $UpdateMutation($t15, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events($Dereference($t15), $Dereference($t20)));

    // $t22 := borrow_field<coin::CoinStore<#0>>.coin($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:17+20
    assume {:print "$at(91,21120,21140)"} true;
    $t22 := $ChildMutation($t15, 0, $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t15)));

    // $t23 := coin::extract<#0>($t22, $t1) on_abort goto L7 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    call $t23,$t22 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t22, $t1);
    if ($abort_flag) {
        assume {:print "$at(91,21112,21149)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(23,35):", $t11} $t11 == $t11;
        goto L7;
    }

    // write_back[Reference($t15).coin (coin::Coin<#0>)]($t22) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    $t15 := $UpdateMutation($t15, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t15), $Dereference($t22)));

    // write_back[coin::CoinStore<#0>@]($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // trace_return[0]($t23) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:9+37
    assume {:print "$track_return(23,35,0):", $t23} $t23 == $t23;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
    assume {:print "$at(91,21154,21155)"} true;
L6:

    // return $t23 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
    assume {:print "$at(91,21154,21155)"} true;
    $ret0 := $t23;
    return;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
L7:

    // abort($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:554:5+1
    assume {:print "$at(91,21154,21155)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun coin::zero<aptos_coin::AptosCoin> [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:557:5+107
procedure {:inline 1} $1_coin_zero'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // $t0 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:559:20+1
    assume {:print "$at(91,21310,21311)"} true;
    $t0 := 0;
    assume $IsValid'u64'($t0);

    // $t1 := pack coin::Coin<#0>($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:558:9+47
    assume {:print "$at(91,21274,21321)"} true;
    $t1 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:558:9+47
    assume {:print "$track_return(23,36,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:561:5+1
    assume {:print "$at(91,21326,21327)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:561:5+1
    assume {:print "$at(91,21326,21327)"} true;
    $ret0 := $t1;
    return;

}

// struct aptos_coin::AptosCoin at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_coin.move:22:5+27
type {:datatype} $1_aptos_coin_AptosCoin;
function {:constructor} $1_aptos_coin_AptosCoin($dummy_field: bool): $1_aptos_coin_AptosCoin;
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'($dummy_field#$1_aptos_coin_AptosCoin(s))
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/chain_status.move:12:5+34
type {:datatype} $1_chain_status_GenesisEndMarker;
function {:constructor} $1_chain_status_GenesisEndMarker($dummy_field: bool): $1_chain_status_GenesisEndMarker;
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'($dummy_field#$1_chain_status_GenesisEndMarker(s))
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:22:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1))
}

// struct timestamp::CurrentTimeMicroseconds at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:12:5+73
type {:datatype} $1_timestamp_CurrentTimeMicroseconds;
function {:constructor} $1_timestamp_CurrentTimeMicroseconds($microseconds: int): $1_timestamp_CurrentTimeMicroseconds;
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'($microseconds#$1_timestamp_CurrentTimeMicroseconds(s))
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:48+16
    assume {:print "$at(137,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+13
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(137,2472,2485)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(28,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<timestamp::CurrentTimeMicroseconds>.microseconds($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    $t3 := $microseconds#$1_timestamp_CurrentTimeMicroseconds($t1);

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    assume {:print "$track_return(28,0,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(137,2546,2547)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(137,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
L2:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(137,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+18
    assume {:print "$at(137,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(137,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:28+1
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(137,2699,2700)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+44
    assume {:print "$track_return(28,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(137,2729,2730)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(137,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
L2:

    // abort($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(137,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+71
function {:inline} $1_math64_$min(a: int, b: int): int {
    (if ((a < b)) then (a) else (b))
}

// fun math64::min [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+71
procedure {:inline 1} $1_math64_min(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t0: int;
    var $t1: int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[a]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+1
    assume {:print "$at(53,467,468)"} true;
    assume {:print "$track_local(33,6,0):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+1
    assume {:print "$track_local(33,6,1):", $t1} $t1 == $t1;

    // $t3 := <($t0, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:15+1
    assume {:print "$at(53,519,520)"} true;
    call $t3 := $Lt($t0, $t1);

    // if ($t3) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:20+1
L1:

    // $t2 := $t0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(53,513,532)"} true;
    $t2 := $t0;

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:27+1
L0:

    // $t2 := $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(53,513,532)"} true;
    $t2 := $t1;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
L2:

    // trace_return[0]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(53,513,532)"} true;
    assume {:print "$track_return(33,6,0):", $t2} $t2 == $t2;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:19:5+1
    assume {:print "$at(53,537,538)"} true;
L3:

    // return $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:19:5+1
    assume {:print "$at(53,537,538)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:16:10+500
function {:inline} $1_stake_validator_set_is_valid($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance, $1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet): bool {
    (var validator_set := $ResourceValue($1_stake_ValidatorSet_$memory, 1); (((($1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $active_validators#$1_stake_ValidatorSet(validator_set)) && $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $pending_inactive#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $pending_active#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $active_validators#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $pending_inactive#$1_stake_ValidatorSet(validator_set))))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:297:10+241
function {:inline} $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, validators: Vec ($1_stake_ValidatorInfo)): bool {
    (var $range_0 := $Range(0, LenVec(validators)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($1_stake_spec_has_stake_pool($1_stake_StakePool_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i))) && $1_stake_spec_has_validator_config($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i))))))))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:304:10+234
function {:inline} $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance, validators: Vec ($1_stake_ValidatorInfo)): bool {
    (var $range_2 := $Range(0, LenVec(validators)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    (($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i)))) < $1_stake_spec_validator_index_upper_bound($1_stake_ValidatorPerformance_$memory))))))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:310:10+122
function {:inline} $1_stake_spec_validator_index_upper_bound($1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance): int {
    LenVec($validators#$1_stake_ValidatorPerformance($ResourceValue($1_stake_ValidatorPerformance_$memory, 1)))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:314:10+78
function {:inline} $1_stake_spec_has_stake_pool($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, a: int): bool {
    $ResourceExists($1_stake_StakePool_$memory, a)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:318:10+90
function {:inline} $1_stake_spec_has_validator_config($1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, a: int): bool {
    $ResourceExists($1_stake_ValidatorConfig_$memory, a)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:331:10+148
function {:inline} $1_stake_spec_contains(validators: Vec ($1_stake_ValidatorInfo), addr: int): bool {
    (var $range_4 := $Range(0, LenVec(validators)); (exists $i_5: int :: $InRange($range_4, $i_5) && (var i := $i_5;
    ($IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec(validators, i)), addr)))))
}

// struct stake::AddStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:209:5+102
type {:datatype} $1_stake_AddStakeEvent;
function {:constructor} $1_stake_AddStakeEvent($pool_address: int, $amount_added: int): $1_stake_AddStakeEvent;
function {:inline} $Update'$1_stake_AddStakeEvent'_pool_address(s: $1_stake_AddStakeEvent, x: int): $1_stake_AddStakeEvent {
    $1_stake_AddStakeEvent(x, $amount_added#$1_stake_AddStakeEvent(s))
}
function {:inline} $Update'$1_stake_AddStakeEvent'_amount_added(s: $1_stake_AddStakeEvent, x: int): $1_stake_AddStakeEvent {
    $1_stake_AddStakeEvent($pool_address#$1_stake_AddStakeEvent(s), x)
}
function $IsValid'$1_stake_AddStakeEvent'(s: $1_stake_AddStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_AddStakeEvent(s))
      && $IsValid'u64'($amount_added#$1_stake_AddStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_AddStakeEvent'(s1: $1_stake_AddStakeEvent, s2: $1_stake_AddStakeEvent): bool {
    s1 == s2
}

// struct stake::DistributeRewardsEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:243:5+113
type {:datatype} $1_stake_DistributeRewardsEvent;
function {:constructor} $1_stake_DistributeRewardsEvent($pool_address: int, $rewards_amount: int): $1_stake_DistributeRewardsEvent;
function {:inline} $Update'$1_stake_DistributeRewardsEvent'_pool_address(s: $1_stake_DistributeRewardsEvent, x: int): $1_stake_DistributeRewardsEvent {
    $1_stake_DistributeRewardsEvent(x, $rewards_amount#$1_stake_DistributeRewardsEvent(s))
}
function {:inline} $Update'$1_stake_DistributeRewardsEvent'_rewards_amount(s: $1_stake_DistributeRewardsEvent, x: int): $1_stake_DistributeRewardsEvent {
    $1_stake_DistributeRewardsEvent($pool_address#$1_stake_DistributeRewardsEvent(s), x)
}
function $IsValid'$1_stake_DistributeRewardsEvent'(s: $1_stake_DistributeRewardsEvent): bool {
    $IsValid'address'($pool_address#$1_stake_DistributeRewardsEvent(s))
      && $IsValid'u64'($rewards_amount#$1_stake_DistributeRewardsEvent(s))
}
function {:inline} $IsEqual'$1_stake_DistributeRewardsEvent'(s1: $1_stake_DistributeRewardsEvent, s2: $1_stake_DistributeRewardsEvent): bool {
    s1 == s2
}

// struct stake::IncreaseLockupEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:233:5+153
type {:datatype} $1_stake_IncreaseLockupEvent;
function {:constructor} $1_stake_IncreaseLockupEvent($pool_address: int, $old_locked_until_secs: int, $new_locked_until_secs: int): $1_stake_IncreaseLockupEvent;
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_pool_address(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent(x, $old_locked_until_secs#$1_stake_IncreaseLockupEvent(s), $new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_old_locked_until_secs(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent($pool_address#$1_stake_IncreaseLockupEvent(s), x, $new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_new_locked_until_secs(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent($pool_address#$1_stake_IncreaseLockupEvent(s), $old_locked_until_secs#$1_stake_IncreaseLockupEvent(s), x)
}
function $IsValid'$1_stake_IncreaseLockupEvent'(s: $1_stake_IncreaseLockupEvent): bool {
    $IsValid'address'($pool_address#$1_stake_IncreaseLockupEvent(s))
      && $IsValid'u64'($old_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
      && $IsValid'u64'($new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $IsEqual'$1_stake_IncreaseLockupEvent'(s1: $1_stake_IncreaseLockupEvent, s2: $1_stake_IncreaseLockupEvent): bool {
    s1 == s2
}

// struct stake::IndividualValidatorPerformance at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:190:5+127
type {:datatype} $1_stake_IndividualValidatorPerformance;
function {:constructor} $1_stake_IndividualValidatorPerformance($successful_proposals: int, $failed_proposals: int): $1_stake_IndividualValidatorPerformance;
function {:inline} $Update'$1_stake_IndividualValidatorPerformance'_successful_proposals(s: $1_stake_IndividualValidatorPerformance, x: int): $1_stake_IndividualValidatorPerformance {
    $1_stake_IndividualValidatorPerformance(x, $failed_proposals#$1_stake_IndividualValidatorPerformance(s))
}
function {:inline} $Update'$1_stake_IndividualValidatorPerformance'_failed_proposals(s: $1_stake_IndividualValidatorPerformance, x: int): $1_stake_IndividualValidatorPerformance {
    $1_stake_IndividualValidatorPerformance($successful_proposals#$1_stake_IndividualValidatorPerformance(s), x)
}
function $IsValid'$1_stake_IndividualValidatorPerformance'(s: $1_stake_IndividualValidatorPerformance): bool {
    $IsValid'u64'($successful_proposals#$1_stake_IndividualValidatorPerformance(s))
      && $IsValid'u64'($failed_proposals#$1_stake_IndividualValidatorPerformance(s))
}
function {:inline} $IsEqual'$1_stake_IndividualValidatorPerformance'(s1: $1_stake_IndividualValidatorPerformance, s2: $1_stake_IndividualValidatorPerformance): bool {
    s1 == s2
}

// struct stake::JoinValidatorSetEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:239:5+83
type {:datatype} $1_stake_JoinValidatorSetEvent;
function {:constructor} $1_stake_JoinValidatorSetEvent($pool_address: int): $1_stake_JoinValidatorSetEvent;
function {:inline} $Update'$1_stake_JoinValidatorSetEvent'_pool_address(s: $1_stake_JoinValidatorSetEvent, x: int): $1_stake_JoinValidatorSetEvent {
    $1_stake_JoinValidatorSetEvent(x)
}
function $IsValid'$1_stake_JoinValidatorSetEvent'(s: $1_stake_JoinValidatorSetEvent): bool {
    $IsValid'address'($pool_address#$1_stake_JoinValidatorSetEvent(s))
}
function {:inline} $IsEqual'$1_stake_JoinValidatorSetEvent'(s1: $1_stake_JoinValidatorSetEvent, s2: $1_stake_JoinValidatorSetEvent): bool {
    s1 == s2
}

// struct stake::LeaveValidatorSetEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:258:5+84
type {:datatype} $1_stake_LeaveValidatorSetEvent;
function {:constructor} $1_stake_LeaveValidatorSetEvent($pool_address: int): $1_stake_LeaveValidatorSetEvent;
function {:inline} $Update'$1_stake_LeaveValidatorSetEvent'_pool_address(s: $1_stake_LeaveValidatorSetEvent, x: int): $1_stake_LeaveValidatorSetEvent {
    $1_stake_LeaveValidatorSetEvent(x)
}
function $IsValid'$1_stake_LeaveValidatorSetEvent'(s: $1_stake_LeaveValidatorSetEvent): bool {
    $IsValid'address'($pool_address#$1_stake_LeaveValidatorSetEvent(s))
}
function {:inline} $IsEqual'$1_stake_LeaveValidatorSetEvent'(s1: $1_stake_LeaveValidatorSetEvent, s2: $1_stake_LeaveValidatorSetEvent): bool {
    s1 == s2
}

// struct stake::OwnerCapability at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:99:5+76
type {:datatype} $1_stake_OwnerCapability;
function {:constructor} $1_stake_OwnerCapability($pool_address: int): $1_stake_OwnerCapability;
function {:inline} $Update'$1_stake_OwnerCapability'_pool_address(s: $1_stake_OwnerCapability, x: int): $1_stake_OwnerCapability {
    $1_stake_OwnerCapability(x)
}
function $IsValid'$1_stake_OwnerCapability'(s: $1_stake_OwnerCapability): bool {
    $IsValid'address'($pool_address#$1_stake_OwnerCapability(s))
}
function {:inline} $IsEqual'$1_stake_OwnerCapability'(s1: $1_stake_OwnerCapability, s2: $1_stake_OwnerCapability): bool {
    s1 == s2
}
var $1_stake_OwnerCapability_$memory: $Memory $1_stake_OwnerCapability;

// struct stake::ReactivateStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:214:5+103
type {:datatype} $1_stake_ReactivateStakeEvent;
function {:constructor} $1_stake_ReactivateStakeEvent($pool_address: int, $amount: int): $1_stake_ReactivateStakeEvent;
function {:inline} $Update'$1_stake_ReactivateStakeEvent'_pool_address(s: $1_stake_ReactivateStakeEvent, x: int): $1_stake_ReactivateStakeEvent {
    $1_stake_ReactivateStakeEvent(x, $amount#$1_stake_ReactivateStakeEvent(s))
}
function {:inline} $Update'$1_stake_ReactivateStakeEvent'_amount(s: $1_stake_ReactivateStakeEvent, x: int): $1_stake_ReactivateStakeEvent {
    $1_stake_ReactivateStakeEvent($pool_address#$1_stake_ReactivateStakeEvent(s), x)
}
function $IsValid'$1_stake_ReactivateStakeEvent'(s: $1_stake_ReactivateStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_ReactivateStakeEvent(s))
      && $IsValid'u64'($amount#$1_stake_ReactivateStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_ReactivateStakeEvent'(s1: $1_stake_ReactivateStakeEvent, s2: $1_stake_ReactivateStakeEvent): bool {
    s1 == s2
}

// struct stake::RegisterValidatorCandidateEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:199:5+93
type {:datatype} $1_stake_RegisterValidatorCandidateEvent;
function {:constructor} $1_stake_RegisterValidatorCandidateEvent($pool_address: int): $1_stake_RegisterValidatorCandidateEvent;
function {:inline} $Update'$1_stake_RegisterValidatorCandidateEvent'_pool_address(s: $1_stake_RegisterValidatorCandidateEvent, x: int): $1_stake_RegisterValidatorCandidateEvent {
    $1_stake_RegisterValidatorCandidateEvent(x)
}
function $IsValid'$1_stake_RegisterValidatorCandidateEvent'(s: $1_stake_RegisterValidatorCandidateEvent): bool {
    $IsValid'address'($pool_address#$1_stake_RegisterValidatorCandidateEvent(s))
}
function {:inline} $IsEqual'$1_stake_RegisterValidatorCandidateEvent'(s1: $1_stake_RegisterValidatorCandidateEvent, s2: $1_stake_RegisterValidatorCandidateEvent): bool {
    s1 == s2
}

// struct stake::RotateConsensusKeyEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:219:5+169
type {:datatype} $1_stake_RotateConsensusKeyEvent;
function {:constructor} $1_stake_RotateConsensusKeyEvent($pool_address: int, $old_consensus_pubkey: Vec (int), $new_consensus_pubkey: Vec (int)): $1_stake_RotateConsensusKeyEvent;
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_pool_address(s: $1_stake_RotateConsensusKeyEvent, x: int): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent(x, $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s), $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_old_consensus_pubkey(s: $1_stake_RotateConsensusKeyEvent, x: Vec (int)): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent($pool_address#$1_stake_RotateConsensusKeyEvent(s), x, $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_new_consensus_pubkey(s: $1_stake_RotateConsensusKeyEvent, x: Vec (int)): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent($pool_address#$1_stake_RotateConsensusKeyEvent(s), $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s), x)
}
function $IsValid'$1_stake_RotateConsensusKeyEvent'(s: $1_stake_RotateConsensusKeyEvent): bool {
    $IsValid'address'($pool_address#$1_stake_RotateConsensusKeyEvent(s))
      && $IsValid'vec'u8''($old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
      && $IsValid'vec'u8''($new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $IsEqual'$1_stake_RotateConsensusKeyEvent'(s1: $1_stake_RotateConsensusKeyEvent, s2: $1_stake_RotateConsensusKeyEvent): bool {
    $IsEqual'address'($pool_address#$1_stake_RotateConsensusKeyEvent(s1), $pool_address#$1_stake_RotateConsensusKeyEvent(s2))
    && $IsEqual'vec'u8''($old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s1), $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s2))
    && $IsEqual'vec'u8''($new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s1), $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s2))}

// struct stake::SetOperatorEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:203:5+140
type {:datatype} $1_stake_SetOperatorEvent;
function {:constructor} $1_stake_SetOperatorEvent($pool_address: int, $old_operator: int, $new_operator: int): $1_stake_SetOperatorEvent;
function {:inline} $Update'$1_stake_SetOperatorEvent'_pool_address(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent(x, $old_operator#$1_stake_SetOperatorEvent(s), $new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $Update'$1_stake_SetOperatorEvent'_old_operator(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent($pool_address#$1_stake_SetOperatorEvent(s), x, $new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $Update'$1_stake_SetOperatorEvent'_new_operator(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent($pool_address#$1_stake_SetOperatorEvent(s), $old_operator#$1_stake_SetOperatorEvent(s), x)
}
function $IsValid'$1_stake_SetOperatorEvent'(s: $1_stake_SetOperatorEvent): bool {
    $IsValid'address'($pool_address#$1_stake_SetOperatorEvent(s))
      && $IsValid'address'($old_operator#$1_stake_SetOperatorEvent(s))
      && $IsValid'address'($new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $IsEqual'$1_stake_SetOperatorEvent'(s1: $1_stake_SetOperatorEvent, s2: $1_stake_SetOperatorEvent): bool {
    s1 == s2
}

// struct stake::StakePool at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:114:5+1829
type {:datatype} $1_stake_StakePool;
function {:constructor} $1_stake_StakePool($active: $1_coin_Coin'$1_aptos_coin_AptosCoin', $inactive: $1_coin_Coin'$1_aptos_coin_AptosCoin', $pending_active: $1_coin_Coin'$1_aptos_coin_AptosCoin', $pending_inactive: $1_coin_Coin'$1_aptos_coin_AptosCoin', $locked_until_secs: int, $operator_address: int, $delegated_voter: int, $initialize_validator_events: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', $set_operator_events: $1_event_EventHandle'$1_stake_SetOperatorEvent', $add_stake_events: $1_event_EventHandle'$1_stake_AddStakeEvent', $reactivate_stake_events: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', $rotate_consensus_key_events: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', $update_network_and_fullnode_addresses_events: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', $increase_lockup_events: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', $join_validator_set_events: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', $distribute_rewards_events: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', $unlock_stake_events: $1_event_EventHandle'$1_stake_UnlockStakeEvent', $withdraw_stake_events: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', $leave_validator_set_events: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): $1_stake_StakePool;
function {:inline} $Update'$1_stake_StakePool'_active(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool(x, $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_inactive(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), x, $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_pending_active(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), x, $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_pending_inactive(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), x, $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_locked_until_secs(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), x, $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_operator_address(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), x, $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_delegated_voter(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), x, $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_initialize_validator_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), x, $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_set_operator_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_SetOperatorEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), x, $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_add_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_AddStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), x, $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_reactivate_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), x, $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_rotate_consensus_key_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), x, $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_update_network_and_fullnode_addresses_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), x, $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_increase_lockup_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), x, $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_join_validator_set_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), x, $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_distribute_rewards_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), x, $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_unlock_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), x, $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_withdraw_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), x, $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_leave_validator_set_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), x)
}
function $IsValid'$1_stake_StakePool'(s: $1_stake_StakePool): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($active#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($inactive#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($pending_active#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($pending_inactive#$1_stake_StakePool(s))
      && $IsValid'u64'($locked_until_secs#$1_stake_StakePool(s))
      && $IsValid'address'($operator_address#$1_stake_StakePool(s))
      && $IsValid'address'($delegated_voter#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($initialize_validator_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''($set_operator_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''($add_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($reactivate_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($rotate_consensus_key_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($update_network_and_fullnode_addresses_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($increase_lockup_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($join_validator_set_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($distribute_rewards_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($unlock_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($withdraw_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $IsEqual'$1_stake_StakePool'(s1: $1_stake_StakePool, s2: $1_stake_StakePool): bool {
    s1 == s2
}
var $1_stake_StakePool_$memory: $Memory $1_stake_StakePool;

// struct stake::UnlockStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:248:5+108
type {:datatype} $1_stake_UnlockStakeEvent;
function {:constructor} $1_stake_UnlockStakeEvent($pool_address: int, $amount_unlocked: int): $1_stake_UnlockStakeEvent;
function {:inline} $Update'$1_stake_UnlockStakeEvent'_pool_address(s: $1_stake_UnlockStakeEvent, x: int): $1_stake_UnlockStakeEvent {
    $1_stake_UnlockStakeEvent(x, $amount_unlocked#$1_stake_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_stake_UnlockStakeEvent'_amount_unlocked(s: $1_stake_UnlockStakeEvent, x: int): $1_stake_UnlockStakeEvent {
    $1_stake_UnlockStakeEvent($pool_address#$1_stake_UnlockStakeEvent(s), x)
}
function $IsValid'$1_stake_UnlockStakeEvent'(s: $1_stake_UnlockStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_UnlockStakeEvent(s))
      && $IsValid'u64'($amount_unlocked#$1_stake_UnlockStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_UnlockStakeEvent'(s1: $1_stake_UnlockStakeEvent, s2: $1_stake_UnlockStakeEvent): bool {
    s1 == s2
}

// struct stake::UpdateNetworkAndFullnodeAddressesEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:225:5+274
type {:datatype} $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
function {:constructor} $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address: int, $old_network_addresses: Vec (int), $new_network_addresses: Vec (int), $old_fullnode_addresses: Vec (int), $new_fullnode_addresses: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_pool_address(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: int): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent(x, $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_old_network_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_new_network_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_old_fullnode_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_new_fullnode_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x)
}
function $IsValid'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent): bool {
    $IsValid'address'($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $IsEqual'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s1: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, s2: $1_stake_UpdateNetworkAndFullnodeAddressesEvent): bool {
    $IsEqual'address'($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))}

// struct stake::ValidatorConfig at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:150:5+372
type {:datatype} $1_stake_ValidatorConfig;
function {:constructor} $1_stake_ValidatorConfig($consensus_pubkey: Vec (int), $network_addresses: Vec (int), $fullnode_addresses: Vec (int), $validator_index: int): $1_stake_ValidatorConfig;
function {:inline} $Update'$1_stake_ValidatorConfig'_consensus_pubkey(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig(x, $network_addresses#$1_stake_ValidatorConfig(s), $fullnode_addresses#$1_stake_ValidatorConfig(s), $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_network_addresses(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), x, $fullnode_addresses#$1_stake_ValidatorConfig(s), $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_fullnode_addresses(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), $network_addresses#$1_stake_ValidatorConfig(s), x, $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_validator_index(s: $1_stake_ValidatorConfig, x: int): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), $network_addresses#$1_stake_ValidatorConfig(s), $fullnode_addresses#$1_stake_ValidatorConfig(s), x)
}
function $IsValid'$1_stake_ValidatorConfig'(s: $1_stake_ValidatorConfig): bool {
    $IsValid'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig(s))
      && $IsValid'vec'u8''($network_addresses#$1_stake_ValidatorConfig(s))
      && $IsValid'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig(s))
      && $IsValid'u64'($validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorConfig'(s1: $1_stake_ValidatorConfig, s2: $1_stake_ValidatorConfig): bool {
    $IsEqual'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig(s1), $consensus_pubkey#$1_stake_ValidatorConfig(s2))
    && $IsEqual'vec'u8''($network_addresses#$1_stake_ValidatorConfig(s1), $network_addresses#$1_stake_ValidatorConfig(s2))
    && $IsEqual'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig(s1), $fullnode_addresses#$1_stake_ValidatorConfig(s2))
    && $IsEqual'u64'($validator_index#$1_stake_ValidatorConfig(s1), $validator_index#$1_stake_ValidatorConfig(s2))}
var $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig;

// struct stake::ValidatorInfo at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:160:5+133
type {:datatype} $1_stake_ValidatorInfo;
function {:constructor} $1_stake_ValidatorInfo($addr: int, $voting_power: int, $config: $1_stake_ValidatorConfig): $1_stake_ValidatorInfo;
function {:inline} $Update'$1_stake_ValidatorInfo'_addr(s: $1_stake_ValidatorInfo, x: int): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo(x, $voting_power#$1_stake_ValidatorInfo(s), $config#$1_stake_ValidatorInfo(s))
}
function {:inline} $Update'$1_stake_ValidatorInfo'_voting_power(s: $1_stake_ValidatorInfo, x: int): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo($addr#$1_stake_ValidatorInfo(s), x, $config#$1_stake_ValidatorInfo(s))
}
function {:inline} $Update'$1_stake_ValidatorInfo'_config(s: $1_stake_ValidatorInfo, x: $1_stake_ValidatorConfig): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo($addr#$1_stake_ValidatorInfo(s), $voting_power#$1_stake_ValidatorInfo(s), x)
}
function $IsValid'$1_stake_ValidatorInfo'(s: $1_stake_ValidatorInfo): bool {
    $IsValid'address'($addr#$1_stake_ValidatorInfo(s))
      && $IsValid'u64'($voting_power#$1_stake_ValidatorInfo(s))
      && $IsValid'$1_stake_ValidatorConfig'($config#$1_stake_ValidatorInfo(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorInfo'(s1: $1_stake_ValidatorInfo, s2: $1_stake_ValidatorInfo): bool {
    $IsEqual'address'($addr#$1_stake_ValidatorInfo(s1), $addr#$1_stake_ValidatorInfo(s2))
    && $IsEqual'u64'($voting_power#$1_stake_ValidatorInfo(s1), $voting_power#$1_stake_ValidatorInfo(s2))
    && $IsEqual'$1_stake_ValidatorConfig'($config#$1_stake_ValidatorInfo(s1), $config#$1_stake_ValidatorInfo(s2))}

// struct stake::ValidatorPerformance at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:195:5+103
type {:datatype} $1_stake_ValidatorPerformance;
function {:constructor} $1_stake_ValidatorPerformance($validators: Vec ($1_stake_IndividualValidatorPerformance)): $1_stake_ValidatorPerformance;
function {:inline} $Update'$1_stake_ValidatorPerformance'_validators(s: $1_stake_ValidatorPerformance, x: Vec ($1_stake_IndividualValidatorPerformance)): $1_stake_ValidatorPerformance {
    $1_stake_ValidatorPerformance(x)
}
function $IsValid'$1_stake_ValidatorPerformance'(s: $1_stake_ValidatorPerformance): bool {
    $IsValid'vec'$1_stake_IndividualValidatorPerformance''($validators#$1_stake_ValidatorPerformance(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorPerformance'(s1: $1_stake_ValidatorPerformance, s2: $1_stake_ValidatorPerformance): bool {
    $IsEqual'vec'$1_stake_IndividualValidatorPerformance''($validators#$1_stake_ValidatorPerformance(s1), $validators#$1_stake_ValidatorPerformance(s2))}
var $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance;

// struct stake::ValidatorSet at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:170:5+558
type {:datatype} $1_stake_ValidatorSet;
function {:constructor} $1_stake_ValidatorSet($consensus_scheme: int, $active_validators: Vec ($1_stake_ValidatorInfo), $pending_inactive: Vec ($1_stake_ValidatorInfo), $pending_active: Vec ($1_stake_ValidatorInfo), $total_voting_power: int, $total_joining_power: int): $1_stake_ValidatorSet;
function {:inline} $Update'$1_stake_ValidatorSet'_consensus_scheme(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet(x, $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_active_validators(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), x, $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_pending_inactive(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), x, $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_pending_active(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), x, $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_total_voting_power(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), x, $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_total_joining_power(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), x)
}
function $IsValid'$1_stake_ValidatorSet'(s: $1_stake_ValidatorSet): bool {
    $IsValid'u8'($consensus_scheme#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($active_validators#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($pending_inactive#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($pending_active#$1_stake_ValidatorSet(s))
      && $IsValid'u128'($total_voting_power#$1_stake_ValidatorSet(s))
      && $IsValid'u128'($total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorSet'(s1: $1_stake_ValidatorSet, s2: $1_stake_ValidatorSet): bool {
    $IsEqual'u8'($consensus_scheme#$1_stake_ValidatorSet(s1), $consensus_scheme#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($active_validators#$1_stake_ValidatorSet(s1), $active_validators#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($pending_inactive#$1_stake_ValidatorSet(s1), $pending_inactive#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($pending_active#$1_stake_ValidatorSet(s1), $pending_active#$1_stake_ValidatorSet(s2))
    && $IsEqual'u128'($total_voting_power#$1_stake_ValidatorSet(s1), $total_voting_power#$1_stake_ValidatorSet(s2))
    && $IsEqual'u128'($total_joining_power#$1_stake_ValidatorSet(s1), $total_joining_power#$1_stake_ValidatorSet(s2))}
var $1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet;

// struct stake::WithdrawStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:253:5+111
type {:datatype} $1_stake_WithdrawStakeEvent;
function {:constructor} $1_stake_WithdrawStakeEvent($pool_address: int, $amount_withdrawn: int): $1_stake_WithdrawStakeEvent;
function {:inline} $Update'$1_stake_WithdrawStakeEvent'_pool_address(s: $1_stake_WithdrawStakeEvent, x: int): $1_stake_WithdrawStakeEvent {
    $1_stake_WithdrawStakeEvent(x, $amount_withdrawn#$1_stake_WithdrawStakeEvent(s))
}
function {:inline} $Update'$1_stake_WithdrawStakeEvent'_amount_withdrawn(s: $1_stake_WithdrawStakeEvent, x: int): $1_stake_WithdrawStakeEvent {
    $1_stake_WithdrawStakeEvent($pool_address#$1_stake_WithdrawStakeEvent(s), x)
}
function $IsValid'$1_stake_WithdrawStakeEvent'(s: $1_stake_WithdrawStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_WithdrawStakeEvent(s))
      && $IsValid'u64'($amount_withdrawn#$1_stake_WithdrawStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_WithdrawStakeEvent'(s1: $1_stake_WithdrawStakeEvent, s2: $1_stake_WithdrawStakeEvent): bool {
    s1 == s2
}

// fun stake::withdraw [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:881:5+448
procedure {:inline 1} $1_stake_withdraw(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_OwnerCapability;
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:881:5+1
    assume {:print "$at(125,41084,41085)"} true;
    assume {:print "$track_local(35,56,0):", $t0} $t0 == $t0;

    // trace_local[withdraw_amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:881:5+1
    assume {:print "$track_local(35,56,1):", $t1} $t1 == $t1;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:885:29+25
    assume {:print "$at(125,41250,41275)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(125,41250,41275)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,56):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[owner_address]($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:885:13+13
    assume {:print "$track_local(35,56,3):", $t4} $t4 == $t4;

    // stake::assert_owner_cap_exists($t4) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:886:9+38
    assume {:print "$at(125,41285,41323)"} true;
    call $1_stake_assert_owner_cap_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(125,41285,41323)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,56):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := get_global<stake::OwnerCapability>($t4) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:29+13
    assume {:print "$at(125,41353,41366)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($1_stake_OwnerCapability_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(125,41353,41366)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,56):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := stake::withdraw_with_cap($t6, $t1) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:888:21+49
    assume {:print "$at(125,41420,41469)"} true;
    call $t7 := $1_stake_withdraw_with_cap($t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(125,41420,41469)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,56):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[coins]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:888:13+5
    assume {:print "$track_local(35,56,2):", $t7} $t7 == $t7;

    // coin::deposit<aptos_coin::AptosCoin>($t4, $t7) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:889:9+46
    assume {:print "$at(125,41479,41525)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t4, $t7);
    if ($abort_flag) {
        assume {:print "$at(125,41479,41525)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,56):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:890:5+1
    assume {:print "$at(125,41531,41532)"} true;
L1:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:890:5+1
    assume {:print "$at(125,41531,41532)"} true;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:890:5+1
L2:

    // abort($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:890:5+1
    assume {:print "$at(125,41531,41532)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::assert_owner_cap_exists [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+140
procedure {:inline 1} $1_stake_assert_owner_cap_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1358:5+1
    assume {:print "$at(125,64561,64562)"} true;
    assume {:print "$track_local(35,4,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::OwnerCapability>($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:17+6
    assume {:print "$at(125,64623,64629)"} true;
    $t1 := $ResourceExists($1_stake_OwnerCapability_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:9+79
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:9+79
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:9+79
    assume {:print "$at(125,64615,64694)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:66+20
L0:

    // $t2 := 15 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:66+20
    assume {:print "$at(125,64672,64692)"} true;
    $t2 := 15;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L4 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:49+38
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(125,64655,64693)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(35,4):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:9+79
    assume {:print "$at(125,64615,64694)"} true;
    assume {:print "$track_abort(35,4):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:9+79
    $t4 := $t3;

    // goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:9+79
    goto L4;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1359:88+1
L2:

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1360:5+1
    assume {:print "$at(125,64700,64701)"} true;
L3:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1360:5+1
    assume {:print "$at(125,64700,64701)"} true;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1360:5+1
L4:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1360:5+1
    assume {:print "$at(125,64700,64701)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::assert_stake_pool_exists [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+162
procedure {:inline 1} $1_stake_assert_stake_pool_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1327:5+1
    assume {:print "$at(125,63135,63136)"} true;
    assume {:print "$track_local(35,5,0):", $t0} $t0 == $t0;

    // $t1 := stake::stake_pool_exists($t0) on_abort goto L4 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:17+31
    assume {:print "$at(125,63205,63236)"} true;
    call $t1 := $1_stake_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(125,63205,63236)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // if ($t1) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:9+93
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:9+93
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:9+93
    assume {:print "$at(125,63197,63290)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:74+26
L0:

    // $t3 := 14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:74+26
    assume {:print "$at(125,63262,63288)"} true;
    $t3 := 14;
    assume $IsValid'u64'($t3);

    // $t4 := error::invalid_argument($t3) on_abort goto L4 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:50+51
    call $t4 := $1_error_invalid_argument($t3);
    if ($abort_flag) {
        assume {:print "$at(125,63238,63289)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:9+93
    assume {:print "$at(125,63197,63290)"} true;
    assume {:print "$track_abort(35,5):", $t4} $t4 == $t4;

    // $t2 := move($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:9+93
    $t2 := $t4;

    // goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:9+93
    goto L4;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1328:102+1
L2:

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1329:5+1
    assume {:print "$at(125,63296,63297)"} true;
L3:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1329:5+1
    assume {:print "$at(125,63296,63297)"} true;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1329:5+1
L4:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1329:5+1
    assume {:print "$at(125,63296,63297)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::get_lockup_secs [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:293:5+194
procedure {:inline 1} $1_stake_get_lockup_secs(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_StakePool;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:293:5+1
    assume {:print "$at(125,13146,13147)"} true;
    assume {:print "$track_local(35,17,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:9+38
    assume {:print "$at(125,13230,13268)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(125,13230,13268)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(35,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:295:9+13
    assume {:print "$at(125,13278,13291)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(125,13278,13291)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(35,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::StakePool>.locked_until_secs($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:295:9+56
    $t3 := $locked_until_secs#$1_stake_StakePool($t2);

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:295:9+56
    assume {:print "$track_return(35,17,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:5+1
    assume {:print "$at(125,13339,13340)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:5+1
    assume {:print "$at(125,13339,13340)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:5+1
L2:

    // abort($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:5+1
    assume {:print "$at(125,13339,13340)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_stake [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:314:5+425
procedure {:inline 1} $1_stake_get_stake(_$t0: int) returns ($ret0: int, $ret1: int, $ret2: int, $ret3: int)
{
    // declare local variables
    var $t1: $1_stake_StakePool;
    var $t2: int;
    var $t3: $1_stake_StakePool;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t11: int;
    var $t0: int;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:314:5+1
    assume {:print "$at(125,14110,14111)"} true;
    assume {:print "$track_local(35,23,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:9+38
    assume {:print "$at(125,14205,14243)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(125,14205,14243)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:316:26+13
    assume {:print "$at(125,14270,14283)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(125,14270,14283)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_local[stake_pool]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:316:13+10
    assume {:print "$track_local(35,23,1):", $t3} $t3 == $t3;

    // $t4 := get_field<stake::StakePool>.active($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:25+18
    assume {:print "$at(125,14344,14362)"} true;
    $t4 := $active#$1_stake_StakePool($t3);

    // $t5 := coin::value<aptos_coin::AptosCoin>($t4) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:13+31
    call $t5 := $1_coin_value'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(125,14332,14363)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t6 := get_field<stake::StakePool>.inactive($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:319:25+20
    assume {:print "$at(125,14389,14409)"} true;
    $t6 := $inactive#$1_stake_StakePool($t3);

    // $t7 := coin::value<aptos_coin::AptosCoin>($t6) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:319:13+33
    call $t7 := $1_coin_value'$1_aptos_coin_AptosCoin'($t6);
    if ($abort_flag) {
        assume {:print "$at(125,14377,14410)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t8 := get_field<stake::StakePool>.pending_active($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:320:25+26
    assume {:print "$at(125,14436,14462)"} true;
    $t8 := $pending_active#$1_stake_StakePool($t3);

    // $t9 := coin::value<aptos_coin::AptosCoin>($t8) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:320:13+39
    call $t9 := $1_coin_value'$1_aptos_coin_AptosCoin'($t8);
    if ($abort_flag) {
        assume {:print "$at(125,14424,14463)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t10 := get_field<stake::StakePool>.pending_inactive($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:321:25+28
    assume {:print "$at(125,14489,14517)"} true;
    $t10 := $pending_inactive#$1_stake_StakePool($t3);

    // $t11 := coin::value<aptos_coin::AptosCoin>($t10) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:321:13+41
    call $t11 := $1_coin_value'$1_aptos_coin_AptosCoin'($t10);
    if ($abort_flag) {
        assume {:print "$at(125,14477,14518)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,23):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:9+211
    assume {:print "$at(125,14318,14529)"} true;
    assume {:print "$track_return(35,23,0):", $t5} $t5 == $t5;

    // trace_return[1]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:9+211
    assume {:print "$track_return(35,23,1):", $t7} $t7 == $t7;

    // trace_return[2]($t9) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:9+211
    assume {:print "$track_return(35,23,2):", $t9} $t9 == $t9;

    // trace_return[3]($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:9+211
    assume {:print "$track_return(35,23,3):", $t11} $t11 == $t11;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:323:5+1
    assume {:print "$at(125,14534,14535)"} true;
L1:

    // return ($t5, $t7, $t9, $t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:323:5+1
    assume {:print "$at(125,14534,14535)"} true;
    $ret0 := $t5;
    $ret1 := $t7;
    $ret2 := $t9;
    $ret3 := $t11;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:323:5+1
L2:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:323:5+1
    assume {:print "$at(125,14534,14535)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::get_validator_state [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:327:5+652
procedure {:inline 1} $1_stake_get_validator_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'u64';
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_ValidatorSet;
    var $t8: $1_stake_ValidatorSet;
    var $t9: int;
    var $t10: $1_stake_ValidatorSet;
    var $t11: int;
    var $t12: Vec ($1_stake_ValidatorInfo);
    var $t13: $1_option_Option'u64';
    var $t14: bool;
    var $t15: int;
    var $t16: Vec ($1_stake_ValidatorInfo);
    var $t17: $1_option_Option'u64';
    var $t18: bool;
    var $t19: int;
    var $t20: Vec ($1_stake_ValidatorInfo);
    var $t21: $1_option_Option'u64';
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t0: int;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t8, global<stake::ValidatorSet>(1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:237:9+59
    assume {:print "$at(126,10156,10215)"} true;
    assume ($t8 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // trace_local[pool_address]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:327:5+1
    assume {:print "$at(125,14592,14593)"} true;
    assume {:print "$track_local(35,26,0):", $t0} $t0 == $t0;

    // $t9 := 0x1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:57+16
    assume {:print "$at(125,14731,14747)"} true;
    $t9 := 1;
    assume $IsValid'address'($t9);

    // $t10 := get_global<stake::ValidatorSet>($t9) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:29+13
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_stake_ValidatorSet_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(125,14703,14716)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(35,26):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[validator_set]($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:13+13
    assume {:print "$track_local(35,26,7):", $t10} $t10 == $t10;

    // $t12 := get_field<stake::ValidatorSet>.pending_active($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:45+29
    assume {:print "$at(125,14794,14823)"} true;
    $t12 := $pending_active#$1_stake_ValidatorSet($t10);

    // $t13 := opaque begin: stake::find_validator($t12, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:30+59

    // assume And(WellFormed($t13), Le(Len<u64>(select option::Option.vec($t13)), 1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:30+59
    assume ($IsValid'$1_option_Option'u64''($t13) && (LenVec($vec#$1_option_Option'u64'($t13)) <= 1));

    // assume Implies(option::$is_none<u64>($t13), forall i: Range(0, Len<stake::ValidatorInfo>($t12)): Neq<address>(select stake::ValidatorInfo.addr(Index($t12, i)), $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:30+59
    assume ($1_option_$is_none'u64'($t13) ==> (var $range_0 := $Range(0, LenVec($t12)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t13), Eq<address>(select stake::ValidatorInfo.addr(Index($t12, option::$borrow<u64>($t13))), $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, $1_option_$borrow'u64'($t13))), $t0));

    // assume Implies(option::$is_some<u64>($t13), stake::spec_contains($t12, $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $1_stake_spec_contains($t12, $t0));

    // $t13 := opaque end: stake::find_validator($t12, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:30+59

    // $t14 := opaque begin: option::is_some<u64>($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+77

    // assume WellFormed($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+77
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<u64>($t13)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+77
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'u64'($t13));

    // $t14 := opaque end: option::is_some<u64>($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+77

    // if ($t14) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
L1:

    // $t15 := 1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+31
    assume {:print "$at(125,14855,14886)"} true;
    $t15 := 1;
    assume $IsValid'u64'($t15);

    // $t6 := $t15 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
    assume {:print "$at(125,14758,15238)"} true;
    $t6 := $t15;

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:53+13
    assume {:print "$at(125,14939,14952)"} true;
L0:

    // $t16 := get_field<stake::ValidatorSet>.active_validators($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:52+32
    assume {:print "$at(125,14938,14970)"} true;
    $t16 := $active_validators#$1_stake_ValidatorSet($t10);

    // $t17 := opaque begin: stake::find_validator($t16, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:37+62

    // assume And(WellFormed($t17), Le(Len<u64>(select option::Option.vec($t17)), 1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:37+62
    assume ($IsValid'$1_option_Option'u64''($t17) && (LenVec($vec#$1_option_Option'u64'($t17)) <= 1));

    // assume Implies(option::$is_none<u64>($t17), forall i: Range(0, Len<stake::ValidatorInfo>($t16)): Neq<address>(select stake::ValidatorInfo.addr(Index($t16, i)), $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:37+62
    assume ($1_option_$is_none'u64'($t17) ==> (var $range_0 := $Range(0, LenVec($t16)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t17), Eq<address>(select stake::ValidatorInfo.addr(Index($t16, option::$borrow<u64>($t17))), $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, $1_option_$borrow'u64'($t17))), $t0));

    // assume Implies(option::$is_some<u64>($t17), stake::spec_contains($t16, $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $1_stake_spec_contains($t16, $t0));

    // $t17 := opaque end: stake::find_validator($t16, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:37+62

    // $t18 := opaque begin: option::is_some<u64>($t17) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:20+80

    // assume WellFormed($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:20+80
    assume $IsValid'bool'($t18);

    // assume Eq<bool>($t18, option::spec_is_some<u64>($t17)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:20+80
    assume $IsEqual'bool'($t18, $1_option_spec_is_some'u64'($t17));

    // $t18 := opaque end: option::is_some<u64>($t17) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:20+80

    // if ($t18) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:16+336
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:16+336
L4:

    // $t19 := 2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:13+23
    assume {:print "$at(125,15002,15025)"} true;
    $t19 := 2;
    assume $IsValid'u64'($t19);

    // $t5 := $t19 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:16+336
    assume {:print "$at(125,14902,15238)"} true;
    $t5 := $t19;

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:16+336
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:53+13
    assume {:print "$at(125,15078,15091)"} true;
L3:

    // $t20 := get_field<stake::ValidatorSet>.pending_inactive($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:52+31
    assume {:print "$at(125,15077,15108)"} true;
    $t20 := $pending_inactive#$1_stake_ValidatorSet($t10);

    // $t21 := opaque begin: stake::find_validator($t20, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:37+61

    // assume And(WellFormed($t21), Le(Len<u64>(select option::Option.vec($t21)), 1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:37+61
    assume ($IsValid'$1_option_Option'u64''($t21) && (LenVec($vec#$1_option_Option'u64'($t21)) <= 1));

    // assume Implies(option::$is_none<u64>($t21), forall i: Range(0, Len<stake::ValidatorInfo>($t20)): Neq<address>(select stake::ValidatorInfo.addr(Index($t20, i)), $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:37+61
    assume ($1_option_$is_none'u64'($t21) ==> (var $range_0 := $Range(0, LenVec($t20)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t21), Eq<address>(select stake::ValidatorInfo.addr(Index($t20, option::$borrow<u64>($t21))), $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, $1_option_$borrow'u64'($t21))), $t0));

    // assume Implies(option::$is_some<u64>($t21), stake::spec_contains($t20, $t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $1_stake_spec_contains($t20, $t0));

    // $t21 := opaque end: stake::find_validator($t20, $t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:37+61

    // $t22 := opaque begin: option::is_some<u64>($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:20+79

    // assume WellFormed($t22) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:20+79
    assume $IsValid'bool'($t22);

    // assume Eq<bool>($t22, option::spec_is_some<u64>($t21)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:20+79
    assume $IsEqual'bool'($t22, $1_option_spec_is_some'u64'($t21));

    // $t22 := opaque end: option::is_some<u64>($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:20+79

    // if ($t22) goto L7 else goto L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:16+197
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:13+33
    assume {:print "$at(125,15140,15173)"} true;
L7:

    // $t23 := 3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:13+33
    assume {:print "$at(125,15140,15173)"} true;
    $t23 := 3;
    assume $IsValid'u64'($t23);

    // $t4 := $t23 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:16+197
    assume {:print "$at(125,15041,15238)"} true;
    $t4 := $t23;

    // goto L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:16+197
    goto L8;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:336:13+25
    assume {:print "$at(125,15203,15228)"} true;
L6:

    // $t24 := 4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:336:13+25
    assume {:print "$at(125,15203,15228)"} true;
    $t24 := 4;
    assume $IsValid'u64'($t24);

    // $t4 := $t24 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:16+197
    assume {:print "$at(125,15041,15238)"} true;
    $t4 := $t24;

    // label L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:16+197
L8:

    // $t5 := $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:16+336
    assume {:print "$at(125,14902,15238)"} true;
    $t5 := $t4;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:16+336
L5:

    // $t6 := $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
    assume {:print "$at(125,14758,15238)"} true;
    $t6 := $t5;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
L2:

    // trace_return[0]($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:9+480
    assume {:print "$at(125,14758,15238)"} true;
    assume {:print "$track_return(35,26,0):", $t6} $t6 == $t6;

    // label L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:338:5+1
    assume {:print "$at(125,15243,15244)"} true;
L9:

    // return $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:338:5+1
    assume {:print "$at(125,15243,15244)"} true;
    $ret0 := $t6;
    return;

    // label L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:338:5+1
L10:

    // abort($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:338:5+1
    assume {:print "$at(125,15243,15244)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun stake::reactivate_stake [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:666:5+342
procedure {:inline 1} $1_stake_reactivate_stake(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $1_stake_OwnerCapability;
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:666:5+1
    assume {:print "$at(125,30537,30538)"} true;
    assume {:print "$track_local(35,40,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:666:5+1
    assume {:print "$track_local(35,40,1):", $t1} $t1 == $t1;

    // $t3 := signer::address_of($t0) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:29+25
    assume {:print "$at(125,30666,30691)"} true;
    call $t3 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(125,30666,30691)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(35,40):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[owner_address]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:667:13+13
    assume {:print "$track_local(35,40,2):", $t3} $t3 == $t3;

    // stake::assert_owner_cap_exists($t3) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:668:9+38
    assume {:print "$at(125,30701,30739)"} true;
    call $1_stake_assert_owner_cap_exists($t3);
    if ($abort_flag) {
        assume {:print "$at(125,30701,30739)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(35,40):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_global<stake::OwnerCapability>($t3) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:669:29+13
    assume {:print "$at(125,30769,30782)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_stake_OwnerCapability_$memory, $t3);
    }
    if ($abort_flag) {
        assume {:print "$at(125,30769,30782)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(35,40):", $t4} $t4 == $t4;
        goto L2;
    }

    // assume Identical($t6, select stake::OwnerCapability.pool_address($t5)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:104:9+42
    assume {:print "$at(126,4818,4860)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t5));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:107:9+53
    assume {:print "$at(126,4922,4975)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t1, select coin::Coin.value(select stake::StakePool.pending_inactive($t7)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:110:9+86
    assume {:print "$at(126,5097,5183)"} true;
    assume ($t8 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t7))));

    // stake::reactivate_stake_with_cap($t5, $t1) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:670:9+48
    assume {:print "$at(125,30824,30872)"} true;
    call $1_stake_reactivate_stake_with_cap($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(125,30824,30872)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(35,40):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:671:5+1
    assume {:print "$at(125,30878,30879)"} true;
L1:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:671:5+1
    assume {:print "$at(125,30878,30879)"} true;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:671:5+1
L2:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:671:5+1
    assume {:print "$at(125,30878,30879)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun stake::reactivate_stake_with_cap [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:5+1118
procedure {:inline 1} $1_stake_reactivate_stake_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $Mutation ($1_stake_StakePool);
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t16: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $Mutation ($1_event_EventHandle'$1_stake_ReactivateStakeEvent');
    var $t19: $1_stake_ReactivateStakeEvent;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t6, select stake::OwnerCapability.pool_address($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:104:9+42
    assume {:print "$at(126,4818,4860)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:107:9+53
    assume {:print "$at(126,4922,4975)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t1, select coin::Coin.value(select stake::StakePool.pending_inactive($t7)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:110:9+86
    assume {:print "$at(126,5097,5183)"} true;
    assume ($t8 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($t7))));

    // trace_local[owner_cap]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:5+1
    assume {:print "$at(125,30885,30886)"} true;
    assume {:print "$track_local(35,41,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:673:5+1
    assume {:print "$track_local(35,41,1):", $t1} $t1 == $t1;

    // $t9 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:674:28+22
    assume {:print "$at(125,31012,31034)"} true;
    $t9 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t9) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:674:13+12
    assume {:print "$track_local(35,41,2):", $t9} $t9 == $t9;

    // stake::assert_stake_pool_exists($t9) on_abort goto L2 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:675:9+38
    assume {:print "$at(125,31044,31082)"} true;
    call $1_stake_assert_stake_pool_exists($t9);
    if ($abort_flag) {
        assume {:print "$at(125,31044,31082)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,41):", $t10} $t10 == $t10;
        goto L2;
    }

    // $t11 := borrow_global<stake::StakePool>($t9) on_abort goto L2 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:678:26+17
    assume {:print "$at(125,31185,31202)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t9));
    }
    if ($abort_flag) {
        assume {:print "$at(125,31185,31202)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,41):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[stake_pool]($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:678:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t11);
    assume {:print "$track_local(35,41,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t12 := get_field<stake::StakePool>.pending_inactive($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:50+28
    assume {:print "$at(125,31278,31306)"} true;
    $t12 := $pending_inactive#$1_stake_StakePool($Dereference($t11));

    // $t13 := coin::value<aptos_coin::AptosCoin>($t12) on_abort goto L2 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:38+41
    call $t13 := $1_coin_value'$1_aptos_coin_AptosCoin'($t12);
    if ($abort_flag) {
        assume {:print "$at(125,31266,31307)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,41):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[total_pending_inactive]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:679:13+22
    assume {:print "$track_local(35,41,5):", $t13} $t13 == $t13;

    // $t14 := math64::min($t1, $t13) on_abort goto L2 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:18+35
    assume {:print "$at(125,31326,31361)"} true;
    call $t14 := $1_math64_min($t1, $t13);
    if ($abort_flag) {
        assume {:print "$at(125,31326,31361)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,41):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[amount]($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:680:9+6
    assume {:print "$track_local(35,41,1):", $t14} $t14 == $t14;

    // $t15 := borrow_field<stake::StakePool>.pending_inactive($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:685:47+32
    assume {:print "$at(125,31695,31727)"} true;
    $t15 := $ChildMutation($t11, 3, $pending_inactive#$1_stake_StakePool($Dereference($t11)));

    // $t16 := coin::extract<aptos_coin::AptosCoin>($t15, $t14) on_abort goto L2 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:685:33+55
    call $t16,$t15 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t15, $t14);
    if ($abort_flag) {
        assume {:print "$at(125,31681,31736)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,41):", $t10} $t10 == $t10;
        goto L2;
    }

    // write_back[Reference($t11).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t15) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:685:33+55
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t11), $Dereference($t15)));

    // trace_local[reactivated_coins]($t16) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:685:13+17
    assume {:print "$track_local(35,41,3):", $t16} $t16 == $t16;

    // $t17 := borrow_field<stake::StakePool>.active($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:686:21+22
    assume {:print "$at(125,31758,31780)"} true;
    $t17 := $ChildMutation($t11, 0, $active#$1_stake_StakePool($Dereference($t11)));

    // coin::merge<aptos_coin::AptosCoin>($t17, $t16) on_abort goto L2 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:686:9+54
    call $t17 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t17, $t16);
    if ($abort_flag) {
        assume {:print "$at(125,31746,31800)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(35,41):", $t10} $t10 == $t10;
        goto L2;
    }

    // write_back[Reference($t11).active (coin::Coin<aptos_coin::AptosCoin>)]($t17) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:686:9+54
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_active($Dereference($t11), $Dereference($t17)));

    // $t18 := borrow_field<stake::StakePool>.reactivate_stake_events($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:689:13+39
    assume {:print "$at(125,31842,31881)"} true;
    $t18 := $ChildMutation($t11, 10, $reactivate_stake_events#$1_stake_StakePool($Dereference($t11)));

    // $t19 := pack stake::ReactivateStakeEvent($t9, $t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:690:13+90
    assume {:print "$at(125,31895,31985)"} true;
    $t19 := $1_stake_ReactivateStakeEvent($t9, $t14);

    // opaque begin: event::emit_event<stake::ReactivateStakeEvent>($t18, $t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:688:9+185
    assume {:print "$at(125,31811,31996)"} true;

    // opaque end: event::emit_event<stake::ReactivateStakeEvent>($t18, $t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:688:9+185

    // write_back[Reference($t11).reactivate_stake_events (event::EventHandle<stake::ReactivateStakeEvent>)]($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:688:9+185
    $t11 := $UpdateMutation($t11, $Update'$1_stake_StakePool'_reactivate_stake_events($Dereference($t11), $Dereference($t18)));

    // write_back[stake::StakePool@]($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:688:9+185
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:695:5+1
    assume {:print "$at(125,32002,32003)"} true;
L1:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:695:5+1
    assume {:print "$at(125,32002,32003)"} true;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:695:5+1
L2:

    // abort($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:695:5+1
    assume {:print "$at(125,32002,32003)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun stake::stake_pool_exists [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:399:5+89
procedure {:inline 1} $1_stake_stake_pool_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:399:5+1
    assume {:print "$at(125,18126,18127)"} true;
    assume {:print "$track_local(35,48,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::StakePool>($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:9+6
    assume {:print "$at(125,18186,18192)"} true;
    $t1 := $ResourceExists($1_stake_StakePool_$memory, $t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:9+23
    assume {:print "$track_return(35,48,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:5+1
    assume {:print "$at(125,18214,18215)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:5+1
    assume {:print "$at(125,18214,18215)"} true;
    $ret0 := $t1;
    return;

}

// fun stake::unlock [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:847:5+322
procedure {:inline 1} $1_stake_unlock(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $1_stake_OwnerCapability;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_OwnerCapability;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:847:5+1
    assume {:print "$at(125,39546,39547)"} true;
    assume {:print "$track_local(35,50,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:847:5+1
    assume {:print "$track_local(35,50,1):", $t1} $t1 == $t1;

    // $t4 := signer::address_of($t0) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:848:29+25
    assume {:print "$at(125,39665,39690)"} true;
    call $t4 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(125,39665,39690)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,50):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[owner_address]($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:848:13+13
    assume {:print "$track_local(35,50,2):", $t4} $t4 == $t4;

    // stake::assert_owner_cap_exists($t4) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:9+38
    assume {:print "$at(125,39700,39738)"} true;
    call $1_stake_assert_owner_cap_exists($t4);
    if ($abort_flag) {
        assume {:print "$at(125,39700,39738)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,50):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := get_global<stake::OwnerCapability>($t4) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:850:29+13
    assume {:print "$at(125,39768,39781)"} true;
    if (!$ResourceExists($1_stake_OwnerCapability_$memory, $t4)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $ResourceValue($1_stake_OwnerCapability_$memory, $t4);
    }
    if ($abort_flag) {
        assume {:print "$at(125,39768,39781)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,50):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[ownership_cap]($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:850:13+13
    assume {:print "$track_local(35,50,3):", $t6} $t6 == $t6;

    // assume Identical($t7, select stake::OwnerCapability.pool_address($t6)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:49:9+42
    assume {:print "$at(126,2186,2228)"} true;
    assume ($t7 == $pool_address#$1_stake_OwnerCapability($t6));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:50:9+53
    assume {:print "$at(126,2237,2290)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, math64::$min($t1, select coin::Coin.value(select stake::StakePool.active($t8)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:53:9+76
    assume {:print "$at(126,2412,2488)"} true;
    assume ($t9 == $1_math64_$min($t1, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t8))));

    // stake::unlock_with_cap($t1, $t6) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:9+38
    assume {:print "$at(125,39823,39861)"} true;
    call $1_stake_unlock_with_cap($t1, $t6);
    if ($abort_flag) {
        assume {:print "$at(125,39823,39861)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(35,50):", $t5} $t5 == $t5;
        goto L2;
    }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:5+1
    assume {:print "$at(125,39867,39868)"} true;
L1:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:5+1
    assume {:print "$at(125,39867,39868)"} true;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:5+1
L2:

    // abort($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:5+1
    assume {:print "$at(125,39867,39868)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun stake::unlock_with_cap [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:855:5+1066
procedure {:inline 1} $1_stake_unlock_with_cap(_$t0: int, _$t1: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation ($1_stake_StakePool);
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t19: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t20: $Mutation ($1_event_EventHandle'$1_stake_UnlockStakeEvent');
    var $t21: $1_stake_UnlockStakeEvent;
    var $t0: int;
    var $t1: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t6, select stake::OwnerCapability.pool_address($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:49:9+42
    assume {:print "$at(126,2186,2228)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t1));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:50:9+53
    assume {:print "$at(126,2237,2290)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t0, select coin::Coin.value(select stake::StakePool.active($t7)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:53:9+76
    assume {:print "$at(126,2412,2488)"} true;
    assume ($t8 == $1_math64_$min($t0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t7))));

    // trace_local[amount]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:855:5+1
    assume {:print "$at(125,39962,39963)"} true;
    assume {:print "$track_local(35,51,0):", $t0} $t0 == $t0;

    // trace_local[owner_cap]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:855:5+1
    assume {:print "$track_local(35,51,1):", $t1} $t1 == $t1;

    // $t9 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:23+1
    assume {:print "$at(125,40149,40150)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t0, $t9) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:20+2
    $t10 := $IsEqual'u64'($t0, $t9);

    // if ($t10) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:9+47
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:858:13+6
    assume {:print "$at(125,40166,40172)"} true;
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:858:13+6
    assume {:print "$at(125,40166,40172)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:28+9
    assume {:print "$at(125,40395,40404)"} true;
L0:

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:28+22
    assume {:print "$at(125,40395,40417)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t1);

    // trace_local[pool_address]($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:13+12
    assume {:print "$track_local(35,51,3):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L3 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:864:9+38
    assume {:print "$at(125,40427,40465)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(125,40427,40465)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(35,51):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t13 := borrow_global<stake::StakePool>($t11) on_abort goto L3 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:26+17
    assume {:print "$at(125,40492,40509)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(125,40492,40509)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(35,51):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[stake_pool]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t13);
    assume {:print "$track_local(35,51,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t14 := get_field<stake::StakePool>.active($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:46+18
    assume {:print "$at(125,40638,40656)"} true;
    $t14 := $active#$1_stake_StakePool($Dereference($t13));

    // $t15 := coin::value<aptos_coin::AptosCoin>($t14) on_abort goto L3 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:34+31
    call $t15 := $1_coin_value'$1_aptos_coin_AptosCoin'($t14);
    if ($abort_flag) {
        assume {:print "$at(125,40626,40657)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(35,51):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t16 := math64::min($t0, $t15) on_abort goto L3 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:22+44
    call $t16 := $1_math64_min($t0, $t15);
    if ($abort_flag) {
        assume {:print "$at(125,40614,40658)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(35,51):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[amount#1]($t16) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:13+6
    assume {:print "$track_local(35,51,2):", $t16} $t16 == $t16;

    // $t17 := borrow_field<stake::StakePool>.active($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:868:44+22
    assume {:print "$at(125,40703,40725)"} true;
    $t17 := $ChildMutation($t13, 0, $active#$1_stake_StakePool($Dereference($t13)));

    // $t18 := coin::extract<aptos_coin::AptosCoin>($t17, $t16) on_abort goto L3 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:868:30+45
    call $t18,$t17 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t17, $t16);
    if ($abort_flag) {
        assume {:print "$at(125,40689,40734)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(35,51):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).active (coin::Coin<aptos_coin::AptosCoin>)]($t17) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:868:30+45
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_active($Dereference($t13), $Dereference($t17)));

    // trace_local[unlocked_stake]($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:868:13+14
    assume {:print "$track_local(35,51,5):", $t18} $t18 == $t18;

    // $t19 := borrow_field<stake::StakePool>.pending_inactive($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:869:32+32
    assume {:print "$at(125,40767,40799)"} true;
    $t19 := $ChildMutation($t13, 3, $pending_inactive#$1_stake_StakePool($Dereference($t13)));

    // coin::merge<aptos_coin::AptosCoin>($t19, $t18) on_abort goto L3 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:869:9+72
    call $t19 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t19, $t18);
    if ($abort_flag) {
        assume {:print "$at(125,40744,40816)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(35,51):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:869:9+72
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t13), $Dereference($t19)));

    // $t20 := borrow_field<stake::StakePool>.unlock_stake_events($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:13+35
    assume {:print "$at(125,40858,40893)"} true;
    $t20 := $ChildMutation($t13, 16, $unlock_stake_events#$1_stake_StakePool($Dereference($t13)));

    // $t21 := pack stake::UnlockStakeEvent($t11, $t16) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:873:13+103
    assume {:print "$at(125,40907,41010)"} true;
    $t21 := $1_stake_UnlockStakeEvent($t11, $t16);

    // opaque begin: event::emit_event<stake::UnlockStakeEvent>($t20, $t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:871:9+194
    assume {:print "$at(125,40827,41021)"} true;

    // opaque end: event::emit_event<stake::UnlockStakeEvent>($t20, $t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:871:9+194

    // write_back[Reference($t13).unlock_stake_events (event::EventHandle<stake::UnlockStakeEvent>)]($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:871:9+194
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_unlock_stake_events($Dereference($t13), $Dereference($t20)));

    // write_back[stake::StakePool@]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:871:9+194
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:878:5+1
    assume {:print "$at(125,41027,41028)"} true;
L2:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:878:5+1
    assume {:print "$at(125,41027,41028)"} true;
    return;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:878:5+1
L3:

    // abort($t12) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:878:5+1
    assume {:print "$at(125,41027,41028)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::withdraw_with_cap [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:5+1450
procedure {:inline 1} $1_stake_withdraw_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: $1_stake_ValidatorSet;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t18: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t19: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t25: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t26: $Mutation ($1_event_EventHandle'$1_stake_WithdrawStakeEvent');
    var $t27: $1_stake_WithdrawStakeEvent;
    var $t28: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t29: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_cap]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:5+1
    assume {:print "$at(125,41628,41629)"} true;
    assume {:print "$track_local(35,57,0):", $t0} $t0 == $t0;

    // trace_local[withdraw_amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:5+1
    assume {:print "$track_local(35,57,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:28+22
    assume {:print "$at(125,41809,41831)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+12
    assume {:print "$track_local(35,57,4):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:9+38
    assume {:print "$at(125,41841,41879)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(125,41841,41879)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:26+17
    assume {:print "$at(125,41906,41923)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(125,41906,41923)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[stake_pool]($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(35,57,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // assume Identical($t9, global<stake::ValidatorSet>(1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:237:9+59
    assume {:print "$at(126,10156,10215)"} true;
    assume ($t9 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t10 := stake::get_validator_state($t6) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+33
    assume {:print "$at(125,42264,42297)"} true;
    call $t10 := $1_stake_get_validator_state($t6);
    if ($abort_flag) {
        assume {:print "$at(125,42264,42297)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t11 := 4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:50+25
    $t11 := 4;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:47+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+134
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:13+24
    assume {:print "$at(125,42342,42366)"} true;
L1:

    // $t13 := timestamp::now_seconds() on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:13+24
    assume {:print "$at(125,42342,42366)"} true;
    call $t13 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(125,42342,42366)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t14 := get_field<stake::StakePool>.locked_until_secs($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:41+28
    $t14 := $locked_until_secs#$1_stake_StakePool($Dereference($t8));

    // $t2 := >=($t13, $t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:38+2
    call $t2 := $Ge($t13, $t14);

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+134
    assume {:print "$at(125,42264,42398)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+134
L0:

    // $t15 := false at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+134
    assume {:print "$at(125,42264,42398)"} true;
    $t15 := false;
    assume $IsValid'bool'($t15);

    // $t2 := $t15 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+134
    $t2 := $t15;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:13+134
L2:

    // if ($t2) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:903:9+320
    assume {:print "$at(125,42260,42580)"} true;
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:65+10
    assume {:print "$at(125,42466,42476)"} true;
L4:

    // $t16 := borrow_field<stake::StakePool>.pending_inactive($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:60+32
    assume {:print "$at(125,42461,42493)"} true;
    $t16 := $ChildMutation($t8, 3, $pending_inactive#$1_stake_StakePool($Dereference($t8)));

    // $t17 := coin::extract_all<aptos_coin::AptosCoin>($t16) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:42+51
    call $t17,$t16 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t16);
    if ($abort_flag) {
        assume {:print "$at(125,42443,42494)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t16) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:42+51
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t8), $Dereference($t16)));

    // trace_local[pending_inactive_stake]($t17) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:17+22
    assume {:print "$track_local(35,57,3):", $t17} $t17 == $t17;

    // $t18 := borrow_field<stake::StakePool>.inactive($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:906:25+24
    assume {:print "$at(125,42520,42544)"} true;
    $t18 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // coin::merge<aptos_coin::AptosCoin>($t18, $t17) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:906:13+61
    call $t18 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t18, $t17);
    if ($abort_flag) {
        assume {:print "$at(125,42508,42569)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:906:13+61
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t18)));

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:910:31+15
    assume {:print "$at(125,42669,42684)"} true;
L3:

    // $t19 := get_field<stake::StakePool>.inactive($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:910:60+20
    assume {:print "$at(125,42698,42718)"} true;
    $t19 := $inactive#$1_stake_StakePool($Dereference($t8));

    // $t20 := coin::value<aptos_coin::AptosCoin>($t19) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:910:48+33
    call $t20 := $1_coin_value'$1_aptos_coin_AptosCoin'($t19);
    if ($abort_flag) {
        assume {:print "$at(125,42686,42719)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t21 := math64::min($t1, $t20) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:910:27+55
    call $t21 := $1_math64_min($t1, $t20);
    if ($abort_flag) {
        assume {:print "$at(125,42665,42720)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[withdraw_amount]($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:910:9+15
    assume {:print "$track_local(35,57,1):", $t21} $t21 == $t21;

    // $t22 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:32+1
    assume {:print "$at(125,42753,42754)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:29+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L6 else goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:9+56
    if ($t23) { goto L6; } else { goto L5; }

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:35+30
L6:

    // write_back[stake::StakePool@]($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:35+30
    assume {:print "$at(125,42756,42786)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // destroy($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:35+30

    // $t24 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:42+23
    call $t24 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(125,42763,42786)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_return[0]($t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:35+30
    assume {:print "$track_return(35,57,0):", $t24} $t24 == $t24;

    // $t25 := move($t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:35+30
    $t25 := $t24;

    // goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:911:35+30
    goto L7;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:914:18+10
    assume {:print "$at(125,42833,42843)"} true;
L5:

    // $t26 := borrow_field<stake::StakePool>.withdraw_stake_events($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:914:13+37
    assume {:print "$at(125,42828,42865)"} true;
    $t26 := $ChildMutation($t8, 17, $withdraw_stake_events#$1_stake_StakePool($Dereference($t8)));

    // $t27 := pack stake::WithdrawStakeEvent($t6, $t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:13+115
    assume {:print "$at(125,42879,42994)"} true;
    $t27 := $1_stake_WithdrawStakeEvent($t6, $t21);

    // opaque begin: event::emit_event<stake::WithdrawStakeEvent>($t26, $t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:913:9+208
    assume {:print "$at(125,42797,43005)"} true;

    // opaque end: event::emit_event<stake::WithdrawStakeEvent>($t26, $t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:913:9+208

    // write_back[Reference($t8).withdraw_stake_events (event::EventHandle<stake::WithdrawStakeEvent>)]($t26) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:913:9+208
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_withdraw_stake_events($Dereference($t8), $Dereference($t26)));

    // $t28 := borrow_field<stake::StakePool>.inactive($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:921:23+24
    assume {:print "$at(125,43030,43054)"} true;
    $t28 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // $t29 := coin::extract<aptos_coin::AptosCoin>($t28, $t21) on_abort goto L8 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:921:9+56
    call $t29,$t28 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t28, $t21);
    if ($abort_flag) {
        assume {:print "$at(125,43016,43072)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(35,57):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:921:9+56
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t28)));

    // write_back[stake::StakePool@]($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:921:9+56
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // trace_return[0]($t29) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:921:9+56
    assume {:print "$track_return(35,57,0):", $t29} $t29 == $t29;

    // $t25 := move($t29) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:921:9+56
    $t25 := $t29;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:922:5+1
    assume {:print "$at(125,43077,43078)"} true;
L7:

    // return $t25 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:922:5+1
    assume {:print "$at(125,43077,43078)"} true;
    $ret0 := $t25;
    return;

    // label L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:922:5+1
L8:

    // abort($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:922:5+1
    assume {:print "$at(125,43077,43078)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:153:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $last_reconfiguration_time#$1_reconfiguration_Configuration($ResourceValue($1_reconfiguration_Configuration_$memory, 1))
}

// struct reconfiguration::Configuration at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:32:5+306
type {:datatype} $1_reconfiguration_Configuration;
function {:constructor} $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration;
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, $last_reconfiguration_time#$1_reconfiguration_Configuration(s), $events#$1_reconfiguration_Configuration(s))
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch#$1_reconfiguration_Configuration(s), x, $events#$1_reconfiguration_Configuration(s))
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch#$1_reconfiguration_Configuration(s), $last_reconfiguration_time#$1_reconfiguration_Configuration(s), x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'($epoch#$1_reconfiguration_Configuration(s))
      && $IsValid'u64'($last_reconfiguration_time#$1_reconfiguration_Configuration(s))
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($events#$1_reconfiguration_Configuration(s))
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:27:5+64
type {:datatype} $1_reconfiguration_NewEpochEvent;
function {:constructor} $1_reconfiguration_NewEpochEvent($epoch: int): $1_reconfiguration_NewEpochEvent;
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'($epoch#$1_reconfiguration_NewEpochEvent(s))
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:7:9+50
function  $1_aptos_hash_spec_keccak256(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_keccak256(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:12:9+58
function  $1_aptos_hash_spec_sha2_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha2_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:17:9+58
function  $1_aptos_hash_spec_sha3_512_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_sha3_512_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:22:9+59
function  $1_aptos_hash_spec_ripemd160_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_ripemd160_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/hash.spec.move:27:9+61
function  $1_aptos_hash_spec_blake2b_256_internal(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_aptos_hash_spec_blake2b_256_internal(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:14:10+120
function {:inline} $1_pool_u64_unbound_spec_contains(pool: $1_pool_u64_unbound_Pool, shareholder: int): bool {
    $1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool(pool), shareholder)
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:23:10+213
function {:inline} $1_pool_u64_unbound_spec_shares(pool: $1_pool_u64_unbound_Pool, shareholder: int): int {
    (if ($1_pool_u64_unbound_spec_contains(pool, shareholder)) then ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool(pool), shareholder)) else (0))
}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:111:10+266
function {:inline} $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins(pool: $1_pool_u64_unbound_Pool, shares: int, total_coins: int): int {
    (if (($IsEqual'u64'($total_coins#$1_pool_u64_unbound_Pool(pool), 0) || $IsEqual'u128'($total_shares#$1_pool_u64_unbound_Pool(pool), 0))) then (0) else (((shares * total_coins) div $total_shares#$1_pool_u64_unbound_Pool(pool))))
}

// struct pool_u64_unbound::Pool at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:39:5+375
type {:datatype} $1_pool_u64_unbound_Pool;
function {:constructor} $1_pool_u64_unbound_Pool($total_coins: int, $total_shares: int, $shares: Table int (int), $scaling_factor: int): $1_pool_u64_unbound_Pool;
function {:inline} $Update'$1_pool_u64_unbound_Pool'_total_coins(s: $1_pool_u64_unbound_Pool, x: int): $1_pool_u64_unbound_Pool {
    $1_pool_u64_unbound_Pool(x, $total_shares#$1_pool_u64_unbound_Pool(s), $shares#$1_pool_u64_unbound_Pool(s), $scaling_factor#$1_pool_u64_unbound_Pool(s))
}
function {:inline} $Update'$1_pool_u64_unbound_Pool'_total_shares(s: $1_pool_u64_unbound_Pool, x: int): $1_pool_u64_unbound_Pool {
    $1_pool_u64_unbound_Pool($total_coins#$1_pool_u64_unbound_Pool(s), x, $shares#$1_pool_u64_unbound_Pool(s), $scaling_factor#$1_pool_u64_unbound_Pool(s))
}
function {:inline} $Update'$1_pool_u64_unbound_Pool'_shares(s: $1_pool_u64_unbound_Pool, x: Table int (int)): $1_pool_u64_unbound_Pool {
    $1_pool_u64_unbound_Pool($total_coins#$1_pool_u64_unbound_Pool(s), $total_shares#$1_pool_u64_unbound_Pool(s), x, $scaling_factor#$1_pool_u64_unbound_Pool(s))
}
function {:inline} $Update'$1_pool_u64_unbound_Pool'_scaling_factor(s: $1_pool_u64_unbound_Pool, x: int): $1_pool_u64_unbound_Pool {
    $1_pool_u64_unbound_Pool($total_coins#$1_pool_u64_unbound_Pool(s), $total_shares#$1_pool_u64_unbound_Pool(s), $shares#$1_pool_u64_unbound_Pool(s), x)
}
function $IsValid'$1_pool_u64_unbound_Pool'(s: $1_pool_u64_unbound_Pool): bool {
    $IsValid'u64'($total_coins#$1_pool_u64_unbound_Pool(s))
      && $IsValid'u128'($total_shares#$1_pool_u64_unbound_Pool(s))
      && $IsValid'$1_table_with_length_TableWithLength'address_u128''($shares#$1_pool_u64_unbound_Pool(s))
      && $IsValid'u64'($scaling_factor#$1_pool_u64_unbound_Pool(s))
}
function {:inline} $IsEqual'$1_pool_u64_unbound_Pool'(s1: $1_pool_u64_unbound_Pool, s2: $1_pool_u64_unbound_Pool): bool {
    s1 == s2
}

// fun pool_u64_unbound::contains [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:87:5+119
procedure {:inline 1} $1_pool_u64_unbound_contains(_$t0: $1_pool_u64_unbound_Pool, _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: Table int (int);
    var $t3: bool;
    var $t4: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:87:5+1
    assume {:print "$at(59,3468,3469)"} true;
    assume {:print "$track_local(49,5,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:87:5+1
    assume {:print "$track_local(49,5,1):", $t1} $t1 == $t1;

    // $t2 := get_field<pool_u64_unbound::Pool>.shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:88:25+12
    assume {:print "$at(59,3555,3567)"} true;
    $t2 := $shares#$1_pool_u64_unbound_Pool($t0);

    // $t3 := table_with_length::contains<address, u128>($t2, $t1) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:88:9+42
    call $t3 := $1_table_with_length_contains'address_u128'($t2, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,3539,3581)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(49,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:88:9+42
    assume {:print "$track_return(49,5,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:89:5+1
    assume {:print "$at(59,3586,3587)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:89:5+1
    assume {:print "$at(59,3586,3587)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:89:5+1
L2:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:89:5+1
    assume {:print "$at(59,3586,3587)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::destroy_empty [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:65:5+324
procedure {:inline 1} $1_pool_u64_unbound_destroy_empty(_$t0: $1_pool_u64_unbound_Pool) returns ()
{
    // declare local variables
    var $t1: Table int (int);
    var $t2: int;
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: Table int (int);
    var $t11: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'$1_table_with_length_TableWithLength'address_u128'': Table int (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:65:5+1
    assume {:print "$at(59,2801,2802)"} true;
    assume {:print "$track_local(49,9,0):", $t0} $t0 == $t0;

    // $t2 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:17+16
    assume {:print "$at(59,2856,2872)"} true;
    $t2 := $total_coins#$1_pool_u64_unbound_Pool($t0);

    // $t3 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:37+1
    $t3 := 0;
    assume $IsValid'u64'($t3);

    // $t4 := ==($t2, $t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:34+2
    $t4 := $IsEqual'u64'($t2, $t3);

    // if ($t4) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:9+72
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:9+72
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:9+72
    assume {:print "$at(59,2848,2920)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:61+18
L0:

    // $t5 := 3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:61+18
    assume {:print "$at(59,2900,2918)"} true;
    $t5 := 3;
    assume $IsValid'u64'($t5);

    // $t6 := error::invalid_state($t5) on_abort goto L4 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:40+40
    call $t6 := $1_error_invalid_state($t5);
    if ($abort_flag) {
        assume {:print "$at(59,2879,2919)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(49,9):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_abort($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:9+72
    assume {:print "$at(59,2848,2920)"} true;
    assume {:print "$track_abort(49,9):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:9+72
    $t7 := $t6;

    // goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:66:9+72
    goto L4;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:72:13+4
    assume {:print "$at(59,3061,3065)"} true;
L2:

    // ($t8, $t9, $t10, $t11) := unpack pool_u64_unbound::Pool($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:67:13+124
    assume {:print "$at(59,2934,3058)"} true;
    $t8 := $total_coins#$1_pool_u64_unbound_Pool($t0);
    $t9 := $total_shares#$1_pool_u64_unbound_Pool($t0);
    $t10 := $shares#$1_pool_u64_unbound_Pool($t0);
    $t11 := $scaling_factor#$1_pool_u64_unbound_Pool($t0);

    // destroy($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:71:29+1
    assume {:print "$at(59,3046,3047)"} true;

    // trace_local[shares]($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:70:13+6
    assume {:print "$at(59,3010,3016)"} true;
    assume {:print "$track_local(49,9,1):", $t10} $t10 == $t10;

    // destroy($t9) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:69:27+1
    assume {:print "$at(59,2995,2996)"} true;

    // destroy($t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:68:26+1
    assume {:print "$at(59,2966,2967)"} true;

    // table_with_length::destroy_empty<address, u128>($t10) on_abort goto L4 with $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:73:9+43
    assume {:print "$at(59,3075,3118)"} true;
    call $1_table_with_length_destroy_empty'address_u128'($t10);
    if ($abort_flag) {
        assume {:print "$at(59,3075,3118)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(49,9):", $t7} $t7 == $t7;
        goto L4;
    }

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:74:5+1
    assume {:print "$at(59,3124,3125)"} true;
L3:

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:74:5+1
    assume {:print "$at(59,3124,3125)"} true;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:74:5+1
L4:

    // abort($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:74:5+1
    assume {:print "$at(59,3124,3125)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::to_u128 [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:256:5+57
procedure {:inline 1} $1_pool_u64_unbound_to_u128(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[num]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:256:5+1
    assume {:print "$at(59,11211,11212)"} true;
    assume {:print "$track_local(49,17,0):", $t0} $t0 == $t0;

    // $t1 := (u128)($t0) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:257:9+13
    assume {:print "$at(59,11249,11262)"} true;
    call $t1 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(59,11249,11262)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(49,17):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:257:9+13
    assume {:print "$track_return(49,17,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:258:5+1
    assume {:print "$at(59,11267,11268)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:258:5+1
    assume {:print "$at(59,11267,11268)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:258:5+1
L2:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:258:5+1
    assume {:print "$at(59,11267,11268)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::to_u256 [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:260:5+58
procedure {:inline 1} $1_pool_u64_unbound_to_u256(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: int;
    var $temp_0'u128': int;
    var $temp_0'u256': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[num]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:260:5+1
    assume {:print "$at(59,11274,11275)"} true;
    assume {:print "$track_local(49,18,0):", $t0} $t0 == $t0;

    // $t1 := (u256)($t0) on_abort goto L2 with $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:261:9+13
    assume {:print "$at(59,11313,11326)"} true;
    call $t1 := $CastU256($t0);
    if ($abort_flag) {
        assume {:print "$at(59,11313,11326)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(49,18):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:261:9+13
    assume {:print "$track_return(49,18,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:262:5+1
    assume {:print "$at(59,11331,11332)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:262:5+1
    assume {:print "$at(59,11331,11332)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:262:5+1
L2:

    // abort($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:262:5+1
    assume {:print "$at(59,11331,11332)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::balance [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:101:5+161
procedure {:inline 1} $1_pool_u64_unbound_balance(_$t0: $1_pool_u64_unbound_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, pool_u64_unbound::spec_shares($t0, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:38:9+44
    assume {:print "$at(60,1117,1161)"} true;
    assume ($t3 == $1_pool_u64_unbound_spec_shares($t0, $t1));

    // assume Identical($t4, select pool_u64_unbound::Pool.total_coins($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:39:9+35
    assume {:print "$at(60,1170,1205)"} true;
    assume ($t4 == $total_coins#$1_pool_u64_unbound_Pool($t0));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:101:5+1
    assume {:print "$at(59,3931,3932)"} true;
    assume {:print "$track_local(49,3,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:101:5+1
    assume {:print "$track_local(49,3,1):", $t1} $t1 == $t1;

    // $t5 := pool_u64_unbound::shares($t0, $t1) on_abort goto L2 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:102:26+25
    assume {:print "$at(59,4017,4042)"} true;
    call $t5 := $1_pool_u64_unbound_shares($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,4017,4042)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(49,3):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[num_shares]($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:102:13+10
    assume {:print "$track_local(49,3,2):", $t5} $t5 == $t5;

    // $t7 := pool_u64_unbound::shares_to_amount($t0, $t5) on_abort goto L2 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:103:9+34
    assume {:print "$at(59,4052,4086)"} true;
    call $t7 := $1_pool_u64_unbound_shares_to_amount($t0, $t5);
    if ($abort_flag) {
        assume {:print "$at(59,4052,4086)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(49,3):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_return[0]($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:103:9+34
    assume {:print "$track_return(49,3,0):", $t7} $t7 == $t7;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:104:5+1
    assume {:print "$at(59,4091,4092)"} true;
L1:

    // return $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:104:5+1
    assume {:print "$at(59,4091,4092)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:104:5+1
L2:

    // abort($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:104:5+1
    assume {:print "$at(59,4091,4092)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::amount_to_shares [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:197:5+153
procedure {:inline 1} $1_pool_u64_unbound_amount_to_shares(_$t0: $1_pool_u64_unbound_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:197:5+1
    assume {:print "$at(59,8229,8230)"} true;
    assume {:print "$track_local(49,1,0):", $t0} $t0 == $t0;

    // trace_local[coins_amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:197:5+1
    assume {:print "$track_local(49,1,1):", $t1} $t1 == $t1;

    // $t2 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:198:63+16
    assume {:print "$at(59,8359,8375)"} true;
    $t2 := $total_coins#$1_pool_u64_unbound_Pool($t0);

    // $t3 := pool_u64_unbound::amount_to_shares_with_total_coins($t0, $t1, $t2) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:198:9+71
    call $t3 := $1_pool_u64_unbound_amount_to_shares_with_total_coins($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(59,8305,8376)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(49,1):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:198:9+71
    assume {:print "$track_return(49,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:199:5+1
    assume {:print "$at(59,8381,8382)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:199:5+1
    assume {:print "$at(59,8381,8382)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:199:5+1
L2:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:199:5+1
    assume {:print "$at(59,8381,8382)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::amount_to_shares_with_total_coins [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:203:5+941
procedure {:inline 1} $1_pool_u64_unbound_amount_to_shares_with_total_coins(_$t0: $1_pool_u64_unbound_Pool, _$t1: int, _$t2: int) returns ($ret0: int)
{
    // declare local variables
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:203:5+1
    assume {:print "$at(59,8558,8559)"} true;
    assume {:print "$track_local(49,2,0):", $t0} $t0 == $t0;

    // trace_local[coins_amount]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:203:5+1
    assume {:print "$track_local(49,2,1):", $t1} $t1 == $t1;

    // trace_local[total_coins]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:203:5+1
    assume {:print "$track_local(49,2,2):", $t2} $t2 == $t2;

    // $t5 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+16
    assume {:print "$at(59,8744,8760)"} true;
    $t5 := $total_coins#$1_pool_u64_unbound_Pool($t0);

    // $t6 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:33+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:30+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+47
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+47
L1:

    // $t8 := true at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+47
    assume {:print "$at(59,8744,8791)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t3 := $t8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+47
    $t3 := $t8;

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+47
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:38+4
L0:

    // $t9 := get_field<pool_u64_unbound::Pool>.total_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:38+17
    assume {:print "$at(59,8769,8786)"} true;
    $t9 := $total_shares#$1_pool_u64_unbound_Pool($t0);

    // $t10 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:59+1
    $t10 := 0;
    assume $IsValid'u128'($t10);

    // $t3 := ==($t9, $t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:56+2
    $t3 := $IsEqual'u128'($t9, $t10);

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:13+47
L2:

    // if ($t3) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:9+753
    assume {:print "$at(59,8740,9493)"} true;
    if ($t3) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:208:21+12
    assume {:print "$at(59,9050,9062)"} true;
L4:

    // $t11 := pool_u64_unbound::to_u128($t1) on_abort goto L7 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:208:13+21
    assume {:print "$at(59,9042,9063)"} true;
    call $t11 := $1_pool_u64_unbound_to_u128($t1);
    if ($abort_flag) {
        assume {:print "$at(59,9042,9063)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // $t13 := get_field<pool_u64_unbound::Pool>.scaling_factor($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:208:45+19
    $t13 := $scaling_factor#$1_pool_u64_unbound_Pool($t0);

    // $t14 := pool_u64_unbound::to_u128($t13) on_abort goto L7 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:208:37+28
    call $t14 := $1_pool_u64_unbound_to_u128($t13);
    if ($abort_flag) {
        assume {:print "$at(59,9066,9094)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // $t4 := *($t11, $t14) on_abort goto L7 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:208:35+1
    call $t4 := $MulU128($t11, $t14);
    if ($abort_flag) {
        assume {:print "$at(59,9064,9065)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:9+753
    assume {:print "$at(59,8740,9493)"} true;
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:213:34+4
    assume {:print "$at(59,9414,9418)"} true;
L3:

    // $t15 := pool_u64_unbound::to_u128($t1) on_abort goto L7 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:213:40+21
    assume {:print "$at(59,9420,9441)"} true;
    call $t15 := $1_pool_u64_unbound_to_u128($t1);
    if ($abort_flag) {
        assume {:print "$at(59,9420,9441)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // $t16 := get_field<pool_u64_unbound::Pool>.total_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:213:63+17
    $t16 := $total_shares#$1_pool_u64_unbound_Pool($t0);

    // $t17 := pool_u64_unbound::to_u128($t2) on_abort goto L7 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:213:82+20
    call $t17 := $1_pool_u64_unbound_to_u128($t2);
    if ($abort_flag) {
        assume {:print "$at(59,9462,9482)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // $t4 := pool_u64_unbound::multiply_then_divide($t0, $t15, $t16, $t17) on_abort goto L7 with $t12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:213:13+90
    call $t4 := $1_pool_u64_unbound_multiply_then_divide($t0, $t15, $t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(59,9393,9483)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(49,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:9+753
    assume {:print "$at(59,8740,9493)"} true;
L5:

    // trace_return[0]($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:205:9+753
    assume {:print "$at(59,8740,9493)"} true;
    assume {:print "$track_return(49,2,0):", $t4} $t4 == $t4;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:215:5+1
    assume {:print "$at(59,9498,9499)"} true;
L6:

    // return $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:215:5+1
    assume {:print "$at(59,9498,9499)"} true;
    $ret0 := $t4;
    return;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:215:5+1
L7:

    // abort($t12) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:215:5+1
    assume {:print "$at(59,9498,9499)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::total_coins [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:77:5+73
procedure {:inline 1} $1_pool_u64_unbound_total_coins(_$t0: $1_pool_u64_unbound_Pool) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:77:5+1
    assume {:print "$at(59,3179,3180)"} true;
    assume {:print "$track_local(49,19,0):", $t0} $t0 == $t0;

    // $t1 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:78:9+16
    assume {:print "$at(59,3230,3246)"} true;
    $t1 := $total_coins#$1_pool_u64_unbound_Pool($t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:78:9+16
    assume {:print "$track_return(49,19,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:79:5+1
    assume {:print "$at(59,3251,3252)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:79:5+1
    assume {:print "$at(59,3251,3252)"} true;
    $ret0 := $t1;
    return;

}

// fun pool_u64_unbound::deduct_shares [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:179:5+683
procedure {:inline 1} $1_pool_u64_unbound_deduct_shares(_$t0: $Mutation ($1_pool_u64_unbound_Pool), _$t1: int, _$t2: int) returns ($ret0: int, $ret1: $Mutation ($1_pool_u64_unbound_Pool))
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_pool_u64_unbound_Pool;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_pool_u64_unbound_Pool;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation (Table int (int));
    var $t20: $Mutation (int);
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: $Mutation (Table int (int));
    var $t27: int;
    var $t0: $Mutation ($1_pool_u64_unbound_Pool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t7, Sub(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares($t0), $t1), $t2)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:166:9+78
    assume {:print "$at(60,7651,7729)"} true;
    assume ($t7 == ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($Dereference($t0)), $t1) - $t2));

    // assume Identical($t8, Sub(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares($t0), $t1), $t2)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:174:9+78
    assume {:print "$at(60,8006,8084)"} true;
    assume ($t8 == ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($Dereference($t0)), $t1) - $t2));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:179:5+1
    assume {:print "$at(59,7403,7404)"} true;
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,8,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:179:5+1
    assume {:print "$track_local(49,8,1):", $t1} $t1 == $t1;

    // trace_local[num_shares]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:179:5+1
    assume {:print "$track_local(49,8,2):", $t2} $t2 == $t2;

    // $t9 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:25+19
    assume {:print "$at(59,7510,7529)"} true;
    $t9 := $Dereference($t0);

    // $t10 := pool_u64_unbound::contains($t9, $t1) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:17+27
    call $t10 := $1_pool_u64_unbound_contains($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,7502,7529)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // if ($t10) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
    assume {:print "$at(59,7494,7579)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
L0:

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
    assume {:print "$at(59,7494,7579)"} true;

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85

    // $t12 := 1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:70+22
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := error::invalid_argument($t12) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:46+47
    call $t13 := $1_error_invalid_argument($t12);
    if ($abort_flag) {
        assume {:print "$at(59,7531,7578)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_abort($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
    assume {:print "$at(59,7494,7579)"} true;
    assume {:print "$track_abort(49,8):", $t13} $t13 == $t13;

    // $t11 := move($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
    $t11 := $t13;

    // goto L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:180:9+85
    goto L10;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:24+4
    assume {:print "$at(59,7604,7608)"} true;
L2:

    // $t14 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:23+19
    assume {:print "$at(59,7603,7622)"} true;
    $t14 := $Dereference($t0);

    // $t15 := pool_u64_unbound::shares($t14, $t1) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:17+25
    call $t15 := $1_pool_u64_unbound_shares($t14, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,7597,7622)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // $t16 := >=($t15, $t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:43+2
    call $t16 := $Ge($t15, $t2);

    // if ($t16) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
    if ($t16) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
L4:

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
    assume {:print "$at(59,7589,7684)"} true;
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
L3:

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
    assume {:print "$at(59,7589,7684)"} true;

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95

    // $t17 := 4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:82+20
    $t17 := 4;
    assume $IsValid'u64'($t17);

    // $t18 := error::invalid_argument($t17) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:58+45
    call $t18 := $1_error_invalid_argument($t17);
    if ($abort_flag) {
        assume {:print "$at(59,7638,7683)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_abort($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
    assume {:print "$at(59,7589,7684)"} true;
    assume {:print "$track_abort(49,8):", $t18} $t18 == $t18;

    // $t11 := move($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
    $t11 := $t18;

    // goto L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:181:9+95
    goto L10;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:183:54+4
    assume {:print "$at(59,7740,7744)"} true;
L5:

    // $t19 := borrow_field<pool_u64_unbound::Pool>.shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:183:49+16
    assume {:print "$at(59,7735,7751)"} true;
    $t19 := $ChildMutation($t0, 2, $shares#$1_pool_u64_unbound_Pool($Dereference($t0)));

    // $t20 := table_with_length::borrow_mut<address, u128>($t19, $t1) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:183:31+48
    call $t20,$t19 := $1_table_with_length_borrow_mut'address_u128'($t19, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,7717,7765)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[existing_shares]($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:183:13+15
    $temp_0'u128' := $Dereference($t20);
    assume {:print "$track_local(49,8,5):", $temp_0'u128'} $temp_0'u128' == $temp_0'u128';

    // $t21 := read_ref($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:184:28+16
    assume {:print "$at(59,7794,7810)"} true;
    $t21 := $Dereference($t20);

    // $t22 := -($t21, $t2) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:184:45+1
    call $t22 := $Sub($t21, $t2);
    if ($abort_flag) {
        assume {:print "$at(59,7811,7812)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // write_ref($t20, $t22) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:184:9+48
    $t20 := $UpdateMutation($t20, $t22);

    // $t23 := read_ref($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:187:32+16
    assume {:print "$at(59,7931,7947)"} true;
    $t23 := $Dereference($t20);

    // write_back[Reference($t19)[]]($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:187:32+16
    $t19 := $UpdateMutation($t19, UpdateTable($Dereference($t19), ReadVec(p#$Mutation($t20), LenVec(p#$Mutation($t19))), $Dereference($t20)));

    // write_back[Reference($t0).shares (table_with_length::TableWithLength<address, u128>)]($t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:187:32+16
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_unbound_Pool'_shares($Dereference($t0), $Dereference($t19)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:187:32+16
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,8,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // trace_local[remaining_shares]($t23) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:187:13+16
    assume {:print "$track_local(49,8,6):", $t23} $t23 == $t23;

    // $t24 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:188:33+1
    assume {:print "$at(59,7981,7982)"} true;
    $t24 := 0;
    assume $IsValid'u128'($t24);

    // $t25 := ==($t23, $t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:188:30+2
    $t25 := $IsEqual'u128'($t23, $t24);

    // if ($t25) goto L7 else goto L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:188:9+96
    if ($t25) { goto L7; } else { goto L6; }

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:32+4
    assume {:print "$at(59,8017,8021)"} true;
L7:

    // $t26 := borrow_field<pool_u64_unbound::Pool>.shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:27+16
    assume {:print "$at(59,8012,8028)"} true;
    $t26 := $ChildMutation($t0, 2, $shares#$1_pool_u64_unbound_Pool($Dereference($t0)));

    // $t27 := table_with_length::remove<address, u128>($t26, $t1) on_abort goto L10 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:13+44
    call $t27,$t26 := $1_table_with_length_remove'address_u128'($t26, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,7998,8042)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,8):", $t11} $t11 == $t11;
        goto L10;
    }

    // write_back[Reference($t0).shares (table_with_length::TableWithLength<address, u128>)]($t26) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:13+44
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_unbound_Pool'_shares($Dereference($t0), $Dereference($t26)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:13+44
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,8,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // destroy($t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:13+44

    // goto L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:189:57+1
    goto L8;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:188:9+96
    assume {:print "$at(59,7957,8053)"} true;
L6:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:188:9+96
    assume {:print "$at(59,7957,8053)"} true;

    // label L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:192:9+16
    assume {:print "$at(59,8064,8080)"} true;
L8:

    // trace_return[0]($t23) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:192:9+16
    assume {:print "$at(59,8064,8080)"} true;
    assume {:print "$track_return(49,8,0):", $t23} $t23 == $t23;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:192:9+16
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,8,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:192:9+16

    // label L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:193:5+1
    assume {:print "$at(59,8085,8086)"} true;
L9:

    // return $t23 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:193:5+1
    assume {:print "$at(59,8085,8086)"} true;
    $ret0 := $t23;
    $ret1 := $t0;
    return;

    // label L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:193:5+1
L10:

    // abort($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:193:5+1
    assume {:print "$at(59,8085,8086)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::multiply_then_divide [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:251:5+172
procedure {:inline 1} $1_pool_u64_unbound_multiply_then_divide(_$t0: $1_pool_u64_unbound_Pool, _$t1: int, _$t2: int, _$t3: int) returns ($ret0: int)
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[_pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:251:5+1
    assume {:print "$at(59,11033,11034)"} true;
    assume {:print "$track_local(49,10,0):", $t0} $t0 == $t0;

    // trace_local[x]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:251:5+1
    assume {:print "$track_local(49,10,1):", $t1} $t1 == $t1;

    // trace_local[y]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:251:5+1
    assume {:print "$track_local(49,10,2):", $t2} $t2 == $t2;

    // trace_local[z]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:251:5+1
    assume {:print "$track_local(49,10,3):", $t3} $t3 == $t3;

    // $t4 := pool_u64_unbound::to_u256($t1) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:252:23+10
    assume {:print "$at(59,11136,11146)"} true;
    call $t4 := $1_pool_u64_unbound_to_u256($t1);
    if ($abort_flag) {
        assume {:print "$at(59,11136,11146)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := pool_u64_unbound::to_u256($t2) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:252:36+10
    call $t6 := $1_pool_u64_unbound_to_u256($t2);
    if ($abort_flag) {
        assume {:print "$at(59,11149,11159)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := *($t4, $t6) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:252:34+1
    call $t7 := $MulU256($t4, $t6);
    if ($abort_flag) {
        assume {:print "$at(59,11147,11148)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t8 := pool_u64_unbound::to_u256($t3) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:252:50+10
    call $t8 := $1_pool_u64_unbound_to_u256($t3);
    if ($abort_flag) {
        assume {:print "$at(59,11163,11173)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t9 := /($t7, $t8) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:252:48+1
    call $t9 := $Div($t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(59,11161,11162)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t10 := (u128)($t9) on_abort goto L2 with $t5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:253:9+16
    assume {:print "$at(59,11183,11199)"} true;
    call $t10 := $CastU128($t9);
    if ($abort_flag) {
        assume {:print "$at(59,11183,11199)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(49,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:253:9+16
    assume {:print "$track_return(49,10,0):", $t10} $t10 == $t10;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:254:5+1
    assume {:print "$at(59,11204,11205)"} true;
L1:

    // return $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:254:5+1
    assume {:print "$at(59,11204,11205)"} true;
    $ret0 := $t10;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:254:5+1
L2:

    // abort($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:254:5+1
    assume {:print "$at(59,11204,11205)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::redeem_shares [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:149:5+636
procedure {:inline 1} $1_pool_u64_unbound_redeem_shares(_$t0: $Mutation ($1_pool_u64_unbound_Pool), _$t1: int, _$t2: int) returns ($ret0: int, $ret1: $Mutation ($1_pool_u64_unbound_Pool))
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_pool_u64_unbound_Pool;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_pool_u64_unbound_Pool;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: $1_pool_u64_unbound_Pool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (int);
    var $t28: int;
    var $t29: int;
    var $t30: $Mutation (int);
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: $Mutation ($1_pool_u64_unbound_Pool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t7, pool_u64_unbound::spec_shares_to_amount_with_total_coins($t0, $t2, select pool_u64_unbound::Pool.total_coins($t0))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:127:9+102
    assume {:print "$at(60,5100,5202)"} true;
    assume ($t7 == $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($Dereference($t0), $t2, $total_coins#$1_pool_u64_unbound_Pool($Dereference($t0))));

    // assume Identical($t8, Sub(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares($t0), $t1), $t2)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:174:9+78
    assume {:print "$at(60,8006,8084)"} true;
    assume ($t8 == ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($Dereference($t0)), $t1) - $t2));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:149:5+1
    assume {:print "$at(59,6033,6034)"} true;
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,11,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:149:5+1
    assume {:print "$track_local(49,11,1):", $t1} $t1 == $t1;

    // trace_local[shares_to_redeem]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:149:5+1
    assume {:print "$track_local(49,11,2):", $t2} $t2 == $t2;

    // $t9 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:25+19
    assume {:print "$at(59,6152,6171)"} true;
    $t9 := $Dereference($t0);

    // $t10 := pool_u64_unbound::contains($t9, $t1) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:17+27
    call $t10 := $1_pool_u64_unbound_contains($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,6144,6171)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // if ($t10) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
L1:

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
    assume {:print "$at(59,6136,6221)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
L0:

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
    assume {:print "$at(59,6136,6221)"} true;

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85

    // $t12 := 1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:70+22
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := error::invalid_argument($t12) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:46+47
    call $t13 := $1_error_invalid_argument($t12);
    if ($abort_flag) {
        assume {:print "$at(59,6173,6220)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_abort($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
    assume {:print "$at(59,6136,6221)"} true;
    assume {:print "$track_abort(49,11):", $t13} $t13 == $t13;

    // $t11 := move($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
    $t11 := $t13;

    // goto L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:150:9+85
    goto L9;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:24+4
    assume {:print "$at(59,6246,6250)"} true;
L2:

    // $t14 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:23+19
    assume {:print "$at(59,6245,6264)"} true;
    $t14 := $Dereference($t0);

    // $t15 := pool_u64_unbound::shares($t14, $t1) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:17+25
    call $t15 := $1_pool_u64_unbound_shares($t14, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,6239,6264)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // $t16 := >=($t15, $t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:43+2
    call $t16 := $Ge($t15, $t2);

    // if ($t16) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
    if ($t16) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
L4:

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
    assume {:print "$at(59,6231,6332)"} true;
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
L3:

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
    assume {:print "$at(59,6231,6332)"} true;

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101

    // $t17 := 4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:88+20
    $t17 := 4;
    assume $IsValid'u64'($t17);

    // $t18 := error::invalid_argument($t17) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:64+45
    call $t18 := $1_error_invalid_argument($t17);
    if ($abort_flag) {
        assume {:print "$at(59,6286,6331)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_abort($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
    assume {:print "$at(59,6231,6332)"} true;
    assume {:print "$track_abort(49,11):", $t18} $t18 == $t18;

    // $t11 := move($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
    $t11 := $t18;

    // goto L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:151:9+101
    goto L9;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:13+16
    assume {:print "$at(59,6347,6363)"} true;
L5:

    // $t19 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:33+1
    assume {:print "$at(59,6367,6368)"} true;
    $t19 := 0;
    assume $IsValid'u128'($t19);

    // $t20 := ==($t2, $t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:30+2
    $t20 := $IsEqual'u128'($t2, $t19);

    // if ($t20) goto L7 else goto L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:9+35
    if ($t20) { goto L7; } else { goto L6; }

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8
L7:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8
    assume {:print "$at(59,6370,6378)"} true;

    // $t21 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:43+1
    $t21 := 0;
    assume $IsValid'u64'($t21);

    // trace_return[0]($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8
    assume {:print "$track_return(49,11,0):", $t21} $t21 == $t21;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,11,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8

    // $t22 := move($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8
    $t22 := $t21;

    // goto L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:153:36+8
    goto L8;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:155:47+4
    assume {:print "$at(59,6427,6431)"} true;
L6:

    // $t23 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:155:46+24
    assume {:print "$at(59,6426,6450)"} true;
    $t23 := $Dereference($t0);

    // $t24 := pool_u64_unbound::shares_to_amount($t23, $t2) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:155:30+40
    call $t24 := $1_pool_u64_unbound_shares_to_amount($t23, $t2);
    if ($abort_flag) {
        assume {:print "$at(59,6410,6450)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[redeemed_coins]($t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:155:13+14
    assume {:print "$track_local(49,11,6):", $t24} $t24 == $t24;

    // $t25 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:156:28+16
    assume {:print "$at(59,6479,6495)"} true;
    $t25 := $total_coins#$1_pool_u64_unbound_Pool($Dereference($t0));

    // $t26 := -($t25, $t24) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:156:45+1
    call $t26 := $Sub($t25, $t24);
    if ($abort_flag) {
        assume {:print "$at(59,6496,6497)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // $t27 := borrow_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:156:9+16
    $t27 := $ChildMutation($t0, 0, $total_coins#$1_pool_u64_unbound_Pool($Dereference($t0)));

    // write_ref($t27, $t26) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:156:9+52
    $t27 := $UpdateMutation($t27, $t26);

    // write_back[Reference($t0).total_coins (u64)]($t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:156:9+52
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_unbound_Pool'_total_coins($Dereference($t0), $Dereference($t27)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:156:9+52
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,11,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // $t28 := get_field<pool_u64_unbound::Pool>.total_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:157:29+17
    assume {:print "$at(59,6542,6559)"} true;
    $t28 := $total_shares#$1_pool_u64_unbound_Pool($Dereference($t0));

    // $t29 := -($t28, $t2) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:157:47+1
    call $t29 := $Sub($t28, $t2);
    if ($abort_flag) {
        assume {:print "$at(59,6560,6561)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // $t30 := borrow_field<pool_u64_unbound::Pool>.total_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:157:9+17
    $t30 := $ChildMutation($t0, 1, $total_shares#$1_pool_u64_unbound_Pool($Dereference($t0)));

    // write_ref($t30, $t29) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:157:9+56
    $t30 := $UpdateMutation($t30, $t29);

    // write_back[Reference($t0).total_shares (u128)]($t30) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:157:9+56
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_unbound_Pool'_total_shares($Dereference($t0), $Dereference($t30)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:157:9+56
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,11,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // assume Identical($t31, Sub(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares($t0), $t1), $t2)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:166:9+78
    assume {:print "$at(60,7651,7729)"} true;
    assume ($t31 == ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($Dereference($t0)), $t1) - $t2));

    // assume Identical($t32, Sub(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares($t0), $t1), $t2)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:174:9+78
    assume {:print "$at(60,8006,8084)"} true;
    assume ($t32 == ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($Dereference($t0)), $t1) - $t2));

    // $t33 := pool_u64_unbound::deduct_shares($t0, $t1, $t2) on_abort goto L9 with $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:158:9+50
    assume {:print "$at(59,6588,6638)"} true;
    call $t33,$t0 := $1_pool_u64_unbound_deduct_shares($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(59,6588,6638)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(49,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // destroy($t33) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:158:9+50

    // trace_return[0]($t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:160:9+14
    assume {:print "$at(59,6649,6663)"} true;
    assume {:print "$track_return(49,11,0):", $t24} $t24 == $t24;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:160:9+14
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t0);
    assume {:print "$track_local(49,11,0):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:160:9+14

    // $t22 := move($t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:160:9+14
    $t22 := $t24;

    // label L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:161:5+1
    assume {:print "$at(59,6668,6669)"} true;
L8:

    // return $t22 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:161:5+1
    assume {:print "$at(59,6668,6669)"} true;
    $ret0 := $t22;
    $ret1 := $t0;
    return;

    // label L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:161:5+1
L9:

    // abort($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:161:5+1
    assume {:print "$at(59,6668,6669)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::shares [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:92:5+204
procedure {:inline 1} $1_pool_u64_unbound_shares(_$t0: $1_pool_u64_unbound_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: Table int (int);
    var $t6: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:92:5+1
    assume {:print "$at(59,3657,3658)"} true;
    assume {:print "$track_local(49,13,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:92:5+1
    assume {:print "$track_local(49,13,1):", $t1} $t1 == $t1;

    // $t3 := pool_u64_unbound::contains($t0, $t1) on_abort goto L4 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:13+27
    assume {:print "$at(59,3730,3757)"} true;
    call $t3 := $1_pool_u64_unbound_contains($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,3730,3757)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(49,13):", $t4} $t4 == $t4;
        goto L4;
    }

    // if ($t3) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:9+129
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:94:29+4
    assume {:print "$at(59,3789,3793)"} true;
L1:

    // $t5 := get_field<pool_u64_unbound::Pool>.shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:94:28+12
    assume {:print "$at(59,3788,3800)"} true;
    $t5 := $shares#$1_pool_u64_unbound_Pool($t0);

    // $t2 := table_with_length::borrow<address, u128>($t5, $t1) on_abort goto L4 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:94:14+40
    call $t2 := $1_table_with_length_borrow'address_u128'($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(59,3774,3814)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(49,13):", $t4} $t4 == $t4;
        goto L4;
    }

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:9+129
    assume {:print "$at(59,3726,3855)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:9+129
L0:

    // $t6 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:96:13+1
    assume {:print "$at(59,3844,3845)"} true;
    $t6 := 0;
    assume $IsValid'u128'($t6);

    // $t2 := $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:9+129
    assume {:print "$at(59,3726,3855)"} true;
    $t2 := $t6;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:9+129
L2:

    // trace_return[0]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:93:9+129
    assume {:print "$at(59,3726,3855)"} true;
    assume {:print "$track_return(49,13,0):", $t2} $t2 == $t2;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:98:5+1
    assume {:print "$at(59,3860,3861)"} true;
L3:

    // return $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:98:5+1
    assume {:print "$at(59,3860,3861)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:98:5+1
L4:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:98:5+1
    assume {:print "$at(59,3860,3861)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::shares_to_amount [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:219:5+141
procedure {:inline 1} $1_pool_u64_unbound_shares_to_amount(_$t0: $1_pool_u64_unbound_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:219:5+1
    assume {:print "$at(59,9633,9634)"} true;
    assume {:print "$track_local(49,14,0):", $t0} $t0 == $t0;

    // trace_local[shares]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:219:5+1
    assume {:print "$track_local(49,14,1):", $t1} $t1 == $t1;

    // $t2 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:220:57+16
    assume {:print "$at(59,9751,9767)"} true;
    $t2 := $total_coins#$1_pool_u64_unbound_Pool($t0);

    // $t3 := pool_u64_unbound::shares_to_amount_with_total_coins($t0, $t1, $t2) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:220:9+65
    call $t3 := $1_pool_u64_unbound_shares_to_amount_with_total_coins($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(59,9703,9768)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(49,14):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:220:9+65
    assume {:print "$track_return(49,14,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:221:5+1
    assume {:print "$at(59,9773,9774)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:221:5+1
    assume {:print "$at(59,9773,9774)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:221:5+1
L2:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:221:5+1
    assume {:print "$at(59,9773,9774)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64_unbound::shares_to_amount_with_total_coins [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:225:5+620
procedure {:inline 1} $1_pool_u64_unbound_shares_to_amount_with_total_coins(_$t0: $1_pool_u64_unbound_Pool, _$t1: int, _$t2: int) returns ($ret0: int)
{
    // declare local variables
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:225:5+1
    assume {:print "$at(59,9941,9942)"} true;
    assume {:print "$track_local(49,15,0):", $t0} $t0 == $t0;

    // trace_local[shares]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:225:5+1
    assume {:print "$track_local(49,15,1):", $t1} $t1 == $t1;

    // trace_local[total_coins]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:225:5+1
    assume {:print "$track_local(49,15,2):", $t2} $t2 == $t2;

    // $t5 := get_field<pool_u64_unbound::Pool>.total_coins($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+16
    assume {:print "$at(59,10109,10125)"} true;
    $t5 := $total_coins#$1_pool_u64_unbound_Pool($t0);

    // $t6 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:33+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:30+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+47
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+47
L1:

    // $t8 := true at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+47
    assume {:print "$at(59,10109,10156)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t3 := $t8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+47
    $t3 := $t8;

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+47
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:38+4
L0:

    // $t9 := get_field<pool_u64_unbound::Pool>.total_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:38+17
    assume {:print "$at(59,10134,10151)"} true;
    $t9 := $total_shares#$1_pool_u64_unbound_Pool($t0);

    // $t10 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:59+1
    $t10 := 0;
    assume $IsValid'u128'($t10);

    // $t3 := ==($t9, $t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:56+2
    $t3 := $IsEqual'u128'($t9, $t10);

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:13+47
L2:

    // if ($t3) goto L4 else goto L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:9+450
    assume {:print "$at(59,10105,10555)"} true;
    if ($t3) { goto L4; } else { goto L3; }

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:9+450
L4:

    // $t11 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:228:13+1
    assume {:print "$at(59,10172,10173)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // $t4 := $t11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:9+450
    assume {:print "$at(59,10105,10555)"} true;
    $t4 := $t11;

    // goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:9+450
    goto L5;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:233:35+4
    assume {:print "$at(59,10483,10487)"} true;
L3:

    // $t12 := pool_u64_unbound::to_u128($t2) on_abort goto L7 with $t13 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:233:49+20
    assume {:print "$at(59,10497,10517)"} true;
    call $t12 := $1_pool_u64_unbound_to_u128($t2);
    if ($abort_flag) {
        assume {:print "$at(59,10497,10517)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(49,15):", $t13} $t13 == $t13;
        goto L7;
    }

    // $t14 := get_field<pool_u64_unbound::Pool>.total_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:233:71+17
    $t14 := $total_shares#$1_pool_u64_unbound_Pool($t0);

    // $t15 := pool_u64_unbound::multiply_then_divide($t0, $t1, $t12, $t14) on_abort goto L7 with $t13 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:233:14+75
    call $t15 := $1_pool_u64_unbound_multiply_then_divide($t0, $t1, $t12, $t14);
    if ($abort_flag) {
        assume {:print "$at(59,10462,10537)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(49,15):", $t13} $t13 == $t13;
        goto L7;
    }

    // $t4 := (u64)($t15) on_abort goto L7 with $t13 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:233:13+84
    call $t4 := $CastU64($t15);
    if ($abort_flag) {
        assume {:print "$at(59,10461,10545)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(49,15):", $t13} $t13 == $t13;
        goto L7;
    }

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:9+450
    assume {:print "$at(59,10105,10555)"} true;
L5:

    // trace_return[0]($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:227:9+450
    assume {:print "$at(59,10105,10555)"} true;
    assume {:print "$track_return(49,15,0):", $t4} $t4 == $t4;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:235:5+1
    assume {:print "$at(59,10560,10561)"} true;
L6:

    // return $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:235:5+1
    assume {:print "$at(59,10560,10561)"} true;
    $ret0 := $t4;
    return;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:235:5+1
L7:

    // abort($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.move:235:5+1
    assume {:print "$at(59,10560,10561)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// spec fun at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:528:5+136
function {:inline} $1_delegation_pool_$get_pool_address(pool: $1_delegation_pool_DelegationPool): int {
    $1_account_$get_signer_capability_address($stake_pool_signer_cap#$1_delegation_pool_DelegationPool(pool))
}

// struct delegation_pool::AddStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:198:5+166
type {:datatype} $1_delegation_pool_AddStakeEvent;
function {:constructor} $1_delegation_pool_AddStakeEvent($pool_address: int, $delegator_address: int, $amount_added: int, $add_stake_fee: int): $1_delegation_pool_AddStakeEvent;
function {:inline} $Update'$1_delegation_pool_AddStakeEvent'_pool_address(s: $1_delegation_pool_AddStakeEvent, x: int): $1_delegation_pool_AddStakeEvent {
    $1_delegation_pool_AddStakeEvent(x, $delegator_address#$1_delegation_pool_AddStakeEvent(s), $amount_added#$1_delegation_pool_AddStakeEvent(s), $add_stake_fee#$1_delegation_pool_AddStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_AddStakeEvent'_delegator_address(s: $1_delegation_pool_AddStakeEvent, x: int): $1_delegation_pool_AddStakeEvent {
    $1_delegation_pool_AddStakeEvent($pool_address#$1_delegation_pool_AddStakeEvent(s), x, $amount_added#$1_delegation_pool_AddStakeEvent(s), $add_stake_fee#$1_delegation_pool_AddStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_AddStakeEvent'_amount_added(s: $1_delegation_pool_AddStakeEvent, x: int): $1_delegation_pool_AddStakeEvent {
    $1_delegation_pool_AddStakeEvent($pool_address#$1_delegation_pool_AddStakeEvent(s), $delegator_address#$1_delegation_pool_AddStakeEvent(s), x, $add_stake_fee#$1_delegation_pool_AddStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_AddStakeEvent'_add_stake_fee(s: $1_delegation_pool_AddStakeEvent, x: int): $1_delegation_pool_AddStakeEvent {
    $1_delegation_pool_AddStakeEvent($pool_address#$1_delegation_pool_AddStakeEvent(s), $delegator_address#$1_delegation_pool_AddStakeEvent(s), $amount_added#$1_delegation_pool_AddStakeEvent(s), x)
}
function $IsValid'$1_delegation_pool_AddStakeEvent'(s: $1_delegation_pool_AddStakeEvent): bool {
    $IsValid'address'($pool_address#$1_delegation_pool_AddStakeEvent(s))
      && $IsValid'address'($delegator_address#$1_delegation_pool_AddStakeEvent(s))
      && $IsValid'u64'($amount_added#$1_delegation_pool_AddStakeEvent(s))
      && $IsValid'u64'($add_stake_fee#$1_delegation_pool_AddStakeEvent(s))
}
function {:inline} $IsEqual'$1_delegation_pool_AddStakeEvent'(s1: $1_delegation_pool_AddStakeEvent, s2: $1_delegation_pool_AddStakeEvent): bool {
    s1 == s2
}

// struct delegation_pool::ReactivateStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:205:5+151
type {:datatype} $1_delegation_pool_ReactivateStakeEvent;
function {:constructor} $1_delegation_pool_ReactivateStakeEvent($pool_address: int, $delegator_address: int, $amount_reactivated: int): $1_delegation_pool_ReactivateStakeEvent;
function {:inline} $Update'$1_delegation_pool_ReactivateStakeEvent'_pool_address(s: $1_delegation_pool_ReactivateStakeEvent, x: int): $1_delegation_pool_ReactivateStakeEvent {
    $1_delegation_pool_ReactivateStakeEvent(x, $delegator_address#$1_delegation_pool_ReactivateStakeEvent(s), $amount_reactivated#$1_delegation_pool_ReactivateStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_ReactivateStakeEvent'_delegator_address(s: $1_delegation_pool_ReactivateStakeEvent, x: int): $1_delegation_pool_ReactivateStakeEvent {
    $1_delegation_pool_ReactivateStakeEvent($pool_address#$1_delegation_pool_ReactivateStakeEvent(s), x, $amount_reactivated#$1_delegation_pool_ReactivateStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_ReactivateStakeEvent'_amount_reactivated(s: $1_delegation_pool_ReactivateStakeEvent, x: int): $1_delegation_pool_ReactivateStakeEvent {
    $1_delegation_pool_ReactivateStakeEvent($pool_address#$1_delegation_pool_ReactivateStakeEvent(s), $delegator_address#$1_delegation_pool_ReactivateStakeEvent(s), x)
}
function $IsValid'$1_delegation_pool_ReactivateStakeEvent'(s: $1_delegation_pool_ReactivateStakeEvent): bool {
    $IsValid'address'($pool_address#$1_delegation_pool_ReactivateStakeEvent(s))
      && $IsValid'address'($delegator_address#$1_delegation_pool_ReactivateStakeEvent(s))
      && $IsValid'u64'($amount_reactivated#$1_delegation_pool_ReactivateStakeEvent(s))
}
function {:inline} $IsEqual'$1_delegation_pool_ReactivateStakeEvent'(s1: $1_delegation_pool_ReactivateStakeEvent, s2: $1_delegation_pool_ReactivateStakeEvent): bool {
    s1 == s2
}

// struct delegation_pool::UnlockStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:211:5+144
type {:datatype} $1_delegation_pool_UnlockStakeEvent;
function {:constructor} $1_delegation_pool_UnlockStakeEvent($pool_address: int, $delegator_address: int, $amount_unlocked: int): $1_delegation_pool_UnlockStakeEvent;
function {:inline} $Update'$1_delegation_pool_UnlockStakeEvent'_pool_address(s: $1_delegation_pool_UnlockStakeEvent, x: int): $1_delegation_pool_UnlockStakeEvent {
    $1_delegation_pool_UnlockStakeEvent(x, $delegator_address#$1_delegation_pool_UnlockStakeEvent(s), $amount_unlocked#$1_delegation_pool_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_UnlockStakeEvent'_delegator_address(s: $1_delegation_pool_UnlockStakeEvent, x: int): $1_delegation_pool_UnlockStakeEvent {
    $1_delegation_pool_UnlockStakeEvent($pool_address#$1_delegation_pool_UnlockStakeEvent(s), x, $amount_unlocked#$1_delegation_pool_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_UnlockStakeEvent'_amount_unlocked(s: $1_delegation_pool_UnlockStakeEvent, x: int): $1_delegation_pool_UnlockStakeEvent {
    $1_delegation_pool_UnlockStakeEvent($pool_address#$1_delegation_pool_UnlockStakeEvent(s), $delegator_address#$1_delegation_pool_UnlockStakeEvent(s), x)
}
function $IsValid'$1_delegation_pool_UnlockStakeEvent'(s: $1_delegation_pool_UnlockStakeEvent): bool {
    $IsValid'address'($pool_address#$1_delegation_pool_UnlockStakeEvent(s))
      && $IsValid'address'($delegator_address#$1_delegation_pool_UnlockStakeEvent(s))
      && $IsValid'u64'($amount_unlocked#$1_delegation_pool_UnlockStakeEvent(s))
}
function {:inline} $IsEqual'$1_delegation_pool_UnlockStakeEvent'(s1: $1_delegation_pool_UnlockStakeEvent, s2: $1_delegation_pool_UnlockStakeEvent): bool {
    s1 == s2
}

// struct delegation_pool::WithdrawStakeEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:217:5+147
type {:datatype} $1_delegation_pool_WithdrawStakeEvent;
function {:constructor} $1_delegation_pool_WithdrawStakeEvent($pool_address: int, $delegator_address: int, $amount_withdrawn: int): $1_delegation_pool_WithdrawStakeEvent;
function {:inline} $Update'$1_delegation_pool_WithdrawStakeEvent'_pool_address(s: $1_delegation_pool_WithdrawStakeEvent, x: int): $1_delegation_pool_WithdrawStakeEvent {
    $1_delegation_pool_WithdrawStakeEvent(x, $delegator_address#$1_delegation_pool_WithdrawStakeEvent(s), $amount_withdrawn#$1_delegation_pool_WithdrawStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_WithdrawStakeEvent'_delegator_address(s: $1_delegation_pool_WithdrawStakeEvent, x: int): $1_delegation_pool_WithdrawStakeEvent {
    $1_delegation_pool_WithdrawStakeEvent($pool_address#$1_delegation_pool_WithdrawStakeEvent(s), x, $amount_withdrawn#$1_delegation_pool_WithdrawStakeEvent(s))
}
function {:inline} $Update'$1_delegation_pool_WithdrawStakeEvent'_amount_withdrawn(s: $1_delegation_pool_WithdrawStakeEvent, x: int): $1_delegation_pool_WithdrawStakeEvent {
    $1_delegation_pool_WithdrawStakeEvent($pool_address#$1_delegation_pool_WithdrawStakeEvent(s), $delegator_address#$1_delegation_pool_WithdrawStakeEvent(s), x)
}
function $IsValid'$1_delegation_pool_WithdrawStakeEvent'(s: $1_delegation_pool_WithdrawStakeEvent): bool {
    $IsValid'address'($pool_address#$1_delegation_pool_WithdrawStakeEvent(s))
      && $IsValid'address'($delegator_address#$1_delegation_pool_WithdrawStakeEvent(s))
      && $IsValid'u64'($amount_withdrawn#$1_delegation_pool_WithdrawStakeEvent(s))
}
function {:inline} $IsEqual'$1_delegation_pool_WithdrawStakeEvent'(s1: $1_delegation_pool_WithdrawStakeEvent, s2: $1_delegation_pool_WithdrawStakeEvent): bool {
    s1 == s2
}

// struct delegation_pool::DelegationPool at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:173:5+1464
type {:datatype} $1_delegation_pool_DelegationPool;
function {:constructor} $1_delegation_pool_DelegationPool($active_shares: $1_pool_u64_unbound_Pool, $observed_lockup_cycle: $1_delegation_pool_ObservedLockupCycle, $inactive_shares: Table int ($1_pool_u64_unbound_Pool), $pending_withdrawals: Table int ($1_delegation_pool_ObservedLockupCycle), $stake_pool_signer_cap: $1_account_SignerCapability, $total_coins_inactive: int, $operator_commission_percentage: int, $add_stake_events: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent', $reactivate_stake_events: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent', $unlock_stake_events: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent', $withdraw_stake_events: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent', $distribute_commission_events: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'): $1_delegation_pool_DelegationPool;
function {:inline} $Update'$1_delegation_pool_DelegationPool'_active_shares(s: $1_delegation_pool_DelegationPool, x: $1_pool_u64_unbound_Pool): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool(x, $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_observed_lockup_cycle(s: $1_delegation_pool_DelegationPool, x: $1_delegation_pool_ObservedLockupCycle): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), x, $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_inactive_shares(s: $1_delegation_pool_DelegationPool, x: Table int ($1_pool_u64_unbound_Pool)): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), x, $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_pending_withdrawals(s: $1_delegation_pool_DelegationPool, x: Table int ($1_delegation_pool_ObservedLockupCycle)): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), x, $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_stake_pool_signer_cap(s: $1_delegation_pool_DelegationPool, x: $1_account_SignerCapability): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), x, $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_total_coins_inactive(s: $1_delegation_pool_DelegationPool, x: int): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), x, $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_operator_commission_percentage(s: $1_delegation_pool_DelegationPool, x: int): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), x, $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_add_stake_events(s: $1_delegation_pool_DelegationPool, x: $1_event_EventHandle'$1_delegation_pool_AddStakeEvent'): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), x, $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_reactivate_stake_events(s: $1_delegation_pool_DelegationPool, x: $1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent'): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), x, $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_unlock_stake_events(s: $1_delegation_pool_DelegationPool, x: $1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent'): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), x, $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_withdraw_stake_events(s: $1_delegation_pool_DelegationPool, x: $1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent'): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), x, $distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $Update'$1_delegation_pool_DelegationPool'_distribute_commission_events(s: $1_delegation_pool_DelegationPool, x: $1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent'): $1_delegation_pool_DelegationPool {
    $1_delegation_pool_DelegationPool($active_shares#$1_delegation_pool_DelegationPool(s), $observed_lockup_cycle#$1_delegation_pool_DelegationPool(s), $inactive_shares#$1_delegation_pool_DelegationPool(s), $pending_withdrawals#$1_delegation_pool_DelegationPool(s), $stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s), $total_coins_inactive#$1_delegation_pool_DelegationPool(s), $operator_commission_percentage#$1_delegation_pool_DelegationPool(s), $add_stake_events#$1_delegation_pool_DelegationPool(s), $reactivate_stake_events#$1_delegation_pool_DelegationPool(s), $unlock_stake_events#$1_delegation_pool_DelegationPool(s), $withdraw_stake_events#$1_delegation_pool_DelegationPool(s), x)
}
function $IsValid'$1_delegation_pool_DelegationPool'(s: $1_delegation_pool_DelegationPool): bool {
    $IsValid'$1_pool_u64_unbound_Pool'($active_shares#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_delegation_pool_ObservedLockupCycle'($observed_lockup_cycle#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_table_Table'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool''($inactive_shares#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_table_Table'address_$1_delegation_pool_ObservedLockupCycle''($pending_withdrawals#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_account_SignerCapability'($stake_pool_signer_cap#$1_delegation_pool_DelegationPool(s))
      && $IsValid'u64'($total_coins_inactive#$1_delegation_pool_DelegationPool(s))
      && $IsValid'u64'($operator_commission_percentage#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_event_EventHandle'$1_delegation_pool_AddStakeEvent''($add_stake_events#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_event_EventHandle'$1_delegation_pool_ReactivateStakeEvent''($reactivate_stake_events#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_event_EventHandle'$1_delegation_pool_UnlockStakeEvent''($unlock_stake_events#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent''($withdraw_stake_events#$1_delegation_pool_DelegationPool(s))
      && $IsValid'$1_event_EventHandle'$1_delegation_pool_DistributeCommissionEvent''($distribute_commission_events#$1_delegation_pool_DelegationPool(s))
}
function {:inline} $IsEqual'$1_delegation_pool_DelegationPool'(s1: $1_delegation_pool_DelegationPool, s2: $1_delegation_pool_DelegationPool): bool {
    s1 == s2
}
var $1_delegation_pool_DelegationPool_$memory: $Memory $1_delegation_pool_DelegationPool;

// struct delegation_pool::DistributeCommissionEvent at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:223:5+188
type {:datatype} $1_delegation_pool_DistributeCommissionEvent;
function {:constructor} $1_delegation_pool_DistributeCommissionEvent($pool_address: int, $operator: int, $commission_active: int, $commission_pending_inactive: int): $1_delegation_pool_DistributeCommissionEvent;
function {:inline} $Update'$1_delegation_pool_DistributeCommissionEvent'_pool_address(s: $1_delegation_pool_DistributeCommissionEvent, x: int): $1_delegation_pool_DistributeCommissionEvent {
    $1_delegation_pool_DistributeCommissionEvent(x, $operator#$1_delegation_pool_DistributeCommissionEvent(s), $commission_active#$1_delegation_pool_DistributeCommissionEvent(s), $commission_pending_inactive#$1_delegation_pool_DistributeCommissionEvent(s))
}
function {:inline} $Update'$1_delegation_pool_DistributeCommissionEvent'_operator(s: $1_delegation_pool_DistributeCommissionEvent, x: int): $1_delegation_pool_DistributeCommissionEvent {
    $1_delegation_pool_DistributeCommissionEvent($pool_address#$1_delegation_pool_DistributeCommissionEvent(s), x, $commission_active#$1_delegation_pool_DistributeCommissionEvent(s), $commission_pending_inactive#$1_delegation_pool_DistributeCommissionEvent(s))
}
function {:inline} $Update'$1_delegation_pool_DistributeCommissionEvent'_commission_active(s: $1_delegation_pool_DistributeCommissionEvent, x: int): $1_delegation_pool_DistributeCommissionEvent {
    $1_delegation_pool_DistributeCommissionEvent($pool_address#$1_delegation_pool_DistributeCommissionEvent(s), $operator#$1_delegation_pool_DistributeCommissionEvent(s), x, $commission_pending_inactive#$1_delegation_pool_DistributeCommissionEvent(s))
}
function {:inline} $Update'$1_delegation_pool_DistributeCommissionEvent'_commission_pending_inactive(s: $1_delegation_pool_DistributeCommissionEvent, x: int): $1_delegation_pool_DistributeCommissionEvent {
    $1_delegation_pool_DistributeCommissionEvent($pool_address#$1_delegation_pool_DistributeCommissionEvent(s), $operator#$1_delegation_pool_DistributeCommissionEvent(s), $commission_active#$1_delegation_pool_DistributeCommissionEvent(s), x)
}
function $IsValid'$1_delegation_pool_DistributeCommissionEvent'(s: $1_delegation_pool_DistributeCommissionEvent): bool {
    $IsValid'address'($pool_address#$1_delegation_pool_DistributeCommissionEvent(s))
      && $IsValid'address'($operator#$1_delegation_pool_DistributeCommissionEvent(s))
      && $IsValid'u64'($commission_active#$1_delegation_pool_DistributeCommissionEvent(s))
      && $IsValid'u64'($commission_pending_inactive#$1_delegation_pool_DistributeCommissionEvent(s))
}
function {:inline} $IsEqual'$1_delegation_pool_DistributeCommissionEvent'(s1: $1_delegation_pool_DistributeCommissionEvent, s2: $1_delegation_pool_DistributeCommissionEvent): bool {
    s1 == s2
}

// struct delegation_pool::ObservedLockupCycle at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:169:5+76
type {:datatype} $1_delegation_pool_ObservedLockupCycle;
function {:constructor} $1_delegation_pool_ObservedLockupCycle($index: int): $1_delegation_pool_ObservedLockupCycle;
function {:inline} $Update'$1_delegation_pool_ObservedLockupCycle'_index(s: $1_delegation_pool_ObservedLockupCycle, x: int): $1_delegation_pool_ObservedLockupCycle {
    $1_delegation_pool_ObservedLockupCycle(x)
}
function $IsValid'$1_delegation_pool_ObservedLockupCycle'(s: $1_delegation_pool_ObservedLockupCycle): bool {
    $IsValid'u64'($index#$1_delegation_pool_ObservedLockupCycle(s))
}
function {:inline} $IsEqual'$1_delegation_pool_ObservedLockupCycle'(s1: $1_delegation_pool_ObservedLockupCycle, s2: $1_delegation_pool_ObservedLockupCycle): bool {
    s1 == s2
}

// struct delegation_pool::Ghost$ghost_coin_3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:50:9+25
type {:datatype} $1_delegation_pool_Ghost$ghost_coin_3;
function {:constructor} $1_delegation_pool_Ghost$ghost_coin_3($v: int): $1_delegation_pool_Ghost$ghost_coin_3;
function {:inline} $Update'$1_delegation_pool_Ghost$ghost_coin_3'_v(s: $1_delegation_pool_Ghost$ghost_coin_3, x: int): $1_delegation_pool_Ghost$ghost_coin_3 {
    $1_delegation_pool_Ghost$ghost_coin_3(x)
}
function $IsValid'$1_delegation_pool_Ghost$ghost_coin_3'(s: $1_delegation_pool_Ghost$ghost_coin_3): bool {
    $IsValid'u64'($v#$1_delegation_pool_Ghost$ghost_coin_3(s))
}
function {:inline} $IsEqual'$1_delegation_pool_Ghost$ghost_coin_3'(s1: $1_delegation_pool_Ghost$ghost_coin_3, s2: $1_delegation_pool_Ghost$ghost_coin_3): bool {
    s1 == s2
}
var $1_delegation_pool_Ghost$ghost_coin_3_$memory: $Memory $1_delegation_pool_Ghost$ghost_coin_3;

// struct delegation_pool::Ghost$ghost_coin_1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:48:9+25
type {:datatype} $1_delegation_pool_Ghost$ghost_coin_1;
function {:constructor} $1_delegation_pool_Ghost$ghost_coin_1($v: int): $1_delegation_pool_Ghost$ghost_coin_1;
function {:inline} $Update'$1_delegation_pool_Ghost$ghost_coin_1'_v(s: $1_delegation_pool_Ghost$ghost_coin_1, x: int): $1_delegation_pool_Ghost$ghost_coin_1 {
    $1_delegation_pool_Ghost$ghost_coin_1(x)
}
function $IsValid'$1_delegation_pool_Ghost$ghost_coin_1'(s: $1_delegation_pool_Ghost$ghost_coin_1): bool {
    $IsValid'u64'($v#$1_delegation_pool_Ghost$ghost_coin_1(s))
}
function {:inline} $IsEqual'$1_delegation_pool_Ghost$ghost_coin_1'(s1: $1_delegation_pool_Ghost$ghost_coin_1, s2: $1_delegation_pool_Ghost$ghost_coin_1): bool {
    s1 == s2
}
var $1_delegation_pool_Ghost$ghost_coin_1_$memory: $Memory $1_delegation_pool_Ghost$ghost_coin_1;

// struct delegation_pool::Ghost$ghost_coin_4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:51:9+25
type {:datatype} $1_delegation_pool_Ghost$ghost_coin_4;
function {:constructor} $1_delegation_pool_Ghost$ghost_coin_4($v: int): $1_delegation_pool_Ghost$ghost_coin_4;
function {:inline} $Update'$1_delegation_pool_Ghost$ghost_coin_4'_v(s: $1_delegation_pool_Ghost$ghost_coin_4, x: int): $1_delegation_pool_Ghost$ghost_coin_4 {
    $1_delegation_pool_Ghost$ghost_coin_4(x)
}
function $IsValid'$1_delegation_pool_Ghost$ghost_coin_4'(s: $1_delegation_pool_Ghost$ghost_coin_4): bool {
    $IsValid'u64'($v#$1_delegation_pool_Ghost$ghost_coin_4(s))
}
function {:inline} $IsEqual'$1_delegation_pool_Ghost$ghost_coin_4'(s1: $1_delegation_pool_Ghost$ghost_coin_4, s2: $1_delegation_pool_Ghost$ghost_coin_4): bool {
    s1 == s2
}
var $1_delegation_pool_Ghost$ghost_coin_4_$memory: $Memory $1_delegation_pool_Ghost$ghost_coin_4;

// struct delegation_pool::Ghost$ghost_coin_2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:49:9+25
type {:datatype} $1_delegation_pool_Ghost$ghost_coin_2;
function {:constructor} $1_delegation_pool_Ghost$ghost_coin_2($v: int): $1_delegation_pool_Ghost$ghost_coin_2;
function {:inline} $Update'$1_delegation_pool_Ghost$ghost_coin_2'_v(s: $1_delegation_pool_Ghost$ghost_coin_2, x: int): $1_delegation_pool_Ghost$ghost_coin_2 {
    $1_delegation_pool_Ghost$ghost_coin_2(x)
}
function $IsValid'$1_delegation_pool_Ghost$ghost_coin_2'(s: $1_delegation_pool_Ghost$ghost_coin_2): bool {
    $IsValid'u64'($v#$1_delegation_pool_Ghost$ghost_coin_2(s))
}
function {:inline} $IsEqual'$1_delegation_pool_Ghost$ghost_coin_2'(s1: $1_delegation_pool_Ghost$ghost_coin_2, s2: $1_delegation_pool_Ghost$ghost_coin_2): bool {
    s1 == s2
}
var $1_delegation_pool_Ghost$ghost_coin_2_$memory: $Memory $1_delegation_pool_Ghost$ghost_coin_2;

// struct delegation_pool::Ghost$ghost_bool at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:71:9+24
type {:datatype} $1_delegation_pool_Ghost$ghost_bool;
function {:constructor} $1_delegation_pool_Ghost$ghost_bool($v: bool): $1_delegation_pool_Ghost$ghost_bool;
function {:inline} $Update'$1_delegation_pool_Ghost$ghost_bool'_v(s: $1_delegation_pool_Ghost$ghost_bool, x: bool): $1_delegation_pool_Ghost$ghost_bool {
    $1_delegation_pool_Ghost$ghost_bool(x)
}
function $IsValid'$1_delegation_pool_Ghost$ghost_bool'(s: $1_delegation_pool_Ghost$ghost_bool): bool {
    $IsValid'bool'($v#$1_delegation_pool_Ghost$ghost_bool(s))
}
function {:inline} $IsEqual'$1_delegation_pool_Ghost$ghost_bool'(s1: $1_delegation_pool_Ghost$ghost_bool, s2: $1_delegation_pool_Ghost$ghost_bool): bool {
    s1 == s2
}
var $1_delegation_pool_Ghost$ghost_bool_$memory: $Memory $1_delegation_pool_Ghost$ghost_bool;

// struct delegation_pool::Ghost$ghost_olc at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:72:9+38
type {:datatype} $1_delegation_pool_Ghost$ghost_olc;
function {:constructor} $1_delegation_pool_Ghost$ghost_olc($v: $1_delegation_pool_ObservedLockupCycle): $1_delegation_pool_Ghost$ghost_olc;
function {:inline} $Update'$1_delegation_pool_Ghost$ghost_olc'_v(s: $1_delegation_pool_Ghost$ghost_olc, x: $1_delegation_pool_ObservedLockupCycle): $1_delegation_pool_Ghost$ghost_olc {
    $1_delegation_pool_Ghost$ghost_olc(x)
}
function $IsValid'$1_delegation_pool_Ghost$ghost_olc'(s: $1_delegation_pool_Ghost$ghost_olc): bool {
    $IsValid'$1_delegation_pool_ObservedLockupCycle'($v#$1_delegation_pool_Ghost$ghost_olc(s))
}
function {:inline} $IsEqual'$1_delegation_pool_Ghost$ghost_olc'(s1: $1_delegation_pool_Ghost$ghost_olc, s2: $1_delegation_pool_Ghost$ghost_olc): bool {
    s1 == s2
}
var $1_delegation_pool_Ghost$ghost_olc_$memory: $Memory $1_delegation_pool_Ghost$ghost_olc;

// fun delegation_pool::amount_to_shares_to_redeem [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:947:5+478
procedure {:inline 1} $1_delegation_pool_amount_to_shares_to_redeem(_$t0: $1_pool_u64_unbound_Pool, _$t1: int, _$t2: int) returns ($ret0: int)
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t4, pool_u64_unbound::spec_shares($t0, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$at(3,33931,33992)"} true;
    assume ($t4 == $1_pool_u64_unbound_spec_shares($t0, $t1));

    // assume Identical($t5, select pool_u64_unbound::Pool.total_coins($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:576:9+42
    assume {:print "$at(3,34001,34043)"} true;
    assume ($t5 == $total_coins#$1_pool_u64_unbound_Pool($t0));

    // trace_local[shares_pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:947:5+1
    assume {:print "$at(2,49445,49446)"} true;
    assume {:print "$track_local(50,1,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:947:5+1
    assume {:print "$track_local(50,1,1):", $t1} $t1 == $t1;

    // trace_local[coins_amount]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:947:5+1
    assume {:print "$track_local(50,1,2):", $t2} $t2 == $t2;

    // assume Identical($t6, pool_u64_unbound::spec_shares($t0, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:38:9+44
    assume {:print "$at(60,1117,1161)"} true;
    assume ($t6 == $1_pool_u64_unbound_spec_shares($t0, $t1));

    // assume Identical($t7, select pool_u64_unbound::Pool.total_coins($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:39:9+35
    assume {:print "$at(60,1170,1205)"} true;
    assume ($t7 == $total_coins#$1_pool_u64_unbound_Pool($t0));

    // $t8 := pool_u64_unbound::balance($t0, $t1) on_abort goto L4 with $t9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:952:29+43
    assume {:print "$at(2,49614,49657)"} true;
    call $t8 := $1_pool_u64_unbound_balance($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,49614,49657)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,1):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t10 := >=($t2, $t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:952:26+2
    call $t10 := $Ge($t2, $t8);

    // if ($t10) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:952:9+323
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:954:30+11
    assume {:print "$at(2,49799,49810)"} true;
L1:

    // $t3 := pool_u64_unbound::shares($t0, $t1) on_abort goto L4 with $t9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:954:13+42
    assume {:print "$at(2,49782,49824)"} true;
    call $t3 := $1_pool_u64_unbound_shares($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,49782,49824)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,1):", $t9} $t9 == $t9;
        goto L4;
    }

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:952:9+323
    assume {:print "$at(2,49594,49917)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:956:40+11
    assume {:print "$at(2,49881,49892)"} true;
L0:

    // $t3 := pool_u64_unbound::amount_to_shares($t0, $t2) on_abort goto L4 with $t9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:956:13+53
    assume {:print "$at(2,49854,49907)"} true;
    call $t3 := $1_pool_u64_unbound_amount_to_shares($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,49854,49907)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(50,1):", $t9} $t9 == $t9;
        goto L4;
    }

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:952:9+323
    assume {:print "$at(2,49594,49917)"} true;
L2:

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:952:9+323
    assume {:print "$at(2,49594,49917)"} true;
    assume {:print "$track_return(50,1,0):", $t3} $t3 == $t3;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:958:5+1
    assume {:print "$at(2,49922,49923)"} true;
L3:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:958:5+1
    assume {:print "$at(2,49922,49923)"} true;
    $ret0 := $t3;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:958:5+1
L4:

    // abort($t9) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:958:5+1
    assume {:print "$at(2,49922,49923)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun delegation_pool::can_withdraw_pending_inactive [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:401:5+235
procedure {:inline 1} $1_delegation_pool_can_withdraw_pending_inactive(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: $1_stake_ValidatorSet;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:401:5+1
    assume {:print "$at(2,21270,21271)"} true;
    assume {:print "$track_local(50,8,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<stake::ValidatorSet>(1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:237:9+59
    assume {:print "$at(126,10156,10215)"} true;
    assume ($t2 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t3 := stake::get_validator_state($t0) on_abort goto L4 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+40
    assume {:print "$at(2,21350,21390)"} true;
    call $t3 := $1_stake_get_validator_state($t0);
    if ($abort_flag) {
        assume {:print "$at(2,21350,21390)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t5 := 4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:53+25
    $t5 := 4;
    assume $IsValid'u64'($t5);

    // $t6 := ==($t3, $t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:50+2
    $t6 := $IsEqual'u64'($t3, $t5);

    // if ($t6) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:403:13+24
    assume {:print "$at(2,21435,21459)"} true;
L1:

    // $t7 := timestamp::now_seconds() on_abort goto L4 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:403:13+24
    assume {:print "$at(2,21435,21459)"} true;
    call $t7 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,21435,21459)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t8 := stake::get_lockup_secs($t0) on_abort goto L4 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:403:41+36
    call $t8 := $1_stake_get_lockup_secs($t0);
    if ($abort_flag) {
        assume {:print "$at(2,21463,21499)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,8):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t1 := >=($t7, $t8) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:403:38+2
    call $t1 := $Ge($t7, $t8);

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
    assume {:print "$at(2,21350,21499)"} true;
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
L0:

    // $t9 := false at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
    assume {:print "$at(2,21350,21499)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t1 := $t9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
    $t1 := $t9;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
L2:

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:402:9+149
    assume {:print "$at(2,21350,21499)"} true;
    assume {:print "$track_return(50,8,0):", $t1} $t1 == $t1;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:404:5+1
    assume {:print "$at(2,21504,21505)"} true;
L3:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:404:5+1
    assume {:print "$at(2,21504,21505)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:404:5+1
L4:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:404:5+1
    assume {:print "$at(2,21504,21505)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun delegation_pool::coins_to_redeem_to_ensure_min_stake [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:482:5+671
procedure {:inline 1} $1_delegation_pool_coins_to_redeem_to_ensure_min_stake(_$t0: $1_pool_u64_unbound_Pool, _$t1: int, _$t2: int) returns ($ret0: int)
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t0: $1_pool_u64_unbound_Pool;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t5, pool_u64_unbound::spec_shares($t0, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$at(3,33931,33992)"} true;
    assume ($t5 == $1_pool_u64_unbound_spec_shares($t0, $t1));

    // assume Identical($t6, select pool_u64_unbound::Pool.total_coins($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:576:9+42
    assume {:print "$at(3,34001,34043)"} true;
    assume ($t6 == $total_coins#$1_pool_u64_unbound_Pool($t0));

    // trace_local[src_shares_pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:482:5+1
    assume {:print "$at(2,25683,25684)"} true;
    assume {:print "$track_local(50,9,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:482:5+1
    assume {:print "$track_local(50,9,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:482:5+1
    assume {:print "$track_local(50,9,2):", $t2} $t2 == $t2;

    // assume Identical($t7, pool_u64_unbound::spec_shares($t0, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$at(3,33931,33992)"} true;
    assume ($t7 == $1_pool_u64_unbound_spec_shares($t0, $t1));

    // assume Identical($t8, select pool_u64_unbound::Pool.total_coins($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:576:9+42
    assume {:print "$at(3,34001,34043)"} true;
    assume ($t8 == $total_coins#$1_pool_u64_unbound_Pool($t0));

    // $t9 := delegation_pool::amount_to_shares_to_redeem($t0, $t1, $t2) on_abort goto L3 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:490:13+64
    assume {:print "$at(2,25999,26063)"} true;
    call $t9 := $1_delegation_pool_amount_to_shares_to_redeem($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,25999,26063)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(50,9):", $t10} $t10 == $t10;
        goto L3;
    }

    // $t11 := pool_u64_unbound::shares_to_amount($t0, $t9) on_abort goto L3 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:488:30+143
    assume {:print "$at(2,25930,26073)"} true;
    call $t11 := $1_pool_u64_unbound_shares_to_amount($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,25930,26073)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(50,9):", $t10} $t10 == $t10;
        goto L3;
    }

    // trace_local[redeemed_coins]($t11) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:488:13+14
    assume {:print "$track_local(50,9,3):", $t11} $t11 == $t11;

    // assume Identical($t12, pool_u64_unbound::spec_shares($t0, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:38:9+44
    assume {:print "$at(60,1117,1161)"} true;
    assume ($t12 == $1_pool_u64_unbound_spec_shares($t0, $t1));

    // assume Identical($t13, select pool_u64_unbound::Pool.total_coins($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:39:9+35
    assume {:print "$at(60,1170,1205)"} true;
    assume ($t13 == $total_coins#$1_pool_u64_unbound_Pool($t0));

    // $t14 := pool_u64_unbound::balance($t0, $t1) on_abort goto L3 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:493:27+47
    assume {:print "$at(2,26169,26216)"} true;
    call $t14 := $1_pool_u64_unbound_balance($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,26169,26216)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(50,9):", $t10} $t10 == $t10;
        goto L3;
    }

    // trace_local[src_balance]($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:493:13+11
    assume {:print "$track_local(50,9,4):", $t14} $t14 == $t14;

    // $t15 := -($t14, $t11) on_abort goto L3 with $t10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:494:25+1
    assume {:print "$at(2,26242,26243)"} true;
    call $t15 := $Sub($t14, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,26242,26243)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(50,9):", $t10} $t10 == $t10;
        goto L3;
    }

    // $t16 := 1000000000 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:494:44+24
    $t16 := 1000000000;
    assume $IsValid'u64'($t16);

    // $t17 := <($t15, $t16) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:494:42+1
    call $t17 := $Lt($t15, $t16);

    // if ($t17) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:494:9+106
    if ($t17) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:495:22+11
    assume {:print "$at(2,26310,26321)"} true;
L1:

    // $t2 := $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:495:13+6
    assume {:print "$at(2,26301,26307)"} true;
    $t2 := $t14;

    // trace_local[amount]($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:495:13+6
    assume {:print "$track_local(50,9,2):", $t14} $t14 == $t14;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:497:9+6
    assume {:print "$at(2,26342,26348)"} true;
L0:

    // trace_return[0]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:497:9+6
    assume {:print "$at(2,26342,26348)"} true;
    assume {:print "$track_return(50,9,0):", $t2} $t2 == $t2;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:498:5+1
    assume {:print "$at(2,26353,26354)"} true;
L2:

    // return $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:498:5+1
    assume {:print "$at(2,26353,26354)"} true;
    $ret0 := $t2;
    return;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:498:5+1
L3:

    // abort($t10) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:498:5+1
    assume {:print "$at(2,26353,26354)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun delegation_pool::get_pool_address [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:528:5+136
procedure {:inline 1} $1_delegation_pool_get_pool_address(_$t0: $1_delegation_pool_DelegationPool) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_account_SignerCapability;
    var $t2: int;
    var $t3: int;
    var $t0: $1_delegation_pool_DelegationPool;
    var $temp_0'$1_delegation_pool_DelegationPool': $1_delegation_pool_DelegationPool;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:528:5+1
    assume {:print "$at(2,27752,27753)"} true;
    assume {:print "$track_local(50,17,0):", $t0} $t0 == $t0;

    // $t1 := get_field<delegation_pool::DelegationPool>.stake_pool_signer_cap($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:529:48+27
    assume {:print "$at(2,27854,27881)"} true;
    $t1 := $stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t0);

    // $t2 := account::get_signer_capability_address($t1) on_abort goto L2 with $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:529:9+67
    call $t2 := $1_account_get_signer_capability_address($t1);
    if ($abort_flag) {
        assume {:print "$at(2,27815,27882)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(50,17):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:529:9+67
    assume {:print "$track_return(50,17,0):", $t2} $t2 == $t2;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:530:5+1
    assume {:print "$at(2,27887,27888)"} true;
L1:

    // return $t2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:530:5+1
    assume {:print "$at(2,27887,27888)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:530:5+1
L2:

    // abort($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:530:5+1
    assume {:print "$at(2,27887,27888)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun delegation_pool::olc_with_index [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:532:5+97
procedure {:inline 1} $1_delegation_pool_olc_with_index(_$t0: int) returns ($ret0: $1_delegation_pool_ObservedLockupCycle)
{
    // declare local variables
    var $t1: $1_delegation_pool_ObservedLockupCycle;
    var $t0: int;
    var $temp_0'$1_delegation_pool_ObservedLockupCycle': $1_delegation_pool_ObservedLockupCycle;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[index]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:532:5+1
    assume {:print "$at(2,27894,27895)"} true;
    assume {:print "$track_local(50,22,0):", $t0} $t0 == $t0;

    // $t1 := pack delegation_pool::ObservedLockupCycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:533:9+29
    assume {:print "$at(2,27956,27985)"} true;
    $t1 := $1_delegation_pool_ObservedLockupCycle($t0);

    // trace_return[0]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:533:9+29
    assume {:print "$track_return(50,22,0):", $t1} $t1 == $t1;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:534:5+1
    assume {:print "$at(2,27990,27991)"} true;
L1:

    // return $t1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:534:5+1
    assume {:print "$at(2,27990,27991)"} true;
    $ret0 := $t1;
    return;

}

// fun delegation_pool::pending_inactive_shares_pool [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:900:5+153
procedure {:inline 1} $1_delegation_pool_pending_inactive_shares_pool(_$t0: $1_delegation_pool_DelegationPool) returns ($ret0: $1_pool_u64_unbound_Pool)
{
    // declare local variables
    var $t1: Table int ($1_pool_u64_unbound_Pool);
    var $t2: $1_delegation_pool_ObservedLockupCycle;
    var $t3: $1_pool_u64_unbound_Pool;
    var $t4: int;
    var $t0: $1_delegation_pool_DelegationPool;
    var $temp_0'$1_delegation_pool_DelegationPool': $1_delegation_pool_DelegationPool;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:900:5+1
    assume {:print "$at(2,47074,47075)"} true;
    assume {:print "$track_local(50,25,0):", $t0} $t0 == $t0;

    // $t1 := get_field<delegation_pool::DelegationPool>.inactive_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:901:23+21
    assume {:print "$at(2,47171,47192)"} true;
    $t1 := $inactive_shares#$1_delegation_pool_DelegationPool($t0);

    // $t2 := get_field<delegation_pool::DelegationPool>.observed_lockup_cycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:901:46+26
    $t2 := $observed_lockup_cycle#$1_delegation_pool_DelegationPool($t0);

    // $t3 := table::borrow<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>($t1, $t2) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:901:9+64
    call $t3 := $1_table_borrow'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,47157,47221)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,25):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:901:9+64
    assume {:print "$track_return(50,25,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:902:5+1
    assume {:print "$at(2,47226,47227)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:902:5+1
    assume {:print "$at(2,47226,47227)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:902:5+1
L2:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:902:5+1
    assume {:print "$at(2,47226,47227)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun delegation_pool::pending_withdrawal_exists [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:885:5+341
procedure {:inline 1} $1_delegation_pool_pending_withdrawal_exists(_$t0: $1_delegation_pool_DelegationPool, _$t1: int) returns ($ret0: bool, $ret1: $1_delegation_pool_ObservedLockupCycle)
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_delegation_pool_ObservedLockupCycle;
    var $t4: Table int ($1_delegation_pool_ObservedLockupCycle);
    var $t5: bool;
    var $t6: int;
    var $t7: bool;
    var $t8: Table int ($1_delegation_pool_ObservedLockupCycle);
    var $t9: bool;
    var $t10: int;
    var $t0: $1_delegation_pool_DelegationPool;
    var $t1: int;
    var $temp_0'$1_delegation_pool_DelegationPool': $1_delegation_pool_DelegationPool;
    var $temp_0'$1_delegation_pool_ObservedLockupCycle': $1_delegation_pool_ObservedLockupCycle;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:885:5+1
    assume {:print "$at(2,46332,46333)"} true;
    assume {:print "$track_local(50,27,0):", $t0} $t0 == $t0;

    // trace_local[delegator_address]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:885:5+1
    assume {:print "$track_local(50,27,1):", $t1} $t1 == $t1;

    // $t4 := get_field<delegation_pool::DelegationPool>.pending_withdrawals($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:29+25
    assume {:print "$at(2,46472,46497)"} true;
    $t4 := $pending_withdrawals#$1_delegation_pool_DelegationPool($t0);

    // $t5 := table::contains<address, delegation_pool::ObservedLockupCycle>($t4, $t1) on_abort goto L4 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:13+61
    call $t5 := $1_table_contains'address_$1_delegation_pool_ObservedLockupCycle'($t4, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,46456,46517)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(50,27):", $t6} $t6 == $t6;
        goto L4;
    }

    // if ($t5) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:887:14+4
    assume {:print "$at(2,46534,46538)"} true;
L1:

    // $t7 := true at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:887:14+4
    assume {:print "$at(2,46534,46538)"} true;
    $t7 := true;
    assume $IsValid'bool'($t7);

    // $t8 := get_field<delegation_pool::DelegationPool>.pending_withdrawals($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:887:35+25
    $t8 := $pending_withdrawals#$1_delegation_pool_DelegationPool($t0);

    // $t3 := table::borrow<address, delegation_pool::ObservedLockupCycle>($t8, $t1) on_abort goto L4 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:887:21+59
    call $t3 := $1_table_borrow'address_$1_delegation_pool_ObservedLockupCycle'($t8, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,46541,46600)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(50,27):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t2 := $t7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
    assume {:print "$at(2,46452,46667)"} true;
    $t2 := $t7;

    // goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
    goto L2;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
L0:

    // $t9 := false at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:889:14+5
    assume {:print "$at(2,46632,46637)"} true;
    $t9 := false;
    assume $IsValid'bool'($t9);

    // $t10 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:889:36+1
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // $t3 := delegation_pool::olc_with_index($t10) on_abort goto L4 with $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:889:21+17
    call $t3 := $1_delegation_pool_olc_with_index($t10);
    if ($abort_flag) {
        assume {:print "$at(2,46639,46656)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(50,27):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t2 := $t9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
    assume {:print "$at(2,46452,46667)"} true;
    $t2 := $t9;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
L2:

    // trace_return[0]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
    assume {:print "$at(2,46452,46667)"} true;
    assume {:print "$track_return(50,27,0):", $t2} $t2 == $t2;

    // trace_return[1]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:886:9+215
    assume {:print "$track_return(50,27,1):", $t3} $t3 == $t3;

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:891:5+1
    assume {:print "$at(2,46672,46673)"} true;
L3:

    // return ($t2, $t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:891:5+1
    assume {:print "$at(2,46672,46673)"} true;
    $ret0 := $t2;
    $ret1 := $t3;
    return;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:891:5+1
L4:

    // abort($t6) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:891:5+1
    assume {:print "$at(2,46672,46673)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun delegation_pool::redeem_inactive_shares [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:981:5+1582
procedure {:inline 1} $1_delegation_pool_redeem_inactive_shares(_$t0: $Mutation ($1_delegation_pool_DelegationPool), _$t1: int, _$t2: int, _$t3: $1_delegation_pool_ObservedLockupCycle) returns ($ret0: int, $ret1: $Mutation ($1_delegation_pool_DelegationPool))
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: $Mutation ($1_pool_u64_unbound_Pool);
    var $t9: int;
    var $t10: int;
    var $t11: $1_delegation_pool_ObservedLockupCycle;
    var $t12: $Mutation (Table int ($1_pool_u64_unbound_Pool));
    var $t13: $Mutation ($1_pool_u64_unbound_Pool);
    var $t14: int;
    var $t15: $1_pool_u64_unbound_Pool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: $1_pool_u64_unbound_Pool;
    var $t27: int;
    var $t28: int;
    var $t29: bool;
    var $t30: $Mutation (Table int ($1_delegation_pool_ObservedLockupCycle));
    var $t31: $1_delegation_pool_ObservedLockupCycle;
    var $t32: int;
    var $t33: $1_delegation_pool_ObservedLockupCycle;
    var $t34: int;
    var $t35: bool;
    var $t36: $1_pool_u64_unbound_Pool;
    var $t37: int;
    var $t38: int;
    var $t39: bool;
    var $t40: $Mutation (Table int ($1_pool_u64_unbound_Pool));
    var $t41: $1_pool_u64_unbound_Pool;
    var $t0: $Mutation ($1_delegation_pool_DelegationPool);
    var $t1: int;
    var $t2: int;
    var $t3: $1_delegation_pool_ObservedLockupCycle;
    var $temp_0'$1_delegation_pool_DelegationPool': $1_delegation_pool_DelegationPool;
    var $temp_0'$1_delegation_pool_ObservedLockupCycle': $1_delegation_pool_ObservedLockupCycle;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'address': int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // assume Identical($t11, table::spec_get<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:636:9+63
    assume {:print "$at(3,37610,37673)"} true;
    assume ($t11 == $1_table_spec_get'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:981:5+1
    assume {:print "$at(2,51227,51228)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // trace_local[shareholder]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:981:5+1
    assume {:print "$track_local(50,30,1):", $t1} $t1 == $t1;

    // trace_local[coins_amount]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:981:5+1
    assume {:print "$track_local(50,30,2):", $t2} $t2 == $t2;

    // trace_local[lockup_cycle]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:981:5+1
    assume {:print "$track_local(50,30,3):", $t3} $t3 == $t3;

    // $t12 := borrow_field<delegation_pool::DelegationPool>.inactive_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:987:49+25
    assume {:print "$at(2,51451,51476)"} true;
    $t12 := $ChildMutation($t0, 2, $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)));

    // $t13 := table::borrow_mut<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>($t12, $t3) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:987:31+58
    call $t13,$t12 := $1_table_borrow_mut'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($t12, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,51433,51491)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // trace_local[inactive_shares]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:987:13+15
    $temp_0'$1_pool_u64_unbound_Pool' := $Dereference($t13);
    assume {:print "$track_local(50,30,8):", $temp_0'$1_pool_u64_unbound_Pool'} $temp_0'$1_pool_u64_unbound_Pool' == $temp_0'$1_pool_u64_unbound_Pool';

    // $t15 := read_ref($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:988:58+44
    assume {:print "$at(2,51550,51594)"} true;
    $t15 := $Dereference($t13);

    // assume Identical($t16, pool_u64_unbound::spec_shares($t15, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$at(3,33931,33992)"} true;
    assume ($t16 == $1_pool_u64_unbound_spec_shares($t15, $t1));

    // assume Identical($t17, select pool_u64_unbound::Pool.total_coins($t15)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:576:9+42
    assume {:print "$at(3,34001,34043)"} true;
    assume ($t17 == $total_coins#$1_pool_u64_unbound_Pool($t15));

    // $t18 := delegation_pool::amount_to_shares_to_redeem($t15, $t1, $t2) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:988:32+70
    assume {:print "$at(2,51524,51594)"} true;
    call $t18 := $1_delegation_pool_amount_to_shares_to_redeem($t15, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,51524,51594)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // trace_local[shares_to_redeem]($t18) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:988:13+16
    assume {:print "$track_local(50,30,10):", $t18} $t18 == $t18;

    // $t19 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:33+1
    assume {:print "$at(2,51732,51733)"} true;
    $t19 := 0;
    assume $IsValid'u128'($t19);

    // $t20 := ==($t18, $t19) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:30+2
    $t20 := $IsEqual'u128'($t18, $t19);

    // if ($t20) goto L12 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:9+35
    if ($t20) { goto L12; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
L1:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
    assume {:print "$at(2,51735,51743)"} true;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // destroy($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8

    // $t21 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:43+1
    $t21 := 0;
    assume $IsValid'u64'($t21);

    // trace_return[0]($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
    assume {:print "$track_return(50,30,0):", $t21} $t21 == $t21;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8

    // $t22 := move($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
    $t22 := $t21;

    // goto L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:990:36+8
    goto L10;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:992:54+15
    assume {:print "$at(2,51902,51917)"} true;
L0:

    // assume Identical($t23, pool_u64_unbound::spec_shares_to_amount_with_total_coins($t13, $t18, select pool_u64_unbound::Pool.total_coins($t13))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:127:9+102
    assume {:print "$at(60,5100,5202)"} true;
    assume ($t23 == $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($Dereference($t13), $t18, $total_coins#$1_pool_u64_unbound_Pool($Dereference($t13))));

    // assume Identical($t24, Sub(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares($t13), $t1), $t18)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:174:9+78
    assume {:print "$at(60,8006,8084)"} true;
    assume ($t24 == ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($Dereference($t13)), $t1) - $t18));

    // $t25 := pool_u64_unbound::redeem_shares($t13, $t1, $t18) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:992:30+71
    assume {:print "$at(2,51878,51949)"} true;
    call $t25,$t13 := $1_pool_u64_unbound_redeem_shares($t13, $t1, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,51878,51949)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // trace_local[redeemed_coins]($t25) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:992:13+14
    assume {:print "$track_local(50,30,9):", $t25} $t25 == $t25;

    // $t26 := read_ref($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:996:29+30
    assume {:print "$at(2,52146,52176)"} true;
    $t26 := $Dereference($t13);

    // $t27 := pool_u64_unbound::shares($t26, $t1) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:996:13+46
    call $t27 := $1_pool_u64_unbound_shares($t26, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,52130,52176)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // $t28 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:996:63+1
    $t28 := 0;
    assume $IsValid'u128'($t28);

    // $t29 := ==($t27, $t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:996:60+2
    $t29 := $IsEqual'u128'($t27, $t28);

    // if ($t29) goto L3 else goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:996:9+354
    if ($t29) { goto L3; } else { goto L2; }

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:999:32+4
    assume {:print "$at(2,52431,52435)"} true;
L3:

    // $t30 := borrow_field<delegation_pool::DelegationPool>.pending_withdrawals($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:999:27+29
    assume {:print "$at(2,52426,52455)"} true;
    $t30 := $ChildMutation($t0, 3, $pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)));

    // $t31 := table::remove<address, delegation_pool::ObservedLockupCycle>($t30, $t1) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:999:13+57
    call $t31,$t30 := $1_table_remove'address_$1_delegation_pool_ObservedLockupCycle'($t30, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,52412,52469)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // write_back[Reference($t0).pending_withdrawals (table::Table<address, delegation_pool::ObservedLockupCycle>)]($t30) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:999:13+57
    $t0 := $UpdateMutation($t0, $Update'$1_delegation_pool_DelegationPool'_pending_withdrawals($Dereference($t0), $Dereference($t30)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:999:13+57
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // destroy($t31) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:999:13+57

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+12
    assume {:print "$at(2,52582,52594)"} true;
L2:

    // $t32 := get_field<delegation_pool::ObservedLockupCycle>.index($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+18
    assume {:print "$at(2,52582,52600)"} true;
    $t32 := $index#$1_delegation_pool_ObservedLockupCycle($t3);

    // $t33 := get_field<delegation_pool::DelegationPool>.observed_lockup_cycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:34+26
    $t33 := $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0));

    // $t34 := get_field<delegation_pool::ObservedLockupCycle>.index($t33) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:34+32
    $t34 := $index#$1_delegation_pool_ObservedLockupCycle($t33);

    // $t35 := <($t32, $t34) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:32+1
    call $t35 := $Lt($t32, $t34);

    // if ($t35) goto L5 else goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    if ($t35) { goto L5; } else { goto L4; }

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:82+15
L5:

    // $t36 := read_ref($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:82+15
    assume {:print "$at(2,52651,52666)"} true;
    $t36 := $Dereference($t13);

    // write_back[Reference($t12)[]]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:82+15
    $t12 := $UpdateMutation($t12, UpdateTable($Dereference($t12), ReadVec(p#$Mutation($t13), LenVec(p#$Mutation($t12))), $Dereference($t13)));

    // write_back[Reference($t0).inactive_shares (table::Table<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>)]($t12) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:82+15
    $t0 := $UpdateMutation($t0, $Update'$1_delegation_pool_DelegationPool'_inactive_shares($Dereference($t0), $Dereference($t12)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:82+15
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // $t37 := pool_u64_unbound::total_coins($t36) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:70+28
    call $t37 := $1_pool_u64_unbound_total_coins($t36);
    if ($abort_flag) {
        assume {:print "$at(2,52639,52667)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // $t38 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:102+1
    $t38 := 0;
    assume $IsValid'u64'($t38);

    // $t7 := ==($t37, $t38) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:99+2
    $t7 := $IsEqual'u64'($t37, $t38);

    // goto L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    goto L6;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
L4:

    // write_back[Reference($t12)[]]($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    assume {:print "$at(2,52582,52672)"} true;
    $t12 := $UpdateMutation($t12, UpdateTable($Dereference($t12), ReadVec(p#$Mutation($t13), LenVec(p#$Mutation($t12))), $Dereference($t13)));

    // write_back[Reference($t0).inactive_shares (table::Table<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>)]($t12) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    $t0 := $UpdateMutation($t0, $Update'$1_delegation_pool_DelegationPool'_inactive_shares($Dereference($t0), $Dereference($t12)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // destroy($t13) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90

    // $t39 := false at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    $t39 := false;
    assume $IsValid'bool'($t39);

    // $t7 := $t39 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
    $t7 := $t39;

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:13+90
L6:

    // if ($t7) goto L8 else goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:9+200
    assume {:print "$at(2,52578,52778)"} true;
    if ($t7) { goto L8; } else { goto L7; }

    // label L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:56+4
    assume {:print "$at(2,52731,52735)"} true;
L8:

    // $t40 := borrow_field<delegation_pool::DelegationPool>.inactive_shares($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:51+25
    assume {:print "$at(2,52726,52751)"} true;
    $t40 := $ChildMutation($t0, 2, $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)));

    // $t41 := table::remove<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>($t40, $t3) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:37+54
    call $t41,$t40 := $1_table_remove'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($t40, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,52712,52766)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // write_back[Reference($t0).inactive_shares (table::Table<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>)]($t40) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:37+54
    $t0 := $UpdateMutation($t0, $Update'$1_delegation_pool_DelegationPool'_inactive_shares($Dereference($t0), $Dereference($t40)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:37+54
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // pool_u64_unbound::destroy_empty($t41) on_abort goto L11 with $t14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:13+79
    call $1_pool_u64_unbound_destroy_empty($t41);
    if ($abort_flag) {
        assume {:print "$at(2,52688,52767)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(50,30):", $t14} $t14 == $t14;
        goto L11;
    }

    // goto L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1003:92+1
    goto L9;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:9+200
    assume {:print "$at(2,52578,52778)"} true;
L7:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1002:9+200
    assume {:print "$at(2,52578,52778)"} true;

    // label L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1006:9+14
    assume {:print "$at(2,52789,52803)"} true;
L9:

    // trace_return[0]($t25) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1006:9+14
    assume {:print "$at(2,52789,52803)"} true;
    assume {:print "$track_return(50,30,0):", $t25} $t25 == $t25;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1006:9+14
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,30,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // pack_ref_deep($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1006:9+14

    // $t22 := move($t25) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1006:9+14
    $t22 := $t25;

    // label L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1007:5+1
    assume {:print "$at(2,52808,52809)"} true;
L10:

    // return $t22 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1007:5+1
    assume {:print "$at(2,52808,52809)"} true;
    $ret0 := $t22;
    $ret1 := $t0;
    return;

    // label L11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1007:5+1
L11:

    // abort($t14) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:1007:5+1
    assume {:print "$at(2,52808,52809)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

    // label L12 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L12:

    // destroy($t12) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L1 at <internal>:1:1+10
    goto L1;

}

// fun delegation_pool::retrieve_stake_pool_owner [baseline] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:523:5+144
procedure {:inline 1} $1_delegation_pool_retrieve_stake_pool_owner(_$t0: $1_delegation_pool_DelegationPool) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: $1_account_SignerCapability;
    var $t2: int;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_delegation_pool_DelegationPool;
    var $temp_0'$1_delegation_pool_DelegationPool': $1_delegation_pool_DelegationPool;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:523:5+1
    assume {:print "$at(2,27541,27542)"} true;
    assume {:print "$track_local(50,31,0):", $t0} $t0 == $t0;

    // $t1 := get_field<delegation_pool::DelegationPool>.stake_pool_signer_cap($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:524:48+27
    assume {:print "$at(2,27651,27678)"} true;
    $t1 := $stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t0);

    // assume Identical($t2, select account::SignerCapability.account($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+30
    assume {:print "$at(70,21510,21540)"} true;
    assume ($t2 == $account#$1_account_SignerCapability($t1));

    // $t3 := account::create_signer_with_capability($t1) on_abort goto L2 with $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:524:9+67
    assume {:print "$at(2,27612,27679)"} true;
    call $t3 := $1_account_create_signer_with_capability($t1);
    if ($abort_flag) {
        assume {:print "$at(2,27612,27679)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(50,31):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:524:9+67
    assume {:print "$track_return(50,31,0):", $t3} $t3 == $t3;

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:525:5+1
    assume {:print "$at(2,27684,27685)"} true;
L1:

    // return $t3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:525:5+1
    assume {:print "$at(2,27684,27685)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:525:5+1
L2:

    // abort($t4) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:525:5+1
    assume {:print "$at(2,27684,27685)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun delegation_pool::withdraw_internal [verification] at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+4434
procedure {:timeLimit 40} $1_delegation_pool_withdraw_internal$verify(_$t0: $Mutation ($1_delegation_pool_DelegationPool), _$t1: int, _$t2: int) returns ($ret0: $Mutation ($1_delegation_pool_DelegationPool))
{
    // declare local variables
    var $t3: int;
    var $t4: bool;
    var $t5: bool;
    var $t6: bool;
    var $t7: bool;
    var $t8: $signer;
    var $t9: bool;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: $signer;
    var $t18: bool;
    var $t19: $1_delegation_pool_ObservedLockupCycle;
    var $t20: $1_pool_u64_unbound_Pool;
    var $t21: $1_pool_u64_unbound_Pool;
    var $t22: int;
    var $t23: $1_pool_u64_unbound_Pool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: $1_delegation_pool_DelegationPool;
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: $1_delegation_pool_DelegationPool;
    var $t32: int;
    var $t33: int;
    var $t34: $1_delegation_pool_DelegationPool;
    var $t35: bool;
    var $t36: $1_delegation_pool_ObservedLockupCycle;
    var $t37: $1_delegation_pool_DelegationPool;
    var $t38: int;
    var $t39: bool;
    var $t40: int;
    var $t41: int;
    var $t42: bool;
    var $t43: int;
    var $t44: int;
    var $t45: $1_delegation_pool_DelegationPool;
    var $t46: int;
    var $t47: bool;
    var $t48: int;
    var $t49: int;
    var $t50: int;
    var $t51: $1_delegation_pool_ObservedLockupCycle;
    var $t52: int;
    var $t53: bool;
    var $t54: bool;
    var $t55: bool;
    var $t56: bool;
    var $t57: int;
    var $t58: $1_delegation_pool_DelegationPool;
    var $t59: int;
    var $t60: int;
    var $t61: $1_delegation_pool_Ghost$ghost_bool;
    var $t62: bool;
    var $t63: $1_delegation_pool_Ghost$ghost_olc;
    var $t64: bool;
    var $t65: $1_delegation_pool_Ghost$ghost_coin_1;
    var $t66: bool;
    var $t67: $1_delegation_pool_Ghost$ghost_coin_2;
    var $t68: bool;
    var $t69: int;
    var $t70: $1_delegation_pool_ObservedLockupCycle;
    var $t71: int;
    var $t72: bool;
    var $t73: bool;
    var $t74: bool;
    var $t75: bool;
    var $t76: int;
    var $t77: $1_delegation_pool_ObservedLockupCycle;
    var $t78: int;
    var $t79: bool;
    var $t80: $1_delegation_pool_DelegationPool;
    var $t81: $1_pool_u64_unbound_Pool;
    var $t82: int;
    var $t83: int;
    var $t84: int;
    var $t85: $1_delegation_pool_ObservedLockupCycle;
    var $t86: int;
    var $t87: $1_delegation_pool_DelegationPool;
    var $t88: $signer;
    var $t89: bool;
    var $t90: int;
    var $t91: int;
    var $t92: int;
    var $t93: int;
    var $t94: int;
    var $t95: $1_delegation_pool_ObservedLockupCycle;
    var $t96: int;
    var $t97: bool;
    var $t98: int;
    var $t99: int;
    var $t100: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t101: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t102: int;
    var $t103: int;
    var $t104: int;
    var $t105: int;
    var $t106: $Mutation (int);
    var $t107: $Mutation ($1_event_EventHandle'$1_delegation_pool_WithdrawStakeEvent');
    var $t108: $1_delegation_pool_WithdrawStakeEvent;
    var $t109: int;
    var $t110: $1_delegation_pool_DelegationPool;
    var $t111: int;
    var $t112: int;
    var $t113: $1_delegation_pool_Ghost$ghost_olc;
    var $t114: bool;
    var $t115: $1_delegation_pool_Ghost$ghost_coin_3;
    var $t116: bool;
    var $t117: $1_delegation_pool_Ghost$ghost_coin_4;
    var $t118: bool;
    var $t119: $1_delegation_pool_Ghost$ghost_bool;
    var $t120: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t121: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t122: bool;
    var $t123: $1_delegation_pool_Ghost$ghost_olc;
    var $t124: $1_pool_u64_unbound_Pool;
    var $t125: $1_delegation_pool_Ghost$ghost_olc;
    var $t126: $1_pool_u64_unbound_Pool;
    var $t127: int;
    var $t128: $1_delegation_pool_Ghost$ghost_olc;
    var $t129: $1_pool_u64_unbound_Pool;
    var $t130: int;
    var $t131: $1_delegation_pool_Ghost$ghost_olc;
    var $t132: $1_pool_u64_unbound_Pool;
    var $t133: int;
    var $t134: bool;
    var $t135: $1_delegation_pool_Ghost$ghost_bool;
    var $t136: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t137: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t138: bool;
    var $t139: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t140: int;
    var $t141: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t142: bool;
    var $t143: bool;
    var $t144: $1_stake_StakePool;
    var $t145: int;
    var $t146: $1_stake_StakePool;
    var $t147: int;
    var $t148: bool;
    var $t149: bool;
    var $t150: $1_stake_StakePool;
    var $t151: int;
    var $t152: $1_stake_StakePool;
    var $t153: int;
    var $t154: bool;
    var $t155: bool;
    var $t156: bool;
    var $t157: bool;
    var $t158: $1_stake_StakePool;
    var $t159: int;
    var $t160: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t161: int;
    var $t162: bool;
    var $t163: bool;
    var $t164: $1_stake_StakePool;
    var $t165: int;
    var $t166: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t167: int;
    var $t168: bool;
    var $t169: bool;
    var $t170: bool;
    var $t0: $Mutation ($1_delegation_pool_DelegationPool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_delegation_pool_DelegationPool': $1_delegation_pool_DelegationPool;
    var $temp_0'$1_delegation_pool_Ghost$ghost_bool': $1_delegation_pool_Ghost$ghost_bool;
    var $temp_0'$1_delegation_pool_Ghost$ghost_coin_1': $1_delegation_pool_Ghost$ghost_coin_1;
    var $temp_0'$1_delegation_pool_Ghost$ghost_coin_2': $1_delegation_pool_Ghost$ghost_coin_2;
    var $temp_0'$1_delegation_pool_Ghost$ghost_coin_3': $1_delegation_pool_Ghost$ghost_coin_3;
    var $temp_0'$1_delegation_pool_Ghost$ghost_coin_4': $1_delegation_pool_Ghost$ghost_coin_4;
    var $temp_0'$1_delegation_pool_Ghost$ghost_olc': $1_delegation_pool_Ghost$ghost_olc;
    var $temp_0'$1_delegation_pool_ObservedLockupCycle': $1_delegation_pool_ObservedLockupCycle;
    var $temp_0'$1_pool_u64_unbound_Pool': $1_pool_u64_unbound_Pool;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $1_stake_StakePool_$memory#24: $Memory $1_stake_StakePool;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();
    assume l#$Mutation($t0) == $Param(0);

    // bytecode translation starts here
    // assume And(WellFormed($t0), And(forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)), forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume {:print "$at(2,41632,41633)"} true;
    assume ($IsValid'$1_delegation_pool_DelegationPool'($Dereference($t0)) && ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0)))) && (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))))));

    // assume WellFormed($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $IsValid'u64'($t2);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::OwnerCapability>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_OwnerCapability_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_OwnerCapability_$memory, $a_0);
    ($IsValid'$1_stake_OwnerCapability'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<delegation_pool::Ghost$ghost_coin_3>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_delegation_pool_Ghost$ghost_coin_3_$memory, $a_0)}(var $rsc := $ResourceValue($1_delegation_pool_Ghost$ghost_coin_3_$memory, $a_0);
    ($IsValid'$1_delegation_pool_Ghost$ghost_coin_3'($rsc))));

    // assume exists<delegation_pool::Ghost$ghost_coin_3>(0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $ResourceExists($1_delegation_pool_Ghost$ghost_coin_3_$memory, 0);

    // assume forall $rsc: ResourceDomain<delegation_pool::Ghost$ghost_coin_1>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_delegation_pool_Ghost$ghost_coin_1_$memory, $a_0)}(var $rsc := $ResourceValue($1_delegation_pool_Ghost$ghost_coin_1_$memory, $a_0);
    ($IsValid'$1_delegation_pool_Ghost$ghost_coin_1'($rsc))));

    // assume exists<delegation_pool::Ghost$ghost_coin_1>(0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $ResourceExists($1_delegation_pool_Ghost$ghost_coin_1_$memory, 0);

    // assume forall $rsc: ResourceDomain<delegation_pool::Ghost$ghost_coin_4>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_delegation_pool_Ghost$ghost_coin_4_$memory, $a_0)}(var $rsc := $ResourceValue($1_delegation_pool_Ghost$ghost_coin_4_$memory, $a_0);
    ($IsValid'$1_delegation_pool_Ghost$ghost_coin_4'($rsc))));

    // assume exists<delegation_pool::Ghost$ghost_coin_4>(0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $ResourceExists($1_delegation_pool_Ghost$ghost_coin_4_$memory, 0);

    // assume forall $rsc: ResourceDomain<delegation_pool::Ghost$ghost_coin_2>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_delegation_pool_Ghost$ghost_coin_2_$memory, $a_0)}(var $rsc := $ResourceValue($1_delegation_pool_Ghost$ghost_coin_2_$memory, $a_0);
    ($IsValid'$1_delegation_pool_Ghost$ghost_coin_2'($rsc))));

    // assume exists<delegation_pool::Ghost$ghost_coin_2>(0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $ResourceExists($1_delegation_pool_Ghost$ghost_coin_2_$memory, 0);

    // assume forall $rsc: ResourceDomain<delegation_pool::Ghost$ghost_bool>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, $a_0)}(var $rsc := $ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, $a_0);
    ($IsValid'$1_delegation_pool_Ghost$ghost_bool'($rsc))));

    // assume exists<delegation_pool::Ghost$ghost_bool>(0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $ResourceExists($1_delegation_pool_Ghost$ghost_bool_$memory, 0);

    // assume forall $rsc: ResourceDomain<delegation_pool::Ghost$ghost_olc>(): WellFormed($rsc) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, $a_0)}(var $rsc := $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, $a_0);
    ($IsValid'$1_delegation_pool_Ghost$ghost_olc'($rsc))));

    // assume exists<delegation_pool::Ghost$ghost_olc>(0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume $ResourceExists($1_delegation_pool_Ghost$ghost_olc_$memory, 0);

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+4434
    // global invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(1), stake::validator_set_is_valid()) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+4434
    // global invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+4434
    // global invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+4434
    // global invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:29+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:29+4
    assume {:print "$at(3,30538,30542)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22635):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:51+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:51+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22636):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t20, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:13+65
    assume ($t20 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:13+65]($t20) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:509:13+65
    assume {:print "$track_exp_sub(22637):", $t20} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:51+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:51+4
    assume {:print "$at(3,30639,30643)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22638):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:73+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:73+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22639):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t21, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:35+65
    assume ($t21 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:35+65]($t21) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:35+65
    assume {:print "$track_exp_sub(22640):", $t21} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:102+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:102+17
    assume {:print "$track_exp_sub(22641):", $t1} true;

    // assume Identical($t22, pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:13+107
    assume ($t22 == $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:13+107]($t22) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:510:13+107
    assume {:print "$track_exp_sub(22642):", $t22} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:29+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:29+4
    assume {:print "$at(3,30739,30743)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22643):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:51+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:51+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22644):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t23, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:13+65
    assume ($t23 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:13+65]($t23) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:511:13+65
    assume {:print "$track_exp_sub(22645):", $t23} true;

    // assume Identical($t24, pool_u64_unbound::spec_shares_to_amount_with_total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), $t1), select pool_u64_unbound::Pool.total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:23+341
    assume {:print "$at(3,30460,30801)"} true;
    assume ($t24 == $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $t1), $total_coins#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:23+341]($t24) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:23+341
    assume {:print "$track_exp_sub(22646):", $t24} true;

    // assume Identical($t25, pool_u64_unbound::spec_shares_to_amount_with_total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), $t1), select pool_u64_unbound::Pool.total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume ($t25 == $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $t1), $total_coins#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356]($t25) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_exp(22647):", $t25} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23905):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23906):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23907):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23908):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23909):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23910):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23911):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23912):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23913):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23914):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23915):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume {:print "$track_global_mem(23916):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t26, pool_u64_unbound::spec_shares_to_amount_with_total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0)), $t1), select pool_u64_unbound::Pool.total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::DelegationPool.observed_lockup_cycle($t0))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:508:9+356
    assume ($t26 == $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))), $t1), $total_coins#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0))))));

    // @23 := save_mem(coin::CoinStore<aptos_coin::AptosCoin>) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume {:print "$at(2,41632,41633)"} true;
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23 := $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory;

    // @24 := save_mem(stake::StakePool) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    $1_stake_StakePool_$memory#24 := $1_stake_StakePool_$memory;

    // $t27 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    $t27 := $Dereference($t0);

    // $t28 := copy($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    $t28 := $t2;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,39,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // trace_local[delegator_address]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume {:print "$track_local(50,39,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:794:5+1
    assume {:print "$track_local(50,39,2):", $t2} $t2 == $t2;

    // $t29 := 0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:23+1
    assume {:print "$at(2,41821,41822)"} true;
    $t29 := 0;
    assume $IsValid'u64'($t29);

    // $t30 := ==($t2, $t29) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:20+2
    $t30 := $IsEqual'u64'($t2, $t29);

    // if ($t30) goto L1 else goto L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:9+27
    if ($t30) { goto L1; } else { goto L0; }

    // label L1 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:28+6
L1:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:28+6
    assume {:print "$at(2,41826,41832)"} true;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:28+6
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,39,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // assert forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assume {:print "$at(60,266,385)"} true;
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0))));

    // assert forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))));

    // goto L32 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:796:28+6
    assume {:print "$at(2,41826,41832)"} true;
    goto L32;

    // label L0 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:798:45+4
    assume {:print "$at(2,41881,41885)"} true;
L0:

    // $t31 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:798:45+4
    assume {:print "$at(2,41881,41885)"} true;
    $t31 := $Dereference($t0);

    // $t32 := delegation_pool::get_pool_address($t31) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:798:28+22
    call $t32 := $1_delegation_pool_get_pool_address($t31);
    if ($abort_flag) {
        assume {:print "$at(2,41864,41886)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[pool_address]($t32) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:798:13+12
    assume {:print "$track_local(50,39,16):", $t32} $t32 == $t32;

    // $t34 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:799:76+25
    assume {:print "$at(2,41963,41988)"} true;
    $t34 := $Dereference($t0);

    // ($t35, $t36) := delegation_pool::pending_withdrawal_exists($t34, $t1) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:799:51+50
    call $t35,$t36 := $1_delegation_pool_pending_withdrawal_exists($t34, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,41938,41988)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[withdrawal_olc]($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:799:33+14
    assume {:print "$track_local(50,39,19):", $t36} $t36 == $t36;

    // trace_local[withdrawal_exists]($t35) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:799:14+17
    assume {:print "$track_local(50,39,18):", $t35} $t35 == $t35;

    // $t37 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:34+4
    assume {:print "$at(2,42136,42140)"} true;
    $t37 := $Dereference($t0);

    // $t38 := delegation_pool::get_pool_address($t37) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:17+22
    call $t38 := $1_delegation_pool_get_pool_address($t37);
    if ($abort_flag) {
        assume {:print "$at(2,42119,42141)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t39 := !=($t38, $t32) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:40+2
    $t39 := !$IsEqual'address'($t38, $t32);

    // if ($t39) goto L3 else goto L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
    if ($t39) { goto L3; } else { goto L2; }

    // label L3 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
L3:

    // goto L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
    assume {:print "$at(2,42111,42220)"} true;
    goto L4;

    // label L2 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
L2:

    // assert forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assume {:print "$at(60,266,385)"} true;
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0))));

    // assert forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))));

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
    assume {:print "$at(2,42111,42220)"} true;

    // $t40 := 6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:81+34
    $t40 := 6;
    assume $IsValid'u64'($t40);

    // $t41 := error::invalid_argument($t40) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:57+59
    call $t41 := $1_error_invalid_argument($t40);
    if ($abort_flag) {
        assume {:print "$at(2,42159,42218)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_abort($t41) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
    assume {:print "$at(2,42111,42220)"} true;
    assume {:print "$track_abort(50,39):", $t41} $t41 == $t41;

    // $t33 := move($t41) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
    $t33 := $t41;

    // goto L33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:802:9+109
    goto L33;

    // label L4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:17+17
    assume {:print "$at(2,42238,42255)"} true;
L4:

    // $t42 := !=($t1, $t32) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:35+2
    assume {:print "$at(2,42256,42258)"} true;
    $t42 := !$IsEqual'address'($t1, $t32);

    // if ($t42) goto L6 else goto L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
    if ($t42) { goto L6; } else { goto L5; }

    // label L6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
L6:

    // goto L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
    assume {:print "$at(2,42230,42334)"} true;
    goto L7;

    // label L5 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
L5:

    // assert forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assume {:print "$at(60,266,385)"} true;
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0))));

    // assert forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))));

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
    assume {:print "$at(2,42230,42334)"} true;

    // $t43 := 6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:76+34
    $t43 := 6;
    assume $IsValid'u64'($t43);

    // $t44 := error::invalid_argument($t43) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:52+59
    call $t44 := $1_error_invalid_argument($t43);
    if ($abort_flag) {
        assume {:print "$at(2,42273,42332)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_abort($t44) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
    assume {:print "$at(2,42230,42334)"} true;
    assume {:print "$track_abort(50,39):", $t44} $t44 == $t44;

    // $t33 := move($t44) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
    $t33 := $t44;

    // goto L33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:803:9+104
    goto L33;

    // label L7 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:34+4
    assume {:print "$at(2,42369,42373)"} true;
L7:

    // $t45 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:34+4
    assume {:print "$at(2,42369,42373)"} true;
    $t45 := $Dereference($t0);

    // $t46 := delegation_pool::get_pool_address($t45) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:17+22
    call $t46 := $1_delegation_pool_get_pool_address($t45);
    if ($abort_flag) {
        assume {:print "$at(2,42352,42374)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t47 := !=($t46, $t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:40+2
    $t47 := !$IsEqual'address'($t46, $t1);

    // if ($t47) goto L9 else goto L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
    if ($t47) { goto L9; } else { goto L8; }

    // label L9 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
L9:

    // goto L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
    assume {:print "$at(2,42344,42457)"} true;
    goto L10;

    // label L8 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
L8:

    // assert forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assume {:print "$at(60,266,385)"} true;
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0))));

    // assert forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))));

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
    assume {:print "$at(2,42344,42457)"} true;

    // $t48 := 6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:86+34
    $t48 := 6;
    assume $IsValid'u64'($t48);

    // $t49 := error::invalid_argument($t48) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:62+59
    call $t49 := $1_error_invalid_argument($t48);
    if ($abort_flag) {
        assume {:print "$at(2,42397,42456)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_abort($t49) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
    assume {:print "$at(2,42344,42457)"} true;
    assume {:print "$track_abort(50,39):", $t49} $t49 == $t49;

    // $t33 := move($t49) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
    $t33 := $t49;

    // goto L33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:804:9+113
    goto L33;

    // label L10 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:808:13+17
    assume {:print "$at(2,42566,42583)"} true;
L10:

    // if ($t35) goto L12 else goto L11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
    assume {:print "$at(2,42552,42717)"} true;
    if ($t35) { goto L12; } else { goto L11; }

    // label L12 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:18+14
    assume {:print "$at(2,42604,42618)"} true;
L12:

    // $t50 := get_field<delegation_pool::ObservedLockupCycle>.index($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:18+20
    assume {:print "$at(2,42604,42624)"} true;
    $t50 := $index#$1_delegation_pool_ObservedLockupCycle($t36);

    // $t51 := get_field<delegation_pool::DelegationPool>.observed_lockup_cycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:41+26
    $t51 := $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0));

    // $t52 := get_field<delegation_pool::ObservedLockupCycle>.index($t51) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:41+32
    $t52 := $index#$1_delegation_pool_ObservedLockupCycle($t51);

    // $t53 := <($t50, $t52) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:39+1
    call $t53 := $Lt($t50, $t52);

    // if ($t53) goto L14 else goto L13 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:17+104
    if ($t53) { goto L14; } else { goto L13; }

    // label L14 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:17+104
L14:

    // $t54 := true at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:17+104
    assume {:print "$at(2,42603,42707)"} true;
    $t54 := true;
    assume $IsValid'bool'($t54);

    // $t4 := $t54 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:17+104
    $t4 := $t54;

    // goto L15 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:17+104
    goto L15;

    // label L13 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:107+12
L13:

    // $t4 := delegation_pool::can_withdraw_pending_inactive($t32) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:77+43
    assume {:print "$at(2,42663,42706)"} true;
    call $t4 := $1_delegation_pool_can_withdraw_pending_inactive($t32);
    if ($abort_flag) {
        assume {:print "$at(2,42663,42706)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // label L15 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:809:17+104
L15:

    // $t5 := $t4 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
    assume {:print "$at(2,42552,42717)"} true;
    $t5 := $t4;

    // goto L16 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
    goto L16;

    // label L11 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
L11:

    // $t55 := false at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
    assume {:print "$at(2,42552,42717)"} true;
    $t55 := false;
    assume $IsValid'bool'($t55);

    // $t5 := $t55 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
    $t5 := $t55;

    // label L16 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:28+165
L16:

    // $t56 := !($t5) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:27+1
    assume {:print "$at(2,42551,42552)"} true;
    call $t56 := $Not($t5);

    // trace_local[ghost_bool_]($t56) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:807:13+11
    assume {:print "$track_local(50,39,9):", $t56} $t56 == $t56;

    // $t57 := coin::balance<aptos_coin::AptosCoin>($t1) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:811:29+43
    assume {:print "$at(2,42747,42790)"} true;
    call $t57 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,42747,42790)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[ghost_coin_1_]($t57) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:811:13+13
    assume {:print "$track_local(50,39,10):", $t57} $t57 == $t57;

    // $t58 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:812:71+4
    assume {:print "$at(2,42862,42866)"} true;
    $t58 := $Dereference($t0);

    // $t59 := delegation_pool::get_pool_address($t58) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:812:54+22
    call $t59 := $1_delegation_pool_get_pool_address($t58);
    if ($abort_flag) {
        assume {:print "$at(2,42845,42867)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t60 := coin::balance<aptos_coin::AptosCoin>($t59) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:812:29+48
    call $t60 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t59);
    if ($abort_flag) {
        assume {:print "$at(2,42820,42868)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[ghost_coin_2_]($t60) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:812:13+13
    assume {:print "$track_local(50,39,11):", $t60} $t60 == $t60;

    // assume Identical($t61, global<delegation_pool::Ghost$ghost_bool>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:20+10
    assume {:print "$at(2,42903,42913)"} true;
    assume ($t61 == $ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:20+10]($t61) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:20+10
    assume {:print "$track_exp_sub(22849):", $t61} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:34+11]($t56) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:34+11
    assume {:print "$track_exp_sub(22850):", $t56} true;

    // assume Identical($t62, Eq<bool>(select delegation_pool::Ghost$ghost_bool.v(global<delegation_pool::Ghost$ghost_bool>(0)), $t56)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume ($t62 == $IsEqual'bool'($v#$1_delegation_pool_Ghost$ghost_bool($ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0)), $t56));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34]($t62) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_exp(22851):", $t62} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23917):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23918):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23919):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23920):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23921):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23922):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23923):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23924):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23925):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23926):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23927):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume {:print "$track_global_mem(23928):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<bool>(select delegation_pool::Ghost$ghost_bool.v(global<delegation_pool::Ghost$ghost_bool>(0)), $t56) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:814:13+34
    assume $IsEqual'bool'($v#$1_delegation_pool_Ghost$ghost_bool($ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0)), $t56);

    // assume Identical($t63, global<delegation_pool::Ghost$ghost_olc>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:20+9
    assume {:print "$at(2,42950,42959)"} true;
    assume ($t63 == $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:20+9]($t63) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:20+9
    assume {:print "$track_exp_sub(22855):", $t63} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:33+14]($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:33+14
    assume {:print "$track_exp_sub(22856):", $t36} true;

    // assume Identical($t64, Eq<delegation_pool::ObservedLockupCycle>(select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)), $t36)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume ($t64 == $IsEqual'$1_delegation_pool_ObservedLockupCycle'($v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0)), $t36));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35]($t64) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_exp(22857):", $t64} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23929):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23930):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23931):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23932):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23933):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23934):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23935):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23936):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23937):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23938):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23939):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume {:print "$track_global_mem(23940):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<delegation_pool::ObservedLockupCycle>(select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)), $t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:815:13+35
    assume $IsEqual'$1_delegation_pool_ObservedLockupCycle'($v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0)), $t36);

    // assume Identical($t65, global<delegation_pool::Ghost$ghost_coin_1>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:20+12
    assume {:print "$at(2,42998,43010)"} true;
    assume ($t65 == $ResourceValue($1_delegation_pool_Ghost$ghost_coin_1_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:20+12]($t65) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:20+12
    assume {:print "$track_exp_sub(22861):", $t65} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:36+13]($t57) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:36+13
    assume {:print "$track_exp_sub(22862):", $t57} true;

    // assume Identical($t66, Eq<u64>(select delegation_pool::Ghost$ghost_coin_1.v(global<delegation_pool::Ghost$ghost_coin_1>(0)), $t57)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume ($t66 == $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_1($ResourceValue($1_delegation_pool_Ghost$ghost_coin_1_$memory, 0)), $t57));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37]($t66) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_exp(22863):", $t66} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23941):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23942):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23943):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23944):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23945):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23946):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23947):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23948):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23949):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23950):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23951):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume {:print "$track_global_mem(23952):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<u64>(select delegation_pool::Ghost$ghost_coin_1.v(global<delegation_pool::Ghost$ghost_coin_1>(0)), $t57) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:816:13+37
    assume $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_1($ResourceValue($1_delegation_pool_Ghost$ghost_coin_1_$memory, 0)), $t57);

    // assume Identical($t67, global<delegation_pool::Ghost$ghost_coin_2>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:20+12
    assume {:print "$at(2,43048,43060)"} true;
    assume ($t67 == $ResourceValue($1_delegation_pool_Ghost$ghost_coin_2_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:20+12]($t67) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:20+12
    assume {:print "$track_exp_sub(22867):", $t67} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:36+13]($t60) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:36+13
    assume {:print "$track_exp_sub(22868):", $t60} true;

    // assume Identical($t68, Eq<u64>(select delegation_pool::Ghost$ghost_coin_2.v(global<delegation_pool::Ghost$ghost_coin_2>(0)), $t60)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume ($t68 == $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_2($ResourceValue($1_delegation_pool_Ghost$ghost_coin_2_$memory, 0)), $t60));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37]($t68) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_exp(22869):", $t68} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23953):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23954):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23955):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23956):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23957):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23958):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23959):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23960):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23961):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23962):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23963):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume {:print "$track_global_mem(23964):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<u64>(select delegation_pool::Ghost$ghost_coin_2.v(global<delegation_pool::Ghost$ghost_coin_2>(0)), $t60) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:817:13+37
    assume $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_2($ResourceValue($1_delegation_pool_Ghost$ghost_coin_2_$memory, 0)), $t60);

    // if ($t35) goto L18 else goto L17 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
    assume {:print "$at(2,43177,43342)"} true;
    if ($t35) { goto L18; } else { goto L17; }

    // label L18 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:18+14
    assume {:print "$at(2,43229,43243)"} true;
L18:

    // $t69 := get_field<delegation_pool::ObservedLockupCycle>.index($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:18+20
    assume {:print "$at(2,43229,43249)"} true;
    $t69 := $index#$1_delegation_pool_ObservedLockupCycle($t36);

    // $t70 := get_field<delegation_pool::DelegationPool>.observed_lockup_cycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:41+26
    $t70 := $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0));

    // $t71 := get_field<delegation_pool::ObservedLockupCycle>.index($t70) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:41+32
    $t71 := $index#$1_delegation_pool_ObservedLockupCycle($t70);

    // $t72 := <($t69, $t71) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:39+1
    call $t72 := $Lt($t69, $t71);

    // if ($t72) goto L20 else goto L19 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:17+104
    if ($t72) { goto L20; } else { goto L19; }

    // label L20 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:17+104
L20:

    // $t73 := true at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:17+104
    assume {:print "$at(2,43228,43332)"} true;
    $t73 := true;
    assume $IsValid'bool'($t73);

    // $t6 := $t73 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:17+104
    $t6 := $t73;

    // goto L21 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:17+104
    goto L21;

    // label L19 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:107+12
L19:

    // $t6 := delegation_pool::can_withdraw_pending_inactive($t32) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:77+43
    assume {:print "$at(2,43288,43331)"} true;
    call $t6 := $1_delegation_pool_can_withdraw_pending_inactive($t32);
    if ($abort_flag) {
        assume {:print "$at(2,43288,43331)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // label L21 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:823:17+104
L21:

    // $t7 := $t6 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
    assume {:print "$at(2,43177,43342)"} true;
    $t7 := $t6;

    // goto L22 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
    goto L22;

    // label L17 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
L17:

    // $t74 := false at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
    assume {:print "$at(2,43177,43342)"} true;
    $t74 := false;
    assume $IsValid'bool'($t74);

    // $t7 := $t74 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
    $t7 := $t74;

    // label L22 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:14+165
L22:

    // $t75 := !($t7) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:13+1
    assume {:print "$at(2,43176,43177)"} true;
    call $t75 := $Not($t7);

    // if ($t75) goto L24 else goto L23 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:821:9+182
    if ($t75) { goto L24; } else { goto L23; }

    // label L24 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:824:14+6
    assume {:print "$at(2,43346,43352)"} true;
L24:

    // destroy($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:824:14+6
    assume {:print "$at(2,43346,43352)"} true;

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:824:14+6
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,39,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // assert forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assume {:print "$at(60,266,385)"} true;
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0))));

    // assert forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))));

    // goto L32 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:824:14+6
    assume {:print "$at(2,43346,43352)"} true;
    goto L32;

    // label L23 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:826:13+14
    assume {:print "$at(2,43369,43383)"} true;
L23:

    // $t76 := get_field<delegation_pool::ObservedLockupCycle>.index($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:826:13+20
    assume {:print "$at(2,43369,43389)"} true;
    $t76 := $index#$1_delegation_pool_ObservedLockupCycle($t36);

    // $t77 := get_field<delegation_pool::DelegationPool>.observed_lockup_cycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:826:37+26
    $t77 := $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0));

    // $t78 := get_field<delegation_pool::ObservedLockupCycle>.index($t77) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:826:37+32
    $t78 := $index#$1_delegation_pool_ObservedLockupCycle($t77);

    // $t79 := ==($t76, $t78) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:826:34+2
    $t79 := $IsEqual'u64'($t76, $t78);

    // if ($t79) goto L26 else goto L25 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:826:9+256
    if ($t79) { goto L26; } else { goto L25; }

    // label L26 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:828:46+4
    assume {:print "$at(2,43532,43536)"} true;
L26:

    // $t80 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:828:46+4
    assume {:print "$at(2,43532,43536)"} true;
    $t80 := $Dereference($t0);

    // $t81 := delegation_pool::pending_inactive_shares_pool($t80) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:828:17+34
    call $t81 := $1_delegation_pool_pending_inactive_shares_pool($t80);
    if ($abort_flag) {
        assume {:print "$at(2,43503,43537)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$at(2,43450,43611)"} true;
    assume {:print "$track_global_mem(23965):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23966):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23967):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23968):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23969):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23970):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23971):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23972):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23973):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23974):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23975):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$track_global_mem(23976):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t82, pool_u64_unbound::spec_shares($t81, $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$at(3,33931,33992)"} true;
    assume ($t82 == $1_pool_u64_unbound_spec_shares($t81, $t1));

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23977):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23978):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23979):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23980):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23981):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23982):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23983):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23984):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23985):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23986):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23987):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:575:9+61
    assume {:print "$track_global_mem(23988):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t83, select pool_u64_unbound::Pool.total_coins($t81)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:576:9+42
    assume {:print "$at(3,34001,34043)"} true;
    assume ($t83 == $total_coins#$1_pool_u64_unbound_Pool($t81));

    // $t84 := delegation_pool::coins_to_redeem_to_ensure_min_stake($t81, $t1, $t2) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:22+161
    assume {:print "$at(2,43450,43611)"} true;
    call $t84 := $1_delegation_pool_coins_to_redeem_to_ensure_min_stake($t81, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,43450,43611)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t2 := $t84 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:13+6
    $t2 := $t84;

    // trace_local[amount]($t84) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:827:13+6
    assume {:print "$track_local(50,39,2):", $t84} $t84 == $t84;

    // label L25 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:41+4
    assume {:print "$at(2,43663,43667)"} true;
L25:

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$at(2,43640,43711)"} true;
    assume {:print "$track_global_mem(23989):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23990):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23991):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23992):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23993):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23994):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23995):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23996):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23997):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23998):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(23999):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$track_global_mem(24000):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t85, table::spec_get<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:636:9+63
    assume {:print "$at(3,37610,37673)"} true;
    assume ($t85 == $1_table_spec_get'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // $t86 := delegation_pool::redeem_inactive_shares($t0, $t1, $t2, $t36) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:18+71
    assume {:print "$at(2,43640,43711)"} true;
    call $t86,$t0 := $1_delegation_pool_redeem_inactive_shares($t0, $t1, $t2, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,43640,43711)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[amount]($t86) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:833:9+6
    assume {:print "$track_local(50,39,2):", $t86} $t86 == $t86;

    // $t87 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:835:59+4
    assume {:print "$at(2,43772,43776)"} true;
    $t87 := $Dereference($t0);

    // $t88 := delegation_pool::retrieve_stake_pool_owner($t87) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:835:33+31
    call $t88 := $1_delegation_pool_retrieve_stake_pool_owner($t87);
    if ($abort_flag) {
        assume {:print "$at(2,43746,43777)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[stake_pool_owner]($t88) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:835:13+16
    assume {:print "$track_local(50,39,17):", $t88} $t88 == $t88;

    // $t89 := delegation_pool::can_withdraw_pending_inactive($t32) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:839:13+43
    assume {:print "$at(2,44091,44134)"} true;
    call $t89 := $1_delegation_pool_can_withdraw_pending_inactive($t32);
    if ($abort_flag) {
        assume {:print "$at(2,44091,44134)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // if ($t89) goto L28 else goto L27 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:839:9+895
    if ($t89) { goto L28; } else { goto L27; }

    // label L28 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:64+12
    assume {:print "$at(2,44267,44279)"} true;
L28:

    // ($t90, $t91, $t92, $t93) := stake::get_stake($t32) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:47+30
    assume {:print "$at(2,44250,44280)"} true;
    call $t90,$t91,$t92,$t93 := $1_stake_get_stake($t32);
    if ($abort_flag) {
        assume {:print "$at(2,44250,44280)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t15 := $t93 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:27+16
    $t15 := $t93;

    // trace_local[pending_inactive]($t93) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:27+16
    assume {:print "$track_local(50,39,15):", $t93} $t93 == $t93;

    // destroy($t92) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:24+1

    // destroy($t91) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:21+1

    // destroy($t90) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:841:18+1

    // $t94 := get_field<delegation_pool::ObservedLockupCycle>.index($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:842:17+20
    assume {:print "$at(2,44298,44318)"} true;
    $t94 := $index#$1_delegation_pool_ObservedLockupCycle($t36);

    // $t95 := get_field<delegation_pool::DelegationPool>.observed_lockup_cycle($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:842:41+26
    $t95 := $observed_lockup_cycle#$1_delegation_pool_DelegationPool($Dereference($t0));

    // $t96 := get_field<delegation_pool::ObservedLockupCycle>.index($t95) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:842:41+32
    $t96 := $index#$1_delegation_pool_ObservedLockupCycle($t95);

    // $t97 := ==($t94, $t96) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:842:38+2
    $t97 := $IsEqual'u64'($t94, $t96);

    // if ($t97) goto L30 else goto L29 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:842:13+216
    if ($t97) { goto L30; } else { goto L29; }

    // label L30 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:844:36+16
    assume {:print "$at(2,44471,44487)"} true;
L30:

    // $t98 := -($t93, $t86) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:844:53+1
    assume {:print "$at(2,44488,44489)"} true;
    call $t98 := $Sub($t93, $t86);
    if ($abort_flag) {
        assume {:print "$at(2,44488,44489)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t15 := $t98 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:844:17+16
    $t15 := $t98;

    // trace_local[pending_inactive]($t98) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:844:17+16
    assume {:print "$track_local(50,39,15):", $t98} $t98 == $t98;

    // label L29 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:847:37+16
    assume {:print "$at(2,44601,44617)"} true;
L29:

    // stake::reactivate_stake($t88, $t15) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:847:13+59
    assume {:print "$at(2,44577,44636)"} true;
    call $1_stake_reactivate_stake($t88, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,44577,44636)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // stake::withdraw($t88, $t86) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:848:13+41
    assume {:print "$at(2,44650,44691)"} true;
    call $1_stake_withdraw($t88, $t86);
    if ($abort_flag) {
        assume {:print "$at(2,44650,44691)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // stake::unlock($t88, $t15) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:850:13+49
    assume {:print "$at(2,44771,44820)"} true;
    call $1_stake_unlock($t88, $t15);
    if ($abort_flag) {
        assume {:print "$at(2,44771,44820)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // goto L31 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:850:62+1
    goto L31;

    // label L27 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:853:29+16
    assume {:print "$at(2,44946,44962)"} true;
L27:

    // stake::withdraw($t88, $t86) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:853:13+41
    assume {:print "$at(2,44930,44971)"} true;
    call $1_stake_withdraw($t88, $t86);
    if ($abort_flag) {
        assume {:print "$at(2,44930,44971)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // label L31 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:35+16
    assume {:print "$at(2,45018,45034)"} true;
L31:

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$at(2,44992,45062)"} true;
    assume {:print "$track_global_mem(24001):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24002):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24003):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24004):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24005):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24006):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24007):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24008):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24009):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24010):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24011):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$track_global_mem(24012):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t99, signer::$address_of($t88)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$at(92,10885,10934)"} true;
    assume ($t99 == $1_signer_$address_of($t88));

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24013):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24014):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24015):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24016):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24017):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24018):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24019):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24020):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24021):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24022):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24023):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:271:9+49
    assume {:print "$track_global_mem(24024):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t100, global<coin::CoinStore<aptos_coin::AptosCoin>>($t99)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$at(92,10943,11012)"} true;
    assume ($t100 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t99));

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24025):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24026):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24027):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24028):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24029):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24030):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24031):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24032):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24033):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24034):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24035):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:272:9+69
    assume {:print "$track_global_mem(24036):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Identical($t101, global<coin::CoinStore<aptos_coin::AptosCoin>>($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:274:9+52
    assume {:print "$at(92,11109,11161)"} true;
    assume ($t101 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // coin::transfer<aptos_coin::AptosCoin>($t88, $t1, $t86) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:855:9+70
    assume {:print "$at(2,44992,45062)"} true;
    call $1_coin_transfer'$1_aptos_coin_AptosCoin'($t88, $t1, $t86);
    if ($abort_flag) {
        assume {:print "$at(2,44992,45062)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // ($t102, $t103, $t104, $t105) := stake::get_stake($t32) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:859:35+30
    assume {:print "$at(2,45289,45319)"} true;
    call $t102,$t103,$t104,$t105 := $1_stake_get_stake($t32);
    if ($abort_flag) {
        assume {:print "$at(2,45289,45319)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // destroy($t105) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:859:30+1

    // destroy($t104) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:859:27+1

    // trace_local[inactive]($t103) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:859:17+8
    assume {:print "$track_local(50,39,14):", $t103} $t103 == $t103;

    // destroy($t102) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:859:14+1

    // $t106 := borrow_field<delegation_pool::DelegationPool>.total_coins_inactive($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:860:9+25
    assume {:print "$at(2,45329,45354)"} true;
    $t106 := $ChildMutation($t0, 5, $total_coins_inactive#$1_delegation_pool_DelegationPool($Dereference($t0)));

    // write_ref($t106, $t103) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:860:9+36
    $t106 := $UpdateMutation($t106, $t103);

    // write_back[Reference($t0).total_coins_inactive (u64)]($t106) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:860:9+36
    $t0 := $UpdateMutation($t0, $Update'$1_delegation_pool_DelegationPool'_total_coins_inactive($Dereference($t0), $Dereference($t106)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:860:9+36
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,39,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // $t107 := borrow_field<delegation_pool::DelegationPool>.withdraw_stake_events($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:863:13+31
    assume {:print "$at(2,45407,45438)"} true;
    $t107 := $ChildMutation($t0, 10, $withdraw_stake_events#$1_delegation_pool_DelegationPool($Dereference($t0)));

    // $t108 := pack delegation_pool::WithdrawStakeEvent($t32, $t1, $t86) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:864:13+141
    assume {:print "$at(2,45452,45593)"} true;
    $t108 := $1_delegation_pool_WithdrawStakeEvent($t32, $t1, $t86);

    // opaque begin: event::emit_event<delegation_pool::WithdrawStakeEvent>($t107, $t108) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:862:9+228
    assume {:print "$at(2,45376,45604)"} true;

    // opaque end: event::emit_event<delegation_pool::WithdrawStakeEvent>($t107, $t108) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:862:9+228

    // write_back[Reference($t0).withdraw_stake_events (event::EventHandle<delegation_pool::WithdrawStakeEvent>)]($t107) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:862:9+228
    $t0 := $UpdateMutation($t0, $Update'$1_delegation_pool_DelegationPool'_withdraw_stake_events($Dereference($t0), $Dereference($t107)));

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:862:9+228
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,39,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // $t109 := coin::balance<aptos_coin::AptosCoin>($t1) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:872:29+43
    assume {:print "$at(2,45700,45743)"} true;
    call $t109 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,45700,45743)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[ghost_coin_3_]($t109) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:872:13+13
    assume {:print "$track_local(50,39,12):", $t109} $t109 == $t109;

    // $t110 := read_ref($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:873:71+4
    assume {:print "$at(2,45815,45819)"} true;
    $t110 := $Dereference($t0);

    // $t111 := delegation_pool::get_pool_address($t110) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:873:54+22
    call $t111 := $1_delegation_pool_get_pool_address($t110);
    if ($abort_flag) {
        assume {:print "$at(2,45798,45820)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // $t112 := coin::balance<aptos_coin::AptosCoin>($t111) on_abort goto L33 with $t33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:873:29+48
    call $t112 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t111);
    if ($abort_flag) {
        assume {:print "$at(2,45773,45821)"} true;
        $t33 := $abort_code;
        assume {:print "$track_abort(50,39):", $t33} $t33 == $t33;
        goto L33;
    }

    // trace_local[ghost_coin_4_]($t112) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:873:13+13
    assume {:print "$track_local(50,39,13):", $t112} $t112 == $t112;

    // assume Identical($t113, global<delegation_pool::Ghost$ghost_olc>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:20+9
    assume {:print "$at(2,45856,45865)"} true;
    assume ($t113 == $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:20+9]($t113) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:20+9
    assume {:print "$track_exp_sub(22873):", $t113} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:33+14]($t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:33+14
    assume {:print "$track_exp_sub(22874):", $t36} true;

    // assume Identical($t114, Eq<delegation_pool::ObservedLockupCycle>(select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)), $t36)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume ($t114 == $IsEqual'$1_delegation_pool_ObservedLockupCycle'($v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0)), $t36));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35]($t114) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_exp(22875):", $t114} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24037):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24038):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24039):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24040):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24041):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24042):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24043):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24044):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24045):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24046):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24047):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume {:print "$track_global_mem(24048):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<delegation_pool::ObservedLockupCycle>(select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)), $t36) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:875:13+35
    assume $IsEqual'$1_delegation_pool_ObservedLockupCycle'($v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0)), $t36);

    // assume Identical($t115, global<delegation_pool::Ghost$ghost_coin_3>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:20+12
    assume {:print "$at(2,45904,45916)"} true;
    assume ($t115 == $ResourceValue($1_delegation_pool_Ghost$ghost_coin_3_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:20+12]($t115) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:20+12
    assume {:print "$track_exp_sub(22879):", $t115} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:36+13]($t109) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:36+13
    assume {:print "$track_exp_sub(22880):", $t109} true;

    // assume Identical($t116, Eq<u64>(select delegation_pool::Ghost$ghost_coin_3.v(global<delegation_pool::Ghost$ghost_coin_3>(0)), $t109)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume ($t116 == $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_3($ResourceValue($1_delegation_pool_Ghost$ghost_coin_3_$memory, 0)), $t109));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37]($t116) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_exp(22881):", $t116} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24049):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24050):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24051):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24052):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24053):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24054):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24055):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24056):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24057):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24058):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24059):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume {:print "$track_global_mem(24060):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<u64>(select delegation_pool::Ghost$ghost_coin_3.v(global<delegation_pool::Ghost$ghost_coin_3>(0)), $t109) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:876:13+37
    assume $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_3($ResourceValue($1_delegation_pool_Ghost$ghost_coin_3_$memory, 0)), $t109);

    // assume Identical($t117, global<delegation_pool::Ghost$ghost_coin_4>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:20+12
    assume {:print "$at(2,45954,45966)"} true;
    assume ($t117 == $ResourceValue($1_delegation_pool_Ghost$ghost_coin_4_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:20+12]($t117) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:20+12
    assume {:print "$track_exp_sub(22885):", $t117} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:36+13]($t112) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:36+13
    assume {:print "$track_exp_sub(22886):", $t112} true;

    // assume Identical($t118, Eq<u64>(select delegation_pool::Ghost$ghost_coin_4.v(global<delegation_pool::Ghost$ghost_coin_4>(0)), $t112)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume ($t118 == $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_4($ResourceValue($1_delegation_pool_Ghost$ghost_coin_4_$memory, 0)), $t112));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37]($t118) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_exp(22887):", $t118} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24061):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24062):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24063):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24064):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24065):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24066):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24067):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24068):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24069):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24070):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24071):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume {:print "$track_global_mem(24072):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assume Eq<u64>(select delegation_pool::Ghost$ghost_coin_4.v(global<delegation_pool::Ghost$ghost_coin_4>(0)), $t112) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:877:13+37
    assume $IsEqual'u64'($v#$1_delegation_pool_Ghost$ghost_coin_4($ResourceValue($1_delegation_pool_Ghost$ghost_coin_4_$memory, 0)), $t112);

    // trace_local[pool]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:878:10+1
    assume {:print "$at(2,45994,45995)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_local(50,39,0):", $temp_0'$1_delegation_pool_DelegationPool'} $temp_0'$1_delegation_pool_DelegationPool' == $temp_0'$1_delegation_pool_DelegationPool';

    // assert forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(select delegation_pool::DelegationPool.active_shares($t0)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assume {:print "$at(60,266,385)"} true;
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($active_shares#$1_delegation_pool_DelegationPool($Dereference($t0))), addr) > 0))));

    // assert forall $key: select delegation_pool::DelegationPool.inactive_shares($t0): forall addr: TypeDomain<address>(): Implies(table_with_length::spec_contains<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), Gt(table_with_length::spec_get<address, u128>(select pool_u64_unbound::Pool.shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), $key)), addr), 0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    // data invariant at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64_unbound.spec.move:10:9+119
    assert {:msg "assert_failed(60,266,385): data invariant does not hold"}
      (var $range_0 := $inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)); (forall $key: $1_delegation_pool_ObservedLockupCycle :: ContainsTable($range_0, $EncodeKey'$1_delegation_pool_ObservedLockupCycle'($key)) ==> ((forall addr: int :: $IsValid'address'(addr) ==> (($1_table_with_length_spec_contains'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) ==> ($1_table_with_length_spec_get'address_u128'($shares#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $key)), addr) > 0)))))));

    // label L32 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$at(2,46065,46066)"} true;
L32:

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$at(2,46065,46066)"} true;
    assume {:print "$track_global_mem(24073):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24074):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24075):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24076):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24077):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24078):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24079):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24080):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24081):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24082):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24083):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$track_global_mem(24084):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Not(false) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assert {:msg "assert_failed(2,46065,46066): function does not abort under this condition"}
      !false;

    // assume Identical($t119, global<delegation_pool::Ghost$ghost_bool>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:17+10
    assume {:print "$at(3,26665,26675)"} true;
    assume ($t119 == $ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:17+10]($t119) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:17+10
    assume {:print "$track_exp_sub(22654):", $t119} true;

    // assume Identical($t120, global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:32+58
    assume ($t120 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:32+58]($t120) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:32+58
    assume {:print "$track_exp_sub(22656):", $t120} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:140+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:140+17
    assume {:print "$track_exp_sub(22658):", $t1} true;

    // assume Identical($t121, global<coin::CoinStore<aptos_coin::AptosCoin>>($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:105+53
    assume ($t121 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:105+53]($t121) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:105+53
    assume {:print "$track_exp_sub(22659):", $t121} true;

    // assume Identical($t122, Implies(select delegation_pool::Ghost$ghost_bool.v(global<delegation_pool::Ghost$ghost_bool>(0)), Eq<u64>(select coin::Coin.value(select coin::CoinStore.coin(global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>($t1))), select coin::Coin.value(select coin::CoinStore.coin(global<coin::CoinStore<aptos_coin::AptosCoin>>($t1)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume ($t122 == ($v#$1_delegation_pool_Ghost$ghost_bool($ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0)) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $t1))), $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1))))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161]($t122) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_exp(22660):", $t122} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24085):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24086):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24087):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24088):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24089):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24090):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24091):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24092):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24093):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24094):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24095):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assume {:print "$track_global_mem(24096):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(select delegation_pool::Ghost$ghost_bool.v(global<delegation_pool::Ghost$ghost_bool>(0)), Eq<u64>(select coin::Coin.value(select coin::CoinStore.coin(global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>($t1))), select coin::Coin.value(select coin::CoinStore.coin(global<coin::CoinStore<aptos_coin::AptosCoin>>($t1))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:457:9+161
    assert {:msg "assert_failed(3,26657,26818): post-condition does not hold"}
      ($v#$1_delegation_pool_Ghost$ghost_bool($ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0)) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $t1))), $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:29+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:29+4
    assume {:print "$at(3,27314,27318)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22680):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t123, global<delegation_pool::Ghost$ghost_olc>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:50+9
    assume ($t123 == $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:50+9]($t123) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:50+9
    assume {:print "$track_exp_sub(22681):", $t123} true;

    // assume Identical($t124, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:13+47
    assume ($t124 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:13+47]($t124) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:466:13+47
    assume {:print "$track_exp_sub(22682):", $t124} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:51+9]($t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:51+9
    assume {:print "$at(3,27397,27406)"} true;
    assume {:print "$track_exp_sub(22684):", $t27} true;

    // assume Identical($t125, global<delegation_pool::Ghost$ghost_olc>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:77+9
    assume ($t125 == $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:77+9]($t125) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:77+9
    assume {:print "$track_exp_sub(22685):", $t125} true;

    // assume Identical($t126, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t27), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:35+52
    assume ($t126 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($t27), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:35+52]($t126) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:35+52
    assume {:print "$track_exp_sub(22686):", $t126} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:89+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:89+17
    assume {:print "$track_exp_sub(22688):", $t1} true;

    // assume Identical($t127, pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t27), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:13+94
    assume ($t127 == $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($t27), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:13+94]($t127) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:13+94
    assume {:print "$track_exp_sub(22689):", $t127} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:148+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:148+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22690):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t128, global<delegation_pool::Ghost$ghost_olc>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:169+9
    assume ($t128 == $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:169+9]($t128) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:169+9
    assume {:print "$track_exp_sub(22691):", $t128} true;

    // assume Identical($t129, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:132+47
    assume ($t129 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:132+47]($t129) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:132+47
    assume {:print "$track_exp_sub(22692):", $t129} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:181+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:181+17
    assume {:print "$track_exp_sub(22694):", $t1} true;

    // assume Identical($t130, pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:110+89
    assume ($t130 == $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:110+89]($t130) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:467:110+89
    assume {:print "$track_exp_sub(22695):", $t130} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:29+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:29+4
    assume {:print "$at(3,27575,27579)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22696):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t131, global<delegation_pool::Ghost$ghost_olc>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:50+9
    assume ($t131 == $ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:50+9]($t131) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:50+9
    assume {:print "$track_exp_sub(22697):", $t131} true;

    // assume Identical($t132, table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:13+47
    assume ($t132 == $1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:13+47]($t132) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:468:13+47
    assume {:print "$track_exp_sub(22698):", $t132} true;

    // assume Identical($t133, pool_u64_unbound::spec_shares_to_amount_with_total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), Sub(pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t27), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1), pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1)), select pool_u64_unbound::Pool.total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:17+392
    assume {:print "$at(3,27236,27628)"} true;
    assume ($t133 == $1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), ($1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($t27), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1) - $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1)), $total_coins#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:17+392]($t133) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:17+392
    assume {:print "$track_exp_sub(22699):", $t133} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:469:14+6]($t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:469:14+6
    assume {:print "$at(3,27632,27638)"} true;
    assume {:print "$track_exp_sub(22701):", $t28} true;

    // assume Identical($t134, Eq<u64>(pool_u64_unbound::spec_shares_to_amount_with_total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), Sub(pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t27), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1), pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1)), select pool_u64_unbound::Pool.total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))))), $t28)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$at(3,27228,27639)"} true;
    assume ($t134 == $IsEqual'u64'($1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), ($1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($t27), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1) - $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1)), $total_coins#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))))), $t28));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411]($t134) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_exp(22702):", $t134} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24097):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24098):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24099):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24100):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24101):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24102):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24103):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24104):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24105):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24106):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24107):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assume {:print "$track_global_mem(24108):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Eq<u64>(pool_u64_unbound::spec_shares_to_amount_with_total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), Sub(pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t27), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1), pool_u64_unbound::spec_shares(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))), $t1)), select pool_u64_unbound::Pool.total_coins(table::spec_get<delegation_pool::ObservedLockupCycle, pool_u64_unbound::Pool>(select delegation_pool::DelegationPool.inactive_shares($t0), select delegation_pool::Ghost$ghost_olc.v(global<delegation_pool::Ghost$ghost_olc>(0))))), $t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:465:9+411
    assert {:msg "assert_failed(3,27228,27639): post-condition does not hold"}
      $IsEqual'u64'($1_pool_u64_unbound_spec_shares_to_amount_with_total_coins($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), ($1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($t27), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1) - $1_pool_u64_unbound_spec_shares($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))), $t1)), $total_coins#$1_pool_u64_unbound_Pool($1_table_spec_get'$1_delegation_pool_ObservedLockupCycle_$1_pool_u64_unbound_Pool'($inactive_shares#$1_delegation_pool_DelegationPool($Dereference($t0)), $v#$1_delegation_pool_Ghost$ghost_olc($ResourceValue($1_delegation_pool_Ghost$ghost_olc_$memory, 0))))), $t28);

    // assume Identical($t135, global<delegation_pool::Ghost$ghost_bool>(0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:18+10
    assume {:print "$at(3,27804,27814)"} true;
    assume ($t135 == $ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:18+10]($t135) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:18+10
    assume {:print "$track_exp_sub(22709):", $t135} true;

    // assume Identical($t136, global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:33+58
    assume ($t136 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:33+58]($t136) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:33+58
    assume {:print "$track_exp_sub(22711):", $t136} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:141+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:141+17
    assume {:print "$track_exp_sub(22713):", $t1} true;

    // assume Identical($t137, global<coin::CoinStore<aptos_coin::AptosCoin>>($t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:106+53
    assume ($t137 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:106+53]($t137) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:106+53
    assume {:print "$track_exp_sub(22714):", $t137} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:173+6]($t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:173+6
    assume {:print "$track_exp_sub(22716):", $t28} true;

    // assume Identical($t138, Implies(Not(select delegation_pool::Ghost$ghost_bool.v(global<delegation_pool::Ghost$ghost_bool>(0))), Eq<u64>(select coin::Coin.value(select coin::CoinStore.coin(global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>($t1))), Add(select coin::Coin.value(select coin::CoinStore.coin(global<coin::CoinStore<aptos_coin::AptosCoin>>($t1))), $t28)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume ($t138 == (!$v#$1_delegation_pool_Ghost$ghost_bool($ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0)) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $t1))), ($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1))) + $t28))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171]($t138) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_exp(22717):", $t138} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24109):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24110):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24111):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24112):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24113):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24114):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24115):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24116):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24117):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24118):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24119):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assume {:print "$track_global_mem(24120):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(Not(select delegation_pool::Ghost$ghost_bool.v(global<delegation_pool::Ghost$ghost_bool>(0))), Eq<u64>(select coin::Coin.value(select coin::CoinStore.coin(global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>($t1))), Add(select coin::Coin.value(select coin::CoinStore.coin(global<coin::CoinStore<aptos_coin::AptosCoin>>($t1))), $t28))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:474:9+171
    assert {:msg "assert_failed(3,27795,27966): post-condition does not hold"}
      (!$v#$1_delegation_pool_Ghost$ghost_bool($ResourceValue($1_delegation_pool_Ghost$ghost_bool_$memory, 0)) ==> $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $t1))), ($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t1))) + $t28)));

    // assume Identical($t139, global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>(delegation_pool::$get_pool_address[]($t27))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:17+63
    assume {:print "$at(3,28479,28542)"} true;
    assume ($t139 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $1_delegation_pool_$get_pool_address($t27)));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:17+63]($t139) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:17+63
    assume {:print "$track_exp_sub(22724):", $t139} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:147+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:147+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22725):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t140, delegation_pool::$get_pool_address($t0)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:130+22
    assume ($t140 == $1_delegation_pool_$get_pool_address($Dereference($t0)));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:130+22]($t140) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:130+22
    assume {:print "$track_exp_sub(22726):", $t140} true;

    // assume Identical($t141, global<coin::CoinStore<aptos_coin::AptosCoin>>(delegation_pool::$get_pool_address($t0))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:95+58
    assume ($t141 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $1_delegation_pool_$get_pool_address($Dereference($t0))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:95+58]($t141) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:95+58
    assume {:print "$track_exp_sub(22727):", $t141} true;

    // assume Identical($t142, Eq<u64>(select coin::Coin.value(select coin::CoinStore.coin(global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>(delegation_pool::$get_pool_address[]($t27)))), select coin::Coin.value(select coin::CoinStore.coin(global<coin::CoinStore<aptos_coin::AptosCoin>>(delegation_pool::$get_pool_address($t0)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume ($t142 == $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $1_delegation_pool_$get_pool_address($t27)))), $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $1_delegation_pool_$get_pool_address($Dereference($t0)))))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156]($t142) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_exp(22728):", $t142} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24121):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24122):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24123):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24124):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24125):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24126):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24127):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24128):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24129):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24130):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24131):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assume {:print "$track_global_mem(24132):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Eq<u64>(select coin::Coin.value(select coin::CoinStore.coin(global[@23]<coin::CoinStore<aptos_coin::AptosCoin>>(delegation_pool::$get_pool_address[]($t27)))), select coin::Coin.value(select coin::CoinStore.coin(global<coin::CoinStore<aptos_coin::AptosCoin>>(delegation_pool::$get_pool_address($t0))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:484:9+156
    assert {:msg "assert_failed(3,28471,28627): post-condition does not hold"}
      $IsEqual'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#23, $1_delegation_pool_$get_pool_address($t27)))), $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $1_delegation_pool_$get_pool_address($Dereference($t0))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:39+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:39+4
    assume {:print "$at(3,29776,29780)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22739):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:65+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:65+17
    assume {:print "$track_exp_sub(22741):", $t1} true;

    // assume Identical($t143, table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:18+65
    assume ($t143 == $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:18+65]($t143) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:18+65
    assume {:print "$track_exp_sub(22742):", $t143} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:125+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:125+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22743):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t144, global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:100+60
    assume ($t144 == $ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:100+60]($t144) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:100+60
    assume {:print "$track_exp_sub(22744):", $t144} true;

    // assume Identical($t145, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:88+90
    assume ($t145 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:88+90]($t145) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:88+90
    assume {:print "$track_exp_sub(22745):", $t145} true;

    // assume Identical($t146, global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:194+65
    assume ($t146 == $ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:194+65]($t146) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:194+65
    assume {:print "$track_exp_sub(22747):", $t146} true;

    // assume Identical($t147, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:182+95
    assume ($t147 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:182+95]($t147) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:182+95
    assume {:print "$track_exp_sub(22748):", $t147} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:280+6]($t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:280+6
    assume {:print "$track_exp_sub(22750):", $t28} true;

    // assume Identical($t148, Implies(Not(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), Sub(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))), $t28)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume ($t148 == (!$1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), ($1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))) - $t28))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278]($t148) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_exp(22751):", $t148} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24133):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24134):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24135):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24136):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24137):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24138):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24139):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24140):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24141):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24142):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24143):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assume {:print "$track_global_mem(24144):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(Not(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), Sub(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))), $t28))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:502:9+278
    assert {:msg "assert_failed(3,29746,30024): post-condition does not hold"}
      (!$1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), ($1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))) - $t28)));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:39+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:39+4
    assume {:print "$at(3,30064,30068)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22761):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:65+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:65+17
    assume {:print "$track_exp_sub(22763):", $t1} true;

    // assume Identical($t149, table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:18+65
    assume ($t149 == $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:18+65]($t149) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:18+65
    assume {:print "$track_exp_sub(22764):", $t149} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:125+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:125+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22765):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t150, global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:100+60
    assume ($t150 == $ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:100+60]($t150) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:100+60
    assume {:print "$track_exp_sub(22766):", $t150} true;

    // assume Identical($t151, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:88+82
    assume ($t151 == $1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:88+82]($t151) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:88+82
    assume {:print "$track_exp_sub(22767):", $t151} true;

    // assume Identical($t152, global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:186+65
    assume ($t152 == $ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:186+65]($t152) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:186+65
    assume {:print "$track_exp_sub(22769):", $t152} true;

    // assume Identical($t153, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:174+87
    assume ($t153 == $1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:174+87]($t153) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:174+87
    assume {:print "$track_exp_sub(22770):", $t153} true;

    // assume Identical($t154, Implies(Not(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume ($t154 == (!$1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), $1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253]($t154) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_exp(22771):", $t154} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24145):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24146):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24147):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24148):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24149):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24150):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24151):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24152):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24153):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24154):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24155):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assume {:print "$track_global_mem(24156):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(Not(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:504:9+253
    assert {:msg "assert_failed(3,30034,30287): post-condition does not hold"}
      (!$1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), $1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27)))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:39+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:39+4
    assume {:print "$at(3,30327,30331)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22778):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:65+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:65+17
    assume {:print "$track_exp_sub(22780):", $t1} true;

    // assume Identical($t155, table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:18+65
    assume ($t155 == $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:18+65]($t155) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:18+65
    assume {:print "$track_exp_sub(22781):", $t155} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:88+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:88+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22782):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:117+9]($t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:117+9
    assume {:print "$track_exp_sub(22784):", $t27} true;

    // assume Identical($t156, Implies(Not(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)), Eq<u64>(select delegation_pool::DelegationPool.total_coins_inactive($t0), select delegation_pool::DelegationPool.total_coins_inactive($t27)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume ($t156 == (!$1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($total_coins_inactive#$1_delegation_pool_DelegationPool($Dereference($t0)), $total_coins_inactive#$1_delegation_pool_DelegationPool($t27))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139]($t156) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_exp(22785):", $t156} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24157):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24158):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24159):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24160):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24161):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24162):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24163):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24164):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24165):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24166):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24167):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assume {:print "$track_global_mem(24168):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(Not(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)), Eq<u64>(select delegation_pool::DelegationPool.total_coins_inactive($t0), select delegation_pool::DelegationPool.total_coins_inactive($t27))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:506:9+139
    assert {:msg "assert_failed(3,30297,30436): post-condition does not hold"}
      (!$1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($total_coins_inactive#$1_delegation_pool_DelegationPool($Dereference($t0)), $total_coins_inactive#$1_delegation_pool_DelegationPool($t27)));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:38+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:38+4
    assume {:print "$at(3,31563,31567)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22795):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:64+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:64+17
    assume {:print "$track_exp_sub(22797):", $t1} true;

    // assume Identical($t157, table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:17+65
    assume ($t157 == $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:17+65]($t157) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:17+65
    assume {:print "$track_exp_sub(22798):", $t157} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:124+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:124+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22799):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t158, global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:99+60
    assume ($t158 == $ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:99+60]($t158) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:99+60
    assume {:print "$track_exp_sub(22800):", $t158} true;

    // assume Identical($t159, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:87+90
    assume ($t159 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:87+90]($t159) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:87+90
    assume {:print "$track_exp_sub(22801):", $t159} true;

    // assume Identical($t160, select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:193+82
    assume ($t160 == $pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:193+82]($t160) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:193+82
    assume {:print "$track_exp_sub(22803):", $t160} true;

    // assume Identical($t161, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:181+95
    assume ($t161 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:181+95]($t161) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:181+95
    assume {:print "$track_exp_sub(22804):", $t161} true;

    // assume Identical($t162, Implies(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume ($t162 == ($1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268]($t162) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_exp(22805):", $t162} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24169):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24170):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24171):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24172):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24173):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24174):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24175):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24176):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24177):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24178):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24179):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assume {:print "$track_global_mem(24180):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:525:9+268
    assert {:msg "assert_failed(3,31534,31802): post-condition does not hold"}
      ($1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27)))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:38+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:38+4
    assume {:print "$at(3,31841,31845)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22816):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:64+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:64+17
    assume {:print "$track_exp_sub(22818):", $t1} true;

    // assume Identical($t163, table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:17+65
    assume ($t163 == $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:17+65]($t163) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:17+65
    assume {:print "$track_exp_sub(22819):", $t163} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:124+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:124+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22820):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // assume Identical($t164, global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:99+60
    assume ($t164 == $ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:99+60]($t164) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:99+60
    assume {:print "$track_exp_sub(22821):", $t164} true;

    // assume Identical($t165, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:87+82
    assume ($t165 == $1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:87+82]($t165) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:87+82
    assume {:print "$track_exp_sub(22822):", $t165} true;

    // assume Identical($t166, select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:185+74
    assume ($t166 == $inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27)))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:185+74]($t166) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:185+74
    assume {:print "$track_exp_sub(22824):", $t166} true;

    // assume Identical($t167, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27)))))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:173+87
    assume ($t167 == $1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:173+87]($t167) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:173+87
    assume {:print "$track_exp_sub(22825):", $t167} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:263+6]($t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:263+6
    assume {:print "$track_exp_sub(22827):", $t28} true;

    // assume Identical($t168, Implies(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), Sub(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))), $t28)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume ($t168 == ($1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), ($1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))) - $t28))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261]($t168) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_exp(22828):", $t168} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24181):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24182):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24183):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24184):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24185):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24186):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24187):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24188):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24189):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24190):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24191):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assume {:print "$track_global_mem(24192):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1), Eq<u64>(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t0))))), Sub(coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.inactive(global[@24]<stake::StakePool>(select account::SignerCapability.account(select delegation_pool::DelegationPool.stake_pool_signer_cap($t27))))), $t28))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:527:9+261
    assert {:msg "assert_failed(3,31812,32073): post-condition does not hold"}
      ($1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($Dereference($t0)))))), ($1_coin_$value'$1_aptos_coin_AptosCoin'($inactive#$1_stake_StakePool($ResourceValue($1_stake_StakePool_$memory#24, $account#$1_account_SignerCapability($stake_pool_signer_cap#$1_delegation_pool_DelegationPool($t27))))) - $t28)));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:38+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:38+4
    assume {:print "$at(3,32120,32124)"} true;
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22836):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:64+17]($t1) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:64+17
    assume {:print "$track_exp_sub(22838):", $t1} true;

    // assume Identical($t169, table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1)) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:17+65
    assume ($t169 == $1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1));

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:17+65]($t169) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:17+65
    assume {:print "$track_exp_sub(22839):", $t169} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:87+4]($t0) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:87+4
    $temp_0'$1_delegation_pool_DelegationPool' := $Dereference($t0);
    assume {:print "$track_exp_sub(22840):", $temp_0'$1_delegation_pool_DelegationPool'} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:116+9]($t27) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:116+9
    assume {:print "$track_exp_sub(22842):", $t27} true;

    // trace_exp[subauto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:149+6]($t28) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:149+6
    assume {:print "$track_exp_sub(22844):", $t28} true;

    // assume Identical($t170, Implies(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1), Eq<u64>(select delegation_pool::DelegationPool.total_coins_inactive($t0), Sub(select delegation_pool::DelegationPool.total_coins_inactive($t27), $t28)))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume ($t170 == ($1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($total_coins_inactive#$1_delegation_pool_DelegationPool($Dereference($t0)), ($total_coins_inactive#$1_delegation_pool_DelegationPool($t27) - $t28))));

    // trace_exp[auto, at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147]($t170) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_exp(22845):", $t170} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24193):", $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24194):", $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24195):", $1_timestamp_CurrentTimeMicroseconds_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24196):", $1_stake_OwnerCapability_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24197):", $1_stake_StakePool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24198):", $1_stake_ValidatorSet_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24199):", $1_delegation_pool_Ghost$ghost_coin_3_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24200):", $1_delegation_pool_Ghost$ghost_coin_1_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24201):", $1_delegation_pool_Ghost$ghost_coin_4_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24202):", $1_delegation_pool_Ghost$ghost_coin_2_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24203):", $1_delegation_pool_Ghost$ghost_bool_$memory} true;

    // trace_global_mem() at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assume {:print "$track_global_mem(24204):", $1_delegation_pool_Ghost$ghost_olc_$memory} true;

    // assert Implies(table::spec_contains<address, delegation_pool::ObservedLockupCycle>(select delegation_pool::DelegationPool.pending_withdrawals($t0), $t1), Eq<u64>(select delegation_pool::DelegationPool.total_coins_inactive($t0), Sub(select delegation_pool::DelegationPool.total_coins_inactive($t27), $t28))) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    assert {:msg "assert_failed(3,32091,32238): post-condition does not hold"}
      ($1_table_spec_contains'address_$1_delegation_pool_ObservedLockupCycle'($pending_withdrawals#$1_delegation_pool_DelegationPool($Dereference($t0)), $t1) ==> $IsEqual'u64'($total_coins_inactive#$1_delegation_pool_DelegationPool($Dereference($t0)), ($total_coins_inactive#$1_delegation_pool_DelegationPool($t27) - $t28)));

    // return () at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.spec.move:529:9+147
    $ret0 := $t0;
    return;

    // label L33 at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$at(2,46065,46066)"} true;
L33:

    // abort($t33) at /home/zr/Downloads/New/aptos-core/aptos-move/framework/aptos-framework/sources/delegation_pool.move:880:5+1
    assume {:print "$at(2,46065,46066)"} true;
    $abort_code := $t33;
    $abort_flag := true;
    return;

}
