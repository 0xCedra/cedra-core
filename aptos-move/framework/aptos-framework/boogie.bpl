
// ** Expanded prelude

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Basic theory for vectors using arrays. This version of vectors is not extensional.

type {:datatype} Vec _;

function {:constructor} Vec<T>(v: [int]T, l: int): Vec T;

function {:builtin "MapConst"} MapConstVec<T>(T): [int]T;
function DefaultVecElem<T>(): T;
function {:inline} DefaultVecMap<T>(): [int]T { MapConstVec(DefaultVecElem()) }

function {:inline} EmptyVec<T>(): Vec T {
    Vec(DefaultVecMap(), 0)
}

function {:inline} MakeVec1<T>(v: T): Vec T {
    Vec(DefaultVecMap()[0 := v], 1)
}

function {:inline} MakeVec2<T>(v1: T, v2: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2], 2)
}

function {:inline} MakeVec3<T>(v1: T, v2: T, v3: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3], 3)
}

function {:inline} MakeVec4<T>(v1: T, v2: T, v3: T, v4: T): Vec T {
    Vec(DefaultVecMap()[0 := v1][1 := v2][2 := v3][3 := v4], 4)
}

function {:inline} ExtendVec<T>(v: Vec T, elem: T): Vec T {
    (var l := l#Vec(v);
    Vec(v#Vec(v)[l := elem], l + 1))
}

function {:inline} ReadVec<T>(v: Vec T, i: int): T {
    v#Vec(v)[i]
}

function {:inline} LenVec<T>(v: Vec T): int {
    l#Vec(v)
}

function {:inline} IsEmptyVec<T>(v: Vec T): bool {
    l#Vec(v) == 0
}

function {:inline} RemoveVec<T>(v: Vec T): Vec T {
    (var l := l#Vec(v) - 1;
    Vec(v#Vec(v)[l := DefaultVecElem()], l))
}

function {:inline} RemoveAtVec<T>(v: Vec T, i: int): Vec T {
    (var l := l#Vec(v) - 1;
    Vec(
        (lambda j: int ::
           if j >= 0 && j < l then
               if j < i then v#Vec(v)[j] else v#Vec(v)[j+1]
           else DefaultVecElem()),
        l))
}

function {:inline} ConcatVec<T>(v1: Vec T, v2: Vec T): Vec T {
    (var l1, m1, l2, m2 := l#Vec(v1), v#Vec(v1), l#Vec(v2), v#Vec(v2);
    Vec(
        (lambda i: int ::
          if i >= 0 && i < l1 + l2 then
            if i < l1 then m1[i] else m2[i - l1]
          else DefaultVecElem()),
        l1 + l2))
}

function {:inline} ReverseVec<T>(v: Vec T): Vec T {
    (var l := l#Vec(v);
    Vec(
        (lambda i: int :: if 0 <= i && i < l then v#Vec(v)[l - i - 1] else DefaultVecElem()),
        l))
}

function {:inline} SliceVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v#Vec(v);
    Vec(
        (lambda k:int ::
          if 0 <= k && k < j - i then
            m[i + k]
          else
            DefaultVecElem()),
        (if j - i < 0 then 0 else j - i)))
}


function {:inline} UpdateVec<T>(v: Vec T, i: int, elem: T): Vec T {
    Vec(v#Vec(v)[i := elem], l#Vec(v))
}

function {:inline} SwapVec<T>(v: Vec T, i: int, j: int): Vec T {
    (var m := v#Vec(v);
    Vec(m[i := m[j]][j := m[i]], l#Vec(v)))
}

function {:inline} ContainsVec<T>(v: Vec T, e: T): bool {
    (var l := l#Vec(v);
    (exists i: int :: InRangeVec(v, i) && v#Vec(v)[i] == e))
}

function IndexOfVec<T>(v: Vec T, e: T): int;
axiom {:ctor "Vec"} (forall<T> v: Vec T, e: T :: {IndexOfVec(v, e)}
    (var i := IndexOfVec(v,e);
     if (!ContainsVec(v, e)) then i == -1
     else InRangeVec(v, i) && ReadVec(v, i) == e &&
        (forall j: int :: j >= 0 && j < i ==> ReadVec(v, j) != e)));

// This function should stay non-inlined as it guards many quantifiers
// over vectors. It appears important to have this uninterpreted for
// quantifier triggering.
function InRangeVec<T>(v: Vec T, i: int): bool {
    i >= 0 && i < LenVec(v)
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Boogie model for multisets, based on Boogie arrays. This theory assumes extensional equality for element types.

type {:datatype} Multiset _;
function {:constructor} Multiset<T>(v: [T]int, l: int): Multiset T;

function {:builtin "MapConst"} MapConstMultiset<T>(l: int): [T]int;

function {:inline} EmptyMultiset<T>(): Multiset T {
    Multiset(MapConstMultiset(0), 0)
}

function {:inline} LenMultiset<T>(s: Multiset T): int {
    l#Multiset(s)
}

function {:inline} ExtendMultiset<T>(s: Multiset T, v: T): Multiset T {
    (var len := l#Multiset(s);
    (var cnt := v#Multiset(s)[v];
    Multiset(v#Multiset(s)[v := (cnt + 1)], len + 1)))
}

// This function returns (s1 - s2). This function assumes that s2 is a subset of s1.
function {:inline} SubtractMultiset<T>(s1: Multiset T, s2: Multiset T): Multiset T {
    (var len1 := l#Multiset(s1);
    (var len2 := l#Multiset(s2);
    Multiset((lambda v:T :: v#Multiset(s1)[v]-v#Multiset(s2)[v]), len1-len2)))
}

function {:inline} IsEmptyMultiset<T>(s: Multiset T): bool {
    (l#Multiset(s) == 0) &&
    (forall v: T :: v#Multiset(s)[v] == 0)
}

function {:inline} IsSubsetMultiset<T>(s1: Multiset T, s2: Multiset T): bool {
    (l#Multiset(s1) <= l#Multiset(s2)) &&
    (forall v: T :: v#Multiset(s1)[v] <= v#Multiset(s2)[v])
}

function {:inline} ContainsMultiset<T>(s: Multiset T, v: T): bool {
    v#Multiset(s)[v] > 0
}

// Copyright (c) The Diem Core Contributors
// Copyright (c) The Move Contributors
// SPDX-License-Identifier: Apache-2.0

// Theory for tables.

type {:datatype} Table _ _;

// v is the SMT array holding the key-value assignment. e is an array which
// independently determines whether a key is valid or not. l is the length.
//
// Note that even though the program cannot reflect over existence of a key,
// we want the specification to be able to do this, so it can express
// verification conditions like "key has been inserted".
function {:constructor} Table<K, V>(v: [K]V, e: [K]bool, l: int): Table K V;

// Functions for default SMT arrays. For the table values, we don't care and
// use an uninterpreted function.
function DefaultTableArray<K, V>(): [K]V;
function DefaultTableKeyExistsArray<K>(): [K]bool;
axiom DefaultTableKeyExistsArray() == (lambda i: int :: false);

function {:inline} EmptyTable<K, V>(): Table K V {
    Table(DefaultTableArray(), DefaultTableKeyExistsArray(), 0)
}

function {:inline} GetTable<K,V>(t: Table K V, k: K): V {
    // Notice we do not check whether key is in the table. The result is undetermined if it is not.
    v#Table(t)[k]
}

function {:inline} LenTable<K,V>(t: Table K V): int {
    l#Table(t)
}


function {:inline} ContainsTable<K,V>(t: Table K V, k: K): bool {
    e#Table(t)[k]
}

function {:inline} UpdateTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    Table(v#Table(t)[k := v], e#Table(t), l#Table(t))
}

function {:inline} AddTable<K,V>(t: Table K V, k: K, v: V): Table K V {
    // This function has an undetermined result if the key is already in the table
    // (all specification functions have this "partial definiteness" behavior). Thus we can
    // just increment the length.
    Table(v#Table(t)[k := v], e#Table(t)[k := true], l#Table(t) + 1)
}

function {:inline} RemoveTable<K,V>(t: Table K V, k: K): Table K V {
    // Similar as above, we only need to consider the case where the key is in the table.
    Table(v#Table(t), e#Table(t)[k := false], l#Table(t) - 1)
}

axiom {:ctor "Table"} (forall<K,V> t: Table K V :: {LenTable(t)}
    (exists k: K :: {ContainsTable(t, k)} ContainsTable(t, k)) ==> LenTable(t) >= 1
);
// TODO: we might want to encoder a stronger property that the length of table
// must be more than N given a set of N items. Currently we don't see a need here
// and the above axiom seems to be sufficient.
// Copyright Â© Aptos Foundation
// SPDX-License-Identifier: Apache-2.0

// ==================================================================================
// Native object::exists_at

// ==================================================================================
// Intrinsic implementation of aggregator and aggregator factory

type {:datatype} $1_aggregator_Aggregator;
function {:constructor} $1_aggregator_Aggregator($handle: int, $key: int, $limit: int, $val: int): $1_aggregator_Aggregator;
function {:inline} $Update'$1_aggregator_Aggregator'_handle(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator(x, $key#$1_aggregator_Aggregator(s), $limit#$1_aggregator_Aggregator(s), $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_key(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), x, $limit#$1_aggregator_Aggregator(s), $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_limit(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), $key#$1_aggregator_Aggregator(s), x, $val#$1_aggregator_Aggregator(s))
}
function {:inline} $Update'$1_aggregator_Aggregator'_val(s: $1_aggregator_Aggregator, x: int): $1_aggregator_Aggregator {
    $1_aggregator_Aggregator($handle#$1_aggregator_Aggregator(s), $key#$1_aggregator_Aggregator(s), $limit#$1_aggregator_Aggregator(s), x)
}
function $IsValid'$1_aggregator_Aggregator'(s: $1_aggregator_Aggregator): bool {
    $IsValid'address'($handle#$1_aggregator_Aggregator(s))
      && $IsValid'address'($key#$1_aggregator_Aggregator(s))
      && $IsValid'u128'($limit#$1_aggregator_Aggregator(s))
      && $IsValid'u128'($val#$1_aggregator_Aggregator(s))
}
function {:inline} $IsEqual'$1_aggregator_Aggregator'(s1: $1_aggregator_Aggregator, s2: $1_aggregator_Aggregator): bool {
    s1 == s2
}
function {:inline} $1_aggregator_spec_get_limit(s1: $1_aggregator_Aggregator): int {
    $limit#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_handle(s1: $1_aggregator_Aggregator): int {
    $handle#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_key(s1: $1_aggregator_Aggregator): int {
    $key#$1_aggregator_Aggregator(s1)
}
function {:inline} $1_aggregator_spec_get_val(s1: $1_aggregator_Aggregator): int {
    $val#$1_aggregator_Aggregator(s1)
}

function $1_aggregator_spec_read(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_spec_aggregator_set_val(agg: $1_aggregator_Aggregator, val: int): $1_aggregator_Aggregator {
    $Update'$1_aggregator_Aggregator'_val(agg, val)
}

function $1_aggregator_spec_aggregator_get_val(agg: $1_aggregator_Aggregator): int {
    $1_aggregator_spec_get_val(agg)
}

function $1_aggregator_factory_spec_new_aggregator(limit: int) : $1_aggregator_Aggregator;

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
    (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_get_limit(agg) == limit));

axiom (forall limit: int :: {$1_aggregator_factory_spec_new_aggregator(limit)}
     (var agg := $1_aggregator_factory_spec_new_aggregator(limit);
     $1_aggregator_spec_aggregator_get_val(agg) == 0));


// ============================================================================================
// Primitive Types

const $MAX_U8: int;
axiom $MAX_U8 == 255;
const $MAX_U16: int;
axiom $MAX_U16 == 65535;
const $MAX_U32: int;
axiom $MAX_U32 == 4294967295;
const $MAX_U64: int;
axiom $MAX_U64 == 18446744073709551615;
const $MAX_U128: int;
axiom $MAX_U128 == 340282366920938463463374607431768211455;
const $MAX_U256: int;
axiom $MAX_U256 == 115792089237316195423570985008687907853269984665640564039457584007913129639935;

// Templates for bitvector operations

function {:bvbuiltin "bvand"} $And'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvor"} $Or'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvxor"} $Xor'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvadd"} $Add'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvsub"} $Sub'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvmul"} $Mul'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvudiv"} $Div'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvurem"} $Mod'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvshl"} $Shl'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvlshr"} $Shr'Bv8'(bv8,bv8) returns(bv8);
function {:bvbuiltin "bvult"} $Lt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv8'(bv8,bv8) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv8'(bv8,bv8) returns(bool);

procedure {:inline 1} $AddBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Add'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $AddBv8_unchecked(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Add'Bv8'(src1, src2);
}

procedure {:inline 1} $SubBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv8'(src1, src2);
}

procedure {:inline 1} $MulBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Lt'Bv8'($Mul'Bv8'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv8'(src1, src2);
}

procedure {:inline 1} $DivBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv8'(src1, src2);
}

procedure {:inline 1} $ModBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if (src2 == 0bv8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv8'(src1, src2);
}

procedure {:inline 1} $AndBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $And'Bv8'(src1,src2);
}

procedure {:inline 1} $OrBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Or'Bv8'(src1,src2);
}

procedure {:inline 1} $XorBv8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    dst := $Xor'Bv8'(src1,src2);
}

procedure {:inline 1} $LtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Lt'Bv8'(src1,src2);
}

procedure {:inline 1} $LeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Le'Bv8'(src1,src2);
}

procedure {:inline 1} $GtBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Gt'Bv8'(src1,src2);
}

procedure {:inline 1} $GeBv8(src1: bv8, src2: bv8) returns (dst: bool)
{
    dst := $Ge'Bv8'(src1,src2);
}

function $IsValid'bv8'(v: bv8): bool {
  $Ge'Bv8'(v,0bv8) && $Le'Bv8'(v,255bv8)
}

function {:inline} $IsEqual'bv8'(x: bv8, y: bv8): bool {
    x == y
}

procedure {:inline 1} $int2bv8(src: int) returns (dst: bv8)
{
    if (src > 255) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.8(src);
}

procedure {:inline 1} $bv2int8(src: bv8) returns (dst: int)
{
    dst := $bv2int.8(src);
}

function {:builtin "(_ int2bv 8)"} $int2bv.8(i: int) returns (bv8);
function {:builtin "bv2nat"} $bv2int.8(i: bv8) returns (int);

function {:bvbuiltin "bvand"} $And'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvor"} $Or'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvxor"} $Xor'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvadd"} $Add'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvsub"} $Sub'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvmul"} $Mul'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvudiv"} $Div'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvurem"} $Mod'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvshl"} $Shl'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvlshr"} $Shr'Bv16'(bv16,bv16) returns(bv16);
function {:bvbuiltin "bvult"} $Lt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv16'(bv16,bv16) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv16'(bv16,bv16) returns(bool);

procedure {:inline 1} $AddBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Add'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $AddBv16_unchecked(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Add'Bv16'(src1, src2);
}

procedure {:inline 1} $SubBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv16'(src1, src2);
}

procedure {:inline 1} $MulBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Lt'Bv16'($Mul'Bv16'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv16'(src1, src2);
}

procedure {:inline 1} $DivBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv16'(src1, src2);
}

procedure {:inline 1} $ModBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if (src2 == 0bv16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv16'(src1, src2);
}

procedure {:inline 1} $AndBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $And'Bv16'(src1,src2);
}

procedure {:inline 1} $OrBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Or'Bv16'(src1,src2);
}

procedure {:inline 1} $XorBv16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    dst := $Xor'Bv16'(src1,src2);
}

procedure {:inline 1} $LtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Lt'Bv16'(src1,src2);
}

procedure {:inline 1} $LeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Le'Bv16'(src1,src2);
}

procedure {:inline 1} $GtBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Gt'Bv16'(src1,src2);
}

procedure {:inline 1} $GeBv16(src1: bv16, src2: bv16) returns (dst: bool)
{
    dst := $Ge'Bv16'(src1,src2);
}

function $IsValid'bv16'(v: bv16): bool {
  $Ge'Bv16'(v,0bv16) && $Le'Bv16'(v,65535bv16)
}

function {:inline} $IsEqual'bv16'(x: bv16, y: bv16): bool {
    x == y
}

procedure {:inline 1} $int2bv16(src: int) returns (dst: bv16)
{
    if (src > 65535) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.16(src);
}

procedure {:inline 1} $bv2int16(src: bv16) returns (dst: int)
{
    dst := $bv2int.16(src);
}

function {:builtin "(_ int2bv 16)"} $int2bv.16(i: int) returns (bv16);
function {:builtin "bv2nat"} $bv2int.16(i: bv16) returns (int);

function {:bvbuiltin "bvand"} $And'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvor"} $Or'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvxor"} $Xor'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvadd"} $Add'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvsub"} $Sub'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvmul"} $Mul'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvudiv"} $Div'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvurem"} $Mod'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvshl"} $Shl'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvlshr"} $Shr'Bv32'(bv32,bv32) returns(bv32);
function {:bvbuiltin "bvult"} $Lt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv32'(bv32,bv32) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv32'(bv32,bv32) returns(bool);

procedure {:inline 1} $AddBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Add'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $AddBv32_unchecked(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Add'Bv32'(src1, src2);
}

procedure {:inline 1} $SubBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv32'(src1, src2);
}

procedure {:inline 1} $MulBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Lt'Bv32'($Mul'Bv32'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv32'(src1, src2);
}

procedure {:inline 1} $DivBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv32'(src1, src2);
}

procedure {:inline 1} $ModBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if (src2 == 0bv32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv32'(src1, src2);
}

procedure {:inline 1} $AndBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $And'Bv32'(src1,src2);
}

procedure {:inline 1} $OrBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Or'Bv32'(src1,src2);
}

procedure {:inline 1} $XorBv32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    dst := $Xor'Bv32'(src1,src2);
}

procedure {:inline 1} $LtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Lt'Bv32'(src1,src2);
}

procedure {:inline 1} $LeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Le'Bv32'(src1,src2);
}

procedure {:inline 1} $GtBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Gt'Bv32'(src1,src2);
}

procedure {:inline 1} $GeBv32(src1: bv32, src2: bv32) returns (dst: bool)
{
    dst := $Ge'Bv32'(src1,src2);
}

function $IsValid'bv32'(v: bv32): bool {
  $Ge'Bv32'(v,0bv32) && $Le'Bv32'(v,2147483647bv32)
}

function {:inline} $IsEqual'bv32'(x: bv32, y: bv32): bool {
    x == y
}

procedure {:inline 1} $int2bv32(src: int) returns (dst: bv32)
{
    if (src > 2147483647) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.32(src);
}

procedure {:inline 1} $bv2int32(src: bv32) returns (dst: int)
{
    dst := $bv2int.32(src);
}

function {:builtin "(_ int2bv 32)"} $int2bv.32(i: int) returns (bv32);
function {:builtin "bv2nat"} $bv2int.32(i: bv32) returns (int);

function {:bvbuiltin "bvand"} $And'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvor"} $Or'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvxor"} $Xor'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvadd"} $Add'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvsub"} $Sub'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvmul"} $Mul'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvudiv"} $Div'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvurem"} $Mod'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvshl"} $Shl'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvlshr"} $Shr'Bv64'(bv64,bv64) returns(bv64);
function {:bvbuiltin "bvult"} $Lt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv64'(bv64,bv64) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv64'(bv64,bv64) returns(bool);

procedure {:inline 1} $AddBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Add'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $AddBv64_unchecked(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Add'Bv64'(src1, src2);
}

procedure {:inline 1} $SubBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv64'(src1, src2);
}

procedure {:inline 1} $MulBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Lt'Bv64'($Mul'Bv64'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv64'(src1, src2);
}

procedure {:inline 1} $DivBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv64'(src1, src2);
}

procedure {:inline 1} $ModBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if (src2 == 0bv64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv64'(src1, src2);
}

procedure {:inline 1} $AndBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $And'Bv64'(src1,src2);
}

procedure {:inline 1} $OrBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Or'Bv64'(src1,src2);
}

procedure {:inline 1} $XorBv64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    dst := $Xor'Bv64'(src1,src2);
}

procedure {:inline 1} $LtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Lt'Bv64'(src1,src2);
}

procedure {:inline 1} $LeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Le'Bv64'(src1,src2);
}

procedure {:inline 1} $GtBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Gt'Bv64'(src1,src2);
}

procedure {:inline 1} $GeBv64(src1: bv64, src2: bv64) returns (dst: bool)
{
    dst := $Ge'Bv64'(src1,src2);
}

function $IsValid'bv64'(v: bv64): bool {
  $Ge'Bv64'(v,0bv64) && $Le'Bv64'(v,18446744073709551615bv64)
}

function {:inline} $IsEqual'bv64'(x: bv64, y: bv64): bool {
    x == y
}

procedure {:inline 1} $int2bv64(src: int) returns (dst: bv64)
{
    if (src > 18446744073709551615) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.64(src);
}

procedure {:inline 1} $bv2int64(src: bv64) returns (dst: int)
{
    dst := $bv2int.64(src);
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: int) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (int);

function {:bvbuiltin "bvand"} $And'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvor"} $Or'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvxor"} $Xor'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvadd"} $Add'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvsub"} $Sub'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvmul"} $Mul'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvudiv"} $Div'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvurem"} $Mod'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvshl"} $Shl'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvlshr"} $Shr'Bv128'(bv128,bv128) returns(bv128);
function {:bvbuiltin "bvult"} $Lt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv128'(bv128,bv128) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv128'(bv128,bv128) returns(bool);

procedure {:inline 1} $AddBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Add'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $AddBv128_unchecked(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Add'Bv128'(src1, src2);
}

procedure {:inline 1} $SubBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv128'(src1, src2);
}

procedure {:inline 1} $MulBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Lt'Bv128'($Mul'Bv128'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv128'(src1, src2);
}

procedure {:inline 1} $DivBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv128'(src1, src2);
}

procedure {:inline 1} $ModBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if (src2 == 0bv128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv128'(src1, src2);
}

procedure {:inline 1} $AndBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $And'Bv128'(src1,src2);
}

procedure {:inline 1} $OrBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Or'Bv128'(src1,src2);
}

procedure {:inline 1} $XorBv128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    dst := $Xor'Bv128'(src1,src2);
}

procedure {:inline 1} $LtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Lt'Bv128'(src1,src2);
}

procedure {:inline 1} $LeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Le'Bv128'(src1,src2);
}

procedure {:inline 1} $GtBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Gt'Bv128'(src1,src2);
}

procedure {:inline 1} $GeBv128(src1: bv128, src2: bv128) returns (dst: bool)
{
    dst := $Ge'Bv128'(src1,src2);
}

function $IsValid'bv128'(v: bv128): bool {
  $Ge'Bv128'(v,0bv128) && $Le'Bv128'(v,340282366920938463463374607431768211455bv128)
}

function {:inline} $IsEqual'bv128'(x: bv128, y: bv128): bool {
    x == y
}

procedure {:inline 1} $int2bv128(src: int) returns (dst: bv128)
{
    if (src > 340282366920938463463374607431768211455) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.128(src);
}

procedure {:inline 1} $bv2int128(src: bv128) returns (dst: int)
{
    dst := $bv2int.128(src);
}

function {:builtin "(_ int2bv 128)"} $int2bv.128(i: int) returns (bv128);
function {:builtin "bv2nat"} $bv2int.128(i: bv128) returns (int);

function {:bvbuiltin "bvand"} $And'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvor"} $Or'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvxor"} $Xor'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvadd"} $Add'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvsub"} $Sub'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvmul"} $Mul'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvudiv"} $Div'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvurem"} $Mod'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvshl"} $Shl'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvlshr"} $Shr'Bv256'(bv256,bv256) returns(bv256);
function {:bvbuiltin "bvult"} $Lt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvule"} $Le'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvugt"} $Gt'Bv256'(bv256,bv256) returns(bool);
function {:bvbuiltin "bvuge"} $Ge'Bv256'(bv256,bv256) returns(bool);

procedure {:inline 1} $AddBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Add'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $AddBv256_unchecked(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Add'Bv256'(src1, src2);
}

procedure {:inline 1} $SubBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'(src1, src2)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Sub'Bv256'(src1, src2);
}

procedure {:inline 1} $MulBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Lt'Bv256'($Mul'Bv256'(src1, src2), src1)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mul'Bv256'(src1, src2);
}

procedure {:inline 1} $DivBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Div'Bv256'(src1, src2);
}

procedure {:inline 1} $ModBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if (src2 == 0bv256) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mod'Bv256'(src1, src2);
}

procedure {:inline 1} $AndBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $And'Bv256'(src1,src2);
}

procedure {:inline 1} $OrBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Or'Bv256'(src1,src2);
}

procedure {:inline 1} $XorBv256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    dst := $Xor'Bv256'(src1,src2);
}

procedure {:inline 1} $LtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Lt'Bv256'(src1,src2);
}

procedure {:inline 1} $LeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Le'Bv256'(src1,src2);
}

procedure {:inline 1} $GtBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Gt'Bv256'(src1,src2);
}

procedure {:inline 1} $GeBv256(src1: bv256, src2: bv256) returns (dst: bool)
{
    dst := $Ge'Bv256'(src1,src2);
}

function $IsValid'bv256'(v: bv256): bool {
  $Ge'Bv256'(v,0bv256) && $Le'Bv256'(v,115792089237316195423570985008687907853269984665640564039457584007913129639935bv256)
}

function {:inline} $IsEqual'bv256'(x: bv256, y: bv256): bool {
    x == y
}

procedure {:inline 1} $int2bv256(src: int) returns (dst: bv256)
{
    if (src > 115792089237316195423570985008687907853269984665640564039457584007913129639935) {
        call $ExecFailureAbort();
        return;
    }
    dst := $int2bv.256(src);
}

procedure {:inline 1} $bv2int256(src: bv256) returns (dst: int)
{
    dst := $bv2int.256(src);
}

function {:builtin "(_ int2bv 256)"} $int2bv.256(i: int) returns (bv256);
function {:builtin "bv2nat"} $bv2int.256(i: bv256) returns (int);

type {:datatype} $Range;
function {:constructor} $Range(lb: int, ub: int): $Range;

function {:inline} $IsValid'bool'(v: bool): bool {
  true
}

function $IsValid'u8'(v: int): bool {
  v >= 0 && v <= $MAX_U8
}

function $IsValid'u16'(v: int): bool {
  v >= 0 && v <= $MAX_U16
}

function $IsValid'u32'(v: int): bool {
  v >= 0 && v <= $MAX_U32
}

function $IsValid'u64'(v: int): bool {
  v >= 0 && v <= $MAX_U64
}

function $IsValid'u128'(v: int): bool {
  v >= 0 && v <= $MAX_U128
}

function $IsValid'u256'(v: int): bool {
  v >= 0 && v <= $MAX_U256
}

function $IsValid'num'(v: int): bool {
  true
}

function $IsValid'address'(v: int): bool {
  // TODO: restrict max to representable addresses?
  v >= 0
}

function {:inline} $IsValidRange(r: $Range): bool {
   $IsValid'u64'(lb#$Range(r)) &&  $IsValid'u64'(ub#$Range(r))
}

// Intentionally not inlined so it serves as a trigger in quantifiers.
function $InRange(r: $Range, i: int): bool {
   lb#$Range(r) <= i && i < ub#$Range(r)
}


function {:inline} $IsEqual'u8'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u16'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u32'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u64'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u128'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'u256'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'num'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'address'(x: int, y: int): bool {
    x == y
}

function {:inline} $IsEqual'bool'(x: bool, y: bool): bool {
    x == y
}

// ============================================================================================
// Memory

type {:datatype} $Location;

// A global resource location within the statically known resource type's memory,
// where `a` is an address.
function {:constructor} $Global(a: int): $Location;

// A local location. `i` is the unique index of the local.
function {:constructor} $Local(i: int): $Location;

// The location of a reference outside of the verification scope, for example, a `&mut` parameter
// of the function being verified. References with these locations don't need to be written back
// when mutation ends.
function {:constructor} $Param(i: int): $Location;

// The location of an uninitialized mutation. Using this to make sure that the location
// will not be equal to any valid mutation locations, i.e., $Local, $Global, or $Param.
function {:constructor} $Uninitialized(): $Location;

// A mutable reference which also carries its current value. Since mutable references
// are single threaded in Move, we can keep them together and treat them as a value
// during mutation until the point they are stored back to their original location.
type {:datatype} $Mutation _;
function {:constructor} $Mutation<T>(l: $Location, p: Vec int, v: T): $Mutation T;

// Representation of memory for a given type.
type {:datatype} $Memory _;
function {:constructor} $Memory<T>(domain: [int]bool, contents: [int]T): $Memory T;

function {:builtin "MapConst"} $ConstMemoryDomain(v: bool): [int]bool;
function {:builtin "MapConst"} $ConstMemoryContent<T>(v: T): [int]T;
axiom $ConstMemoryDomain(false) == (lambda i: int :: false);
axiom $ConstMemoryDomain(true) == (lambda i: int :: true);


// Dereferences a mutation.
function {:inline} $Dereference<T>(ref: $Mutation T): T {
    v#$Mutation(ref)
}

// Update the value of a mutation.
function {:inline} $UpdateMutation<T>(m: $Mutation T, v: T): $Mutation T {
    $Mutation(l#$Mutation(m), p#$Mutation(m), v)
}

function {:inline} $ChildMutation<T1, T2>(m: $Mutation T1, offset: int, v: T2): $Mutation T2 {
    $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), offset), v)
}

// Return true if two mutations share the location and path
function {:inline} $IsSameMutation<T1, T2>(parent: $Mutation T1, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) && p#$Mutation(parent) == p#$Mutation(child)
}

// Return true if the mutation is a parent of a child which was derived with the given edge offset. This
// is used to implement write-back choices.
function {:inline} $IsParentMutation<T1, T2>(parent: $Mutation T1, edge: int, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) &&
    (var pp := p#$Mutation(parent);
    (var cp := p#$Mutation(child);
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
     cl == pl + 1 &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) ==  ReadVec(cp, i)) &&
     $EdgeMatches(ReadVec(cp, pl), edge)
    ))))
}

// Return true if the mutation is a parent of a child, for hyper edge.
function {:inline} $IsParentMutationHyper<T1, T2>(parent: $Mutation T1, hyper_edge: Vec int, child: $Mutation T2 ): bool {
    l#$Mutation(parent) == l#$Mutation(child) &&
    (var pp := p#$Mutation(parent);
    (var cp := p#$Mutation(child);
    (var pl := LenVec(pp);
    (var cl := LenVec(cp);
    (var el := LenVec(hyper_edge);
     cl == pl + el &&
     (forall i: int:: i >= 0 && i < pl ==> ReadVec(pp, i) == ReadVec(cp, i)) &&
     (forall i: int:: i >= 0 && i < el ==> $EdgeMatches(ReadVec(cp, pl + i), ReadVec(hyper_edge, i)))
    )))))
}

function {:inline} $EdgeMatches(edge: int, edge_pattern: int): bool {
    edge_pattern == -1 // wildcard
    || edge_pattern == edge
}



function {:inline} $SameLocation<T1, T2>(m1: $Mutation T1, m2: $Mutation T2): bool {
    l#$Mutation(m1) == l#$Mutation(m2)
}

function {:inline} $HasGlobalLocation<T>(m: $Mutation T): bool {
    is#$Global(l#$Mutation(m))
}

function {:inline} $HasLocalLocation<T>(m: $Mutation T, idx: int): bool {
    l#$Mutation(m) == $Local(idx)
}

function {:inline} $GlobalLocationAddress<T>(m: $Mutation T): int {
    a#$Global(l#$Mutation(m))
}



// Tests whether resource exists.
function {:inline} $ResourceExists<T>(m: $Memory T, addr: int): bool {
    domain#$Memory(m)[addr]
}

// Obtains Value of given resource.
function {:inline} $ResourceValue<T>(m: $Memory T, addr: int): T {
    contents#$Memory(m)[addr]
}

// Update resource.
function {:inline} $ResourceUpdate<T>(m: $Memory T, a: int, v: T): $Memory T {
    $Memory(domain#$Memory(m)[a := true], contents#$Memory(m)[a := v])
}

// Remove resource.
function {:inline} $ResourceRemove<T>(m: $Memory T, a: int): $Memory T {
    $Memory(domain#$Memory(m)[a := false], contents#$Memory(m))
}

// Copies resource from memory s to m.
function {:inline} $ResourceCopy<T>(m: $Memory T, s: $Memory T, a: int): $Memory T {
    $Memory(domain#$Memory(m)[a := domain#$Memory(s)[a]],
            contents#$Memory(m)[a := contents#$Memory(s)[a]])
}



// ============================================================================================
// Abort Handling

var $abort_flag: bool;
var $abort_code: int;

function {:inline} $process_abort_code(code: int): int {
    code
}

const $EXEC_FAILURE_CODE: int;
axiom $EXEC_FAILURE_CODE == -1;

// TODO(wrwg): currently we map aborts of native functions like those for vectors also to
//   execution failure. This may need to be aligned with what the runtime actually does.

procedure {:inline 1} $ExecFailureAbort() {
    $abort_flag := true;
    $abort_code := $EXEC_FAILURE_CODE;
}

procedure {:inline 1} $Abort(code: int) {
    $abort_flag := true;
    $abort_code := code;
}

function {:inline} $StdError(cat: int, reason: int): int {
    reason * 256 + cat
}

procedure {:inline 1} $InitVerification() {
    // Set abort_flag to false, and havoc abort_code
    $abort_flag := false;
    havoc $abort_code;
    // Initialize event store
    call $InitEventStore();
}

// ============================================================================================
// Instructions


procedure {:inline 1} $CastU8(src: int) returns (dst: int)
{
    if (src > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU16(src: int) returns (dst: int)
{
    if (src > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU32(src: int) returns (dst: int)
{
    if (src > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU64(src: int) returns (dst: int)
{
    if (src > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU128(src: int) returns (dst: int)
{
    if (src > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $CastU256(src: int) returns (dst: int)
{
    if (src > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src;
}

procedure {:inline 1} $AddU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU16_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU32_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU64_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU128_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 + src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 + src2;
}

procedure {:inline 1} $AddU256_unchecked(src1: int, src2: int) returns (dst: int)
{
    dst := src1 + src2;
}

procedure {:inline 1} $Sub(src1: int, src2: int) returns (dst: int)
{
    if (src1 < src2) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 - src2;
}

// uninterpreted function to return an undefined value.
function $undefined_int(): int;

// Recursive exponentiation function
// Undefined unless e >=0.  $pow(0,0) is also undefined.
function $pow(n: int, e: int): int {
    if n != 0 && e == 0 then 1
    else if e > 0 then n * $pow(n, e - 1)
    else $undefined_int()
}

function $shl(src1: int, p: int): int {
    src1 * $pow(2, p)
}

function $shlU8(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 256
}

function $shlU16(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 65536
}

function $shlU32(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 4294967296
}

function $shlU64(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 18446744073709551616
}

function $shlU128(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 340282366920938463463374607431768211456
}

function $shlU256(src1: int, p: int): int {
    (src1 * $pow(2, p)) mod 115792089237316195423570985008687907853269984665640564039457584007913129639936
}

function $shr(src1: int, p: int): int {
    src1 div $pow(2, p)
}

// We need to know the size of the destination in order to drop bits
// that have been shifted left more than that, so we have $ShlU8/16/32/64/128/256
procedure {:inline 1} $ShlU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU8(src1, src2);
}

// Template for cast and shift operations of bitvector types

procedure {:inline 1} $CastBv8to8(src: bv8) returns (dst: bv8)
{
    dst := src;
}


function $shlBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shl'Bv8'(src1, src2)
}

procedure {:inline 1} $ShlBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2);
}

function $shrBv8From8(src1: bv8, src2: bv8) returns (bv8)
{
    $Shr'Bv8'(src1, src2)
}

procedure {:inline 1} $ShrBv8From8(src1: bv8, src2: bv8) returns (dst: bv8)
{
    if ($Ge'Bv8'(src2, 8bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2);
}

procedure {:inline 1} $CastBv16to8(src: bv16) returns (dst: bv8)
{
    if ($Gt'Bv16'(src, 255bv16)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From16(src1: bv8, src2: bv16) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From16(src1: bv8, src2: bv16) returns (dst: bv8)
{
    if ($Ge'Bv16'(src2, 8bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv32to8(src: bv32) returns (dst: bv8)
{
    if ($Gt'Bv32'(src, 255bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From32(src1: bv8, src2: bv32) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From32(src1: bv8, src2: bv32) returns (dst: bv8)
{
    if ($Ge'Bv32'(src2, 8bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv64to8(src: bv64) returns (dst: bv8)
{
    if ($Gt'Bv64'(src, 255bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From64(src1: bv8, src2: bv64) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From64(src1: bv8, src2: bv64) returns (dst: bv8)
{
    if ($Ge'Bv64'(src2, 8bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv128to8(src: bv128) returns (dst: bv8)
{
    if ($Gt'Bv128'(src, 255bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From128(src1: bv8, src2: bv128) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From128(src1: bv8, src2: bv128) returns (dst: bv8)
{
    if ($Ge'Bv128'(src2, 8bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv256to8(src: bv256) returns (dst: bv8)
{
    if ($Gt'Bv256'(src, 255bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[8:0];
}


function $shlBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shl'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShlBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv8'(src1, src2[8:0]);
}

function $shrBv8From256(src1: bv8, src2: bv256) returns (bv8)
{
    $Shr'Bv8'(src1, src2[8:0])
}

procedure {:inline 1} $ShrBv8From256(src1: bv8, src2: bv256) returns (dst: bv8)
{
    if ($Ge'Bv256'(src2, 8bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv8'(src1, src2[8:0]);
}

procedure {:inline 1} $CastBv8to16(src: bv8) returns (dst: bv16)
{
    dst := 0bv8 ++ src;
}


function $shlBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shl'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShlBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, 0bv8 ++ src2);
}

function $shrBv16From8(src1: bv16, src2: bv8) returns (bv16)
{
    $Shr'Bv16'(src1, 0bv8 ++ src2)
}

procedure {:inline 1} $ShrBv16From8(src1: bv16, src2: bv8) returns (dst: bv16)
{
    if ($Ge'Bv8'(src2, 16bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, 0bv8 ++ src2);
}

procedure {:inline 1} $CastBv16to16(src: bv16) returns (dst: bv16)
{
    dst := src;
}


function $shlBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shl'Bv16'(src1, src2)
}

procedure {:inline 1} $ShlBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2);
}

function $shrBv16From16(src1: bv16, src2: bv16) returns (bv16)
{
    $Shr'Bv16'(src1, src2)
}

procedure {:inline 1} $ShrBv16From16(src1: bv16, src2: bv16) returns (dst: bv16)
{
    if ($Ge'Bv16'(src2, 16bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2);
}

procedure {:inline 1} $CastBv32to16(src: bv32) returns (dst: bv16)
{
    if ($Gt'Bv32'(src, 65535bv32)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From32(src1: bv16, src2: bv32) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From32(src1: bv16, src2: bv32) returns (dst: bv16)
{
    if ($Ge'Bv32'(src2, 16bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv64to16(src: bv64) returns (dst: bv16)
{
    if ($Gt'Bv64'(src, 65535bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From64(src1: bv16, src2: bv64) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From64(src1: bv16, src2: bv64) returns (dst: bv16)
{
    if ($Ge'Bv64'(src2, 16bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv128to16(src: bv128) returns (dst: bv16)
{
    if ($Gt'Bv128'(src, 65535bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From128(src1: bv16, src2: bv128) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From128(src1: bv16, src2: bv128) returns (dst: bv16)
{
    if ($Ge'Bv128'(src2, 16bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv256to16(src: bv256) returns (dst: bv16)
{
    if ($Gt'Bv256'(src, 65535bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[16:0];
}


function $shlBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shl'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShlBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv16'(src1, src2[16:0]);
}

function $shrBv16From256(src1: bv16, src2: bv256) returns (bv16)
{
    $Shr'Bv16'(src1, src2[16:0])
}

procedure {:inline 1} $ShrBv16From256(src1: bv16, src2: bv256) returns (dst: bv16)
{
    if ($Ge'Bv256'(src2, 16bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv16'(src1, src2[16:0]);
}

procedure {:inline 1} $CastBv8to32(src: bv8) returns (dst: bv32)
{
    dst := 0bv24 ++ src;
}


function $shlBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShlBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv24 ++ src2);
}

function $shrBv32From8(src1: bv32, src2: bv8) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv24 ++ src2)
}

procedure {:inline 1} $ShrBv32From8(src1: bv32, src2: bv8) returns (dst: bv32)
{
    if ($Ge'Bv8'(src2, 32bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv24 ++ src2);
}

procedure {:inline 1} $CastBv16to32(src: bv16) returns (dst: bv32)
{
    dst := 0bv16 ++ src;
}


function $shlBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shl'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShlBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, 0bv16 ++ src2);
}

function $shrBv32From16(src1: bv32, src2: bv16) returns (bv32)
{
    $Shr'Bv32'(src1, 0bv16 ++ src2)
}

procedure {:inline 1} $ShrBv32From16(src1: bv32, src2: bv16) returns (dst: bv32)
{
    if ($Ge'Bv16'(src2, 32bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, 0bv16 ++ src2);
}

procedure {:inline 1} $CastBv32to32(src: bv32) returns (dst: bv32)
{
    dst := src;
}


function $shlBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shl'Bv32'(src1, src2)
}

procedure {:inline 1} $ShlBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2);
}

function $shrBv32From32(src1: bv32, src2: bv32) returns (bv32)
{
    $Shr'Bv32'(src1, src2)
}

procedure {:inline 1} $ShrBv32From32(src1: bv32, src2: bv32) returns (dst: bv32)
{
    if ($Ge'Bv32'(src2, 32bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2);
}

procedure {:inline 1} $CastBv64to32(src: bv64) returns (dst: bv32)
{
    if ($Gt'Bv64'(src, 2147483647bv64)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From64(src1: bv32, src2: bv64) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From64(src1: bv32, src2: bv64) returns (dst: bv32)
{
    if ($Ge'Bv64'(src2, 32bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv128to32(src: bv128) returns (dst: bv32)
{
    if ($Gt'Bv128'(src, 2147483647bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From128(src1: bv32, src2: bv128) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From128(src1: bv32, src2: bv128) returns (dst: bv32)
{
    if ($Ge'Bv128'(src2, 32bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv256to32(src: bv256) returns (dst: bv32)
{
    if ($Gt'Bv256'(src, 2147483647bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[32:0];
}


function $shlBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shl'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShlBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv32'(src1, src2[32:0]);
}

function $shrBv32From256(src1: bv32, src2: bv256) returns (bv32)
{
    $Shr'Bv32'(src1, src2[32:0])
}

procedure {:inline 1} $ShrBv32From256(src1: bv32, src2: bv256) returns (dst: bv32)
{
    if ($Ge'Bv256'(src2, 32bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv32'(src1, src2[32:0]);
}

procedure {:inline 1} $CastBv8to64(src: bv8) returns (dst: bv64)
{
    dst := 0bv56 ++ src;
}


function $shlBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShlBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv56 ++ src2);
}

function $shrBv64From8(src1: bv64, src2: bv8) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv56 ++ src2)
}

procedure {:inline 1} $ShrBv64From8(src1: bv64, src2: bv8) returns (dst: bv64)
{
    if ($Ge'Bv8'(src2, 64bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv56 ++ src2);
}

procedure {:inline 1} $CastBv16to64(src: bv16) returns (dst: bv64)
{
    dst := 0bv48 ++ src;
}


function $shlBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShlBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv48 ++ src2);
}

function $shrBv64From16(src1: bv64, src2: bv16) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv48 ++ src2)
}

procedure {:inline 1} $ShrBv64From16(src1: bv64, src2: bv16) returns (dst: bv64)
{
    if ($Ge'Bv16'(src2, 64bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv48 ++ src2);
}

procedure {:inline 1} $CastBv32to64(src: bv32) returns (dst: bv64)
{
    dst := 0bv32 ++ src;
}


function $shlBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shl'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShlBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, 0bv32 ++ src2);
}

function $shrBv64From32(src1: bv64, src2: bv32) returns (bv64)
{
    $Shr'Bv64'(src1, 0bv32 ++ src2)
}

procedure {:inline 1} $ShrBv64From32(src1: bv64, src2: bv32) returns (dst: bv64)
{
    if ($Ge'Bv32'(src2, 64bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, 0bv32 ++ src2);
}

procedure {:inline 1} $CastBv64to64(src: bv64) returns (dst: bv64)
{
    dst := src;
}


function $shlBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shl'Bv64'(src1, src2)
}

procedure {:inline 1} $ShlBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2);
}

function $shrBv64From64(src1: bv64, src2: bv64) returns (bv64)
{
    $Shr'Bv64'(src1, src2)
}

procedure {:inline 1} $ShrBv64From64(src1: bv64, src2: bv64) returns (dst: bv64)
{
    if ($Ge'Bv64'(src2, 64bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2);
}

procedure {:inline 1} $CastBv128to64(src: bv128) returns (dst: bv64)
{
    if ($Gt'Bv128'(src, 18446744073709551615bv128)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From128(src1: bv64, src2: bv128) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From128(src1: bv64, src2: bv128) returns (dst: bv64)
{
    if ($Ge'Bv128'(src2, 64bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv256to64(src: bv256) returns (dst: bv64)
{
    if ($Gt'Bv256'(src, 18446744073709551615bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[64:0];
}


function $shlBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shl'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShlBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv64'(src1, src2[64:0]);
}

function $shrBv64From256(src1: bv64, src2: bv256) returns (bv64)
{
    $Shr'Bv64'(src1, src2[64:0])
}

procedure {:inline 1} $ShrBv64From256(src1: bv64, src2: bv256) returns (dst: bv64)
{
    if ($Ge'Bv256'(src2, 64bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv64'(src1, src2[64:0]);
}

procedure {:inline 1} $CastBv8to128(src: bv8) returns (dst: bv128)
{
    dst := 0bv120 ++ src;
}


function $shlBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShlBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv120 ++ src2);
}

function $shrBv128From8(src1: bv128, src2: bv8) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv120 ++ src2)
}

procedure {:inline 1} $ShrBv128From8(src1: bv128, src2: bv8) returns (dst: bv128)
{
    if ($Ge'Bv8'(src2, 128bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv120 ++ src2);
}

procedure {:inline 1} $CastBv16to128(src: bv16) returns (dst: bv128)
{
    dst := 0bv112 ++ src;
}


function $shlBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShlBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv112 ++ src2);
}

function $shrBv128From16(src1: bv128, src2: bv16) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv112 ++ src2)
}

procedure {:inline 1} $ShrBv128From16(src1: bv128, src2: bv16) returns (dst: bv128)
{
    if ($Ge'Bv16'(src2, 128bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv112 ++ src2);
}

procedure {:inline 1} $CastBv32to128(src: bv32) returns (dst: bv128)
{
    dst := 0bv96 ++ src;
}


function $shlBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShlBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv96 ++ src2);
}

function $shrBv128From32(src1: bv128, src2: bv32) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv96 ++ src2)
}

procedure {:inline 1} $ShrBv128From32(src1: bv128, src2: bv32) returns (dst: bv128)
{
    if ($Ge'Bv32'(src2, 128bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv96 ++ src2);
}

procedure {:inline 1} $CastBv64to128(src: bv64) returns (dst: bv128)
{
    dst := 0bv64 ++ src;
}


function $shlBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shl'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShlBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, 0bv64 ++ src2);
}

function $shrBv128From64(src1: bv128, src2: bv64) returns (bv128)
{
    $Shr'Bv128'(src1, 0bv64 ++ src2)
}

procedure {:inline 1} $ShrBv128From64(src1: bv128, src2: bv64) returns (dst: bv128)
{
    if ($Ge'Bv64'(src2, 128bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, 0bv64 ++ src2);
}

procedure {:inline 1} $CastBv128to128(src: bv128) returns (dst: bv128)
{
    dst := src;
}


function $shlBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shl'Bv128'(src1, src2)
}

procedure {:inline 1} $ShlBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2);
}

function $shrBv128From128(src1: bv128, src2: bv128) returns (bv128)
{
    $Shr'Bv128'(src1, src2)
}

procedure {:inline 1} $ShrBv128From128(src1: bv128, src2: bv128) returns (dst: bv128)
{
    if ($Ge'Bv128'(src2, 128bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2);
}

procedure {:inline 1} $CastBv256to128(src: bv256) returns (dst: bv128)
{
    if ($Gt'Bv256'(src, 340282366920938463463374607431768211455bv256)) {
            call $ExecFailureAbort();
            return;
    }
    dst := src[128:0];
}


function $shlBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shl'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShlBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv128'(src1, src2[128:0]);
}

function $shrBv128From256(src1: bv128, src2: bv256) returns (bv128)
{
    $Shr'Bv128'(src1, src2[128:0])
}

procedure {:inline 1} $ShrBv128From256(src1: bv128, src2: bv256) returns (dst: bv128)
{
    if ($Ge'Bv256'(src2, 128bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv128'(src1, src2[128:0]);
}

procedure {:inline 1} $CastBv8to256(src: bv8) returns (dst: bv256)
{
    dst := 0bv248 ++ src;
}


function $shlBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShlBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv248 ++ src2);
}

function $shrBv256From8(src1: bv256, src2: bv8) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv248 ++ src2)
}

procedure {:inline 1} $ShrBv256From8(src1: bv256, src2: bv8) returns (dst: bv256)
{
    if ($Ge'Bv8'(src2, 256bv8)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv248 ++ src2);
}

procedure {:inline 1} $CastBv16to256(src: bv16) returns (dst: bv256)
{
    dst := 0bv240 ++ src;
}


function $shlBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShlBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv240 ++ src2);
}

function $shrBv256From16(src1: bv256, src2: bv16) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv240 ++ src2)
}

procedure {:inline 1} $ShrBv256From16(src1: bv256, src2: bv16) returns (dst: bv256)
{
    if ($Ge'Bv16'(src2, 256bv16)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv240 ++ src2);
}

procedure {:inline 1} $CastBv32to256(src: bv32) returns (dst: bv256)
{
    dst := 0bv224 ++ src;
}


function $shlBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShlBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv224 ++ src2);
}

function $shrBv256From32(src1: bv256, src2: bv32) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv224 ++ src2)
}

procedure {:inline 1} $ShrBv256From32(src1: bv256, src2: bv32) returns (dst: bv256)
{
    if ($Ge'Bv32'(src2, 256bv32)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv224 ++ src2);
}

procedure {:inline 1} $CastBv64to256(src: bv64) returns (dst: bv256)
{
    dst := 0bv192 ++ src;
}


function $shlBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShlBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv192 ++ src2);
}

function $shrBv256From64(src1: bv256, src2: bv64) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv192 ++ src2)
}

procedure {:inline 1} $ShrBv256From64(src1: bv256, src2: bv64) returns (dst: bv256)
{
    if ($Ge'Bv64'(src2, 256bv64)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv192 ++ src2);
}

procedure {:inline 1} $CastBv128to256(src: bv128) returns (dst: bv256)
{
    dst := 0bv128 ++ src;
}


function $shlBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shl'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShlBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, 0bv128 ++ src2);
}

function $shrBv256From128(src1: bv256, src2: bv128) returns (bv256)
{
    $Shr'Bv256'(src1, 0bv128 ++ src2)
}

procedure {:inline 1} $ShrBv256From128(src1: bv256, src2: bv128) returns (dst: bv256)
{
    if ($Ge'Bv128'(src2, 256bv128)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, 0bv128 ++ src2);
}

procedure {:inline 1} $CastBv256to256(src: bv256) returns (dst: bv256)
{
    dst := src;
}


function $shlBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shl'Bv256'(src1, src2)
}

procedure {:inline 1} $ShlBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shl'Bv256'(src1, src2);
}

function $shrBv256From256(src1: bv256, src2: bv256) returns (bv256)
{
    $Shr'Bv256'(src1, src2)
}

procedure {:inline 1} $ShrBv256From256(src1: bv256, src2: bv256) returns (dst: bv256)
{
    if ($Ge'Bv256'(src2, 256bv256)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Shr'Bv256'(src1, src2);
}

procedure {:inline 1} $ShlU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU16(src1, src2);
}

procedure {:inline 1} $ShlU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU32(src1, src2);
}

procedure {:inline 1} $ShlU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
       call $ExecFailureAbort();
       return;
    }
    dst := $shlU64(src1, src2);
}

procedure {:inline 1} $ShlU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shlU128(src1, src2);
}

procedure {:inline 1} $ShlU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shlU256(src1, src2);
}

procedure {:inline 1} $Shr(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU8(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 8) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU16(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 16) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU32(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 32) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU64(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 64) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU128(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    if (src2 >= 128) {
        call $ExecFailureAbort();
        return;
    }
    dst := $shr(src1, src2);
}

procedure {:inline 1} $ShrU256(src1: int, src2: int) returns (dst: int)
{
    var res: int;
    // src2 is a u8
    assume src2 >= 0 && src2 < 256;
    dst := $shr(src1, src2);
}

procedure {:inline 1} $MulU8(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U8) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU16(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U16) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU32(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U32) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU64(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U64) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU128(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U128) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $MulU256(src1: int, src2: int) returns (dst: int)
{
    if (src1 * src2 > $MAX_U256) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 * src2;
}

procedure {:inline 1} $Div(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 div src2;
}

procedure {:inline 1} $Mod(src1: int, src2: int) returns (dst: int)
{
    if (src2 == 0) {
        call $ExecFailureAbort();
        return;
    }
    dst := src1 mod src2;
}

procedure {:inline 1} $ArithBinaryUnimplemented(src1: int, src2: int) returns (dst: int);

procedure {:inline 1} $Lt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 < src2;
}

procedure {:inline 1} $Gt(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 > src2;
}

procedure {:inline 1} $Le(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 <= src2;
}

procedure {:inline 1} $Ge(src1: int, src2: int) returns (dst: bool)
{
    dst := src1 >= src2;
}

procedure {:inline 1} $And(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 && src2;
}

procedure {:inline 1} $Or(src1: bool, src2: bool) returns (dst: bool)
{
    dst := src1 || src2;
}

procedure {:inline 1} $Not(src: bool) returns (dst: bool)
{
    dst := !src;
}

// Pack and Unpack are auto-generated for each type T


// ==================================================================================
// Native Vector

function {:inline} $SliceVecByRange<T>(v: Vec T, r: $Range): Vec T {
    SliceVec(v, lb#$Range(r), ub#$Range(r))
}

// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `#0`

// Not inlined. It appears faster this way.
function $IsEqual'vec'#0''(v1: Vec (#0), v2: Vec (#0)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'#0'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'#0''(v: Vec (#0), prefix: Vec (#0)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'#0'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'#0''(v: Vec (#0), suffix: Vec (#0)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'#0'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'#0''(v: Vec (#0)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'#0'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'#0'(v: Vec (#0), e: #0): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e))
}

function $IndexOfVec'#0'(v: Vec (#0), e: #0): int;
axiom (forall v: Vec (#0), e: #0:: {$IndexOfVec'#0'(v, e)}
    (var i := $IndexOfVec'#0'(v, e);
     if (!$ContainsVec'#0'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'#0'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'#0'(ReadVec(v, j), e))));


function {:inline} $RangeVec'#0'(v: Vec (#0)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'#0'() returns (v: Vec (#0)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'#0'(): Vec (#0) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'#0'(v: Vec (#0)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'#0'(m: $Mutation (Vec (#0)), val: #0) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'#0'(v: Vec (#0), val: #0): Vec (#0) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'#0'(m: $Mutation (Vec (#0))) returns (e: #0, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'#0'(m: $Mutation (Vec (#0))) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'#0'(m: $Mutation (Vec (#0)), other: Vec (#0)) returns (m': $Mutation (Vec (#0))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'#0'(m: $Mutation (Vec (#0)), new_len: int) returns (v: (Vec (#0)), m': $Mutation (Vec (#0))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'#0'(m: $Mutation (Vec (#0)), left: int, right: int) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'#0'(m: $Mutation (Vec (#0)), rot: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var v: Vec (#0);
    var len: int;
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'#0'(m: $Mutation (Vec (#0)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var mid_vec: Vec (#0);
    var right_vec: Vec (#0);
    var mid_left_vec: Vec (#0);
    var mid_right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'#0'(m: $Mutation (Vec (#0)), i: int, e: #0) returns (m': $Mutation (Vec (#0))) {
    var left_vec: Vec (#0);
    var right_vec: Vec (#0);
    var v: Vec (#0);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'#0'(v: Vec (#0)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'#0'(v: Vec (#0)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'#0'(v: Vec (#0), i: int) returns (dst: #0) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'#0'(m: $Mutation (Vec (#0)), index: int)
returns (dst: $Mutation (#0), m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'#0'(v: Vec (#0), i: int): #0 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'#0'(v: Vec (#0)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'#0'(m: $Mutation (Vec (#0)), i: int, j: int) returns (m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'#0'(v: Vec (#0), i: int, j: int): Vec (#0) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var v: Vec (#0);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'#0'(m: $Mutation (Vec (#0)), i: int) returns (e: #0, m': $Mutation (Vec (#0)))
{
    var len: int;
    var v: Vec (#0);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'#0'(v: Vec (#0), e: #0) returns (res: bool)  {
    res := $ContainsVec'#0'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'#0'(v: Vec (#0), e: #0) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'#0'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_aggregator_Aggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_aggregator_Aggregator''(v1: Vec ($1_aggregator_Aggregator), v2: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), prefix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator), suffix: Vec ($1_aggregator_Aggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_aggregator_Aggregator''(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_aggregator_Aggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator): int;
axiom (forall v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator:: {$IndexOfVec'$1_aggregator_Aggregator'(v, e)}
    (var i := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
     if (!$ContainsVec'$1_aggregator_Aggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_aggregator_Aggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_aggregator_Aggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_aggregator_Aggregator'() returns (v: Vec ($1_aggregator_Aggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_aggregator_Aggregator'(): Vec ($1_aggregator_Aggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), val: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), val: $1_aggregator_Aggregator): Vec ($1_aggregator_Aggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator))) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), other: Vec ($1_aggregator_Aggregator)) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), new_len: int) returns (v: (Vec ($1_aggregator_Aggregator)), m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var v: Vec ($1_aggregator_Aggregator);
    var len: int;
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var mid_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var mid_left_vec: Vec ($1_aggregator_Aggregator);
    var mid_right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, e: $1_aggregator_Aggregator) returns (m': $Mutation (Vec ($1_aggregator_Aggregator))) {
    var left_vec: Vec ($1_aggregator_Aggregator);
    var right_vec: Vec ($1_aggregator_Aggregator);
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int) returns (dst: $1_aggregator_Aggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), index: int)
returns (dst: $Mutation ($1_aggregator_Aggregator), m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int): $1_aggregator_Aggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), i: int, j: int): Vec ($1_aggregator_Aggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_aggregator_Aggregator'(m: $Mutation (Vec ($1_aggregator_Aggregator)), i: int) returns (e: $1_aggregator_Aggregator, m': $Mutation (Vec ($1_aggregator_Aggregator)))
{
    var len: int;
    var v: Vec ($1_aggregator_Aggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res: bool)  {
    res := $ContainsVec'$1_aggregator_Aggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator), e: $1_aggregator_Aggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_aggregator_Aggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_fixed_point32_FixedPoint32`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_fixed_point32_FixedPoint32''(v1: Vec ($1_fixed_point32_FixedPoint32), v2: Vec ($1_fixed_point32_FixedPoint32)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_fixed_point32_FixedPoint32'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_fixed_point32_FixedPoint32''(v: Vec ($1_fixed_point32_FixedPoint32), prefix: Vec ($1_fixed_point32_FixedPoint32)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_fixed_point32_FixedPoint32'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_fixed_point32_FixedPoint32''(v: Vec ($1_fixed_point32_FixedPoint32), suffix: Vec ($1_fixed_point32_FixedPoint32)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_fixed_point32_FixedPoint32'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_fixed_point32_FixedPoint32''(v: Vec ($1_fixed_point32_FixedPoint32)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_fixed_point32_FixedPoint32'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), e: $1_fixed_point32_FixedPoint32): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fixed_point32_FixedPoint32'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), e: $1_fixed_point32_FixedPoint32): int;
axiom (forall v: Vec ($1_fixed_point32_FixedPoint32), e: $1_fixed_point32_FixedPoint32:: {$IndexOfVec'$1_fixed_point32_FixedPoint32'(v, e)}
    (var i := $IndexOfVec'$1_fixed_point32_FixedPoint32'(v, e);
     if (!$ContainsVec'$1_fixed_point32_FixedPoint32'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_fixed_point32_FixedPoint32'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_fixed_point32_FixedPoint32'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_fixed_point32_FixedPoint32'(): Vec ($1_fixed_point32_FixedPoint32) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_fixed_point32_FixedPoint32'() returns (v: Vec ($1_fixed_point32_FixedPoint32)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_fixed_point32_FixedPoint32'(): Vec ($1_fixed_point32_FixedPoint32) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), val: $1_fixed_point32_FixedPoint32) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), val: $1_fixed_point32_FixedPoint32): Vec ($1_fixed_point32_FixedPoint32) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32))) returns (e: $1_fixed_point32_FixedPoint32, m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var v: Vec ($1_fixed_point32_FixedPoint32);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), other: Vec ($1_fixed_point32_FixedPoint32)) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32))) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), other: Vec ($1_fixed_point32_FixedPoint32)) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), new_len: int) returns (v: (Vec ($1_fixed_point32_FixedPoint32)), m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), new_len: int) returns (v: (Vec ($1_fixed_point32_FixedPoint32)), m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), left: int, right: int) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var left_vec: Vec ($1_fixed_point32_FixedPoint32);
    var mid_vec: Vec ($1_fixed_point32_FixedPoint32);
    var right_vec: Vec ($1_fixed_point32_FixedPoint32);
    var v: Vec ($1_fixed_point32_FixedPoint32);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), rot: int) returns (n: int, m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var v: Vec ($1_fixed_point32_FixedPoint32);
    var len: int;
    var left_vec: Vec ($1_fixed_point32_FixedPoint32);
    var right_vec: Vec ($1_fixed_point32_FixedPoint32);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var left_vec: Vec ($1_fixed_point32_FixedPoint32);
    var mid_vec: Vec ($1_fixed_point32_FixedPoint32);
    var right_vec: Vec ($1_fixed_point32_FixedPoint32);
    var mid_left_vec: Vec ($1_fixed_point32_FixedPoint32);
    var mid_right_vec: Vec ($1_fixed_point32_FixedPoint32);
    var v: Vec ($1_fixed_point32_FixedPoint32);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), i: int, e: $1_fixed_point32_FixedPoint32) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32))) {
    var left_vec: Vec ($1_fixed_point32_FixedPoint32);
    var right_vec: Vec ($1_fixed_point32_FixedPoint32);
    var v: Vec ($1_fixed_point32_FixedPoint32);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), i: int) returns (dst: $1_fixed_point32_FixedPoint32) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), i: int): $1_fixed_point32_FixedPoint32 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), index: int)
returns (dst: $Mutation ($1_fixed_point32_FixedPoint32), m': $Mutation (Vec ($1_fixed_point32_FixedPoint32)))
{
    var v: Vec ($1_fixed_point32_FixedPoint32);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), i: int): $1_fixed_point32_FixedPoint32 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), i: int, j: int) returns (m': $Mutation (Vec ($1_fixed_point32_FixedPoint32)))
{
    var v: Vec ($1_fixed_point32_FixedPoint32);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), i: int, j: int): Vec ($1_fixed_point32_FixedPoint32) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), i: int) returns (e: $1_fixed_point32_FixedPoint32, m': $Mutation (Vec ($1_fixed_point32_FixedPoint32)))
{
    var v: Vec ($1_fixed_point32_FixedPoint32);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_fixed_point32_FixedPoint32'(m: $Mutation (Vec ($1_fixed_point32_FixedPoint32)), i: int) returns (e: $1_fixed_point32_FixedPoint32, m': $Mutation (Vec ($1_fixed_point32_FixedPoint32)))
{
    var len: int;
    var v: Vec ($1_fixed_point32_FixedPoint32);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), e: $1_fixed_point32_FixedPoint32) returns (res: bool)  {
    res := $ContainsVec'$1_fixed_point32_FixedPoint32'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_fixed_point32_FixedPoint32'(v: Vec ($1_fixed_point32_FixedPoint32), e: $1_fixed_point32_FixedPoint32) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_fixed_point32_FixedPoint32'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_Integer`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_Integer''(v1: Vec ($1_optional_aggregator_Integer), v2: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), prefix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer), suffix: Vec ($1_optional_aggregator_Integer)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_Integer''(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_Integer'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer): int;
axiom (forall v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer:: {$IndexOfVec'$1_optional_aggregator_Integer'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_Integer'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_Integer'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_Integer'() returns (v: Vec ($1_optional_aggregator_Integer)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_Integer'(): Vec ($1_optional_aggregator_Integer) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), val: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), val: $1_optional_aggregator_Integer): Vec ($1_optional_aggregator_Integer) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer))) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), other: Vec ($1_optional_aggregator_Integer)) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), new_len: int) returns (v: (Vec ($1_optional_aggregator_Integer)), m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var v: Vec ($1_optional_aggregator_Integer);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var mid_left_vec: Vec ($1_optional_aggregator_Integer);
    var mid_right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, e: $1_optional_aggregator_Integer) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer))) {
    var left_vec: Vec ($1_optional_aggregator_Integer);
    var right_vec: Vec ($1_optional_aggregator_Integer);
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int) returns (dst: $1_optional_aggregator_Integer) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_Integer), m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int): $1_optional_aggregator_Integer {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), i: int, j: int): Vec ($1_optional_aggregator_Integer) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_Integer'(m: $Mutation (Vec ($1_optional_aggregator_Integer)), i: int) returns (e: $1_optional_aggregator_Integer, m': $Mutation (Vec ($1_optional_aggregator_Integer)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_Integer);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_Integer'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer), e: $1_optional_aggregator_Integer) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_Integer'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_optional_aggregator_OptionalAggregator`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''(v1: Vec ($1_optional_aggregator_OptionalAggregator), v2: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), prefix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator), suffix: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_optional_aggregator_OptionalAggregator''(v: Vec ($1_optional_aggregator_OptionalAggregator)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator): int;
axiom (forall v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator:: {$IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e)}
    (var i := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
     if (!$ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_optional_aggregator_OptionalAggregator'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_optional_aggregator_OptionalAggregator'() returns (v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_optional_aggregator_OptionalAggregator'(): Vec ($1_optional_aggregator_OptionalAggregator) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), val: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), val: $1_optional_aggregator_OptionalAggregator): Vec ($1_optional_aggregator_OptionalAggregator) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), other: Vec ($1_optional_aggregator_OptionalAggregator)) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), new_len: int) returns (v: (Vec ($1_optional_aggregator_OptionalAggregator)), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, right: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), rot: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    var len: int;
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var mid_right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, e: $1_optional_aggregator_OptionalAggregator) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator))) {
    var left_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var right_vec: Vec ($1_optional_aggregator_OptionalAggregator);
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int) returns (dst: $1_optional_aggregator_OptionalAggregator) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), index: int)
returns (dst: $Mutation ($1_optional_aggregator_OptionalAggregator), m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int): $1_optional_aggregator_OptionalAggregator {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int, j: int) returns (m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), i: int, j: int): Vec ($1_optional_aggregator_OptionalAggregator) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_optional_aggregator_OptionalAggregator'(m: $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)), i: int) returns (e: $1_optional_aggregator_OptionalAggregator, m': $Mutation (Vec ($1_optional_aggregator_OptionalAggregator)))
{
    var len: int;
    var v: Vec ($1_optional_aggregator_OptionalAggregator);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res: bool)  {
    res := $ContainsVec'$1_optional_aggregator_OptionalAggregator'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_optional_aggregator_OptionalAggregator'(v: Vec ($1_optional_aggregator_OptionalAggregator), e: $1_optional_aggregator_OptionalAggregator) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_optional_aggregator_OptionalAggregator'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_stake_IndividualValidatorPerformance`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_stake_IndividualValidatorPerformance''(v1: Vec ($1_stake_IndividualValidatorPerformance), v2: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance), prefix: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance), suffix: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_stake_IndividualValidatorPerformance''(v: Vec ($1_stake_IndividualValidatorPerformance)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance): int;
axiom (forall v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance:: {$IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e)}
    (var i := $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e);
     if (!$ContainsVec'$1_stake_IndividualValidatorPerformance'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_stake_IndividualValidatorPerformance'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_stake_IndividualValidatorPerformance'(): Vec ($1_stake_IndividualValidatorPerformance) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_stake_IndividualValidatorPerformance'() returns (v: Vec ($1_stake_IndividualValidatorPerformance)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_stake_IndividualValidatorPerformance'(): Vec ($1_stake_IndividualValidatorPerformance) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), val: $1_stake_IndividualValidatorPerformance) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), val: $1_stake_IndividualValidatorPerformance): Vec ($1_stake_IndividualValidatorPerformance) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), other: Vec ($1_stake_IndividualValidatorPerformance)) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), other: Vec ($1_stake_IndividualValidatorPerformance)) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), new_len: int) returns (v: (Vec ($1_stake_IndividualValidatorPerformance)), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), new_len: int) returns (v: (Vec ($1_stake_IndividualValidatorPerformance)), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), left: int, right: int) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), rot: int) returns (n: int, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    var len: int;
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var mid_right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int, e: $1_stake_IndividualValidatorPerformance) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance))) {
    var left_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var right_vec: Vec ($1_stake_IndividualValidatorPerformance);
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int) returns (dst: $1_stake_IndividualValidatorPerformance) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int): $1_stake_IndividualValidatorPerformance {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), index: int)
returns (dst: $Mutation ($1_stake_IndividualValidatorPerformance), m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int): $1_stake_IndividualValidatorPerformance {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int, j: int) returns (m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), i: int, j: int): Vec ($1_stake_IndividualValidatorPerformance) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var v: Vec ($1_stake_IndividualValidatorPerformance);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_stake_IndividualValidatorPerformance'(m: $Mutation (Vec ($1_stake_IndividualValidatorPerformance)), i: int) returns (e: $1_stake_IndividualValidatorPerformance, m': $Mutation (Vec ($1_stake_IndividualValidatorPerformance)))
{
    var len: int;
    var v: Vec ($1_stake_IndividualValidatorPerformance);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance) returns (res: bool)  {
    res := $ContainsVec'$1_stake_IndividualValidatorPerformance'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_stake_IndividualValidatorPerformance'(v: Vec ($1_stake_IndividualValidatorPerformance), e: $1_stake_IndividualValidatorPerformance) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_stake_IndividualValidatorPerformance'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `$1_stake_ValidatorInfo`

// Not inlined. It appears faster this way.
function $IsEqual'vec'$1_stake_ValidatorInfo''(v1: Vec ($1_stake_ValidatorInfo), v2: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo), prefix: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo), suffix: Vec ($1_stake_ValidatorInfo)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'$1_stake_ValidatorInfo''(v: Vec ($1_stake_ValidatorInfo)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'$1_stake_ValidatorInfo'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), e))
}

function $IndexOfVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo): int;
axiom (forall v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo:: {$IndexOfVec'$1_stake_ValidatorInfo'(v, e)}
    (var i := $IndexOfVec'$1_stake_ValidatorInfo'(v, e);
     if (!$ContainsVec'$1_stake_ValidatorInfo'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'$1_stake_ValidatorInfo'(ReadVec(v, j), e))));


function {:inline} $RangeVec'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'$1_stake_ValidatorInfo'(): Vec ($1_stake_ValidatorInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'$1_stake_ValidatorInfo'() returns (v: Vec ($1_stake_ValidatorInfo)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'$1_stake_ValidatorInfo'(): Vec ($1_stake_ValidatorInfo) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), val: $1_stake_ValidatorInfo) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), val: $1_stake_ValidatorInfo): Vec ($1_stake_ValidatorInfo) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo))) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var v: Vec ($1_stake_ValidatorInfo);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), other: Vec ($1_stake_ValidatorInfo)) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo))) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), other: Vec ($1_stake_ValidatorInfo)) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), new_len: int) returns (v: (Vec ($1_stake_ValidatorInfo)), m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), new_len: int) returns (v: (Vec ($1_stake_ValidatorInfo)), m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), left: int, right: int) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var mid_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    var v: Vec ($1_stake_ValidatorInfo);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), rot: int) returns (n: int, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var v: Vec ($1_stake_ValidatorInfo);
    var len: int;
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var mid_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    var mid_left_vec: Vec ($1_stake_ValidatorInfo);
    var mid_right_vec: Vec ($1_stake_ValidatorInfo);
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int, e: $1_stake_ValidatorInfo) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo))) {
    var left_vec: Vec ($1_stake_ValidatorInfo);
    var right_vec: Vec ($1_stake_ValidatorInfo);
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int) returns (dst: $1_stake_ValidatorInfo) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int): $1_stake_ValidatorInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), index: int)
returns (dst: $Mutation ($1_stake_ValidatorInfo), m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int): $1_stake_ValidatorInfo {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int, j: int) returns (m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), i: int, j: int): Vec ($1_stake_ValidatorInfo) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var v: Vec ($1_stake_ValidatorInfo);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'$1_stake_ValidatorInfo'(m: $Mutation (Vec ($1_stake_ValidatorInfo)), i: int) returns (e: $1_stake_ValidatorInfo, m': $Mutation (Vec ($1_stake_ValidatorInfo)))
{
    var len: int;
    var v: Vec ($1_stake_ValidatorInfo);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo) returns (res: bool)  {
    res := $ContainsVec'$1_stake_ValidatorInfo'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'$1_stake_ValidatorInfo'(v: Vec ($1_stake_ValidatorInfo), e: $1_stake_ValidatorInfo) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'$1_stake_ValidatorInfo'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `address`

// Not inlined. It appears faster this way.
function $IsEqual'vec'address''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'address'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'address''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'address'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'address''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'address'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'address''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'address'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'address'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e))
}

function $IndexOfVec'address'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'address'(v, e)}
    (var i := $IndexOfVec'address'(v, e);
     if (!$ContainsVec'address'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'address'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'address'(ReadVec(v, j), e))));


function {:inline} $RangeVec'address'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'address'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'address'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'address'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'address'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'address'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'address'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'address'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'address'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'address'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'address'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'address'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'address'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'address'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'address'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'address'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'address'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'address'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'address'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'address'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'address'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'address'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'address'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'address'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'address'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'address'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'address'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u64''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u64''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u64''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u64''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u64'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e))
}

function $IndexOfVec'u64'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u64'(v, e)}
    (var i := $IndexOfVec'u64'(v, e);
     if (!$ContainsVec'u64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u64'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u64'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u64'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u64'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u64'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u64'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u64'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u64'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u64'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u64'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u64'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u64'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u64'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u64'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u64'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u64'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u64'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u64'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u64'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u64'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u64'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u64'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u64'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u64'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u64'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `u8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'u8''(v1: Vec (int), v2: Vec (int)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'u8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'u8''(v: Vec (int), prefix: Vec (int)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'u8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'u8''(v: Vec (int), suffix: Vec (int)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'u8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'u8''(v: Vec (int)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'u8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'u8'(v: Vec (int), e: int): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e))
}

function $IndexOfVec'u8'(v: Vec (int), e: int): int;
axiom (forall v: Vec (int), e: int:: {$IndexOfVec'u8'(v, e)}
    (var i := $IndexOfVec'u8'(v, e);
     if (!$ContainsVec'u8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'u8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'u8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'u8'(v: Vec (int)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'u8'() returns (v: Vec (int)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'u8'(): Vec (int) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'u8'(v: Vec (int)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'u8'(m: $Mutation (Vec (int)), val: int) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'u8'(v: Vec (int), val: int): Vec (int) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'u8'(m: $Mutation (Vec (int))) returns (e: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'u8'(m: $Mutation (Vec (int))) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'u8'(m: $Mutation (Vec (int)), other: Vec (int)) returns (m': $Mutation (Vec (int))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'u8'(m: $Mutation (Vec (int)), new_len: int) returns (v: (Vec (int)), m': $Mutation (Vec (int))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'u8'(m: $Mutation (Vec (int)), left: int, right: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'u8'(m: $Mutation (Vec (int)), rot: int) returns (n: int, m': $Mutation (Vec (int))) {
    var v: Vec (int);
    var len: int;
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'u8'(m: $Mutation (Vec (int)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var mid_vec: Vec (int);
    var right_vec: Vec (int);
    var mid_left_vec: Vec (int);
    var mid_right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'u8'(m: $Mutation (Vec (int)), i: int, e: int) returns (m': $Mutation (Vec (int))) {
    var left_vec: Vec (int);
    var right_vec: Vec (int);
    var v: Vec (int);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'u8'(v: Vec (int)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'u8'(v: Vec (int)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'u8'(v: Vec (int), i: int) returns (dst: int) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'u8'(m: $Mutation (Vec (int)), index: int)
returns (dst: $Mutation (int), m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'u8'(v: Vec (int), i: int): int {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'u8'(v: Vec (int)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'u8'(m: $Mutation (Vec (int)), i: int, j: int) returns (m': $Mutation (Vec (int)))
{
    var v: Vec (int);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'u8'(v: Vec (int), i: int, j: int): Vec (int) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var v: Vec (int);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'u8'(m: $Mutation (Vec (int)), i: int) returns (e: int, m': $Mutation (Vec (int)))
{
    var len: int;
    var v: Vec (int);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'u8'(v: Vec (int), e: int) returns (res: bool)  {
    res := $ContainsVec'u8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'u8'(v: Vec (int), e: int) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'u8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv64`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv64''(v1: Vec (bv64), v2: Vec (bv64)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv64'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv64''(v: Vec (bv64), prefix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv64'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv64''(v: Vec (bv64), suffix: Vec (bv64)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv64'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv64''(v: Vec (bv64)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv64'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv64'(v: Vec (bv64), e: bv64): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e))
}

function $IndexOfVec'bv64'(v: Vec (bv64), e: bv64): int;
axiom (forall v: Vec (bv64), e: bv64:: {$IndexOfVec'bv64'(v, e)}
    (var i := $IndexOfVec'bv64'(v, e);
     if (!$ContainsVec'bv64'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv64'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv64'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv64'(v: Vec (bv64)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv64'() returns (v: Vec (bv64)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv64'(): Vec (bv64) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv64'(v: Vec (bv64)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv64'(m: $Mutation (Vec (bv64)), val: bv64) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv64'(v: Vec (bv64), val: bv64): Vec (bv64) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv64'(m: $Mutation (Vec (bv64))) returns (e: bv64, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv64'(m: $Mutation (Vec (bv64))) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv64'(m: $Mutation (Vec (bv64)), other: Vec (bv64)) returns (m': $Mutation (Vec (bv64))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv64'(m: $Mutation (Vec (bv64)), new_len: int) returns (v: (Vec (bv64)), m': $Mutation (Vec (bv64))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, right: int) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv64'(m: $Mutation (Vec (bv64)), rot: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var v: Vec (bv64);
    var len: int;
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv64'(m: $Mutation (Vec (bv64)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var mid_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var mid_left_vec: Vec (bv64);
    var mid_right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv64'(m: $Mutation (Vec (bv64)), i: int, e: bv64) returns (m': $Mutation (Vec (bv64))) {
    var left_vec: Vec (bv64);
    var right_vec: Vec (bv64);
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv64'(v: Vec (bv64)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv64'(v: Vec (bv64)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv64'(v: Vec (bv64), i: int) returns (dst: bv64) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv64'(m: $Mutation (Vec (bv64)), index: int)
returns (dst: $Mutation (bv64), m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv64'(v: Vec (bv64), i: int): bv64 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv64'(v: Vec (bv64)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv64'(m: $Mutation (Vec (bv64)), i: int, j: int) returns (m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv64'(v: Vec (bv64), i: int, j: int): Vec (bv64) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var v: Vec (bv64);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv64'(m: $Mutation (Vec (bv64)), i: int) returns (e: bv64, m': $Mutation (Vec (bv64)))
{
    var len: int;
    var v: Vec (bv64);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv64'(v: Vec (bv64), e: bv64) returns (res: bool)  {
    res := $ContainsVec'bv64'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv64'(v: Vec (bv64), e: bv64) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv64'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ----------------------------------------------------------------------------------
// Native Vector implementation for element type `bv8`

// Not inlined. It appears faster this way.
function $IsEqual'vec'bv8''(v1: Vec (bv8), v2: Vec (bv8)): bool {
    LenVec(v1) == LenVec(v2) &&
    (forall i: int:: InRangeVec(v1, i) ==> $IsEqual'bv8'(ReadVec(v1, i), ReadVec(v2, i)))
}

// Not inlined.
function $IsPrefix'vec'bv8''(v: Vec (bv8), prefix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(prefix) &&
    (forall i: int:: InRangeVec(prefix, i) ==> $IsEqual'bv8'(ReadVec(v, i), ReadVec(prefix, i)))
}

// Not inlined.
function $IsSuffix'vec'bv8''(v: Vec (bv8), suffix: Vec (bv8)): bool {
    LenVec(v) >= LenVec(suffix) &&
    (forall i: int:: InRangeVec(suffix, i) ==> $IsEqual'bv8'(ReadVec(v, LenVec(v) - LenVec(suffix) + i), ReadVec(suffix, i)))
}

// Not inlined.
function $IsValid'vec'bv8''(v: Vec (bv8)): bool {
    $IsValid'u64'(LenVec(v)) &&
    (forall i: int:: InRangeVec(v, i) ==> $IsValid'bv8'(ReadVec(v, i)))
}


function {:inline} $ContainsVec'bv8'(v: Vec (bv8), e: bv8): bool {
    (exists i: int :: $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e))
}

function $IndexOfVec'bv8'(v: Vec (bv8), e: bv8): int;
axiom (forall v: Vec (bv8), e: bv8:: {$IndexOfVec'bv8'(v, e)}
    (var i := $IndexOfVec'bv8'(v, e);
     if (!$ContainsVec'bv8'(v, e)) then i == -1
     else $IsValid'u64'(i) && InRangeVec(v, i) && $IsEqual'bv8'(ReadVec(v, i), e) &&
        (forall j: int :: $IsValid'u64'(j) && j >= 0 && j < i ==> !$IsEqual'bv8'(ReadVec(v, j), e))));


function {:inline} $RangeVec'bv8'(v: Vec (bv8)): $Range {
    $Range(0, LenVec(v))
}


function {:inline} $EmptyVec'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_empty'bv8'() returns (v: Vec (bv8)) {
    v := EmptyVec();
}

function {:inline} $1_vector_$empty'bv8'(): Vec (bv8) {
    EmptyVec()
}

procedure {:inline 1} $1_vector_is_empty'bv8'(v: Vec (bv8)) returns (b: bool) {
    b := IsEmptyVec(v);
}

procedure {:inline 1} $1_vector_push_back'bv8'(m: $Mutation (Vec (bv8)), val: bv8) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ExtendVec($Dereference(m), val));
}

function {:inline} $1_vector_$push_back'bv8'(v: Vec (bv8), val: bv8): Vec (bv8) {
    ExtendVec(v, val)
}

procedure {:inline 1} $1_vector_pop_back'bv8'(m: $Mutation (Vec (bv8))) returns (e: bv8, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    v := $Dereference(m);
    len := LenVec(v);
    if (len == 0) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, len-1);
    m' := $UpdateMutation(m, RemoveVec(v));
}

procedure {:inline 1} $1_vector_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), other));
}

procedure {:inline 1} $1_vector_reverse'bv8'(m: $Mutation (Vec (bv8))) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ReverseVec($Dereference(m)));
}

procedure {:inline 1} $1_vector_reverse_append'bv8'(m: $Mutation (Vec (bv8)), other: Vec (bv8)) returns (m': $Mutation (Vec (bv8))) {
    m' := $UpdateMutation(m, ConcatVec($Dereference(m), ReverseVec(other)));
}

procedure {:inline 1} $1_vector_trim_reverse'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    v := ReverseVec(v);
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_trim'bv8'(m: $Mutation (Vec (bv8)), new_len: int) returns (v: (Vec (bv8)), m': $Mutation (Vec (bv8))) {
    var len: int;
    v := $Dereference(m);
    if (LenVec(v) < new_len) {
        call $ExecFailureAbort();
        return;
    }
    v := SliceVec(v, new_len, LenVec(v));
    m' := $UpdateMutation(m, SliceVec($Dereference(m), 0, new_len));
}

procedure {:inline 1} $1_vector_reverse_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, right: int) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    if (left > right) {
        call $ExecFailureAbort();
        return;
    }
    if (left == right) {
        m' := m;
        return;
    }
    v := $Dereference(m);
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_vec := ReverseVec(SliceVec(v, left, right));
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
}

procedure {:inline 1} $1_vector_rotate'bv8'(m: $Mutation (Vec (bv8)), rot: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var v: Vec (bv8);
    var len: int;
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    v := $Dereference(m);
    if (!(rot >= 0 && rot <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    left_vec := SliceVec(v, 0, rot);
    right_vec := SliceVec(v, rot, LenVec(v));
    m' := $UpdateMutation(m, ConcatVec(right_vec, left_vec));
    n := LenVec(v) - rot;
}

procedure {:inline 1} $1_vector_rotate_slice'bv8'(m: $Mutation (Vec (bv8)), left: int, rot: int, right: int) returns (n: int, m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var mid_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var mid_left_vec: Vec (bv8);
    var mid_right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(left <= rot && rot <= right)) {
        call $ExecFailureAbort();
        return;
    }
    if (!(right >= 0 && right <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    v := $Dereference(m);
    left_vec := SliceVec(v, 0, left);
    right_vec := SliceVec(v, right, LenVec(v));
    mid_left_vec := SliceVec(v, left, rot);
    mid_right_vec := SliceVec(v, rot, right);
    mid_vec := ConcatVec(mid_right_vec, mid_left_vec);
    m' := $UpdateMutation(m, ConcatVec(left_vec, ConcatVec(mid_vec, right_vec)));
    n := left + (right - rot);
}

procedure {:inline 1} $1_vector_insert'bv8'(m: $Mutation (Vec (bv8)), i: int, e: bv8) returns (m': $Mutation (Vec (bv8))) {
    var left_vec: Vec (bv8);
    var right_vec: Vec (bv8);
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!(i >= 0 && i <= LenVec(v))) {
        call $ExecFailureAbort();
        return;
    }
    if (i == LenVec(v)) {
        m' := $UpdateMutation(m, ExtendVec(v, e));
    } else {
        left_vec := ExtendVec(SliceVec(v, 0, i), e);
        right_vec := SliceVec(v, i, LenVec(v));
        m' := $UpdateMutation(m, ConcatVec(left_vec, right_vec));
    }
}

procedure {:inline 1} $1_vector_length'bv8'(v: Vec (bv8)) returns (l: int) {
    l := LenVec(v);
}

function {:inline} $1_vector_$length'bv8'(v: Vec (bv8)): int {
    LenVec(v)
}

procedure {:inline 1} $1_vector_borrow'bv8'(v: Vec (bv8), i: int) returns (dst: bv8) {
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    dst := ReadVec(v, i);
}

function {:inline} $1_vector_$borrow'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_borrow_mut'bv8'(m: $Mutation (Vec (bv8)), index: int)
returns (dst: $Mutation (bv8), m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, index)) {
        call $ExecFailureAbort();
        return;
    }
    dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), index), ReadVec(v, index));
    m' := m;
}

function {:inline} $1_vector_$borrow_mut'bv8'(v: Vec (bv8), i: int): bv8 {
    ReadVec(v, i)
}

procedure {:inline 1} $1_vector_destroy_empty'bv8'(v: Vec (bv8)) {
    if (!IsEmptyVec(v)) {
      call $ExecFailureAbort();
    }
}

procedure {:inline 1} $1_vector_swap'bv8'(m: $Mutation (Vec (bv8)), i: int, j: int) returns (m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);
    v := $Dereference(m);
    if (!InRangeVec(v, i) || !InRangeVec(v, j)) {
        call $ExecFailureAbort();
        return;
    }
    m' := $UpdateMutation(m, SwapVec(v, i, j));
}

function {:inline} $1_vector_$swap'bv8'(v: Vec (bv8), i: int, j: int): Vec (bv8) {
    SwapVec(v, i, j)
}

procedure {:inline 1} $1_vector_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var v: Vec (bv8);

    v := $Dereference(m);

    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveAtVec(v, i));
}

procedure {:inline 1} $1_vector_swap_remove'bv8'(m: $Mutation (Vec (bv8)), i: int) returns (e: bv8, m': $Mutation (Vec (bv8)))
{
    var len: int;
    var v: Vec (bv8);

    v := $Dereference(m);
    len := LenVec(v);
    if (!InRangeVec(v, i)) {
        call $ExecFailureAbort();
        return;
    }
    e := ReadVec(v, i);
    m' := $UpdateMutation(m, RemoveVec(SwapVec(v, i, len-1)));
}

procedure {:inline 1} $1_vector_contains'bv8'(v: Vec (bv8), e: bv8) returns (res: bool)  {
    res := $ContainsVec'bv8'(v, e);
}

procedure {:inline 1}
$1_vector_index_of'bv8'(v: Vec (bv8), e: bv8) returns (res1: bool, res2: int) {
    res2 := $IndexOfVec'bv8'(v, e);
    if (res2 >= 0) {
        res1 := true;
    } else {
        res1 := false;
        res2 := 0;
    }
}


// ==================================================================================
// Native Table

// ----------------------------------------------------------------------------------
// Native Table key encoding for type `address`

function $EncodeKey'address'(k: int): int;
axiom (
  forall k1, k2: int :: {$EncodeKey'address'(k1), $EncodeKey'address'(k2)}
    $IsEqual'address'(k1, k2) <==> $EncodeKey'address'(k1) == $EncodeKey'address'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table key encoding for type `$1_string_String`

function $EncodeKey'$1_string_String'(k: $1_string_String): int;
axiom (
  forall k1, k2: $1_string_String :: {$EncodeKey'$1_string_String'(k1), $EncodeKey'$1_string_String'(k2)}
    $IsEqual'$1_string_String'(k1, k2) <==> $EncodeKey'$1_string_String'(k1) == $EncodeKey'$1_string_String'(k2)
);


// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,u64)`

function $IsEqual'$1_simple_map_SimpleMap'address_u64''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'address_u64''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'u64'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'address_u64'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'address_u64'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'address_u64'(t: (Table int (int))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'address_u64'(t: (Table int (int)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_simple_map_add'address_u64'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'address_u64'(m: $Mutation (Table int (int)), k: int)
returns (k': int, v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'address_u64'(t: Table int (int), k: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'address_u64'(m: $Mutation (Table int (int)), k: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'address_u64'(t: (Table int (int))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'address_u64'(t: (Table int (int)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_set'address_u64'(t: Table int (int), k: int, v: int): Table int (int) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'address_u64'(t: Table int (int), k: int): Table int (int) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_get'address_u64'(t: Table int (int), k: int): int {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,address)`

function $IsEqual'$1_simple_map_SimpleMap'address_address''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'address_address''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'address'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'address_address'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'address_address'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'address_address'(t: (Table int (int))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'address_address'(t: (Table int (int)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_simple_map_add'address_address'(m: $Mutation (Table int (int)), k: int, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'address_address'(m: $Mutation (Table int (int)), k: int)
returns (k': int, v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'address_address'(t: Table int (int), k: int) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'address_address'(m: $Mutation (Table int (int)), k: int)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'address_address'(t: (Table int (int))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'address_address'(t: (Table int (int)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_set'address_address'(t: Table int (int), k: int, v: int): Table int (int) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'address_address'(t: Table int (int), k: int): Table int (int) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_get'address_address'(t: Table int (int), k: int): int {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `(address,$1_staking_contract_StakingContract)`

function $IsEqual'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(t1: Table int ($1_staking_contract_StakingContract), t2: Table int ($1_staking_contract_StakingContract)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(t: Table int ($1_staking_contract_StakingContract)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'$1_staking_contract_StakingContract'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'address_$1_staking_contract_StakingContract'() returns (v: Table int ($1_staking_contract_StakingContract)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'address_$1_staking_contract_StakingContract'(t: Table int ($1_staking_contract_StakingContract)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'address_$1_staking_contract_StakingContract'(t: (Table int ($1_staking_contract_StakingContract))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'address_$1_staking_contract_StakingContract'(t: (Table int ($1_staking_contract_StakingContract)), k: int) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'address'(k));
}
procedure {:inline 2} $1_simple_map_add'address_$1_staking_contract_StakingContract'(m: $Mutation (Table int ($1_staking_contract_StakingContract)), k: int, v: $1_staking_contract_StakingContract) returns (m': $Mutation(Table int ($1_staking_contract_StakingContract))) {
    var enc_k: int;
    var t: Table int ($1_staking_contract_StakingContract);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'address_$1_staking_contract_StakingContract'(m: $Mutation (Table int ($1_staking_contract_StakingContract)), k: int)
returns (k': int, v: $1_staking_contract_StakingContract, m': $Mutation(Table int ($1_staking_contract_StakingContract))) {
    var enc_k: int;
    var t: Table int ($1_staking_contract_StakingContract);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'address_$1_staking_contract_StakingContract'(t: Table int ($1_staking_contract_StakingContract), k: int) returns (v: $1_staking_contract_StakingContract) {
    var enc_k: int;
    enc_k := $EncodeKey'address'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'address'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'address_$1_staking_contract_StakingContract'(m: $Mutation (Table int ($1_staking_contract_StakingContract)), k: int)
returns (dst: $Mutation ($1_staking_contract_StakingContract), m': $Mutation (Table int ($1_staking_contract_StakingContract))) {
    var enc_k: int;
    var t: Table int ($1_staking_contract_StakingContract);
    enc_k := $EncodeKey'address'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'address_$1_staking_contract_StakingContract'(t: (Table int ($1_staking_contract_StakingContract))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'address_$1_staking_contract_StakingContract'(t: (Table int ($1_staking_contract_StakingContract)), k: int): bool {
    ContainsTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_set'address_$1_staking_contract_StakingContract'(t: Table int ($1_staking_contract_StakingContract), k: int, v: $1_staking_contract_StakingContract): Table int ($1_staking_contract_StakingContract) {
    (var enc_k := $EncodeKey'address'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'address_$1_staking_contract_StakingContract'(t: Table int ($1_staking_contract_StakingContract), k: int): Table int ($1_staking_contract_StakingContract) {
    RemoveTable(t, $EncodeKey'address'(k))
}
function {:inline} $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'(t: Table int ($1_staking_contract_StakingContract), k: int): $1_staking_contract_StakingContract {
    GetTable(t, $EncodeKey'address'(k))
}



// ----------------------------------------------------------------------------------
// Native Table implementation for type `($1_string_String,address)`

function $IsEqual'$1_simple_map_SimpleMap'$1_string_String_address''(t1: Table int (int), t2: Table int (int)): bool {
    LenTable(t1) == LenTable(t2) &&
    (forall k: int :: ContainsTable(t1, k) <==> ContainsTable(t2, k)) &&
    (forall k: int :: ContainsTable(t1, k) ==> GetTable(t1, k) == GetTable(t2, k)) &&
    (forall k: int :: ContainsTable(t2, k) ==> GetTable(t1, k) == GetTable(t2, k))
}

// Not inlined.
function $IsValid'$1_simple_map_SimpleMap'$1_string_String_address''(t: Table int (int)): bool {
    $IsValid'u64'(LenTable(t)) &&
    (forall i: int:: ContainsTable(t, i) ==> $IsValid'address'(GetTable(t, i)))
}
procedure {:inline 2} $1_simple_map_create'$1_string_String_address'() returns (v: Table int (int)) {
    v := EmptyTable();
}
procedure {:inline 2} $1_simple_map_destroy_empty'$1_string_String_address'(t: Table int (int)) {
    if (LenTable(t) != 0) {
        call $Abort($StdError(1/*INVALID_STATE*/, 102/*ENOT_EMPTY*/));
    }
}
procedure {:inline 2} $1_simple_map_length'$1_string_String_address'(t: (Table int (int))) returns (l: int) {
    l := LenTable(t);
}
procedure {:inline 2} $1_simple_map_contains_key'$1_string_String_address'(t: (Table int (int)), k: $1_string_String) returns (r: bool) {
    r := ContainsTable(t, $EncodeKey'$1_string_String'(k));
}
procedure {:inline 2} $1_simple_map_add'$1_string_String_address'(m: $Mutation (Table int (int)), k: $1_string_String, v: int) returns (m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 100/*EALREADY_EXISTS*/));
    } else {
        m' := $UpdateMutation(m, AddTable(t, enc_k, v));
    }
}
procedure {:inline 2} $1_simple_map_remove'$1_string_String_address'(m: $Mutation (Table int (int)), k: $1_string_String)
returns (k': $1_string_String, v: int, m': $Mutation(Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        k' := k;
        v := GetTable(t, enc_k);
        m' := $UpdateMutation(m, RemoveTable(t, enc_k));
    }
}
procedure {:inline 2} $1_simple_map_borrow'$1_string_String_address'(t: Table int (int), k: $1_string_String) returns (v: int) {
    var enc_k: int;
    enc_k := $EncodeKey'$1_string_String'(k);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        v := GetTable(t, $EncodeKey'$1_string_String'(k));
    }
}
procedure {:inline 2} $1_simple_map_borrow_mut'$1_string_String_address'(m: $Mutation (Table int (int)), k: $1_string_String)
returns (dst: $Mutation (int), m': $Mutation (Table int (int))) {
    var enc_k: int;
    var t: Table int (int);
    enc_k := $EncodeKey'$1_string_String'(k);
    t := $Dereference(m);
    if (!ContainsTable(t, enc_k)) {
        call $Abort($StdError(7/*INVALID_ARGUMENTS*/, 101/*ENOT_FOUND*/));
    } else {
        dst := $Mutation(l#$Mutation(m), ExtendVec(p#$Mutation(m), enc_k), GetTable(t, enc_k));
        m' := m;
    }
}
function {:inline} $1_simple_map_spec_len'$1_string_String_address'(t: (Table int (int))): int {
    LenTable(t)
}
function {:inline} $1_simple_map_spec_contains_key'$1_string_String_address'(t: (Table int (int)), k: $1_string_String): bool {
    ContainsTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_simple_map_spec_set'$1_string_String_address'(t: Table int (int), k: $1_string_String, v: int): Table int (int) {
    (var enc_k := $EncodeKey'$1_string_String'(k);
    if (ContainsTable(t, enc_k)) then
        UpdateTable(t, enc_k, v)
    else
        AddTable(t, enc_k, v))
}
function {:inline} $1_simple_map_spec_remove'$1_string_String_address'(t: Table int (int), k: $1_string_String): Table int (int) {
    RemoveTable(t, $EncodeKey'$1_string_String'(k))
}
function {:inline} $1_simple_map_spec_get'$1_string_String_address'(t: Table int (int), k: $1_string_String): int {
    GetTable(t, $EncodeKey'$1_string_String'(k))
}



// ==================================================================================
// Native Hash

// Hash is modeled as an otherwise uninterpreted injection.
// In truth, it is not an injection since the domain has greater cardinality
// (arbitrary length vectors) than the co-domain (vectors of length 32).  But it is
// common to assume in code there are no hash collisions in practice.  Fortunately,
// Boogie is not smart enough to recognized that there is an inconsistency.
// FIXME: If we were using a reliable extensional theory of arrays, and if we could use ==
// instead of $IsEqual, we might be able to avoid so many quantified formulas by
// using a sha2_inverse function in the ensures conditions of Hash_sha2_256 to
// assert that sha2/3 are injections without using global quantified axioms.


function $1_hash_sha2(val: Vec int): Vec int;

// This says that Hash_sha2 is bijective.
axiom (forall v1,v2: Vec int :: {$1_hash_sha2(v1), $1_hash_sha2(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha2(v1), $1_hash_sha2(v2)));

procedure $1_hash_sha2_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha2(val);     // returns Hash_sha2 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha2_256(val: Vec int): Vec int {
    $1_hash_sha2(val)
}

// similarly for Hash_sha3
function $1_hash_sha3(val: Vec int): Vec int;

axiom (forall v1,v2: Vec int :: {$1_hash_sha3(v1), $1_hash_sha3(v2)}
       $IsEqual'vec'u8''(v1, v2) <==> $IsEqual'vec'u8''($1_hash_sha3(v1), $1_hash_sha3(v2)));

procedure $1_hash_sha3_256(val: Vec int) returns (res: Vec int);
ensures res == $1_hash_sha3(val);     // returns Hash_sha3 Value
ensures $IsValid'vec'u8''(res);    // result is a legal vector of U8s.
ensures LenVec(res) == 32;               // result is 32 bytes.

// Spec version of Move native function.
function {:inline} $1_hash_$sha3_256(val: Vec int): Vec int {
    $1_hash_sha3(val)
}

// ==================================================================================
// Native string

// TODO: correct implementation of strings

procedure {:inline 1} $1_string_internal_check_utf8(x: Vec int) returns (r: bool) {
}

procedure {:inline 1} $1_string_internal_sub_string(x: Vec int, i: int, j: int) returns (r: Vec int) {
}

procedure {:inline 1} $1_string_internal_index_of(x: Vec int, y: Vec int) returns (r: int) {
}

procedure {:inline 1} $1_string_internal_is_char_boundary(x: Vec int, i: int) returns (r: bool) {
}




// ==================================================================================
// Native diem_account

procedure {:inline 1} $1_DiemAccount_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

procedure {:inline 1} $1_DiemAccount_destroy_signer(
  signer: $signer
) {
  return;
}

// ==================================================================================
// Native account

procedure {:inline 1} $1_Account_create_signer(
  addr: int
) returns (signer: $signer) {
    // A signer is currently identical to an address.
    signer := $signer(addr);
}

// ==================================================================================
// Native Signer

type {:datatype} $signer;
function {:constructor} $signer($addr: int): $signer;
function {:inline} $IsValid'signer'(s: $signer): bool {
    $IsValid'address'($addr#$signer(s))
}
function {:inline} $IsEqual'signer'(s1: $signer, s2: $signer): bool {
    s1 == s2
}

procedure {:inline 1} $1_signer_borrow_address(signer: $signer) returns (res: int) {
    res := $addr#$signer(signer);
}

function {:inline} $1_signer_$borrow_address(signer: $signer): int
{
    $addr#$signer(signer)
}

function $1_signer_is_txn_signer(s: $signer): bool;

function $1_signer_is_txn_signer_addr(a: int): bool;


// ==================================================================================
// Native signature

// Signature related functionality is handled via uninterpreted functions. This is sound
// currently because we verify every code path based on signature verification with
// an arbitrary interpretation.

function $1_Signature_$ed25519_validate_pubkey(public_key: Vec int): bool;
function $1_Signature_$ed25519_verify(signature: Vec int, public_key: Vec int, message: Vec int): bool;

// Needed because we do not have extensional equality:
axiom (forall k1, k2: Vec int ::
    {$1_Signature_$ed25519_validate_pubkey(k1), $1_Signature_$ed25519_validate_pubkey(k2)}
    $IsEqual'vec'u8''(k1, k2) ==> $1_Signature_$ed25519_validate_pubkey(k1) == $1_Signature_$ed25519_validate_pubkey(k2));
axiom (forall s1, s2, k1, k2, m1, m2: Vec int ::
    {$1_Signature_$ed25519_verify(s1, k1, m1), $1_Signature_$ed25519_verify(s2, k2, m2)}
    $IsEqual'vec'u8''(s1, s2) && $IsEqual'vec'u8''(k1, k2) && $IsEqual'vec'u8''(m1, m2)
    ==> $1_Signature_$ed25519_verify(s1, k1, m1) == $1_Signature_$ed25519_verify(s2, k2, m2));


procedure {:inline 1} $1_Signature_ed25519_validate_pubkey(public_key: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_validate_pubkey(public_key);
}

procedure {:inline 1} $1_Signature_ed25519_verify(
        signature: Vec int, public_key: Vec int, message: Vec int) returns (res: bool) {
    res := $1_Signature_$ed25519_verify(signature, public_key, message);
}


// ==================================================================================
// Native bcs::serialize

// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `address`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'address'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)}
   $IsEqual'address'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'address'(v1), $1_bcs_serialize'address'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'address'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'address'(v);

function {:inline} $1_bcs_$to_bytes'address'(v: int): Vec int {
    $1_bcs_serialize'address'(v)
}

// Serialized addresses should have the same length.
const $serialized_address_len: int;
// Serialized addresses should have the same length
axiom (forall v: int :: {$1_bcs_serialize'address'(v)}
     ( var r := $1_bcs_serialize'address'(v); LenVec(r) == $serialized_address_len));



// ----------------------------------------------------------------------------------
// Native BCS implementation for element type `u64`

// Serialize is modeled as an uninterpreted function, with an additional
// axiom to say it's an injection.

function $1_bcs_serialize'u64'(v: int): Vec int;

axiom (forall v1, v2: int :: {$1_bcs_serialize'u64'(v1), $1_bcs_serialize'u64'(v2)}
   $IsEqual'u64'(v1, v2) <==> $IsEqual'vec'u8''($1_bcs_serialize'u64'(v1), $1_bcs_serialize'u64'(v2)));

// This says that serialize returns a non-empty vec<u8>

axiom (forall v: int :: {$1_bcs_serialize'u64'(v)}
     ( var r := $1_bcs_serialize'u64'(v); $IsValid'vec'u8''(r) && LenVec(r) > 0 ));


procedure $1_bcs_to_bytes'u64'(v: int) returns (res: Vec int);
ensures res == $1_bcs_serialize'u64'(v);

function {:inline} $1_bcs_$to_bytes'u64'(v: int): Vec int {
    $1_bcs_serialize'u64'(v)
}





// ==================================================================================
// Native Event module



procedure {:inline 1} $InitEventStore() {
}

// ============================================================================================
// Type Reflection on Type Parameters

type {:datatype} $TypeParamInfo;

function {:constructor} $TypeParamBool(): $TypeParamInfo;
function {:constructor} $TypeParamU8(): $TypeParamInfo;
function {:constructor} $TypeParamU16(): $TypeParamInfo;
function {:constructor} $TypeParamU32(): $TypeParamInfo;
function {:constructor} $TypeParamU64(): $TypeParamInfo;
function {:constructor} $TypeParamU128(): $TypeParamInfo;
function {:constructor} $TypeParamU256(): $TypeParamInfo;
function {:constructor} $TypeParamAddress(): $TypeParamInfo;
function {:constructor} $TypeParamSigner(): $TypeParamInfo;
function {:constructor} $TypeParamVector(e: $TypeParamInfo): $TypeParamInfo;
function {:constructor} $TypeParamStruct(a: int, m: Vec int, s: Vec int): $TypeParamInfo;



//==================================
// Begin Translation

function $TypeName(t: $TypeParamInfo): Vec int;
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamBool(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 98][1 := 111][2 := 111][3 := 108], 4)) ==> is#$TypeParamBool(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU8(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 56], 2)) ==> is#$TypeParamU8(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU16(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 54], 3)) ==> is#$TypeParamU16(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU32(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 51][2 := 50], 3)) ==> is#$TypeParamU32(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU64(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 54][2 := 52], 3)) ==> is#$TypeParamU64(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU128(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 49][2 := 50][3 := 56], 4)) ==> is#$TypeParamU128(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamU256(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 117][1 := 50][2 := 53][3 := 54], 4)) ==> is#$TypeParamU256(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamAddress(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 97][1 := 100][2 := 100][3 := 114][4 := 101][5 := 115][6 := 115], 7)) ==> is#$TypeParamAddress(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamSigner(t) ==> $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsEqual'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 115][1 := 105][2 := 103][3 := 110][4 := 101][5 := 114], 6)) ==> is#$TypeParamSigner(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamVector(t) ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7), $TypeName(e#$TypeParamVector(t))), Vec(DefaultVecMap()[0 := 62], 1))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} ($IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 118][1 := 101][2 := 99][3 := 116][4 := 111][5 := 114][6 := 60], 7)) && $IsSuffix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 62], 1))) ==> is#$TypeParamVector(t));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} is#$TypeParamStruct(t) ==> $IsEqual'vec'u8''($TypeName(t), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(Vec(DefaultVecMap()[0 := 48][1 := 120], 2), MakeVec1(a#$TypeParamStruct(t))), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), m#$TypeParamStruct(t)), Vec(DefaultVecMap()[0 := 58][1 := 58], 2)), s#$TypeParamStruct(t))));
axiom (forall t: $TypeParamInfo :: {$TypeName(t)} $IsPrefix'vec'u8''($TypeName(t), Vec(DefaultVecMap()[0 := 48][1 := 120], 2)) ==> is#$TypeParamVector(t));


// Given Types for Type Parameters

type #0;
function {:inline} $IsEqual'#0'(x1: #0, x2: #0): bool { x1 == x2 }
function {:inline} $IsValid'#0'(x: #0): bool { true }
var #0_info: $TypeParamInfo;
var #0_$memory: $Memory #0;

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<fixed_point32::FixedPoint32>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_fixed_point32_FixedPoint32''($1_from_bcs_deserialize'vec'$1_fixed_point32_FixedPoint32''(b1), $1_from_bcs_deserialize'vec'$1_fixed_point32_FixedPoint32''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_stake_IndividualValidatorPerformance''($1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'$1_stake_ValidatorInfo''($1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<aptos_account::DirectCoinTransferConfigUpdatedEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::AddDistributionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::CreateStakingContractEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::DistributeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_DistributeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::RequestCommissionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::ResetLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::SwitchOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<staking_contract::UpdateVoterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::DistributeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_DistributeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_DistributeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_DistributeEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::ResetLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_ResetLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::UpdateVoterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::AdminWithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::CreateVestingContractEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::SetBeneficiaryEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::TerminateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_TerminateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_TerminateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_TerminateEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::UnlockRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::UpdateOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <event::EventHandle<vesting::VestEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_event_EventHandle'$1_vesting_VestEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_VestEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_VestEvent''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_CoinRegisterEvent'($1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <aptos_account::DirectTransferConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_aptos_account_DirectTransferConfig'($1_from_bcs_deserialize'$1_aptos_account_DirectTransferConfig'(b1), $1_from_bcs_deserialize'$1_aptos_account_DirectTransferConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <simple_map::SimpleMap<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_simple_map_SimpleMap'address_u64''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_u64''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_u64''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <simple_map::SimpleMap<address, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_simple_map_SimpleMap'address_address''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <simple_map::SimpleMap<address, staking_contract::StakingContract>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <simple_map::SimpleMap<string::String, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_simple_map_SimpleMap'$1_string_String_address''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_address''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_address''(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <fixed_point32::FixedPoint32>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_fixed_point32_FixedPoint32'($1_from_bcs_deserialize'$1_fixed_point32_FixedPoint32'(b1), $1_from_bcs_deserialize'$1_fixed_point32_FixedPoint32'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_config::StakingConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_config_StakingConfig'($1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b1), $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::IncreaseLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_IncreaseLockupEvent'($1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b1), $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_OwnerCapability'($1_from_bcs_deserialize'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserialize'$1_stake_OwnerCapability'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::SetOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_SetOperatorEvent'($1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b1), $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_StakePool'($1_from_bcs_deserialize'$1_stake_StakePool'(b1), $1_from_bcs_deserialize'$1_stake_StakePool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_UnlockStakeEvent'($1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorConfig'($1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorInfo'($1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorPerformance'($1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_ValidatorSet'($1_from_bcs_deserialize'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorSet'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_stake_WithdrawStakeEvent'($1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <pool_u64::Pool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_pool_u64_Pool'($1_from_bcs_deserialize'$1_pool_u64_Pool'(b1), $1_from_bcs_deserialize'$1_pool_u64_Pool'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_UnlockStakeEvent'($1_from_bcs_deserialize'$1_staking_contract_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_UnlockStakeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::AddDistributionEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_AddDistributionEvent'($1_from_bcs_deserialize'$1_staking_contract_AddDistributionEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_AddDistributionEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::DistributeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_DistributeEvent'($1_from_bcs_deserialize'$1_staking_contract_DistributeEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_DistributeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::RequestCommissionEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_RequestCommissionEvent'($1_from_bcs_deserialize'$1_staking_contract_RequestCommissionEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_RequestCommissionEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::ResetLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_ResetLockupEvent'($1_from_bcs_deserialize'$1_staking_contract_ResetLockupEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_ResetLockupEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::StakingContract>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_StakingContract'($1_from_bcs_deserialize'$1_staking_contract_StakingContract'(b1), $1_from_bcs_deserialize'$1_staking_contract_StakingContract'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::Store>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_Store'($1_from_bcs_deserialize'$1_staking_contract_Store'(b1), $1_from_bcs_deserialize'$1_staking_contract_Store'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::SwitchOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_SwitchOperatorEvent'($1_from_bcs_deserialize'$1_staking_contract_SwitchOperatorEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_SwitchOperatorEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <staking_contract::UpdateVoterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_staking_contract_UpdateVoterEvent'($1_from_bcs_deserialize'$1_staking_contract_UpdateVoterEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_UpdateVoterEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::DistributeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_DistributeEvent'($1_from_bcs_deserialize'$1_vesting_DistributeEvent'(b1), $1_from_bcs_deserialize'$1_vesting_DistributeEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::ResetLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_ResetLockupEvent'($1_from_bcs_deserialize'$1_vesting_ResetLockupEvent'(b1), $1_from_bcs_deserialize'$1_vesting_ResetLockupEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::UpdateVoterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_UpdateVoterEvent'($1_from_bcs_deserialize'$1_vesting_UpdateVoterEvent'(b1), $1_from_bcs_deserialize'$1_vesting_UpdateVoterEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::AdminStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_AdminStore'($1_from_bcs_deserialize'$1_vesting_AdminStore'(b1), $1_from_bcs_deserialize'$1_vesting_AdminStore'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::AdminWithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_AdminWithdrawEvent'($1_from_bcs_deserialize'$1_vesting_AdminWithdrawEvent'(b1), $1_from_bcs_deserialize'$1_vesting_AdminWithdrawEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::SetBeneficiaryEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_SetBeneficiaryEvent'($1_from_bcs_deserialize'$1_vesting_SetBeneficiaryEvent'(b1), $1_from_bcs_deserialize'$1_vesting_SetBeneficiaryEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::StakingInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_StakingInfo'($1_from_bcs_deserialize'$1_vesting_StakingInfo'(b1), $1_from_bcs_deserialize'$1_vesting_StakingInfo'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::TerminateEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_TerminateEvent'($1_from_bcs_deserialize'$1_vesting_TerminateEvent'(b1), $1_from_bcs_deserialize'$1_vesting_TerminateEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::UpdateOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_UpdateOperatorEvent'($1_from_bcs_deserialize'$1_vesting_UpdateOperatorEvent'(b1), $1_from_bcs_deserialize'$1_vesting_UpdateOperatorEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::VestEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_VestEvent'($1_from_bcs_deserialize'$1_vesting_VestEvent'(b1), $1_from_bcs_deserialize'$1_vesting_VestEvent'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::VestingAccountManagement>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_VestingAccountManagement'($1_from_bcs_deserialize'$1_vesting_VestingAccountManagement'(b1), $1_from_bcs_deserialize'$1_vesting_VestingAccountManagement'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::VestingContract>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_VestingContract'($1_from_bcs_deserialize'$1_vesting_VestingContract'(b1), $1_from_bcs_deserialize'$1_vesting_VestingContract'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <vesting::VestingSchedule>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'$1_vesting_VestingSchedule'($1_from_bcs_deserialize'$1_vesting_VestingSchedule'(b1), $1_from_bcs_deserialize'$1_vesting_VestingSchedule'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:14:9+116, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)) ==> $IsEqual'vec'u8''(b1, b2))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'bool'(b1), $1_from_bcs_deserializable'bool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u8'(b1), $1_from_bcs_deserializable'u8'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u64'(b1), $1_from_bcs_deserializable'u64'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u128'(b1), $1_from_bcs_deserializable'u128'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'u256'(b1), $1_from_bcs_deserializable'u256'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'address'(b1), $1_from_bcs_deserializable'address'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'signer'(b1), $1_from_bcs_deserializable'signer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u8''(b1), $1_from_bcs_deserializable'vec'u8''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'u64''(b1), $1_from_bcs_deserializable'vec'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'address''(b1), $1_from_bcs_deserializable'vec'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<fixed_point32::FixedPoint32>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_fixed_point32_FixedPoint32''(b1), $1_from_bcs_deserializable'vec'$1_fixed_point32_FixedPoint32''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'vec'#0''(b1), $1_from_bcs_deserializable'vec'#0''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'u64''(b1), $1_from_bcs_deserializable'$1_option_Option'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'address''(b1), $1_from_bcs_deserializable'$1_option_Option'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_string_String'(b1), $1_from_bcs_deserializable'$1_string_String'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserializable'$1_type_info_TypeInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_GUID'(b1), $1_from_bcs_deserializable'$1_guid_GUID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_guid_ID'(b1), $1_from_bcs_deserializable'$1_guid_ID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<aptos_account::DirectCoinTransferConfigUpdatedEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::AddDistributionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::CreateStakingContractEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::DistributeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::RequestCommissionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::ResetLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::SwitchOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<staking_contract::UpdateVoterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::DistributeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_DistributeEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_DistributeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::ResetLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::UpdateVoterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::AdminWithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::CreateVestingContractEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::SetBeneficiaryEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::TerminateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_TerminateEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_TerminateEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::UnlockRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::UpdateOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <event::EventHandle<vesting::VestEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_VestEvent''(b1), $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_VestEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_Account'(b1), $1_from_bcs_deserializable'$1_account_Account'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_account_SignerCapability'(b1), $1_from_bcs_deserializable'$1_account_SignerCapability'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserializable'$1_aggregator_Aggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_DepositEvent'(b1), $1_from_bcs_deserializable'$1_coin_DepositEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <aptos_account::DirectTransferConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_aptos_account_DirectTransferConfig'(b1), $1_from_bcs_deserializable'$1_aptos_account_DirectTransferConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_u64''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<address, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<address, staking_contract::StakingContract>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <simple_map::SimpleMap<string::String, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_address''(b1), $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <fixed_point32::FixedPoint32>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_fixed_point32_FixedPoint32'(b1), $1_from_bcs_deserializable'$1_fixed_point32_FixedPoint32'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_config::StakingConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_config_StakingConfig'(b1), $1_from_bcs_deserializable'$1_staking_config_StakingConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::IncreaseLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(b1), $1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserializable'$1_stake_OwnerCapability'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::SetOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(b1), $1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_StakePool'(b1), $1_from_bcs_deserializable'$1_stake_StakePool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserializable'$1_stake_ValidatorSet'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <pool_u64::Pool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_pool_u64_Pool'(b1), $1_from_bcs_deserializable'$1_pool_u64_Pool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_UnlockStakeEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_UnlockStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::AddDistributionEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_AddDistributionEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_AddDistributionEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::DistributeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_DistributeEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_DistributeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::RequestCommissionEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_RequestCommissionEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_RequestCommissionEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::ResetLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_ResetLockupEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_ResetLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::StakingContract>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_StakingContract'(b1), $1_from_bcs_deserializable'$1_staking_contract_StakingContract'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::Store>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_Store'(b1), $1_from_bcs_deserializable'$1_staking_contract_Store'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::SwitchOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_SwitchOperatorEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_SwitchOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <staking_contract::UpdateVoterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_staking_contract_UpdateVoterEvent'(b1), $1_from_bcs_deserializable'$1_staking_contract_UpdateVoterEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::DistributeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_DistributeEvent'(b1), $1_from_bcs_deserializable'$1_vesting_DistributeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::ResetLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_ResetLockupEvent'(b1), $1_from_bcs_deserializable'$1_vesting_ResetLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::UpdateVoterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_UpdateVoterEvent'(b1), $1_from_bcs_deserializable'$1_vesting_UpdateVoterEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::AdminStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_AdminStore'(b1), $1_from_bcs_deserializable'$1_vesting_AdminStore'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::AdminWithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_AdminWithdrawEvent'(b1), $1_from_bcs_deserializable'$1_vesting_AdminWithdrawEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::SetBeneficiaryEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_SetBeneficiaryEvent'(b1), $1_from_bcs_deserializable'$1_vesting_SetBeneficiaryEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::StakingInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_StakingInfo'(b1), $1_from_bcs_deserializable'$1_vesting_StakingInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::TerminateEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_TerminateEvent'(b1), $1_from_bcs_deserializable'$1_vesting_TerminateEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::UpdateOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_UpdateOperatorEvent'(b1), $1_from_bcs_deserializable'$1_vesting_UpdateOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::VestEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_VestEvent'(b1), $1_from_bcs_deserializable'$1_vesting_VestEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::VestingAccountManagement>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_VestingAccountManagement'(b1), $1_from_bcs_deserializable'$1_vesting_VestingAccountManagement'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::VestingContract>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_VestingContract'(b1), $1_from_bcs_deserializable'$1_vesting_VestingContract'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <vesting::VestingSchedule>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'$1_vesting_VestingSchedule'(b1), $1_from_bcs_deserializable'$1_vesting_VestingSchedule'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:18:9+124, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserializable'#0'(b1), $1_from_bcs_deserializable'#0'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <bool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'bool'($1_from_bcs_deserialize'bool'(b1), $1_from_bcs_deserialize'bool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u8>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u8'($1_from_bcs_deserialize'u8'(b1), $1_from_bcs_deserialize'u8'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u64>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u64'($1_from_bcs_deserialize'u64'(b1), $1_from_bcs_deserialize'u64'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u128>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u128'($1_from_bcs_deserialize'u128'(b1), $1_from_bcs_deserialize'u128'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <u256>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'u256'($1_from_bcs_deserialize'u256'(b1), $1_from_bcs_deserialize'u256'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <address>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'address'($1_from_bcs_deserialize'address'(b1), $1_from_bcs_deserialize'address'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <signer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'signer'($1_from_bcs_deserialize'signer'(b1), $1_from_bcs_deserialize'signer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u8>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u8''($1_from_bcs_deserialize'vec'u8''(b1), $1_from_bcs_deserialize'vec'u8''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'u64''($1_from_bcs_deserialize'vec'u64''(b1), $1_from_bcs_deserialize'vec'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'address''($1_from_bcs_deserialize'vec'address''(b1), $1_from_bcs_deserialize'vec'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_aggregator_Aggregator''($1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<fixed_point32::FixedPoint32>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_fixed_point32_FixedPoint32''($1_from_bcs_deserialize'vec'$1_fixed_point32_FixedPoint32''(b1), $1_from_bcs_deserialize'vec'$1_fixed_point32_FixedPoint32''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<stake::IndividualValidatorPerformance>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_stake_IndividualValidatorPerformance''($1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b1), $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<stake::ValidatorInfo>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'$1_stake_ValidatorInfo''($1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b1), $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vector<#0>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'vec'#0''($1_from_bcs_deserialize'vec'#0''(b1), $1_from_bcs_deserialize'vec'#0''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'u64''($1_from_bcs_deserialize'$1_option_Option'u64''(b1), $1_from_bcs_deserialize'$1_option_Option'u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'address''($1_from_bcs_deserialize'$1_option_Option'address''(b1), $1_from_bcs_deserialize'$1_option_Option'address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<aggregator::Aggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::Integer>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <option::Option<optional_aggregator::OptionalAggregator>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b1), $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <string::String>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_string_String'($1_from_bcs_deserialize'$1_string_String'(b1), $1_from_bcs_deserialize'$1_string_String'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <type_info::TypeInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_type_info_TypeInfo'($1_from_bcs_deserialize'$1_type_info_TypeInfo'(b1), $1_from_bcs_deserialize'$1_type_info_TypeInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::GUID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_GUID'($1_from_bcs_deserialize'$1_guid_GUID'(b1), $1_from_bcs_deserialize'$1_guid_GUID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <guid::ID>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_guid_ID'($1_from_bcs_deserialize'$1_guid_ID'(b1), $1_from_bcs_deserialize'$1_guid_ID'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::CoinRegisterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<account::KeyRotationEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::DepositEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<coin::WithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<aptos_account::DirectCoinTransferConfigUpdatedEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::DistributeRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::IncreaseLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::JoinValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::LeaveValidatorSetEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::ReactivateStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::RegisterValidatorCandidateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::RotateConsensusKeyEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::SetOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<stake::WithdrawStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<reconfiguration::NewEpochEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::AddStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::UnlockStakeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::AddDistributionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::CreateStakingContractEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::DistributeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_DistributeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::RequestCommissionEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::ResetLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::SwitchOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<staking_contract::UpdateVoterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::DistributeEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_DistributeEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_DistributeEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_DistributeEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::ResetLockupEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_ResetLockupEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::UpdateVoterEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::AdminWithdrawEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::CreateVestingContractEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::SetBeneficiaryEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::TerminateEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_TerminateEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_TerminateEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_TerminateEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::UnlockRewardsEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::UpdateOperatorEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <event::EventHandle<vesting::VestEvent>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_event_EventHandle'$1_vesting_VestEvent''($1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_VestEvent''(b1), $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_VestEvent''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::Account>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_Account'($1_from_bcs_deserialize'$1_account_Account'(b1), $1_from_bcs_deserialize'$1_account_Account'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::RotationCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CapabilityOffer<account::SignerCapability>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b1), $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::CoinRegisterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_CoinRegisterEvent'($1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b1), $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <account::SignerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_account_SignerCapability'($1_from_bcs_deserialize'$1_account_SignerCapability'(b1), $1_from_bcs_deserialize'$1_account_SignerCapability'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aggregator::Aggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aggregator_Aggregator'($1_from_bcs_deserialize'$1_aggregator_Aggregator'(b1), $1_from_bcs_deserialize'$1_aggregator_Aggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::Integer>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_Integer'($1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <optional_aggregator::OptionalAggregator>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_optional_aggregator_OptionalAggregator'($1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b1), $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Coin<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinInfo<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::CoinStore<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::DepositEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_DepositEvent'($1_from_bcs_deserialize'$1_coin_DepositEvent'(b1), $1_from_bcs_deserialize'$1_coin_DepositEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::WithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_WithdrawEvent'($1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b1), $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Ghost$supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b1), $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_coin::AptosCoin>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_coin_AptosCoin'($1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b1), $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <aptos_account::DirectTransferConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_aptos_account_DirectTransferConfig'($1_from_bcs_deserialize'$1_aptos_account_DirectTransferConfig'(b1), $1_from_bcs_deserialize'$1_aptos_account_DirectTransferConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <chain_status::GenesisEndMarker>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_chain_status_GenesisEndMarker'($1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b1), $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <timestamp::CurrentTimeMicroseconds>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_timestamp_CurrentTimeMicroseconds'($1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b1), $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<address, u64>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'address_u64''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_u64''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_u64''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<address, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'address_address''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<address, staking_contract::StakingContract>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <simple_map::SimpleMap<string::String, address>>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_simple_map_SimpleMap'$1_string_String_address''($1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_address''(b1), $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_address''(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <fixed_point32::FixedPoint32>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_fixed_point32_FixedPoint32'($1_from_bcs_deserialize'$1_fixed_point32_FixedPoint32'(b1), $1_from_bcs_deserialize'$1_fixed_point32_FixedPoint32'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_config::StakingConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_config_StakingConfig'($1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b1), $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::IncreaseLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_IncreaseLockupEvent'($1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b1), $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::OwnerCapability>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_OwnerCapability'($1_from_bcs_deserialize'$1_stake_OwnerCapability'(b1), $1_from_bcs_deserialize'$1_stake_OwnerCapability'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::SetOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_SetOperatorEvent'($1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b1), $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::StakePool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_StakePool'($1_from_bcs_deserialize'$1_stake_StakePool'(b1), $1_from_bcs_deserialize'$1_stake_StakePool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_UnlockStakeEvent'($1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorConfig>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorConfig'($1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorInfo'($1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorPerformance>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorPerformance'($1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::ValidatorSet>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_ValidatorSet'($1_from_bcs_deserialize'$1_stake_ValidatorSet'(b1), $1_from_bcs_deserialize'$1_stake_ValidatorSet'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <stake::WithdrawStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_stake_WithdrawStakeEvent'($1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b1), $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <reconfiguration::Configuration>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_reconfiguration_Configuration'($1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b1), $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <pool_u64::Pool>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_pool_u64_Pool'($1_from_bcs_deserialize'$1_pool_u64_Pool'(b1), $1_from_bcs_deserialize'$1_pool_u64_Pool'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::UnlockStakeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_UnlockStakeEvent'($1_from_bcs_deserialize'$1_staking_contract_UnlockStakeEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_UnlockStakeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::AddDistributionEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_AddDistributionEvent'($1_from_bcs_deserialize'$1_staking_contract_AddDistributionEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_AddDistributionEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::DistributeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_DistributeEvent'($1_from_bcs_deserialize'$1_staking_contract_DistributeEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_DistributeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::RequestCommissionEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_RequestCommissionEvent'($1_from_bcs_deserialize'$1_staking_contract_RequestCommissionEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_RequestCommissionEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::ResetLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_ResetLockupEvent'($1_from_bcs_deserialize'$1_staking_contract_ResetLockupEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_ResetLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::StakingContract>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_StakingContract'($1_from_bcs_deserialize'$1_staking_contract_StakingContract'(b1), $1_from_bcs_deserialize'$1_staking_contract_StakingContract'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::Store>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_Store'($1_from_bcs_deserialize'$1_staking_contract_Store'(b1), $1_from_bcs_deserialize'$1_staking_contract_Store'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::SwitchOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_SwitchOperatorEvent'($1_from_bcs_deserialize'$1_staking_contract_SwitchOperatorEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_SwitchOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <staking_contract::UpdateVoterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_staking_contract_UpdateVoterEvent'($1_from_bcs_deserialize'$1_staking_contract_UpdateVoterEvent'(b1), $1_from_bcs_deserialize'$1_staking_contract_UpdateVoterEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::DistributeEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_DistributeEvent'($1_from_bcs_deserialize'$1_vesting_DistributeEvent'(b1), $1_from_bcs_deserialize'$1_vesting_DistributeEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::ResetLockupEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_ResetLockupEvent'($1_from_bcs_deserialize'$1_vesting_ResetLockupEvent'(b1), $1_from_bcs_deserialize'$1_vesting_ResetLockupEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::UpdateVoterEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_UpdateVoterEvent'($1_from_bcs_deserialize'$1_vesting_UpdateVoterEvent'(b1), $1_from_bcs_deserialize'$1_vesting_UpdateVoterEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::AdminStore>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_AdminStore'($1_from_bcs_deserialize'$1_vesting_AdminStore'(b1), $1_from_bcs_deserialize'$1_vesting_AdminStore'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::AdminWithdrawEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_AdminWithdrawEvent'($1_from_bcs_deserialize'$1_vesting_AdminWithdrawEvent'(b1), $1_from_bcs_deserialize'$1_vesting_AdminWithdrawEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::SetBeneficiaryEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_SetBeneficiaryEvent'($1_from_bcs_deserialize'$1_vesting_SetBeneficiaryEvent'(b1), $1_from_bcs_deserialize'$1_vesting_SetBeneficiaryEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::StakingInfo>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_StakingInfo'($1_from_bcs_deserialize'$1_vesting_StakingInfo'(b1), $1_from_bcs_deserialize'$1_vesting_StakingInfo'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::TerminateEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_TerminateEvent'($1_from_bcs_deserialize'$1_vesting_TerminateEvent'(b1), $1_from_bcs_deserialize'$1_vesting_TerminateEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::UpdateOperatorEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_UpdateOperatorEvent'($1_from_bcs_deserialize'$1_vesting_UpdateOperatorEvent'(b1), $1_from_bcs_deserialize'$1_vesting_UpdateOperatorEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::VestEvent>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_VestEvent'($1_from_bcs_deserialize'$1_vesting_VestEvent'(b1), $1_from_bcs_deserialize'$1_vesting_VestEvent'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::VestingAccountManagement>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_VestingAccountManagement'($1_from_bcs_deserialize'$1_vesting_VestingAccountManagement'(b1), $1_from_bcs_deserialize'$1_vesting_VestingAccountManagement'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::VestingContract>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_VestingContract'($1_from_bcs_deserialize'$1_vesting_VestingContract'(b1), $1_from_bcs_deserialize'$1_vesting_VestingContract'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <vesting::VestingSchedule>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'$1_vesting_VestingSchedule'($1_from_bcs_deserialize'$1_vesting_VestingSchedule'(b1), $1_from_bcs_deserialize'$1_vesting_VestingSchedule'(b2)))));

// axiom at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:21:9+118, instance <#0>
axiom (forall b1: Vec (int), b2: Vec (int) :: $IsValid'vec'u8''(b1) ==> $IsValid'vec'u8''(b2) ==> (($IsEqual'vec'u8''(b1, b2) ==> $IsEqual'#0'($1_from_bcs_deserialize'#0'(b1), $1_from_bcs_deserialize'#0'(b2)))));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'u64'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'u64'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'address'(v: Vec (int)): bool {
    $IsEqual'u64'($1_vector_$length'address'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_aggregator_Aggregator'(v: Vec ($1_aggregator_Aggregator)): bool {
    $IsEqual'u64'($1_vector_$length'$1_aggregator_Aggregator'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:146:5+86
function {:inline} $1_vector_$is_empty'$1_optional_aggregator_Integer'(v: Vec ($1_optional_aggregator_Integer)): bool {
    $IsEqual'u64'($1_vector_$length'$1_optional_aggregator_Integer'(v), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:608:9+110
function {:inline} $1_vector_spec_contains'address'(v: Vec (int), e: int): bool {
    (var $range_0 := v; (exists $i_1: int :: InRangeVec($range_0, $i_1) && (var x := ReadVec($range_0, $i_1);
    ($IsEqual'address'(x, e)))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'u64'(t: $1_option_Option'u64'): int {
    $1_vector_$borrow'u64'($vec#$1_option_Option'u64'(t), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): $1_aggregator_Aggregator {
    $1_vector_$borrow'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:102:5+145
function {:inline} $1_option_$borrow'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_Integer {
    $1_vector_$borrow'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t), 0)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'u64'(t: $1_option_Option'u64'): bool {
    $1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $1_vector_$is_empty'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:61:5+95
function {:inline} $1_option_$is_none'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $1_vector_$is_empty'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_aggregator_Aggregator'(t: $1_option_Option'$1_aggregator_Aggregator'): bool {
    !$1_vector_$is_empty'$1_aggregator_Aggregator'($vec#$1_option_Option'$1_aggregator_Aggregator'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:74:5+96
function {:inline} $1_option_$is_some'$1_optional_aggregator_Integer'(t: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    !$1_vector_$is_empty'$1_optional_aggregator_Integer'($vec#$1_option_Option'$1_optional_aggregator_Integer'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:34:10+78
function {:inline} $1_option_spec_none'address'(): $1_option_Option'address' {
    $1_option_Option'address'($EmptyVec'address'())
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:47:10+89
function {:inline} $1_option_spec_some'address'(e: int): $1_option_Option'address' {
    $1_option_Option'address'(MakeVec1(e))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:69:10+91
function {:inline} $1_option_spec_is_none'address'(t: $1_option_Option'address'): bool {
    $1_vector_$is_empty'address'($vec#$1_option_Option'address'(t))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:82:10+92
function {:inline} $1_option_spec_is_some'u64'(t: $1_option_Option'u64'): bool {
    !$1_vector_$is_empty'u64'($vec#$1_option_Option'u64'(t))
}

// struct option::Option<u64> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'u64';
function {:constructor} $1_option_Option'u64'($vec: Vec (int)): $1_option_Option'u64';
function {:inline} $Update'$1_option_Option'u64''_vec(s: $1_option_Option'u64', x: Vec (int)): $1_option_Option'u64' {
    $1_option_Option'u64'(x)
}
function $IsValid'$1_option_Option'u64''(s: $1_option_Option'u64'): bool {
    $IsValid'vec'u64''($vec#$1_option_Option'u64'(s))
}
function {:inline} $IsEqual'$1_option_Option'u64''(s1: $1_option_Option'u64', s2: $1_option_Option'u64'): bool {
    $IsEqual'vec'u64''($vec#$1_option_Option'u64'(s1), $vec#$1_option_Option'u64'(s2))}

// struct option::Option<address> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'address';
function {:constructor} $1_option_Option'address'($vec: Vec (int)): $1_option_Option'address';
function {:inline} $Update'$1_option_Option'address''_vec(s: $1_option_Option'address', x: Vec (int)): $1_option_Option'address' {
    $1_option_Option'address'(x)
}
function $IsValid'$1_option_Option'address''(s: $1_option_Option'address'): bool {
    $IsValid'vec'address''($vec#$1_option_Option'address'(s))
}
function {:inline} $IsEqual'$1_option_Option'address''(s1: $1_option_Option'address', s2: $1_option_Option'address'): bool {
    $IsEqual'vec'address''($vec#$1_option_Option'address'(s1), $vec#$1_option_Option'address'(s2))}

// struct option::Option<aggregator::Aggregator> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_aggregator_Aggregator';
function {:constructor} $1_option_Option'$1_aggregator_Aggregator'($vec: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator';
function {:inline} $Update'$1_option_Option'$1_aggregator_Aggregator''_vec(s: $1_option_Option'$1_aggregator_Aggregator', x: Vec ($1_aggregator_Aggregator)): $1_option_Option'$1_aggregator_Aggregator' {
    $1_option_Option'$1_aggregator_Aggregator'(x)
}
function $IsValid'$1_option_Option'$1_aggregator_Aggregator''(s: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsValid'vec'$1_aggregator_Aggregator''($vec#$1_option_Option'$1_aggregator_Aggregator'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_aggregator_Aggregator''(s1: $1_option_Option'$1_aggregator_Aggregator', s2: $1_option_Option'$1_aggregator_Aggregator'): bool {
    $IsEqual'vec'$1_aggregator_Aggregator''($vec#$1_option_Option'$1_aggregator_Aggregator'(s1), $vec#$1_option_Option'$1_aggregator_Aggregator'(s2))}

// struct option::Option<optional_aggregator::Integer> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_optional_aggregator_Integer';
function {:constructor} $1_option_Option'$1_optional_aggregator_Integer'($vec: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer';
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_Integer''_vec(s: $1_option_Option'$1_optional_aggregator_Integer', x: Vec ($1_optional_aggregator_Integer)): $1_option_Option'$1_optional_aggregator_Integer' {
    $1_option_Option'$1_optional_aggregator_Integer'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_Integer''(s: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsValid'vec'$1_optional_aggregator_Integer''($vec#$1_option_Option'$1_optional_aggregator_Integer'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''(s1: $1_option_Option'$1_optional_aggregator_Integer', s2: $1_option_Option'$1_optional_aggregator_Integer'): bool {
    $IsEqual'vec'$1_optional_aggregator_Integer''($vec#$1_option_Option'$1_optional_aggregator_Integer'(s1), $vec#$1_option_Option'$1_optional_aggregator_Integer'(s2))}

// struct option::Option<optional_aggregator::OptionalAggregator> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/option.move:7:5+81
type {:datatype} $1_option_Option'$1_optional_aggregator_OptionalAggregator';
function {:constructor} $1_option_Option'$1_optional_aggregator_OptionalAggregator'($vec: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
function {:inline} $Update'$1_option_Option'$1_optional_aggregator_OptionalAggregator''_vec(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator', x: Vec ($1_optional_aggregator_OptionalAggregator)): $1_option_Option'$1_optional_aggregator_OptionalAggregator' {
    $1_option_Option'$1_optional_aggregator_OptionalAggregator'(x)
}
function $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsValid'vec'$1_optional_aggregator_OptionalAggregator''($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s))
}
function {:inline} $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(s1: $1_option_Option'$1_optional_aggregator_OptionalAggregator', s2: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): bool {
    $IsEqual'vec'$1_optional_aggregator_OptionalAggregator''($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s1), $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'(s2))}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:23:10+70
function {:inline} $1_string_spec_utf8(bytes: Vec (int)): $1_string_String {
    $1_string_String(bytes)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.spec.move:28:9+50
function  $1_string_spec_internal_check_utf8(v: Vec (int)): bool;
axiom (forall v: Vec (int) ::
(var $$res := $1_string_spec_internal_check_utf8(v);
$IsValid'bool'($$res)));

// struct string::String at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:13:5+70
type {:datatype} $1_string_String;
function {:constructor} $1_string_String($bytes: Vec (int)): $1_string_String;
function {:inline} $Update'$1_string_String'_bytes(s: $1_string_String, x: Vec (int)): $1_string_String {
    $1_string_String(x)
}
function $IsValid'$1_string_String'(s: $1_string_String): bool {
    $IsValid'vec'u8''($bytes#$1_string_String(s))
}
function {:inline} $IsEqual'$1_string_String'(s1: $1_string_String, s2: $1_string_String): bool {
    $IsEqual'vec'u8''($bytes#$1_string_String(s1), $bytes#$1_string_String(s2))}

// fun string::utf8 [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+133
procedure {:inline 1} $1_string_utf8(_$t0: Vec (int)) returns ($ret0: $1_string_String)
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: $1_string_String;
    var $t0: Vec (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[bytes]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:18:5+1
    assume {:print "$at(15,573,574)"} true;
    assume {:print "$track_local(2,13,0):", $t0} $t0 == $t0;

    // $t1 := opaque begin: string::internal_check_utf8($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume {:print "$at(15,634,661)"} true;

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsValid'bool'($t1);

    // assume Eq<bool>($t1, string::spec_internal_check_utf8($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27
    assume $IsEqual'bool'($t1, $1_string_spec_internal_check_utf8($t0));

    // $t1 := opaque end: string::internal_check_utf8($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:17+27

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(15,626,677)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
L0:

    // $t2 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:46+13
    assume {:print "$at(15,663,676)"} true;
    $t2 := 1;
    assume $IsValid'u64'($t2);

    // trace_abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    assume {:print "$at(15,626,677)"} true;
    assume {:print "$track_abort(2,13):", $t2} $t2 == $t2;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:19:9+51
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:16+5
    assume {:print "$at(15,694,699)"} true;
L2:

    // $t3 := pack string::String($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$at(15,687,700)"} true;
    $t3 := $1_string_String($t0);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:20:9+13
    assume {:print "$track_return(2,13,0):", $t3} $t3 == $t3;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(15,705,706)"} true;
L3:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(15,705,706)"} true;
    $ret0 := $t3;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
L4:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/string.move:21:5+1
    assume {:print "$at(15,705,706)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
function {:inline} $1_signer_$address_of(s: $signer): int {
    $1_signer_$borrow_address(s)
}

// fun signer::address_of [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+77
procedure {:inline 1} $1_signer_address_of(_$t0: $signer) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: $signer;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[s]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:12:5+1
    assume {:print "$at(14,396,397)"} true;
    assume {:print "$track_local(3,0,0):", $t0} $t0 == $t0;

    // $t1 := signer::borrow_address($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:10+17
    assume {:print "$at(14,450,467)"} true;
    call $t1 := $1_signer_borrow_address($t0);
    if ($abort_flag) {
        assume {:print "$at(14,450,467)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(3,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:13:9+18
    assume {:print "$track_return(3,0,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,472,473)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,472,473)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/signer.move:14:5+1
    assume {:print "$at(14,472,473)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun error::already_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+71
procedure {:inline 1} $1_error_already_exists(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:3+1
    assume {:print "$at(10,3585,3586)"} true;
    assume {:print "$track_local(4,1,0):", $t0} $t0 == $t0;

    // $t1 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:54+14
    $t1 := 8;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$at(10,3626,3654)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:44+28
    assume {:print "$track_return(4,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:83:73+1
    assume {:print "$at(10,3655,3656)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_argument [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+76
procedure {:inline 1} $1_error_invalid_argument(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:3+1
    assume {:print "$at(10,3082,3083)"} true;
    assume {:print "$track_local(4,4,0):", $t0} $t0 == $t0;

    // $t1 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:57+16
    $t1 := 1;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$at(10,3126,3156)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:47+30
    assume {:print "$track_return(4,4,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:76:78+1
    assume {:print "$at(10,3157,3158)"} true;
    $ret0 := $t3;
    return;

}

// fun error::invalid_state [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+70
procedure {:inline 1} $1_error_invalid_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:3+1
    assume {:print "$at(10,3232,3233)"} true;
    assume {:print "$track_local(4,5,0):", $t0} $t0 == $t0;

    // $t1 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:54+13
    $t1 := 3;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$at(10,3273,3300)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:44+27
    assume {:print "$track_return(4,5,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:78:72+1
    assume {:print "$at(10,3301,3302)"} true;
    $ret0 := $t3;
    return;

}

// fun error::not_found [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+61
procedure {:inline 1} $1_error_not_found(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:3+1
    assume {:print "$at(10,3461,3462)"} true;
    assume {:print "$track_local(4,6,0):", $t0} $t0 == $t0;

    // $t1 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:49+9
    $t1 := 6;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$at(10,3497,3520)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:39+23
    assume {:print "$track_return(4,6,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:81:63+1
    assume {:print "$at(10,3521,3522)"} true;
    $ret0 := $t3;
    return;

}

// fun error::out_of_range [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+68
procedure {:inline 1} $1_error_out_of_range(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:3+1
    assume {:print "$at(10,3161,3162)"} true;
    assume {:print "$track_local(4,8,0):", $t0} $t0 == $t0;

    // $t1 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:53+12
    $t1 := 2;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$at(10,3201,3227)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:43+26
    assume {:print "$track_return(4,8,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:77:70+1
    assume {:print "$at(10,3228,3229)"} true;
    $ret0 := $t3;
    return;

}

// fun error::permission_denied [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+77
procedure {:inline 1} $1_error_permission_denied(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:3+1
    assume {:print "$at(10,3381,3382)"} true;
    assume {:print "$track_local(4,9,0):", $t0} $t0 == $t0;

    // $t1 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:57+17
    $t1 := 5;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$at(10,3425,3456)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:47+31
    assume {:print "$track_return(4,9,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:80:79+1
    assume {:print "$at(10,3457,3458)"} true;
    $ret0 := $t3;
    return;

}

// fun error::unauthenticated [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:3+73
procedure {:inline 1} $1_error_unauthenticated(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t0: int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[r]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:3+1
    assume {:print "$at(10,3305,3306)"} true;
    assume {:print "$track_local(4,11,0):", $t0} $t0 == $t0;

    // $t1 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:55+15
    $t1 := 4;
    assume $IsValid'u64'($t1);

    // assume Identical($t2, Shl($t1, 16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:69:5+29
    assume {:print "$at(10,2844,2873)"} true;
    assume ($t2 == $shlU64($t1, 16));

    // $t3 := opaque begin: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume {:print "$at(10,3347,3376)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume $IsValid'u64'($t3);

    // assume Eq<u64>($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume $IsEqual'u64'($t3, $t1);

    // $t3 := opaque end: error::canonical($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:45+29
    assume {:print "$track_return(4,11,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:75+1
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/error.move:79:75+1
    assume {:print "$at(10,3377,3378)"} true;
    $ret0 := $t3;
    return;

}

// struct type_info::TypeInfo at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/type_info.move:17:5+145
type {:datatype} $1_type_info_TypeInfo;
function {:constructor} $1_type_info_TypeInfo($account_address: int, $module_name: Vec (int), $struct_name: Vec (int)): $1_type_info_TypeInfo;
function {:inline} $Update'$1_type_info_TypeInfo'_account_address(s: $1_type_info_TypeInfo, x: int): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo(x, $module_name#$1_type_info_TypeInfo(s), $struct_name#$1_type_info_TypeInfo(s))
}
function {:inline} $Update'$1_type_info_TypeInfo'_module_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address#$1_type_info_TypeInfo(s), x, $struct_name#$1_type_info_TypeInfo(s))
}
function {:inline} $Update'$1_type_info_TypeInfo'_struct_name(s: $1_type_info_TypeInfo, x: Vec (int)): $1_type_info_TypeInfo {
    $1_type_info_TypeInfo($account_address#$1_type_info_TypeInfo(s), $module_name#$1_type_info_TypeInfo(s), x)
}
function $IsValid'$1_type_info_TypeInfo'(s: $1_type_info_TypeInfo): bool {
    $IsValid'address'($account_address#$1_type_info_TypeInfo(s))
      && $IsValid'vec'u8''($module_name#$1_type_info_TypeInfo(s))
      && $IsValid'vec'u8''($struct_name#$1_type_info_TypeInfo(s))
}
function {:inline} $IsEqual'$1_type_info_TypeInfo'(s1: $1_type_info_TypeInfo, s2: $1_type_info_TypeInfo): bool {
    $IsEqual'address'($account_address#$1_type_info_TypeInfo(s1), $account_address#$1_type_info_TypeInfo(s2))
    && $IsEqual'vec'u8''($module_name#$1_type_info_TypeInfo(s1), $module_name#$1_type_info_TypeInfo(s2))
    && $IsEqual'vec'u8''($struct_name#$1_type_info_TypeInfo(s1), $struct_name#$1_type_info_TypeInfo(s2))}

// struct guid::GUID at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:7:5+50
type {:datatype} $1_guid_GUID;
function {:constructor} $1_guid_GUID($id: $1_guid_ID): $1_guid_GUID;
function {:inline} $Update'$1_guid_GUID'_id(s: $1_guid_GUID, x: $1_guid_ID): $1_guid_GUID {
    $1_guid_GUID(x)
}
function $IsValid'$1_guid_GUID'(s: $1_guid_GUID): bool {
    $IsValid'$1_guid_ID'($id#$1_guid_GUID(s))
}
function {:inline} $IsEqual'$1_guid_GUID'(s1: $1_guid_GUID, s2: $1_guid_GUID): bool {
    s1 == s2
}

// struct guid::ID at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:12:5+209
type {:datatype} $1_guid_ID;
function {:constructor} $1_guid_ID($creation_num: int, $addr: int): $1_guid_ID;
function {:inline} $Update'$1_guid_ID'_creation_num(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID(x, $addr#$1_guid_ID(s))
}
function {:inline} $Update'$1_guid_ID'_addr(s: $1_guid_ID, x: int): $1_guid_ID {
    $1_guid_ID($creation_num#$1_guid_ID(s), x)
}
function $IsValid'$1_guid_ID'(s: $1_guid_ID): bool {
    $IsValid'u64'($creation_num#$1_guid_ID(s))
      && $IsValid'address'($addr#$1_guid_ID(s))
}
function {:inline} $IsEqual'$1_guid_ID'(s1: $1_guid_ID, s2: $1_guid_ID): bool {
    s1 == s2
}

// fun guid::create [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:23:5+286
procedure {:inline 1} $1_guid_create(_$t0: int, _$t1: $Mutation (int)) returns ($ret0: $1_guid_GUID, $ret1: $Mutation (int))
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_guid_ID;
    var $t8: $1_guid_GUID;
    var $t0: int;
    var $t1: $Mutation (int);
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    assume {:print "$at(118,836,837)"} true;
    assume {:print "$track_local(13,0,0):", $t0} $t0 == $t0;

    // trace_local[creation_num_ref]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:23:5+1
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t3 := read_ref($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:24:28+17
    assume {:print "$at(118,940,957)"} true;
    $t3 := $Dereference($t1);

    // trace_local[creation_num]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:24:13+12
    assume {:print "$track_local(13,0,2):", $t3} $t3 == $t3;

    // $t4 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:25:44+1
    assume {:print "$at(118,1002,1003)"} true;
    $t4 := 1;
    assume $IsValid'u64'($t4);

    // $t5 := +($t3, $t4) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:25:42+1
    call $t5 := $AddU64($t3, $t4);
    if ($abort_flag) {
        assume {:print "$at(118,1000,1001)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(13,0):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_ref($t1, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:25:9+36
    $t1 := $UpdateMutation($t1, $t5);

    // $t7 := pack guid::ID($t3, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:27:17+70
    assume {:print "$at(118,1036,1106)"} true;
    $t7 := $1_guid_ID($t3, $t0);

    // $t8 := pack guid::GUID($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$at(118,1013,1116)"} true;
    $t8 := $1_guid_GUID($t7);

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    assume {:print "$track_return(13,0,0):", $t8} $t8 == $t8;

    // trace_local[creation_num_ref]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:26:9+103
    $temp_0'u64' := $Dereference($t1);
    assume {:print "$track_local(13,0,1):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
    $ret0 := $t8;
    $ret1 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/guid.move:32:5+1
    assume {:print "$at(118,1121,1122)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u8'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u8'(bytes);
$IsValid'u8'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u64'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u64'(bytes);
$IsValid'u64'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u128'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u128'(bytes);
$IsValid'u128'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'u256'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'u256'(bytes);
$IsValid'u256'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'address'(bytes: Vec (int)): int;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'address'(bytes);
$IsValid'address'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'signer'(bytes: Vec (int)): $signer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'signer'(bytes);
$IsValid'signer'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u8''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u8''(bytes);
$IsValid'vec'u8''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'u64''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'u64''(bytes);
$IsValid'vec'u64''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'address''(bytes: Vec (int)): Vec (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'address''(bytes);
$IsValid'vec'address''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): Vec ($1_aggregator_Aggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'vec'$1_aggregator_Aggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): Vec ($1_optional_aggregator_Integer);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'vec'$1_optional_aggregator_Integer''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): Vec ($1_optional_aggregator_OptionalAggregator);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'vec'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_fixed_point32_FixedPoint32''(bytes: Vec (int)): Vec ($1_fixed_point32_FixedPoint32);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_fixed_point32_FixedPoint32''(bytes);
$IsValid'vec'$1_fixed_point32_FixedPoint32''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(bytes: Vec (int)): Vec ($1_stake_IndividualValidatorPerformance);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_stake_IndividualValidatorPerformance''(bytes);
$IsValid'vec'$1_stake_IndividualValidatorPerformance''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(bytes: Vec (int)): Vec ($1_stake_ValidatorInfo);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'$1_stake_ValidatorInfo''(bytes);
$IsValid'vec'$1_stake_ValidatorInfo''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'vec'#0''(bytes: Vec (int)): Vec (#0);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'vec'#0''(bytes);
$IsValid'vec'#0''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'u64''(bytes: Vec (int)): $1_option_Option'u64';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'u64''(bytes);
$IsValid'$1_option_Option'u64''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'address''(bytes: Vec (int)): $1_option_Option'address';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'address''(bytes);
$IsValid'$1_option_Option'address''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): $1_option_Option'$1_aggregator_Aggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'$1_option_Option'$1_aggregator_Aggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_Integer';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_Integer''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): $1_option_Option'$1_optional_aggregator_OptionalAggregator';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_string_String'(bytes: Vec (int)): $1_string_String;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_string_String'(bytes);
$IsValid'$1_string_String'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes: Vec (int)): $1_type_info_TypeInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_type_info_TypeInfo'(bytes);
$IsValid'$1_type_info_TypeInfo'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_GUID'(bytes: Vec (int)): $1_guid_GUID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_GUID'(bytes);
$IsValid'$1_guid_GUID'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_guid_ID'(bytes: Vec (int)): $1_guid_ID;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_guid_ID'(bytes);
$IsValid'$1_guid_ID'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_CoinRegisterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_account_KeyRotationEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_DepositEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_coin_WithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_AddStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_SetOperatorEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_UnlockStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_AddStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_AddDistributionEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_DistributeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_DistributeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_ResetLockupEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_DistributeEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_DistributeEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_DistributeEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_DistributeEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_ResetLockupEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_ResetLockupEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_UpdateVoterEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_AdminWithdrawEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_CreateVestingContractEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_TerminateEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_TerminateEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_TerminateEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_TerminateEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_UnlockRewardsEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_UpdateOperatorEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_VestEvent''(bytes: Vec (int)): $1_event_EventHandle'$1_vesting_VestEvent';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_event_EventHandle'$1_vesting_VestEvent''(bytes);
$IsValid'$1_event_EventHandle'$1_vesting_VestEvent''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_Account'(bytes: Vec (int)): $1_account_Account;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_Account'(bytes);
$IsValid'$1_account_Account'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_RotationCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): $1_account_CapabilityOffer'$1_account_SignerCapability';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes: Vec (int)): $1_account_CoinRegisterEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_CoinRegisterEvent'(bytes);
$IsValid'$1_account_CoinRegisterEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes: Vec (int)): $1_account_SignerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_account_SignerCapability'(bytes);
$IsValid'$1_account_SignerCapability'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes: Vec (int)): $1_aggregator_Aggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aggregator_Aggregator'(bytes);
$IsValid'$1_aggregator_Aggregator'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes: Vec (int)): $1_optional_aggregator_Integer;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_Integer'(bytes);
$IsValid'$1_optional_aggregator_Integer'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): $1_optional_aggregator_OptionalAggregator;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'$1_optional_aggregator_OptionalAggregator'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Coin'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes: Vec (int)): $1_coin_DepositEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_DepositEvent'(bytes);
$IsValid'$1_coin_DepositEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes: Vec (int)): $1_coin_WithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_WithdrawEvent'(bytes);
$IsValid'$1_coin_WithdrawEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): $1_aptos_coin_AptosCoin;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'$1_aptos_coin_AptosCoin'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_aptos_account_DirectTransferConfig'(bytes: Vec (int)): $1_aptos_account_DirectTransferConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_aptos_account_DirectTransferConfig'(bytes);
$IsValid'$1_aptos_account_DirectTransferConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): $1_chain_status_GenesisEndMarker;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'$1_chain_status_GenesisEndMarker'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): $1_timestamp_CurrentTimeMicroseconds;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'$1_timestamp_CurrentTimeMicroseconds'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_u64''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_u64''(bytes);
$IsValid'$1_simple_map_SimpleMap'address_u64''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_address''(bytes);
$IsValid'$1_simple_map_SimpleMap'address_address''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(bytes: Vec (int)): Table int ($1_staking_contract_StakingContract);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(bytes);
$IsValid'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_address''(bytes: Vec (int)): Table int (int);
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_simple_map_SimpleMap'$1_string_String_address''(bytes);
$IsValid'$1_simple_map_SimpleMap'$1_string_String_address''($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_fixed_point32_FixedPoint32'(bytes: Vec (int)): $1_fixed_point32_FixedPoint32;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_fixed_point32_FixedPoint32'(bytes);
$IsValid'$1_fixed_point32_FixedPoint32'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(bytes: Vec (int)): $1_staking_config_StakingConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_config_StakingConfig'(bytes);
$IsValid'$1_staking_config_StakingConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(bytes: Vec (int)): $1_stake_IncreaseLockupEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_IncreaseLockupEvent'(bytes);
$IsValid'$1_stake_IncreaseLockupEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_OwnerCapability'(bytes: Vec (int)): $1_stake_OwnerCapability;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_OwnerCapability'(bytes);
$IsValid'$1_stake_OwnerCapability'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(bytes: Vec (int)): $1_stake_SetOperatorEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_SetOperatorEvent'(bytes);
$IsValid'$1_stake_SetOperatorEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_StakePool'(bytes: Vec (int)): $1_stake_StakePool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_StakePool'(bytes);
$IsValid'$1_stake_StakePool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(bytes: Vec (int)): $1_stake_UnlockStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_UnlockStakeEvent'(bytes);
$IsValid'$1_stake_UnlockStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(bytes: Vec (int)): $1_stake_ValidatorConfig;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorConfig'(bytes);
$IsValid'$1_stake_ValidatorConfig'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(bytes: Vec (int)): $1_stake_ValidatorInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorInfo'(bytes);
$IsValid'$1_stake_ValidatorInfo'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(bytes: Vec (int)): $1_stake_ValidatorPerformance;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorPerformance'(bytes);
$IsValid'$1_stake_ValidatorPerformance'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_ValidatorSet'(bytes: Vec (int)): $1_stake_ValidatorSet;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_ValidatorSet'(bytes);
$IsValid'$1_stake_ValidatorSet'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(bytes: Vec (int)): $1_stake_WithdrawStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_stake_WithdrawStakeEvent'(bytes);
$IsValid'$1_stake_WithdrawStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes: Vec (int)): $1_reconfiguration_Configuration;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_reconfiguration_Configuration'(bytes);
$IsValid'$1_reconfiguration_Configuration'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_pool_u64_Pool'(bytes: Vec (int)): $1_pool_u64_Pool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_pool_u64_Pool'(bytes);
$IsValid'$1_pool_u64_Pool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_UnlockStakeEvent'(bytes: Vec (int)): $1_staking_contract_UnlockStakeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_UnlockStakeEvent'(bytes);
$IsValid'$1_staking_contract_UnlockStakeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_AddDistributionEvent'(bytes: Vec (int)): $1_staking_contract_AddDistributionEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_AddDistributionEvent'(bytes);
$IsValid'$1_staking_contract_AddDistributionEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_DistributeEvent'(bytes: Vec (int)): $1_staking_contract_DistributeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_DistributeEvent'(bytes);
$IsValid'$1_staking_contract_DistributeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_RequestCommissionEvent'(bytes: Vec (int)): $1_staking_contract_RequestCommissionEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_RequestCommissionEvent'(bytes);
$IsValid'$1_staking_contract_RequestCommissionEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_ResetLockupEvent'(bytes: Vec (int)): $1_staking_contract_ResetLockupEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_ResetLockupEvent'(bytes);
$IsValid'$1_staking_contract_ResetLockupEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_StakingContract'(bytes: Vec (int)): $1_staking_contract_StakingContract;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_StakingContract'(bytes);
$IsValid'$1_staking_contract_StakingContract'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_Store'(bytes: Vec (int)): $1_staking_contract_Store;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_Store'(bytes);
$IsValid'$1_staking_contract_Store'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_SwitchOperatorEvent'(bytes: Vec (int)): $1_staking_contract_SwitchOperatorEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_SwitchOperatorEvent'(bytes);
$IsValid'$1_staking_contract_SwitchOperatorEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_staking_contract_UpdateVoterEvent'(bytes: Vec (int)): $1_staking_contract_UpdateVoterEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_staking_contract_UpdateVoterEvent'(bytes);
$IsValid'$1_staking_contract_UpdateVoterEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_DistributeEvent'(bytes: Vec (int)): $1_vesting_DistributeEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_DistributeEvent'(bytes);
$IsValid'$1_vesting_DistributeEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_ResetLockupEvent'(bytes: Vec (int)): $1_vesting_ResetLockupEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_ResetLockupEvent'(bytes);
$IsValid'$1_vesting_ResetLockupEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_UpdateVoterEvent'(bytes: Vec (int)): $1_vesting_UpdateVoterEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_UpdateVoterEvent'(bytes);
$IsValid'$1_vesting_UpdateVoterEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_AdminStore'(bytes: Vec (int)): $1_vesting_AdminStore;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_AdminStore'(bytes);
$IsValid'$1_vesting_AdminStore'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_AdminWithdrawEvent'(bytes: Vec (int)): $1_vesting_AdminWithdrawEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_AdminWithdrawEvent'(bytes);
$IsValid'$1_vesting_AdminWithdrawEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_SetBeneficiaryEvent'(bytes: Vec (int)): $1_vesting_SetBeneficiaryEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_SetBeneficiaryEvent'(bytes);
$IsValid'$1_vesting_SetBeneficiaryEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_StakingInfo'(bytes: Vec (int)): $1_vesting_StakingInfo;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_StakingInfo'(bytes);
$IsValid'$1_vesting_StakingInfo'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_TerminateEvent'(bytes: Vec (int)): $1_vesting_TerminateEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_TerminateEvent'(bytes);
$IsValid'$1_vesting_TerminateEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_UpdateOperatorEvent'(bytes: Vec (int)): $1_vesting_UpdateOperatorEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_UpdateOperatorEvent'(bytes);
$IsValid'$1_vesting_UpdateOperatorEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_VestEvent'(bytes: Vec (int)): $1_vesting_VestEvent;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_VestEvent'(bytes);
$IsValid'$1_vesting_VestEvent'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_VestingAccountManagement'(bytes: Vec (int)): $1_vesting_VestingAccountManagement;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_VestingAccountManagement'(bytes);
$IsValid'$1_vesting_VestingAccountManagement'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_VestingContract'(bytes: Vec (int)): $1_vesting_VestingContract;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_VestingContract'(bytes);
$IsValid'$1_vesting_VestingContract'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'$1_vesting_VestingSchedule'(bytes: Vec (int)): $1_vesting_VestingSchedule;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'$1_vesting_VestingSchedule'(bytes);
$IsValid'$1_vesting_VestingSchedule'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:7:9+41
function  $1_from_bcs_deserialize'#0'(bytes: Vec (int)): #0;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserialize'#0'(bytes);
$IsValid'#0'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'bool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'bool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u8'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u8'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u64'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u64'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u128'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u128'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'u256'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'u256'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'address'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'address'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'signer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'signer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u8''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u8''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_fixed_point32_FixedPoint32''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_fixed_point32_FixedPoint32''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_stake_IndividualValidatorPerformance''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'$1_stake_ValidatorInfo''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'vec'#0''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'vec'#0''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_aggregator_Aggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_Integer''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_option_Option'$1_optional_aggregator_OptionalAggregator''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_string_String'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_string_String'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_type_info_TypeInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_GUID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_GUID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_guid_ID'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_guid_ID'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_CoinRegisterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_account_KeyRotationEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_DepositEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_coin_WithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_AddStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_SetOperatorEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_DistributeEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_DistributeEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_TerminateEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_TerminateEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_VestEvent''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_event_EventHandle'$1_vesting_VestEvent''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_Account'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_Account'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_RotationCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CapabilityOffer'$1_account_SignerCapability''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_CoinRegisterEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_account_SignerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aggregator_Aggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_Integer'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_optional_aggregator_OptionalAggregator'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Coin'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_DepositEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_WithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_coin_AptosCoin'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_aptos_account_DirectTransferConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_aptos_account_DirectTransferConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_chain_status_GenesisEndMarker'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_timestamp_CurrentTimeMicroseconds'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_u64''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_u64''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_address''(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_simple_map_SimpleMap'$1_string_String_address''(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_fixed_point32_FixedPoint32'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_fixed_point32_FixedPoint32'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_config_StakingConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_config_StakingConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_IncreaseLockupEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_OwnerCapability'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_OwnerCapability'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_SetOperatorEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_StakePool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_StakePool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_UnlockStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorConfig'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorConfig'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorPerformance'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_ValidatorSet'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_ValidatorSet'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_stake_WithdrawStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_reconfiguration_Configuration'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_pool_u64_Pool'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_pool_u64_Pool'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_UnlockStakeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_UnlockStakeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_AddDistributionEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_AddDistributionEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_DistributeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_DistributeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_RequestCommissionEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_RequestCommissionEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_ResetLockupEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_ResetLockupEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_StakingContract'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_StakingContract'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_Store'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_Store'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_SwitchOperatorEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_SwitchOperatorEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_staking_contract_UpdateVoterEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_staking_contract_UpdateVoterEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_DistributeEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_DistributeEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_ResetLockupEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_ResetLockupEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_UpdateVoterEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_UpdateVoterEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_AdminStore'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_AdminStore'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_AdminWithdrawEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_AdminWithdrawEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_SetBeneficiaryEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_SetBeneficiaryEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_StakingInfo'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_StakingInfo'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_TerminateEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_TerminateEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_UpdateOperatorEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_UpdateOperatorEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_VestEvent'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_VestEvent'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_VestingAccountManagement'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_VestingAccountManagement'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_VestingContract'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_VestingContract'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'$1_vesting_VestingSchedule'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'$1_vesting_VestingSchedule'(bytes);
$IsValid'bool'($$res)));

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/from_bcs.spec.move:11:9+47
function  $1_from_bcs_deserializable'#0'(bytes: Vec (int)): bool;
axiom (forall bytes: Vec (int) ::
(var $$res := $1_from_bcs_deserializable'#0'(bytes);
$IsValid'bool'($$res)));

// struct event::EventHandle<account::CoinRegisterEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_account_CoinRegisterEvent';
function {:constructor} $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent';
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_counter(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: int): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'(x, $guid#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_account_CoinRegisterEvent''_guid(s: $1_event_EventHandle'$1_account_CoinRegisterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_CoinRegisterEvent' {
    $1_event_EventHandle'$1_account_CoinRegisterEvent'($counter#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_account_CoinRegisterEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''(s1: $1_event_EventHandle'$1_account_CoinRegisterEvent', s2: $1_event_EventHandle'$1_account_CoinRegisterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<account::KeyRotationEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_account_KeyRotationEvent';
function {:constructor} $1_event_EventHandle'$1_account_KeyRotationEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent';
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_counter(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: int): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'(x, $guid#$1_event_EventHandle'$1_account_KeyRotationEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_account_KeyRotationEvent''_guid(s: $1_event_EventHandle'$1_account_KeyRotationEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_account_KeyRotationEvent' {
    $1_event_EventHandle'$1_account_KeyRotationEvent'($counter#$1_event_EventHandle'$1_account_KeyRotationEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''(s: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_account_KeyRotationEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_account_KeyRotationEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''(s1: $1_event_EventHandle'$1_account_KeyRotationEvent', s2: $1_event_EventHandle'$1_account_KeyRotationEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::DepositEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_coin_DepositEvent';
function {:constructor} $1_event_EventHandle'$1_coin_DepositEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent';
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_counter(s: $1_event_EventHandle'$1_coin_DepositEvent', x: int): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'(x, $guid#$1_event_EventHandle'$1_coin_DepositEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_DepositEvent''_guid(s: $1_event_EventHandle'$1_coin_DepositEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_DepositEvent' {
    $1_event_EventHandle'$1_coin_DepositEvent'($counter#$1_event_EventHandle'$1_coin_DepositEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''(s: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_coin_DepositEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_coin_DepositEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_DepositEvent''(s1: $1_event_EventHandle'$1_coin_DepositEvent', s2: $1_event_EventHandle'$1_coin_DepositEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<coin::WithdrawEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_coin_WithdrawEvent';
function {:constructor} $1_event_EventHandle'$1_coin_WithdrawEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent';
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_counter(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: int): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'(x, $guid#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_coin_WithdrawEvent''_guid(s: $1_event_EventHandle'$1_coin_WithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_coin_WithdrawEvent' {
    $1_event_EventHandle'$1_coin_WithdrawEvent'($counter#$1_event_EventHandle'$1_coin_WithdrawEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''(s: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_coin_WithdrawEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_coin_WithdrawEvent''(s1: $1_event_EventHandle'$1_coin_WithdrawEvent', s2: $1_event_EventHandle'$1_coin_WithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<aptos_account::DirectCoinTransferConfigUpdatedEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent';
function {:constructor} $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent';
function {:inline} $Update'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''_counter(s: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent', x: int): $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent' {
    $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(x, $guid#$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''_guid(s: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent' {
    $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'($counter#$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(s: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''(s1: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent', s2: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::AddStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_AddStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_AddStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_AddStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_AddStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_AddStakeEvent', x: int): $1_event_EventHandle'$1_stake_AddStakeEvent' {
    $1_event_EventHandle'$1_stake_AddStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_AddStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_AddStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_AddStakeEvent' {
    $1_event_EventHandle'$1_stake_AddStakeEvent'($counter#$1_event_EventHandle'$1_stake_AddStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''(s: $1_event_EventHandle'$1_stake_AddStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_AddStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_AddStakeEvent''(s1: $1_event_EventHandle'$1_stake_AddStakeEvent', s2: $1_event_EventHandle'$1_stake_AddStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::DistributeRewardsEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
function {:constructor} $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_DistributeRewardsEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''_counter(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', x: int): $1_event_EventHandle'$1_stake_DistributeRewardsEvent' {
    $1_event_EventHandle'$1_stake_DistributeRewardsEvent'(x, $guid#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''_guid(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_DistributeRewardsEvent' {
    $1_event_EventHandle'$1_stake_DistributeRewardsEvent'($counter#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(s: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_DistributeRewardsEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''(s1: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', s2: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::IncreaseLockupEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
function {:constructor} $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_IncreaseLockupEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''_counter(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', x: int): $1_event_EventHandle'$1_stake_IncreaseLockupEvent' {
    $1_event_EventHandle'$1_stake_IncreaseLockupEvent'(x, $guid#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''_guid(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_IncreaseLockupEvent' {
    $1_event_EventHandle'$1_stake_IncreaseLockupEvent'($counter#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(s: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_IncreaseLockupEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''(s1: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', s2: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::JoinValidatorSetEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
function {:constructor} $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''_counter(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', x: int): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(x, $guid#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''_guid(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_JoinValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'($counter#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(s: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_JoinValidatorSetEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''(s1: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', s2: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::LeaveValidatorSetEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
function {:constructor} $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''_counter(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', x: int): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(x, $guid#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''_guid(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent' {
    $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'($counter#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(s: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''(s1: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent', s2: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::ReactivateStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_ReactivateStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', x: int): $1_event_EventHandle'$1_stake_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_stake_ReactivateStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_ReactivateStakeEvent' {
    $1_event_EventHandle'$1_stake_ReactivateStakeEvent'($counter#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(s: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_ReactivateStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''(s1: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', s2: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::RegisterValidatorCandidateEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
function {:constructor} $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''_counter(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', x: int): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent' {
    $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(x, $guid#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''_guid(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent' {
    $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'($counter#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(s: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''(s1: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', s2: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::RotateConsensusKeyEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
function {:constructor} $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''_counter(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', x: int): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent' {
    $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(x, $guid#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''_guid(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent' {
    $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'($counter#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(s: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''(s1: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', s2: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::SetOperatorEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_SetOperatorEvent';
function {:constructor} $1_event_EventHandle'$1_stake_SetOperatorEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_SetOperatorEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_SetOperatorEvent''_counter(s: $1_event_EventHandle'$1_stake_SetOperatorEvent', x: int): $1_event_EventHandle'$1_stake_SetOperatorEvent' {
    $1_event_EventHandle'$1_stake_SetOperatorEvent'(x, $guid#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_SetOperatorEvent''_guid(s: $1_event_EventHandle'$1_stake_SetOperatorEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_SetOperatorEvent' {
    $1_event_EventHandle'$1_stake_SetOperatorEvent'($counter#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''(s: $1_event_EventHandle'$1_stake_SetOperatorEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_SetOperatorEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_SetOperatorEvent''(s1: $1_event_EventHandle'$1_stake_SetOperatorEvent', s2: $1_event_EventHandle'$1_stake_SetOperatorEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::UnlockStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_UnlockStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_UnlockStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_UnlockStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_UnlockStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent', x: int): $1_event_EventHandle'$1_stake_UnlockStakeEvent' {
    $1_event_EventHandle'$1_stake_UnlockStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_UnlockStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_UnlockStakeEvent' {
    $1_event_EventHandle'$1_stake_UnlockStakeEvent'($counter#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(s: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_UnlockStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_UnlockStakeEvent''(s1: $1_event_EventHandle'$1_stake_UnlockStakeEvent', s2: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::UpdateNetworkAndFullnodeAddressesEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
function {:constructor} $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''_counter(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', x: int): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent' {
    $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(x, $guid#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''_guid(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent' {
    $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'($counter#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(s: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''(s1: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', s2: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<stake::WithdrawStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
function {:constructor} $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_stake_WithdrawStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''_counter(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', x: int): $1_event_EventHandle'$1_stake_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_stake_WithdrawStakeEvent'(x, $guid#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''_guid(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_stake_WithdrawStakeEvent' {
    $1_event_EventHandle'$1_stake_WithdrawStakeEvent'($counter#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(s: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_stake_WithdrawStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''(s1: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', s2: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<reconfiguration::NewEpochEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
function {:constructor} $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent';
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_counter(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: int): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(x, $guid#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''_guid(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_reconfiguration_NewEpochEvent' {
    $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'($counter#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_reconfiguration_NewEpochEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''(s1: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent', s2: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::AddStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_AddStakeEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_AddStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_AddStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_AddStakeEvent', x: int): $1_event_EventHandle'$1_staking_contract_AddStakeEvent' {
    $1_event_EventHandle'$1_staking_contract_AddStakeEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_AddStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_AddStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_AddStakeEvent' {
    $1_event_EventHandle'$1_staking_contract_AddStakeEvent'($counter#$1_event_EventHandle'$1_staking_contract_AddStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(s: $1_event_EventHandle'$1_staking_contract_AddStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_AddStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_AddStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''(s1: $1_event_EventHandle'$1_staking_contract_AddStakeEvent', s2: $1_event_EventHandle'$1_staking_contract_AddStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::UnlockStakeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent', x: int): $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent' {
    $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent' {
    $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'($counter#$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(s: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''(s1: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent', s2: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::AddDistributionEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_AddDistributionEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_AddDistributionEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_AddDistributionEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent', x: int): $1_event_EventHandle'$1_staking_contract_AddDistributionEvent' {
    $1_event_EventHandle'$1_staking_contract_AddDistributionEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_AddDistributionEvent' {
    $1_event_EventHandle'$1_staking_contract_AddDistributionEvent'($counter#$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(s: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''(s1: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent', s2: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::CreateStakingContractEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent', x: int): $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent' {
    $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent' {
    $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'($counter#$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(s: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''(s1: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent', s2: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::DistributeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_DistributeEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_DistributeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_DistributeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_DistributeEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_DistributeEvent', x: int): $1_event_EventHandle'$1_staking_contract_DistributeEvent' {
    $1_event_EventHandle'$1_staking_contract_DistributeEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_DistributeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_DistributeEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_DistributeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_DistributeEvent' {
    $1_event_EventHandle'$1_staking_contract_DistributeEvent'($counter#$1_event_EventHandle'$1_staking_contract_DistributeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(s: $1_event_EventHandle'$1_staking_contract_DistributeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_DistributeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_DistributeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_DistributeEvent''(s1: $1_event_EventHandle'$1_staking_contract_DistributeEvent', s2: $1_event_EventHandle'$1_staking_contract_DistributeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::RequestCommissionEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent', x: int): $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent' {
    $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent' {
    $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'($counter#$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(s: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''(s1: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent', s2: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::ResetLockupEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_ResetLockupEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_ResetLockupEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_ResetLockupEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent', x: int): $1_event_EventHandle'$1_staking_contract_ResetLockupEvent' {
    $1_event_EventHandle'$1_staking_contract_ResetLockupEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_ResetLockupEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_ResetLockupEvent' {
    $1_event_EventHandle'$1_staking_contract_ResetLockupEvent'($counter#$1_event_EventHandle'$1_staking_contract_ResetLockupEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(s: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_ResetLockupEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_ResetLockupEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''(s1: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent', s2: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::SwitchOperatorEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent', x: int): $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent' {
    $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent' {
    $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'($counter#$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(s: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''(s1: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent', s2: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<staking_contract::UpdateVoterEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent';
function {:constructor} $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent';
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''_counter(s: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent', x: int): $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent' {
    $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'(x, $guid#$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''_guid(s: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent' {
    $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'($counter#$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(s: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''(s1: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent', s2: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::DistributeEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_DistributeEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_DistributeEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_DistributeEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_DistributeEvent''_counter(s: $1_event_EventHandle'$1_vesting_DistributeEvent', x: int): $1_event_EventHandle'$1_vesting_DistributeEvent' {
    $1_event_EventHandle'$1_vesting_DistributeEvent'(x, $guid#$1_event_EventHandle'$1_vesting_DistributeEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_DistributeEvent''_guid(s: $1_event_EventHandle'$1_vesting_DistributeEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_DistributeEvent' {
    $1_event_EventHandle'$1_vesting_DistributeEvent'($counter#$1_event_EventHandle'$1_vesting_DistributeEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_DistributeEvent''(s: $1_event_EventHandle'$1_vesting_DistributeEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_DistributeEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_DistributeEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_DistributeEvent''(s1: $1_event_EventHandle'$1_vesting_DistributeEvent', s2: $1_event_EventHandle'$1_vesting_DistributeEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::ResetLockupEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_ResetLockupEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_ResetLockupEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_ResetLockupEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_ResetLockupEvent''_counter(s: $1_event_EventHandle'$1_vesting_ResetLockupEvent', x: int): $1_event_EventHandle'$1_vesting_ResetLockupEvent' {
    $1_event_EventHandle'$1_vesting_ResetLockupEvent'(x, $guid#$1_event_EventHandle'$1_vesting_ResetLockupEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_ResetLockupEvent''_guid(s: $1_event_EventHandle'$1_vesting_ResetLockupEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_ResetLockupEvent' {
    $1_event_EventHandle'$1_vesting_ResetLockupEvent'($counter#$1_event_EventHandle'$1_vesting_ResetLockupEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(s: $1_event_EventHandle'$1_vesting_ResetLockupEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_ResetLockupEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_ResetLockupEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_ResetLockupEvent''(s1: $1_event_EventHandle'$1_vesting_ResetLockupEvent', s2: $1_event_EventHandle'$1_vesting_ResetLockupEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::UpdateVoterEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_UpdateVoterEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_UpdateVoterEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_UpdateVoterEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''_counter(s: $1_event_EventHandle'$1_vesting_UpdateVoterEvent', x: int): $1_event_EventHandle'$1_vesting_UpdateVoterEvent' {
    $1_event_EventHandle'$1_vesting_UpdateVoterEvent'(x, $guid#$1_event_EventHandle'$1_vesting_UpdateVoterEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''_guid(s: $1_event_EventHandle'$1_vesting_UpdateVoterEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_UpdateVoterEvent' {
    $1_event_EventHandle'$1_vesting_UpdateVoterEvent'($counter#$1_event_EventHandle'$1_vesting_UpdateVoterEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(s: $1_event_EventHandle'$1_vesting_UpdateVoterEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_UpdateVoterEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_UpdateVoterEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''(s1: $1_event_EventHandle'$1_vesting_UpdateVoterEvent', s2: $1_event_EventHandle'$1_vesting_UpdateVoterEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::AdminWithdrawEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_AdminWithdrawEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_AdminWithdrawEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''_counter(s: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent', x: int): $1_event_EventHandle'$1_vesting_AdminWithdrawEvent' {
    $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'(x, $guid#$1_event_EventHandle'$1_vesting_AdminWithdrawEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''_guid(s: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_AdminWithdrawEvent' {
    $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'($counter#$1_event_EventHandle'$1_vesting_AdminWithdrawEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(s: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_AdminWithdrawEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_AdminWithdrawEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''(s1: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent', s2: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::CreateVestingContractEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_CreateVestingContractEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_CreateVestingContractEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''_counter(s: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent', x: int): $1_event_EventHandle'$1_vesting_CreateVestingContractEvent' {
    $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'(x, $guid#$1_event_EventHandle'$1_vesting_CreateVestingContractEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''_guid(s: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_CreateVestingContractEvent' {
    $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'($counter#$1_event_EventHandle'$1_vesting_CreateVestingContractEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(s: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_CreateVestingContractEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_CreateVestingContractEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''(s1: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent', s2: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::SetBeneficiaryEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''_counter(s: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent', x: int): $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent' {
    $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'(x, $guid#$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''_guid(s: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent' {
    $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'($counter#$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(s: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''(s1: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent', s2: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::TerminateEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_TerminateEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_TerminateEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_TerminateEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_TerminateEvent''_counter(s: $1_event_EventHandle'$1_vesting_TerminateEvent', x: int): $1_event_EventHandle'$1_vesting_TerminateEvent' {
    $1_event_EventHandle'$1_vesting_TerminateEvent'(x, $guid#$1_event_EventHandle'$1_vesting_TerminateEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_TerminateEvent''_guid(s: $1_event_EventHandle'$1_vesting_TerminateEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_TerminateEvent' {
    $1_event_EventHandle'$1_vesting_TerminateEvent'($counter#$1_event_EventHandle'$1_vesting_TerminateEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_TerminateEvent''(s: $1_event_EventHandle'$1_vesting_TerminateEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_TerminateEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_TerminateEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_TerminateEvent''(s1: $1_event_EventHandle'$1_vesting_TerminateEvent', s2: $1_event_EventHandle'$1_vesting_TerminateEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::UnlockRewardsEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_UnlockRewardsEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_UnlockRewardsEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_UnlockRewardsEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''_counter(s: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent', x: int): $1_event_EventHandle'$1_vesting_UnlockRewardsEvent' {
    $1_event_EventHandle'$1_vesting_UnlockRewardsEvent'(x, $guid#$1_event_EventHandle'$1_vesting_UnlockRewardsEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''_guid(s: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_UnlockRewardsEvent' {
    $1_event_EventHandle'$1_vesting_UnlockRewardsEvent'($counter#$1_event_EventHandle'$1_vesting_UnlockRewardsEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(s: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_UnlockRewardsEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_UnlockRewardsEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''(s1: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent', s2: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::UpdateOperatorEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_UpdateOperatorEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_UpdateOperatorEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_UpdateOperatorEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''_counter(s: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent', x: int): $1_event_EventHandle'$1_vesting_UpdateOperatorEvent' {
    $1_event_EventHandle'$1_vesting_UpdateOperatorEvent'(x, $guid#$1_event_EventHandle'$1_vesting_UpdateOperatorEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''_guid(s: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_UpdateOperatorEvent' {
    $1_event_EventHandle'$1_vesting_UpdateOperatorEvent'($counter#$1_event_EventHandle'$1_vesting_UpdateOperatorEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(s: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_UpdateOperatorEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_UpdateOperatorEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''(s1: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent', s2: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent'): bool {
    s1 == s2
}

// struct event::EventHandle<vesting::VestEvent> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:16:5+224
type {:datatype} $1_event_EventHandle'$1_vesting_VestEvent';
function {:constructor} $1_event_EventHandle'$1_vesting_VestEvent'($counter: int, $guid: $1_guid_GUID): $1_event_EventHandle'$1_vesting_VestEvent';
function {:inline} $Update'$1_event_EventHandle'$1_vesting_VestEvent''_counter(s: $1_event_EventHandle'$1_vesting_VestEvent', x: int): $1_event_EventHandle'$1_vesting_VestEvent' {
    $1_event_EventHandle'$1_vesting_VestEvent'(x, $guid#$1_event_EventHandle'$1_vesting_VestEvent'(s))
}
function {:inline} $Update'$1_event_EventHandle'$1_vesting_VestEvent''_guid(s: $1_event_EventHandle'$1_vesting_VestEvent', x: $1_guid_GUID): $1_event_EventHandle'$1_vesting_VestEvent' {
    $1_event_EventHandle'$1_vesting_VestEvent'($counter#$1_event_EventHandle'$1_vesting_VestEvent'(s), x)
}
function $IsValid'$1_event_EventHandle'$1_vesting_VestEvent''(s: $1_event_EventHandle'$1_vesting_VestEvent'): bool {
    $IsValid'u64'($counter#$1_event_EventHandle'$1_vesting_VestEvent'(s))
      && $IsValid'$1_guid_GUID'($guid#$1_event_EventHandle'$1_vesting_VestEvent'(s))
}
function {:inline} $IsEqual'$1_event_EventHandle'$1_vesting_VestEvent''(s1: $1_event_EventHandle'$1_vesting_VestEvent', s2: $1_event_EventHandle'$1_vesting_VestEvent'): bool {
    s1 == s2
}

// fun event::new_event_handle<account::CoinRegisterEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_CoinRegisterEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_CoinRegisterEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_account_CoinRegisterEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<account::KeyRotationEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_account_KeyRotationEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_account_KeyRotationEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_account_KeyRotationEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<coin::DepositEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_coin_DepositEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_coin_DepositEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// fun event::new_event_handle<coin::WithdrawEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+165
procedure {:inline 1} $1_event_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $1_guid_GUID) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $1_guid_GUID;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[guid]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:24:5+1
    assume {:print "$at(110,978,979)"} true;
    assume {:print "$track_local(15,4,0):", $t0} $t0 == $t0;

    // $t1 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:26:22+1
    assume {:print "$at(110,1107,1108)"} true;
    $t1 := 0;
    assume $IsValid'u64'($t1);

    // $t2 := pack event::EventHandle<#0>($t1, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$at(110,1069,1137)"} true;
    $t2 := $1_event_EventHandle'$1_coin_WithdrawEvent'($t1, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:25:9+68
    assume {:print "$track_return(15,4,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/event.move:29:5+1
    assume {:print "$at(110,1142,1143)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:224:5+79
function {:inline} $1_account_$exists_at($1_account_Account_$memory: $Memory $1_account_Account, addr: int): bool {
    $ResourceExists($1_account_Account_$memory, addr)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:393:10+77
function  $1_account_spec_create_resource_address(source: int, seed: Vec (int)): int;
axiom (forall source: int, seed: Vec (int) ::
(var $$res := $1_account_spec_create_resource_address(source, seed);
$IsValid'address'($$res)));

// struct account::Account at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:26:5+401
type {:datatype} $1_account_Account;
function {:constructor} $1_account_Account($authentication_key: Vec (int), $sequence_number: int, $guid_creation_num: int, $coin_register_events: $1_event_EventHandle'$1_account_CoinRegisterEvent', $key_rotation_events: $1_event_EventHandle'$1_account_KeyRotationEvent', $rotation_capability_offer: $1_account_CapabilityOffer'$1_account_RotationCapability', $signer_capability_offer: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account;
function {:inline} $Update'$1_account_Account'_authentication_key(s: $1_account_Account, x: Vec (int)): $1_account_Account {
    $1_account_Account(x, $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_sequence_number(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), x, $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_guid_creation_num(s: $1_account_Account, x: int): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), x, $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_coin_register_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_CoinRegisterEvent'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), x, $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_key_rotation_events(s: $1_account_Account, x: $1_event_EventHandle'$1_account_KeyRotationEvent'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), x, $rotation_capability_offer#$1_account_Account(s), $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_rotation_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_RotationCapability'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), x, $signer_capability_offer#$1_account_Account(s))
}
function {:inline} $Update'$1_account_Account'_signer_capability_offer(s: $1_account_Account, x: $1_account_CapabilityOffer'$1_account_SignerCapability'): $1_account_Account {
    $1_account_Account($authentication_key#$1_account_Account(s), $sequence_number#$1_account_Account(s), $guid_creation_num#$1_account_Account(s), $coin_register_events#$1_account_Account(s), $key_rotation_events#$1_account_Account(s), $rotation_capability_offer#$1_account_Account(s), x)
}
function $IsValid'$1_account_Account'(s: $1_account_Account): bool {
    $IsValid'vec'u8''($authentication_key#$1_account_Account(s))
      && $IsValid'u64'($sequence_number#$1_account_Account(s))
      && $IsValid'u64'($guid_creation_num#$1_account_Account(s))
      && $IsValid'$1_event_EventHandle'$1_account_CoinRegisterEvent''($coin_register_events#$1_account_Account(s))
      && $IsValid'$1_event_EventHandle'$1_account_KeyRotationEvent''($key_rotation_events#$1_account_Account(s))
      && $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''($rotation_capability_offer#$1_account_Account(s))
      && $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''($signer_capability_offer#$1_account_Account(s))
}
function {:inline} $IsEqual'$1_account_Account'(s1: $1_account_Account, s2: $1_account_Account): bool {
    $IsEqual'vec'u8''($authentication_key#$1_account_Account(s1), $authentication_key#$1_account_Account(s2))
    && $IsEqual'u64'($sequence_number#$1_account_Account(s1), $sequence_number#$1_account_Account(s2))
    && $IsEqual'u64'($guid_creation_num#$1_account_Account(s1), $guid_creation_num#$1_account_Account(s2))
    && $IsEqual'$1_event_EventHandle'$1_account_CoinRegisterEvent''($coin_register_events#$1_account_Account(s1), $coin_register_events#$1_account_Account(s2))
    && $IsEqual'$1_event_EventHandle'$1_account_KeyRotationEvent''($key_rotation_events#$1_account_Account(s1), $key_rotation_events#$1_account_Account(s2))
    && $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''($rotation_capability_offer#$1_account_Account(s1), $rotation_capability_offer#$1_account_Account(s2))
    && $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''($signer_capability_offer#$1_account_Account(s1), $signer_capability_offer#$1_account_Account(s2))}
var $1_account_Account_$memory: $Memory $1_account_Account;

// struct account::CapabilityOffer<account::RotationCapability> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:45:5+68
type {:datatype} $1_account_CapabilityOffer'$1_account_RotationCapability';
function {:constructor} $1_account_CapabilityOffer'$1_account_RotationCapability'($for: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability';
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_RotationCapability''_for(s: $1_account_CapabilityOffer'$1_account_RotationCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_RotationCapability' {
    $1_account_CapabilityOffer'$1_account_RotationCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_RotationCapability''(s: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsValid'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_RotationCapability'(s))
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_RotationCapability''(s1: $1_account_CapabilityOffer'$1_account_RotationCapability', s2: $1_account_CapabilityOffer'$1_account_RotationCapability'): bool {
    $IsEqual'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_RotationCapability'(s1), $for#$1_account_CapabilityOffer'$1_account_RotationCapability'(s2))}

// struct account::CapabilityOffer<account::SignerCapability> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:45:5+68
type {:datatype} $1_account_CapabilityOffer'$1_account_SignerCapability';
function {:constructor} $1_account_CapabilityOffer'$1_account_SignerCapability'($for: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability';
function {:inline} $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for(s: $1_account_CapabilityOffer'$1_account_SignerCapability', x: $1_option_Option'address'): $1_account_CapabilityOffer'$1_account_SignerCapability' {
    $1_account_CapabilityOffer'$1_account_SignerCapability'(x)
}
function $IsValid'$1_account_CapabilityOffer'$1_account_SignerCapability''(s: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsValid'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_SignerCapability'(s))
}
function {:inline} $IsEqual'$1_account_CapabilityOffer'$1_account_SignerCapability''(s1: $1_account_CapabilityOffer'$1_account_SignerCapability', s2: $1_account_CapabilityOffer'$1_account_SignerCapability'): bool {
    $IsEqual'$1_option_Option'address''($for#$1_account_CapabilityOffer'$1_account_SignerCapability'(s1), $for#$1_account_CapabilityOffer'$1_account_SignerCapability'(s2))}

// struct account::CoinRegisterEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:41:5+77
type {:datatype} $1_account_CoinRegisterEvent;
function {:constructor} $1_account_CoinRegisterEvent($type_info: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent;
function {:inline} $Update'$1_account_CoinRegisterEvent'_type_info(s: $1_account_CoinRegisterEvent, x: $1_type_info_TypeInfo): $1_account_CoinRegisterEvent {
    $1_account_CoinRegisterEvent(x)
}
function $IsValid'$1_account_CoinRegisterEvent'(s: $1_account_CoinRegisterEvent): bool {
    $IsValid'$1_type_info_TypeInfo'($type_info#$1_account_CoinRegisterEvent(s))
}
function {:inline} $IsEqual'$1_account_CoinRegisterEvent'(s1: $1_account_CoinRegisterEvent, s2: $1_account_CoinRegisterEvent): bool {
    $IsEqual'$1_type_info_TypeInfo'($type_info#$1_account_CoinRegisterEvent(s1), $type_info#$1_account_CoinRegisterEvent(s2))}

// struct account::KeyRotationEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:36:5+135
type {:datatype} $1_account_KeyRotationEvent;
function {:constructor} $1_account_KeyRotationEvent($old_authentication_key: Vec (int), $new_authentication_key: Vec (int)): $1_account_KeyRotationEvent;
function {:inline} $Update'$1_account_KeyRotationEvent'_old_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent(x, $new_authentication_key#$1_account_KeyRotationEvent(s))
}
function {:inline} $Update'$1_account_KeyRotationEvent'_new_authentication_key(s: $1_account_KeyRotationEvent, x: Vec (int)): $1_account_KeyRotationEvent {
    $1_account_KeyRotationEvent($old_authentication_key#$1_account_KeyRotationEvent(s), x)
}
function $IsValid'$1_account_KeyRotationEvent'(s: $1_account_KeyRotationEvent): bool {
    $IsValid'vec'u8''($old_authentication_key#$1_account_KeyRotationEvent(s))
      && $IsValid'vec'u8''($new_authentication_key#$1_account_KeyRotationEvent(s))
}
function {:inline} $IsEqual'$1_account_KeyRotationEvent'(s1: $1_account_KeyRotationEvent, s2: $1_account_KeyRotationEvent): bool {
    $IsEqual'vec'u8''($old_authentication_key#$1_account_KeyRotationEvent(s1), $old_authentication_key#$1_account_KeyRotationEvent(s2))
    && $IsEqual'vec'u8''($new_authentication_key#$1_account_KeyRotationEvent(s1), $new_authentication_key#$1_account_KeyRotationEvent(s2))}

// struct account::RotationCapability at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:47:5+62
type {:datatype} $1_account_RotationCapability;
function {:constructor} $1_account_RotationCapability($account: int): $1_account_RotationCapability;
function {:inline} $Update'$1_account_RotationCapability'_account(s: $1_account_RotationCapability, x: int): $1_account_RotationCapability {
    $1_account_RotationCapability(x)
}
function $IsValid'$1_account_RotationCapability'(s: $1_account_RotationCapability): bool {
    $IsValid'address'($account#$1_account_RotationCapability(s))
}
function {:inline} $IsEqual'$1_account_RotationCapability'(s1: $1_account_RotationCapability, s2: $1_account_RotationCapability): bool {
    s1 == s2
}

// struct account::SignerCapability at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:49:5+60
type {:datatype} $1_account_SignerCapability;
function {:constructor} $1_account_SignerCapability($account: int): $1_account_SignerCapability;
function {:inline} $Update'$1_account_SignerCapability'_account(s: $1_account_SignerCapability, x: int): $1_account_SignerCapability {
    $1_account_SignerCapability(x)
}
function $IsValid'$1_account_SignerCapability'(s: $1_account_SignerCapability): bool {
    $IsValid'address'($account#$1_account_SignerCapability(s))
}
function {:inline} $IsEqual'$1_account_SignerCapability'(s1: $1_account_SignerCapability, s2: $1_account_SignerCapability): bool {
    s1 == s2
}

// fun account::new_event_handle<coin::DepositEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_coin_DepositEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_DepositEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_DepositEvent'': $1_event_EventHandle'$1_coin_DepositEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21158,21204)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_DepositEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::new_event_handle<coin::WithdrawEvent> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+157
procedure {:inline 1} $1_account_new_event_handle'$1_coin_WithdrawEvent'(_$t0: $signer) returns ($ret0: $1_event_EventHandle'$1_coin_WithdrawEvent')
{
    // declare local variables
    var $t1: int;
    var $t2: $1_account_Account;
    var $t3: int;
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: $1_guid_GUID;
    var $t7: int;
    var $t8: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t0: $signer;
    var $temp_0'$1_event_EventHandle'$1_coin_WithdrawEvent'': $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t1 == $1_signer_$address_of($t0));

    // assume Identical($t2, global<account::Account>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t2 == $ResourceValue($1_account_Account_$memory, $t1));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:669:5+1
    assume {:print "$at(72,38254,38255)"} true;
    assume {:print "$track_local(18,18,0):", $t0} $t0 == $t0;

    // assume Identical($t3, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21158,21204)"} true;
    assume ($t3 == $1_signer_$address_of($t0));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // $t6 := account::create_guid($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:33+20
    assume {:print "$at(72,38384,38404)"} true;
    call $t6 := $1_account_create_guid($t0);
    if ($abort_flag) {
        assume {:print "$at(72,38384,38404)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := event::new_event_handle<#0>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    call $t8 := $1_event_new_event_handle'$1_coin_WithdrawEvent'($t6);
    if ($abort_flag) {
        assume {:print "$at(72,38360,38405)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(18,18):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:670:9+45
    assume {:print "$track_return(18,18,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
L1:

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:671:5+1
    assume {:print "$at(72,38410,38411)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun account::create_account [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:178:5+589
procedure {:inline 1} $1_account_create_account(_$t0: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: Vec (int);
    var $t4: bool;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: Vec (int);
    var $t18: $signer;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, bcs::$to_bytes<address>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t3 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[new_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:178:5+1
    assume {:print "$at(72,9572,9573)"} true;
    assume {:print "$track_local(18,1,0):", $t0} $t0 == $t0;

    // $t4 := exists<account::Account>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:18+6
    assume {:print "$at(72,9726,9732)"} true;
    $t4 := $ResourceExists($1_account_Account_$memory, $t0);

    // $t5 := !($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:17+1
    call $t5 := $Not($t4);

    // if ($t5) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:9+86
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:9+86
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:9+86
    assume {:print "$at(72,9717,9803)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:70+23
L0:

    // $t6 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:70+23
    assume {:print "$at(72,9778,9801)"} true;
    $t6 := 1;
    assume $IsValid'u64'($t6);

    // $t7 := error::already_exists($t6) on_abort goto L13 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:48+46
    call $t7 := $1_error_already_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(72,9756,9802)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,1):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:9+86
    assume {:print "$at(72,9717,9803)"} true;
    assume {:print "$track_abort(18,1):", $t7} $t7 == $t7;

    // $t8 := move($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:9+86
    $t8 := $t7;

    // goto L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:180:9+86
    goto L13;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+11
    assume {:print "$at(72,9941,9952)"} true;
L2:

    // $t9 := 0x0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:28+12
    assume {:print "$at(72,9956,9968)"} true;
    $t9 := 0;
    assume $IsValid'address'($t9);

    // $t10 := !=($t0, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:25+2
    $t10 := !$IsEqual'address'($t0, $t9);

    // if ($t10) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+62
    if ($t10) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:44+11
L4:

    // $t11 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:59+16
    assume {:print "$at(72,9987,10003)"} true;
    $t11 := 1;
    assume $IsValid'address'($t11);

    // $t1 := !=($t0, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:56+2
    $t1 := !$IsEqual'address'($t0, $t11);

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+62
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+62
L3:

    // $t12 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+62
    assume {:print "$at(72,9941,10003)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // $t1 := $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+62
    $t1 := $t12;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+62
L5:

    // if ($t1) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+93
    assume {:print "$at(72,9941,10034)"} true;
    if ($t1) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:79+11
L7:

    // $t13 := 0x3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:94+12
    assume {:print "$at(72,10022,10034)"} true;
    $t13 := 3;
    assume $IsValid'address'($t13);

    // $t2 := !=($t0, $t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:91+2
    $t2 := !$IsEqual'address'($t0, $t13);

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+93
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+93
L6:

    // $t14 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+93
    assume {:print "$at(72,9941,10034)"} true;
    $t14 := false;
    assume $IsValid'bool'($t14);

    // $t2 := $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+93
    $t2 := $t14;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:184:13+93
L8:

    // if ($t2) goto L10 else goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:183:9+187
    assume {:print "$at(72,9920,10107)"} true;
    if ($t2) { goto L10; } else { goto L9; }

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:183:9+187
L10:

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:183:9+187
    assume {:print "$at(72,9920,10107)"} true;
    goto L11;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:185:37+24
    assume {:print "$at(72,10072,10096)"} true;
L9:

    // $t15 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:185:37+24
    assume {:print "$at(72,10072,10096)"} true;
    $t15 := 5;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L13 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:185:13+49
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(72,10048,10097)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,1):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:183:9+187
    assume {:print "$at(72,9920,10107)"} true;
    assume {:print "$track_abort(18,1):", $t16} $t16 == $t16;

    // $t8 := move($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:183:9+187
    $t8 := $t16;

    // goto L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:183:9+187
    goto L13;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:188:34+11
    assume {:print "$at(72,10143,10154)"} true;
L11:

    // assume Identical($t17, bcs::$to_bytes<address>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t17 == $1_bcs_$to_bytes'address'($t0));

    // $t18 := account::create_account_unchecked($t0) on_abort goto L13 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:188:9+37
    assume {:print "$at(72,10118,10155)"} true;
    call $t18 := $1_account_create_account_unchecked($t0);
    if ($abort_flag) {
        assume {:print "$at(72,10118,10155)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,1):", $t8} $t8 == $t8;
        goto L13;
    }

    // trace_return[0]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:188:9+37
    assume {:print "$track_return(18,1,0):", $t18} $t18 == $t18;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:189:5+1
    assume {:print "$at(72,10160,10161)"} true;
L12:

    // return $t18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:189:5+1
    assume {:print "$at(72,10160,10161)"} true;
    $ret0 := $t18;
    return;

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:189:5+1
L13:

    // abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:189:5+1
    assume {:print "$at(72,10160,10161)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun account::create_account_unchecked [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:191:5+1182
procedure {:inline 1} $1_account_create_account_unchecked(_$t0: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t3: int;
    var $t4: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t5: $signer;
    var $t6: Vec (int);
    var $t7: $signer;
    var $t8: Vec (int);
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: $Mutation (int);
    var $t17: $1_guid_GUID;
    var $t18: $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $t19: $Mutation (int);
    var $t20: $1_guid_GUID;
    var $t21: $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $t22: int;
    var $t23: int;
    var $t24: $1_option_Option'address';
    var $t25: $1_account_CapabilityOffer'$1_account_RotationCapability';
    var $t26: $1_option_Option'address';
    var $t27: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t28: $1_account_Account;
    var $t0: int;
    var $temp_0'$1_event_EventHandle'$1_account_CoinRegisterEvent'': $1_event_EventHandle'$1_account_CoinRegisterEvent';
    var $temp_0'$1_event_EventHandle'$1_account_KeyRotationEvent'': $1_event_EventHandle'$1_account_KeyRotationEvent';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, bcs::$to_bytes<address>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t6 == $1_bcs_$to_bytes'address'($t0));

    // trace_local[new_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:191:5+1
    assume {:print "$at(72,10167,10168)"} true;
    assume {:print "$track_local(18,2,0):", $t0} $t0 == $t0;

    // $t7 := opaque begin: create_signer::create_signer($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:192:27+26
    assume {:print "$at(72,10254,10280)"} true;

    // assume WellFormed($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:192:27+26
    assume $IsValid'signer'($t7) && $1_signer_is_txn_signer($t7) && $1_signer_is_txn_signer_addr($addr#$signer($t7));

    // assume Eq<address>(signer::$address_of($t7), $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:192:27+26
    assume $IsEqual'address'($1_signer_$address_of($t7), $t0);

    // $t7 := opaque end: create_signer::create_signer($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:192:27+26

    // trace_local[new_account]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:192:13+11
    assume {:print "$track_local(18,2,5):", $t7} $t7 == $t7;

    // $t8 := bcs::to_bytes<address>($t0) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:193:34+27
    assume {:print "$at(72,10315,10342)"} true;
    call $t8 := $1_bcs_to_bytes'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(72,10315,10342)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[authentication_key]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:193:13+18
    assume {:print "$track_local(18,2,1):", $t8} $t8 == $t8;

    // $t10 := vector::length<u8>($t8) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:195:13+35
    assume {:print "$at(72,10373,10408)"} true;
    call $t10 := $1_vector_length'u8'($t8);
    if ($abort_flag) {
        assume {:print "$at(72,10373,10408)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // $t11 := 32 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:195:52+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:195:49+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:194:9+140
    assume {:print "$at(72,10352,10492)"} true;
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:194:9+140
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:194:9+140
    assume {:print "$at(72,10352,10492)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:196:37+29
    assume {:print "$at(72,10452,10481)"} true;
L0:

    // $t13 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:196:37+29
    assume {:print "$at(72,10452,10481)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:196:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(72,10428,10482)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:194:9+140
    assume {:print "$at(72,10352,10492)"} true;
    assume {:print "$track_abort(18,2):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:194:9+140
    $t9 := $t14;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:194:9+140
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:199:33+1
    assume {:print "$at(72,10527,10528)"} true;
L2:

    // $t15 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:199:33+1
    assume {:print "$at(72,10527,10528)"} true;
    $t15 := 0;
    assume $IsValid'u64'($t15);

    // $t3 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:199:13+17
    $t3 := $t15;

    // trace_local[guid_creation_num]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:199:13+17
    assume {:print "$track_local(18,2,3):", $t3} $t3 == $t3;

    // $t16 := borrow_local($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:201:55+22
    assume {:print "$at(72,10585,10607)"} true;
    $t16 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t17 := guid::create($t0, $t16) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:201:29+49
    call $t17,$t16 := $1_guid_create($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(72,10559,10608)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:201:29+49
    $t3 := $Dereference($t16);

    // trace_local[guid_creation_num]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:201:29+49
    assume {:print "$track_local(18,2,3):", $t3} $t3 == $t3;

    // $t18 := event::new_event_handle<account::CoinRegisterEvent>($t17) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:202:36+57
    assume {:print "$at(72,10645,10702)"} true;
    call $t18 := $1_event_new_event_handle'$1_account_CoinRegisterEvent'($t17);
    if ($abort_flag) {
        assume {:print "$at(72,10645,10702)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[coin_register_events]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:202:13+20
    assume {:print "$track_local(18,2,2):", $t18} $t18 == $t18;

    // $t19 := borrow_local($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:204:59+22
    assume {:print "$at(72,10763,10785)"} true;
    $t19 := $Mutation($Local(3), EmptyVec(), $t3);

    // $t20 := guid::create($t0, $t19) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:204:33+49
    call $t20,$t19 := $1_guid_create($t0, $t19);
    if ($abort_flag) {
        assume {:print "$at(72,10737,10786)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // write_back[LocalRoot($t3)@]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:204:33+49
    $t3 := $Dereference($t19);

    // trace_local[guid_creation_num]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:204:33+49
    assume {:print "$track_local(18,2,3):", $t3} $t3 == $t3;

    // $t21 := event::new_event_handle<account::KeyRotationEvent>($t20) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:205:35+60
    assume {:print "$at(72,10822,10882)"} true;
    call $t21 := $1_event_new_event_handle'$1_account_KeyRotationEvent'($t20);
    if ($abort_flag) {
        assume {:print "$at(72,10822,10882)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_local[key_rotation_events]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:205:13+19
    assume {:print "$track_local(18,2,4):", $t21} $t21 == $t21;

    // $t22 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:211:34+1
    assume {:print "$at(72,11019,11020)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := move($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:212:17+17
    assume {:print "$at(72,11038,11055)"} true;
    $t23 := $t3;

    // $t24 := opaque begin: option::none<address>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:215:67+14
    assume {:print "$at(72,11198,11212)"} true;

    // assume And(WellFormed($t24), Le(Len<address>(select option::Option.vec($t24)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:215:67+14
    assume ($IsValid'$1_option_Option'address''($t24) && (LenVec($vec#$1_option_Option'address'($t24)) <= 1));

    // assume Eq<option::Option<address>>($t24, option::spec_none<address>()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:215:67+14
    assume $IsEqual'$1_option_Option'address''($t24, $1_option_spec_none'address'());

    // $t24 := opaque end: option::none<address>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:215:67+14

    // $t25 := pack account::CapabilityOffer<account::RotationCapability>($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:215:44+39
    $t25 := $1_account_CapabilityOffer'$1_account_RotationCapability'($t24);

    // $t26 := opaque begin: option::none<address>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:216:65+14
    assume {:print "$at(72,11280,11294)"} true;

    // assume And(WellFormed($t26), Le(Len<address>(select option::Option.vec($t26)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:216:65+14
    assume ($IsValid'$1_option_Option'address''($t26) && (LenVec($vec#$1_option_Option'address'($t26)) <= 1));

    // assume Eq<option::Option<address>>($t26, option::spec_none<address>()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:216:65+14
    assume $IsEqual'$1_option_Option'address''($t26, $1_option_spec_none'address'());

    // $t26 := opaque end: option::none<address>() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:216:65+14

    // $t27 := pack account::CapabilityOffer<account::SignerCapability>($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:216:42+39
    $t27 := $1_account_CapabilityOffer'$1_account_SignerCapability'($t26);

    // $t28 := pack account::Account($t8, $t22, $t23, $t18, $t21, $t25, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:209:13+371
    assume {:print "$at(72,10940,11311)"} true;
    $t28 := $1_account_Account($t8, $t22, $t23, $t18, $t21, $t25, $t27);

    // move_to<account::Account>($t28, $t7) on_abort goto L4 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:207:9+7
    assume {:print "$at(72,10893,10900)"} true;
    if ($ResourceExists($1_account_Account_$memory, $addr#$signer($t7))) {
        call $ExecFailureAbort();
    } else {
        $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $addr#$signer($t7), $t28);
    }
    if ($abort_flag) {
        assume {:print "$at(72,10893,10900)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(18,2):", $t9} $t9 == $t9;
        goto L4;
    }

    // trace_return[0]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:220:9+11
    assume {:print "$at(72,11332,11343)"} true;
    assume {:print "$track_return(18,2,0):", $t7} $t7 == $t7;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:221:5+1
    assume {:print "$at(72,11348,11349)"} true;
L3:

    // return $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:221:5+1
    assume {:print "$at(72,11348,11349)"} true;
    $ret0 := $t7;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:221:5+1
L4:

    // abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:221:5+1
    assume {:print "$at(72,11348,11349)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun account::create_guid [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:654:5+436
procedure {:inline 1} $1_account_create_guid(_$t0: $signer) returns ($ret0: $1_guid_GUID)
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $1_guid_GUID;
    var $t4: int;
    var $t5: int;
    var $t6: $1_account_Account;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_account_Account);
    var $t10: $Mutation (int);
    var $t11: $1_guid_GUID;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t0: $signer;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_guid_GUID': $1_guid_GUID;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:430:9+46
    assume {:print "$at(73,21158,21204)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<account::Account>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t6 == $ResourceValue($1_account_Account_$memory, $t5));

    // trace_local[account_signer]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:654:5+1
    assume {:print "$at(72,37618,37619)"} true;
    assume {:print "$track_local(18,5,0):", $t0} $t0 == $t0;

    // $t7 := signer::address_of($t0) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:655:20+34
    assume {:print "$at(72,37716,37750)"} true;
    call $t7 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(72,37716,37750)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[addr]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:655:13+4
    assume {:print "$track_local(18,5,2):", $t7} $t7 == $t7;

    // $t9 := borrow_global<account::Account>($t7) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:656:23+17
    assume {:print "$at(72,37774,37791)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t7)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t7), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t7));
    }
    if ($abort_flag) {
        assume {:print "$at(72,37774,37791)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_local[account]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:656:13+7
    $temp_0'$1_account_Account' := $Dereference($t9);
    assume {:print "$track_local(18,5,1):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t10 := borrow_field<account::Account>.guid_creation_num($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:39+30
    assume {:print "$at(72,37846,37876)"} true;
    $t10 := $ChildMutation($t9, 2, $guid_creation_num#$1_account_Account($Dereference($t9)));

    // $t11 := guid::create($t7, $t10) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:20+50
    call $t11,$t10 := $1_guid_create($t7, $t10);
    if ($abort_flag) {
        assume {:print "$at(72,37827,37877)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // write_back[Reference($t9).guid_creation_num (u64)]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:20+50
    $t9 := $UpdateMutation($t9, $Update'$1_account_Account'_guid_creation_num($Dereference($t9), $Dereference($t10)));

    // trace_local[guid]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:657:13+4
    assume {:print "$track_local(18,5,3):", $t11} $t11 == $t11;

    // $t12 := get_field<account::Account>.guid_creation_num($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:13+25
    assume {:print "$at(72,37908,37933)"} true;
    $t12 := $guid_creation_num#$1_account_Account($Dereference($t9));

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:13+25

    // write_back[account::Account@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:13+25
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // $t13 := 1125899906842624 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:41+21
    $t13 := 1125899906842624;
    assume $IsValid'u64'($t13);

    // $t14 := <($t12, $t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:659:39+1
    call $t14 := $Lt($t12, $t13);

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    assume {:print "$at(72,37887,38034)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    assume {:print "$at(72,37887,38034)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:660:33+31
    assume {:print "$at(72,37991,38022)"} true;
L0:

    // $t15 := 20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:660:33+31
    assume {:print "$at(72,37991,38022)"} true;
    $t15 := 20;
    assume $IsValid'u64'($t15);

    // $t16 := error::out_of_range($t15) on_abort goto L4 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:660:13+52
    call $t16 := $1_error_out_of_range($t15);
    if ($abort_flag) {
        assume {:print "$at(72,37971,38023)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(18,5):", $t8} $t8 == $t8;
        goto L4;
    }

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    assume {:print "$at(72,37887,38034)"} true;
    assume {:print "$track_abort(18,5):", $t16} $t16 == $t16;

    // $t8 := move($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    $t8 := $t16;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:658:9+147
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:662:9+4
    assume {:print "$at(72,38044,38048)"} true;
L2:

    // trace_return[0]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:662:9+4
    assume {:print "$at(72,38044,38048)"} true;
    assume {:print "$track_return(18,5,0):", $t11} $t11 == $t11;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
    assume {:print "$at(72,38053,38054)"} true;
L3:

    // return $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
    assume {:print "$at(72,38053,38054)"} true;
    $ret0 := $t11;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
L4:

    // abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:663:5+1
    assume {:print "$at(72,38053,38054)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun account::create_resource_account [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:602:5+1378
procedure {:inline 1} $1_account_create_resource_account(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: $signer;
    var $t4: $1_account_Account;
    var $t5: $Mutation ($1_account_Account);
    var $t6: $signer;
    var $t7: int;
    var $t8: $1_account_SignerCapability;
    var $t9: int;
    var $t10: int;
    var $t11: $1_account_Account;
    var $t12: Vec (int);
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: $1_account_Account;
    var $t18: $1_account_CapabilityOffer'$1_account_SignerCapability';
    var $t19: $1_option_Option'address';
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: Vec (int);
    var $t29: Vec (int);
    var $t30: int;
    var $t31: $Mutation ($1_account_Account);
    var $t32: $1_option_Option'address';
    var $t33: $Mutation ($1_account_CapabilityOffer'$1_account_SignerCapability');
    var $t34: $Mutation ($1_option_Option'address');
    var $t35: $1_account_SignerCapability;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t9, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:396:9+45
    assume {:print "$at(73,19766,19811)"} true;
    assume ($t9 == $1_signer_$address_of($t0));

    // assume Identical($t10, account::spec_create_resource_address($t9, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:397:9+68
    assume {:print "$at(73,19820,19888)"} true;
    assume ($t10 == $1_account_spec_create_resource_address($t9, $t1));

    // assume Identical($t11, global<account::Account>($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:464:9+45
    assume {:print "$at(73,22404,22449)"} true;
    assume ($t11 == $ResourceValue($1_account_Account_$memory, $t10));

    // assume Identical($t12, bcs::$to_bytes<address>($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t12 == $1_bcs_$to_bytes'address'($t10));

    // trace_local[source]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:602:5+1
    assume {:print "$at(72,35313,35314)"} true;
    assume {:print "$track_local(18,6,0):", $t0} $t0 == $t0;

    // trace_local[seed]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:602:5+1
    assume {:print "$track_local(18,6,1):", $t1} $t1 == $t1;

    // $t13 := signer::address_of($t0) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:603:54+26
    assume {:print "$at(72,35483,35509)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(72,35483,35509)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t15 := opaque begin: account::create_resource_address($t13, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:603:29+58

    // assume WellFormed($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:603:29+58
    assume $IsValid'address'($t15);

    // assume Eq<address>($t15, account::spec_create_resource_address($t13, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:603:29+58
    assume $IsEqual'address'($t15, $1_account_spec_create_resource_address($t13, $t1));

    // $t15 := opaque end: account::create_resource_address($t13, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:603:29+58

    // trace_local[resource_addr]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:603:13+13
    assume {:print "$track_local(18,6,7):", $t15} $t15 == $t15;

    // $t16 := account::exists_at($t15) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:604:28+24
    assume {:print "$at(72,35545,35569)"} true;
    call $t16 := $1_account_exists_at($t15);
    if ($abort_flag) {
        assume {:print "$at(72,35545,35569)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // if ($t16) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:604:24+532
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:605:50+13
    assume {:print "$at(72,35622,35635)"} true;
L1:

    // $t17 := get_global<account::Account>($t15) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:605:27+13
    assume {:print "$at(72,35599,35612)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $ResourceValue($1_account_Account_$memory, $t15);
    }
    if ($abort_flag) {
        assume {:print "$at(72,35599,35612)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:605:17+7
    assume {:print "$track_local(18,6,4):", $t17} $t17 == $t17;

    // $t18 := get_field<account::Account>.signer_capability_offer($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:607:34+31
    assume {:print "$at(72,35692,35723)"} true;
    $t18 := $signer_capability_offer#$1_account_Account($t17);

    // $t19 := get_field<account::CapabilityOffer<account::SignerCapability>>.for($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:607:33+36
    $t19 := $for#$1_account_CapabilityOffer'$1_account_SignerCapability'($t18);

    // $t20 := opaque begin: option::is_none<address>($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:607:17+53

    // assume WellFormed($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:607:17+53
    assume $IsValid'bool'($t20);

    // assume Eq<bool>($t20, option::spec_is_none<address>($t19)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:607:17+53
    assume $IsEqual'bool'($t20, $1_option_spec_is_none'address'($t19));

    // $t20 := opaque end: option::is_none<address>($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:607:17+53

    // if ($t20) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
    assume {:print "$at(72,35650,35809)"} true;
    if ($t20) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
L3:

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
    assume {:print "$at(72,35650,35809)"} true;
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
L2:

    // $t21 := 15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:608:39+25
    assume {:print "$at(72,35768,35793)"} true;
    $t21 := 15;
    assume $IsValid'u64'($t21);

    // $t22 := error::already_exists($t21) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:608:17+48
    call $t22 := $1_error_already_exists($t21);
    if ($abort_flag) {
        assume {:print "$at(72,35746,35794)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
    assume {:print "$at(72,35650,35809)"} true;
    assume {:print "$track_abort(18,6):", $t22} $t22 == $t22;

    // $t14 := move($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
    $t14 := $t22;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:606:13+159
    goto L10;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:611:17+7
    assume {:print "$at(72,35848,35855)"} true;
L4:

    // $t23 := get_field<account::Account>.sequence_number($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:611:17+23
    assume {:print "$at(72,35848,35871)"} true;
    $t23 := $sequence_number#$1_account_Account($t17);

    // $t24 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:611:44+1
    $t24 := 0;
    assume $IsValid'u64'($t24);

    // $t25 := ==($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:611:41+2
    $t25 := $IsEqual'u64'($t23, $t24);

    // if ($t25) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:610:13+129
    assume {:print "$at(72,35823,35952)"} true;
    if ($t25) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:610:13+129
L6:

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:610:13+129
    assume {:print "$at(72,35823,35952)"} true;
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:612:38+21
    assume {:print "$at(72,35915,35936)"} true;
L5:

    // $t26 := 16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:612:38+21
    assume {:print "$at(72,35915,35936)"} true;
    $t26 := 16;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_state($t26) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:612:17+43
    call $t27 := $1_error_invalid_state($t26);
    if ($abort_flag) {
        assume {:print "$at(72,35894,35937)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_abort($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:610:13+129
    assume {:print "$at(72,35823,35952)"} true;
    assume {:print "$track_abort(18,6):", $t27} $t27 == $t27;

    // $t14 := move($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:610:13+129
    $t14 := $t27;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:610:13+129
    goto L10;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:614:27+13
    assume {:print "$at(72,35980,35993)"} true;
L7:

    // $t3 := opaque begin: create_signer::create_signer($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:614:13+28
    assume {:print "$at(72,35966,35994)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:614:13+28
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($addr#$signer($t3));

    // assume Eq<address>(signer::$address_of($t3), $t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:614:13+28
    assume $IsEqual'address'($1_signer_$address_of($t3), $t15);

    // $t3 := opaque end: create_signer::create_signer($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:614:13+28

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:604:24+532
    assume {:print "$at(72,35541,36073)"} true;
    goto L8;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:616:38+13
    assume {:print "$at(72,36049,36062)"} true;
L0:

    // assume Identical($t28, bcs::$to_bytes<address>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t28 == $1_bcs_$to_bytes'address'($t15));

    // $t3 := account::create_account_unchecked($t15) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:616:13+39
    assume {:print "$at(72,36024,36063)"} true;
    call $t3 := $1_account_create_account_unchecked($t15);
    if ($abort_flag) {
        assume {:print "$at(72,36024,36063)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:604:24+532
    assume {:print "$at(72,35541,36073)"} true;
L8:

    // trace_local[resource]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:604:13+8
    assume {:print "$at(72,35530,35538)"} true;
    assume {:print "$track_local(18,6,6):", $t3} $t3 == $t3;

    // $t29 := [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:622:55+13
    assume {:print "$at(72,36428,36441)"} true;
    $t29 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0));
    assume $IsValid'vec'u8''($t29);

    // assume Identical($t30, signer::$address_of($t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:68:9+39
    assume {:print "$at(73,2861,2900)"} true;
    assume ($t30 == $1_signer_$address_of($t3));

    // account::rotate_authentication_key_internal($t3, $t29) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:622:9+60
    assume {:print "$at(72,36382,36442)"} true;
    call $1_account_rotate_authentication_key_internal($t3, $t29);
    if ($abort_flag) {
        assume {:print "$at(72,36382,36442)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // $t31 := borrow_global<account::Account>($t15) on_abort goto L10 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:624:23+17
    assume {:print "$at(72,36467,36484)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t31 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t15));
    }
    if ($abort_flag) {
        assume {:print "$at(72,36467,36484)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(18,6):", $t14} $t14 == $t14;
        goto L10;
    }

    // trace_local[account#3]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:624:13+7
    $temp_0'$1_account_Account' := $Dereference($t31);
    assume {:print "$track_local(18,6,5):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t32 := opaque begin: option::some<address>($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:47+27
    assume {:print "$at(72,36556,36583)"} true;

    // assume And(WellFormed($t32), Le(Len<address>(select option::Option.vec($t32)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:47+27
    assume ($IsValid'$1_option_Option'address''($t32) && (LenVec($vec#$1_option_Option'address'($t32)) <= 1));

    // assume Eq<option::Option<address>>($t32, option::spec_some<address>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:47+27
    assume $IsEqual'$1_option_Option'address''($t32, $1_option_spec_some'address'($t15));

    // $t32 := opaque end: option::some<address>($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:47+27

    // $t33 := borrow_field<account::Account>.signer_capability_offer($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+31
    $t33 := $ChildMutation($t31, 6, $signer_capability_offer#$1_account_Account($Dereference($t31)));

    // $t34 := borrow_field<account::CapabilityOffer<account::SignerCapability>>.for($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+35
    $t34 := $ChildMutation($t33, 0, $for#$1_account_CapabilityOffer'$1_account_SignerCapability'($Dereference($t33)));

    // write_ref($t34, $t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+65
    $t34 := $UpdateMutation($t34, $t32);

    // write_back[Reference($t33).for (option::Option<address>)]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+65
    $t33 := $UpdateMutation($t33, $Update'$1_account_CapabilityOffer'$1_account_SignerCapability''_for($Dereference($t33), $Dereference($t34)));

    // write_back[Reference($t31).signer_capability_offer (account::CapabilityOffer<account::SignerCapability>)]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+65
    $t31 := $UpdateMutation($t31, $Update'$1_account_Account'_signer_capability_offer($Dereference($t31), $Dereference($t33)));

    // pack_ref_deep($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+65

    // write_back[account::Account@]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:625:9+65
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t31),
        $Dereference($t31));

    // $t35 := pack account::SignerCapability($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:626:26+43
    assume {:print "$at(72,36610,36653)"} true;
    $t35 := $1_account_SignerCapability($t15);

    // trace_local[signer_cap]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:626:13+10
    assume {:print "$track_local(18,6,8):", $t35} $t35 == $t35;

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:627:9+22
    assume {:print "$at(72,36663,36685)"} true;
    assume {:print "$track_return(18,6,0):", $t3} $t3 == $t3;

    // trace_return[1]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:627:9+22
    assume {:print "$track_return(18,6,1):", $t35} $t35 == $t35;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:628:5+1
    assume {:print "$at(72,36690,36691)"} true;
L9:

    // return ($t3, $t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:628:5+1
    assume {:print "$at(72,36690,36691)"} true;
    $ret0 := $t3;
    $ret1 := $t35;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:628:5+1
L10:

    // abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:628:5+1
    assume {:print "$at(72,36690,36691)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun account::create_signer_with_capability [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:707:5+156
procedure {:inline 1} $1_account_create_signer_with_capability(_$t0: $1_account_SignerCapability) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: $signer;
    var $t0: $1_account_SignerCapability;
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select account::SignerCapability.account($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:458:9+30
    assume {:print "$at(73,22226,22256)"} true;
    assume ($t1 == $account#$1_account_SignerCapability($t0));

    // trace_local[capability]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:707:5+1
    assume {:print "$at(72,39859,39860)"} true;
    assume {:print "$track_local(18,8,0):", $t0} $t0 == $t0;

    // $t2 := get_field<account::SignerCapability>.account($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:708:20+19
    assume {:print "$at(72,39960,39979)"} true;
    $t2 := $account#$1_account_SignerCapability($t0);

    // $t3 := opaque begin: create_signer::create_signer($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:709:9+20
    assume {:print "$at(72,39989,40009)"} true;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:709:9+20
    assume $IsValid'signer'($t3) && $1_signer_is_txn_signer($t3) && $1_signer_is_txn_signer_addr($addr#$signer($t3));

    // assume Eq<address>(signer::$address_of($t3), $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:709:9+20
    assume $IsEqual'address'($1_signer_$address_of($t3), $t2);

    // $t3 := opaque end: create_signer::create_signer($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:709:9+20

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:709:9+20
    assume {:print "$track_return(18,8,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:710:5+1
    assume {:print "$at(72,40014,40015)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:710:5+1
    assume {:print "$at(72,40014,40015)"} true;
    $ret0 := $t3;
    return;

}

// fun account::exists_at [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:224:5+79
procedure {:inline 1} $1_account_exists_at(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:224:5+1
    assume {:print "$at(72,11367,11368)"} true;
    assume {:print "$track_local(18,9,0):", $t0} $t0 == $t0;

    // $t1 := exists<account::Account>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:225:9+6
    assume {:print "$at(72,11419,11425)"} true;
    $t1 := $ResourceExists($1_account_Account_$memory, $t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:225:9+21
    assume {:print "$track_return(18,9,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:226:5+1
    assume {:print "$at(72,11445,11446)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:226:5+1
    assume {:print "$at(72,11445,11446)"} true;
    $ret0 := $t1;
    return;

}

// fun account::register_coin<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:677:5+364
procedure {:inline 1} $1_account_register_coin'$1_aptos_coin_AptosCoin'(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $Mutation ($1_account_Account);
    var $t2: int;
    var $t3: $Mutation ($1_event_EventHandle'$1_account_CoinRegisterEvent');
    var $t4: $1_type_info_TypeInfo;
    var $t5: $1_account_CoinRegisterEvent;
    var $t0: int;
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account_addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:677:5+1
    assume {:print "$at(72,38611,38612)"} true;
    assume {:print "$track_local(18,21,0):", $t0} $t0 == $t0;

    // $t1 := borrow_global<account::Account>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:678:23+17
    assume {:print "$at(72,38718,38735)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(72,38718,38735)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(18,21):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := borrow_field<account::Account>.coin_register_events($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:680:13+33
    assume {:print "$at(72,38818,38851)"} true;
    $t3 := $ChildMutation($t1, 3, $coin_register_events#$1_account_Account($Dereference($t1)));

    // $t4 := type_info::type_of<#0>() on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:682:28+30
    assume {:print "$at(72,38912,38942)"} true;
    if (!true) {
        call $ExecFailureAbort();
    }
    else {
        $t4 := $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9));
    }
    if ($abort_flag) {
        assume {:print "$at(72,38912,38942)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(18,21):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t5 := pack account::CoinRegisterEvent($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:681:13+92
    assume {:print "$at(72,38865,38957)"} true;
    $t5 := $1_account_CoinRegisterEvent($t4);

    // opaque begin: event::emit_event<account::CoinRegisterEvent>($t3, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:679:9+200
    assume {:print "$at(72,38768,38968)"} true;

    // opaque end: event::emit_event<account::CoinRegisterEvent>($t3, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:679:9+200

    // write_back[Reference($t1).coin_register_events (event::EventHandle<account::CoinRegisterEvent>)]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:679:9+200
    $t1 := $UpdateMutation($t1, $Update'$1_account_Account'_coin_register_events($Dereference($t1), $Dereference($t3)));

    // pack_ref_deep($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:679:9+200

    // write_back[account::Account@]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:679:9+200
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t1),
        $Dereference($t1));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:685:5+1
    assume {:print "$at(72,38974,38975)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:685:5+1
    assume {:print "$at(72,38974,38975)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:685:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:685:5+1
    assume {:print "$at(72,38974,38975)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun account::rotate_authentication_key_internal [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:256:5+516
procedure {:inline 1} $1_account_rotate_authentication_key_internal(_$t0: $signer, _$t1: Vec (int)) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_account_Account);
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_account_Account);
    var $t16: $Mutation (Vec (int));
    var $t0: $signer;
    var $t1: Vec (int);
    var $1_account_Account_$modifies: [int]bool;
    var $temp_0'$1_account_Account': $1_account_Account;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:68:9+39
    assume {:print "$at(73,2861,2900)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:256:5+1
    assume {:print "$at(72,12425,12426)"} true;
    assume {:print "$track_local(18,27,0):", $t0} $t0 == $t0;

    // trace_local[new_auth_key]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:256:5+1
    assume {:print "$track_local(18,27,1):", $t1} $t1 == $t1;

    // $t5 := signer::address_of($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:257:20+27
    assume {:print "$at(72,12561,12588)"} true;
    call $t5 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(72,12561,12588)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,27):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[addr]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:257:13+4
    assume {:print "$track_local(18,27,3):", $t5} $t5 == $t5;

    // $t7 := account::exists_at($t5) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:17+15
    assume {:print "$at(72,12606,12621)"} true;
    call $t7 := $1_account_exists_at($t5);
    if ($abort_flag) {
        assume {:print "$at(72,12606,12621)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,27):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:9+67
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:9+67
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:9+67
    assume {:print "$at(72,12598,12665)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:51+23
L0:

    // $t8 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:51+23
    assume {:print "$at(72,12640,12663)"} true;
    $t8 := 2;
    assume $IsValid'u64'($t8);

    // $t9 := error::not_found($t8) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:34+41
    call $t9 := $1_error_not_found($t8);
    if ($abort_flag) {
        assume {:print "$at(72,12623,12664)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,27):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:9+67
    assume {:print "$at(72,12598,12665)"} true;
    assume {:print "$track_abort(18,27):", $t9} $t9 == $t9;

    // $t6 := move($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:9+67
    $t6 := $t9;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:258:9+67
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:260:28+13
    assume {:print "$at(72,12711,12724)"} true;
L2:

    // $t10 := vector::length<u8>($t1) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:260:13+29
    assume {:print "$at(72,12696,12725)"} true;
    call $t10 := $1_vector_length'u8'($t1);
    if ($abort_flag) {
        assume {:print "$at(72,12696,12725)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,27):", $t6} $t6 == $t6;
        goto L7;
    }

    // $t11 := 32 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:260:46+2
    $t11 := 32;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:260:43+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:259:9+134
    assume {:print "$at(72,12675,12809)"} true;
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:259:9+134
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:259:9+134
    assume {:print "$at(72,12675,12809)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:261:37+29
    assume {:print "$at(72,12769,12798)"} true;
L3:

    // $t13 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:261:37+29
    assume {:print "$at(72,12769,12798)"} true;
    $t13 := 4;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:261:13+54
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(72,12745,12799)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,27):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:259:9+134
    assume {:print "$at(72,12675,12809)"} true;
    assume {:print "$track_abort(18,27):", $t14} $t14 == $t14;

    // $t6 := move($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:259:9+134
    $t6 := $t14;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:259:9+134
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:263:59+4
    assume {:print "$at(72,12869,12873)"} true;
L5:

    // $t15 := borrow_global<account::Account>($t5) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:263:32+17
    assume {:print "$at(72,12842,12859)"} true;
    if (!$ResourceExists($1_account_Account_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_account_Account_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(72,12842,12859)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(18,27):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[account_resource]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:263:13+16
    $temp_0'$1_account_Account' := $Dereference($t15);
    assume {:print "$track_local(18,27,2):", $temp_0'$1_account_Account'} $temp_0'$1_account_Account' == $temp_0'$1_account_Account';

    // $t16 := borrow_field<account::Account>.authentication_key($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:264:9+35
    assume {:print "$at(72,12884,12919)"} true;
    $t16 := $ChildMutation($t15, 0, $authentication_key#$1_account_Account($Dereference($t15)));

    // write_ref($t16, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:264:9+50
    $t16 := $UpdateMutation($t16, $t1);

    // write_back[Reference($t15).authentication_key (vector<u8>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:264:9+50
    $t15 := $UpdateMutation($t15, $Update'$1_account_Account'_authentication_key($Dereference($t15), $Dereference($t16)));

    // pack_ref_deep($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:264:9+50

    // write_back[account::Account@]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:264:9+50
    $1_account_Account_$memory := $ResourceUpdate($1_account_Account_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:265:5+1
    assume {:print "$at(72,12940,12941)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:265:5+1
    assume {:print "$at(72,12940,12941)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:265:5+1
L7:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.move:265:5+1
    assume {:print "$at(72,12940,12941)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// struct optional_aggregator::Integer at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:20:5+74
type {:datatype} $1_optional_aggregator_Integer;
function {:constructor} $1_optional_aggregator_Integer($value: int, $limit: int): $1_optional_aggregator_Integer;
function {:inline} $Update'$1_optional_aggregator_Integer'_value(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer(x, $limit#$1_optional_aggregator_Integer(s))
}
function {:inline} $Update'$1_optional_aggregator_Integer'_limit(s: $1_optional_aggregator_Integer, x: int): $1_optional_aggregator_Integer {
    $1_optional_aggregator_Integer($value#$1_optional_aggregator_Integer(s), x)
}
function $IsValid'$1_optional_aggregator_Integer'(s: $1_optional_aggregator_Integer): bool {
    $IsValid'u128'($value#$1_optional_aggregator_Integer(s))
      && $IsValid'u128'($limit#$1_optional_aggregator_Integer(s))
}
function {:inline} $IsEqual'$1_optional_aggregator_Integer'(s1: $1_optional_aggregator_Integer, s2: $1_optional_aggregator_Integer): bool {
    s1 == s2
}

// struct optional_aggregator::OptionalAggregator at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aggregator/optional_aggregator.move:64:5+175
type {:datatype} $1_optional_aggregator_OptionalAggregator;
function {:constructor} $1_optional_aggregator_OptionalAggregator($aggregator: $1_option_Option'$1_aggregator_Aggregator', $integer: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator;
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_aggregator(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_aggregator_Aggregator'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator(x, $integer#$1_optional_aggregator_OptionalAggregator(s))
}
function {:inline} $Update'$1_optional_aggregator_OptionalAggregator'_integer(s: $1_optional_aggregator_OptionalAggregator, x: $1_option_Option'$1_optional_aggregator_Integer'): $1_optional_aggregator_OptionalAggregator {
    $1_optional_aggregator_OptionalAggregator($aggregator#$1_optional_aggregator_OptionalAggregator(s), x)
}
function $IsValid'$1_optional_aggregator_OptionalAggregator'(s: $1_optional_aggregator_OptionalAggregator): bool {
    $IsValid'$1_option_Option'$1_aggregator_Aggregator''($aggregator#$1_optional_aggregator_OptionalAggregator(s))
      && $IsValid'$1_option_Option'$1_optional_aggregator_Integer''($integer#$1_optional_aggregator_OptionalAggregator(s))
}
function {:inline} $IsEqual'$1_optional_aggregator_OptionalAggregator'(s1: $1_optional_aggregator_OptionalAggregator, s2: $1_optional_aggregator_OptionalAggregator): bool {
    $IsEqual'$1_option_Option'$1_aggregator_Aggregator''($aggregator#$1_optional_aggregator_OptionalAggregator(s1), $aggregator#$1_optional_aggregator_OptionalAggregator(s2))
    && $IsEqual'$1_option_Option'$1_optional_aggregator_Integer''($integer#$1_optional_aggregator_OptionalAggregator(s1), $integer#$1_optional_aggregator_OptionalAggregator(s2))}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:255:5+129
function {:inline} $1_coin_$is_account_registered'$1_aptos_coin_AptosCoin'($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin', account_addr: int): bool {
    $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, account_addr)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:566:5+81
function {:inline} $1_coin_$value'$1_aptos_coin_AptosCoin'(coin: $1_coin_Coin'$1_aptos_coin_AptosCoin'): int {
    $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'(coin)
}

// struct coin::Coin<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:74:5+112
type {:datatype} $1_coin_Coin'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_Coin'$1_aptos_coin_AptosCoin'($value: int): $1_coin_Coin'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value(s: $1_coin_Coin'$1_aptos_coin_AptosCoin', x: int): $1_coin_Coin'$1_aptos_coin_AptosCoin' {
    $1_coin_Coin'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'u64'($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_Coin'$1_aptos_coin_AptosCoin''(s1: $1_coin_Coin'$1_aptos_coin_AptosCoin', s2: $1_coin_Coin'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}

// struct coin::CoinInfo<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:109:5+564
type {:datatype} $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name: $1_string_String, $symbol: $1_string_String, $decimals: int, $supply: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_name(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(x, $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_symbol(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_string_String): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x, $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_decimals(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: int): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x, $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''_supply(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', x: $1_option_Option'$1_optional_aggregator_OptionalAggregator'): $1_coin_CoinInfo'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s), x)
}
function $IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_string_String'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_string_String'($symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'u8'($decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'): bool {
    $IsEqual'$1_string_String'($name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $name#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'$1_string_String'($symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $symbol#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'u8'($decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $decimals#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))
    && $IsEqual'$1_option_Option'$1_optional_aggregator_OptionalAggregator''($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s1), $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'(s2))}
var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinInfo'$1_aptos_coin_AptosCoin';

// struct coin::CoinStore<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:92:5+206
type {:datatype} $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin: $1_coin_Coin'$1_aptos_coin_AptosCoin', $frozen: bool, $deposit_events: $1_event_EventHandle'$1_coin_DepositEvent', $withdraw_events: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'(x, $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_frozen(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: bool): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x, $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_DepositEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x, $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', x: $1_event_EventHandle'$1_coin_WithdrawEvent'): $1_coin_CoinStore'$1_aptos_coin_AptosCoin' {
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s), x)
}
function $IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'bool'($frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_event_EventHandle'$1_coin_DepositEvent''($deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
      && $IsValid'$1_event_EventHandle'$1_coin_WithdrawEvent''($withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''(s1: $1_coin_CoinStore'$1_aptos_coin_AptosCoin', s2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';

// struct coin::DepositEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:123:5+64
type {:datatype} $1_coin_DepositEvent;
function {:constructor} $1_coin_DepositEvent($amount: int): $1_coin_DepositEvent;
function {:inline} $Update'$1_coin_DepositEvent'_amount(s: $1_coin_DepositEvent, x: int): $1_coin_DepositEvent {
    $1_coin_DepositEvent(x)
}
function $IsValid'$1_coin_DepositEvent'(s: $1_coin_DepositEvent): bool {
    $IsValid'u64'($amount#$1_coin_DepositEvent(s))
}
function {:inline} $IsEqual'$1_coin_DepositEvent'(s1: $1_coin_DepositEvent, s2: $1_coin_DepositEvent): bool {
    s1 == s2
}

// struct coin::WithdrawEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:128:5+65
type {:datatype} $1_coin_WithdrawEvent;
function {:constructor} $1_coin_WithdrawEvent($amount: int): $1_coin_WithdrawEvent;
function {:inline} $Update'$1_coin_WithdrawEvent'_amount(s: $1_coin_WithdrawEvent, x: int): $1_coin_WithdrawEvent {
    $1_coin_WithdrawEvent(x)
}
function $IsValid'$1_coin_WithdrawEvent'(s: $1_coin_WithdrawEvent): bool {
    $IsValid'u64'($amount#$1_coin_WithdrawEvent(s))
}
function {:inline} $IsEqual'$1_coin_WithdrawEvent'(s1: $1_coin_WithdrawEvent, s2: $1_coin_WithdrawEvent): bool {
    s1 == s2
}

// struct coin::Ghost$supply<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:4:9+29
type {:datatype} $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($v: int): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';

// struct coin::Ghost$aggregate_supply<aptos_coin::AptosCoin> at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:5:9+39
type {:datatype} $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
function {:constructor} $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'($v: int): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';
function {:inline} $Update'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''_v(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', x: int): $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin' {
    $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'(x)
}
function $IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    $IsValid'num'($v#$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'(s))
}
function {:inline} $IsEqual'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''(s1: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin', s2: $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'): bool {
    s1 == s2
}
var $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory: $Memory $1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin';

// fun coin::extract<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:366:5+434
procedure {:inline 1} $1_coin_extract'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t3: int;
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation (int);
    var $t14: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t15: int;
    var $t16: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t17: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t2, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t2 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:366:5+1
    assume {:print "$at(94,13880,13881)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:366:5+1
    assume {:print "$track_local(23,13,1):", $t1} $t1 == $t1;

    // $t3 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:17+10
    assume {:print "$at(94,13983,13993)"} true;
    $t3 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t4 := >=($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:28+2
    call $t4 := $Ge($t3, $t1);

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
    assume {:print "$at(94,13975,14052)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
L0:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
    assume {:print "$at(94,13975,14052)"} true;

    // $t5 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:63+21
    $t5 := 6;
    assume $IsValid'u64'($t5);

    // $t6 := error::invalid_argument($t5) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:39+46
    call $t6 := $1_error_invalid_argument($t5);
    if ($abort_flag) {
        assume {:print "$at(94,14005,14051)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,13):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
    assume {:print "$at(94,13975,14052)"} true;
    assume {:print "$track_abort(23,13):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
    $t7 := $t6;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:367:9+77
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:368:9+81
    assume {:print "$at(94,14062,14143)"} true;
L2:

    // assume Identical($t8, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:369:13+52
    assume {:print "$at(94,14081,14133)"} true;
    assume ($t8 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) - $t1)));

    // assume Identical($t9, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:369:13+52
    assume ($t9 == 0);

    // $t10 := borrow_global<coin::Ghost$supply<#0>>($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:369:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9));
    }

    // write_ref($t10, $t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:369:13+52
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[coin::Ghost$supply<#0>@]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:369:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t11 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:371:22+10
    assume {:print "$at(94,14166,14176)"} true;
    $t11 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t12 := -($t11, $t1) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:371:33+1
    call $t12 := $Sub($t11, $t1);
    if ($abort_flag) {
        assume {:print "$at(94,14177,14178)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,13):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t13 := borrow_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:371:9+10
    $t13 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t13, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:371:9+32
    $t13 := $UpdateMutation($t13, $t12);

    // write_back[Reference($t0).value (u64)]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:371:9+32
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t13)));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:371:9+32
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // assume Identical($t14, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:373:13+52
    assume {:print "$at(94,14214,14266)"} true;
    assume ($t14 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) + $t1)));

    // assume Identical($t15, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:373:13+52
    assume ($t15 == 0);

    // $t16 := borrow_global<coin::Ghost$supply<#0>>($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:373:13+52
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t15)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t15), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t15));
    }

    // write_ref($t16, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:373:13+52
    $t16 := $UpdateMutation($t16, $t14);

    // write_back[coin::Ghost$supply<#0>@]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:373:13+52
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // $t17 := pack coin::Coin<#0>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:375:9+22
    assume {:print "$at(94,14286,14308)"} true;
    $t17 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_return[0]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:375:9+22
    assume {:print "$track_return(23,13,0):", $t17} $t17 == $t17;

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:375:9+22
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,13,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:376:5+1
    assume {:print "$at(94,14313,14314)"} true;
L3:

    // return $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:376:5+1
    assume {:print "$at(94,14313,14314)"} true;
    $ret0 := $t17;
    $ret1 := $t0;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:376:5+1
L4:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:376:5+1
    assume {:print "$at(94,14313,14314)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun coin::value<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:566:5+81
procedure {:inline 1} $1_coin_value'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: int;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t1 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:566:5+1
    assume {:print "$at(94,21587,21588)"} true;
    assume {:print "$track_local(23,34,0):", $t0} $t0 == $t0;

    // $t2 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:567:9+10
    assume {:print "$at(94,21652,21662)"} true;
    $t2 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:567:9+10
    assume {:print "$track_return(23,34,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:568:5+1
    assume {:print "$at(94,21667,21668)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:568:5+1
    assume {:print "$at(94,21667,21668)"} true;
    $ret0 := $t2;
    return;

}

// fun coin::balance<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:239:5+274
procedure {:inline 1} $1_coin_balance'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t8: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t1 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[owner]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:239:5+1
    assume {:print "$at(94,8778,8779)"} true;
    assume {:print "$track_local(23,1,0):", $t0} $t0 == $t0;

    // assume Identical($t2, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t2 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t3 := coin::is_account_registered<#0>($t0) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:241:13+38
    assume {:print "$at(94,8878,8916)"} true;
    call $t3 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(94,8878,8916)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:240:9+127
    assume {:print "$at(94,8857,8984)"} true;
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:240:9+127
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:240:9+127
    assume {:print "$at(94,8857,8984)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:242:30+25
    assume {:print "$at(94,8947,8972)"} true;
L0:

    // $t5 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:242:30+25
    assume {:print "$at(94,8947,8972)"} true;
    $t5 := 5;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:242:13+43
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(94,8930,8973)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:240:9+127
    assume {:print "$at(94,8857,8984)"} true;
    assume {:print "$track_abort(23,1):", $t6} $t6 == $t6;

    // $t4 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:240:9+127
    $t4 := $t6;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:240:9+127
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:44+5
    assume {:print "$at(94,9029,9034)"} true;
L2:

    // $t7 := get_global<coin::CoinStore<#0>>($t0) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:9+13
    assume {:print "$at(94,8994,9007)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(94,8994,9007)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(23,1):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t8 := get_field<coin::CoinStore<#0>>.coin($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:9+46
    $t8 := $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t7);

    // $t9 := get_field<coin::Coin<#0>>.value($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:9+52
    $t9 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t8);

    // trace_return[0]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:244:9+52
    assume {:print "$track_return(23,1,0):", $t9} $t9 == $t9;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:5+1
    assume {:print "$at(94,9051,9052)"} true;
L3:

    // return $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:5+1
    assume {:print "$at(94,9051,9052)"} true;
    $ret0 := $t9;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:5+1
L4:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:245:5+1
    assume {:print "$at(94,9051,9052)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun coin::deposit<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:5+621
procedure {:inline 1} $1_coin_deposit'$1_aptos_coin_AptosCoin'(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t3: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t4: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t10: bool;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation ($1_event_EventHandle'$1_coin_DepositEvent');
    var $t15: int;
    var $t16: $1_coin_DepositEvent;
    var $t17: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t18: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t3 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[account_addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:5+1
    assume {:print "$at(94,12612,12613)"} true;
    assume {:print "$track_local(23,7,0):", $t0} $t0 == $t0;

    // trace_local[coin]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:334:5+1
    assume {:print "$track_local(23,7,1):", $t1} $t1 == $t1;

    // assume Identical($t4, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t4 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t5 := coin::is_account_registered<#0>($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:336:13+45
    assume {:print "$at(94,12736,12781)"} true;
    call $t5 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(94,12736,12781)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;
        goto L7;
    }

    // if ($t5) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:335:9+134
    assume {:print "$at(94,12715,12849)"} true;
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:335:9+134
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:335:9+134
    assume {:print "$at(94,12715,12849)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:30+25
    assume {:print "$at(94,12812,12837)"} true;
L0:

    // $t7 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:30+25
    assume {:print "$at(94,12812,12837)"} true;
    $t7 := 5;
    assume $IsValid'u64'($t7);

    // $t8 := error::not_found($t7) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:337:13+43
    call $t8 := $1_error_not_found($t7);
    if ($abort_flag) {
        assume {:print "$at(94,12795,12838)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:335:9+134
    assume {:print "$at(94,12715,12849)"} true;
    assume {:print "$track_abort(23,7):", $t8} $t8 == $t8;

    // $t6 := move($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:335:9+134
    $t6 := $t8;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:335:9+134
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:340:65+12
    assume {:print "$at(94,12916,12928)"} true;
L2:

    // $t9 := borrow_global<coin::CoinStore<#0>>($t0) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:340:26+17
    assume {:print "$at(94,12877,12894)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(94,12877,12894)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_local[coin_store]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:340:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t9);
    assume {:print "$track_local(23,7,2):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t10 := get_field<coin::CoinStore<#0>>.frozen($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:342:14+17
    assume {:print "$at(94,12961,12978)"} true;
    $t10 := $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t9));

    // $t11 := !($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:342:13+1
    call $t11 := $Not($t10);

    // if ($t11) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
    assume {:print "$at(94,12939,13036)"} true;
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
    assume {:print "$at(94,12939,13036)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
L3:

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
    assume {:print "$at(94,12939,13036)"} true;

    // $t12 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:343:38+7
    assume {:print "$at(94,13017,13024)"} true;
    $t12 := 10;
    assume $IsValid'u64'($t12);

    // $t13 := error::permission_denied($t12) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:343:13+33
    call $t13 := $1_error_permission_denied($t12);
    if ($abort_flag) {
        assume {:print "$at(94,12992,13025)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;
        goto L7;
    }

    // trace_abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
    assume {:print "$at(94,12939,13036)"} true;
    assume {:print "$track_abort(23,7):", $t13} $t13 == $t13;

    // $t6 := move($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
    $t6 := $t13;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:341:9+97
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:347:18+10
    assume {:print "$at(94,13097,13107)"} true;
L5:

    // $t14 := borrow_field<coin::CoinStore<#0>>.deposit_events($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:347:13+30
    assume {:print "$at(94,13092,13122)"} true;
    $t14 := $ChildMutation($t9, 2, $deposit_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t9)));

    // $t15 := get_field<coin::Coin<#0>>.value($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:348:36+10
    assume {:print "$at(94,13159,13169)"} true;
    $t15 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // $t16 := pack coin::DepositEvent($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:348:13+35
    $t16 := $1_coin_DepositEvent($t15);

    // opaque begin: event::emit_event<coin::DepositEvent>($t14, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:9+135
    assume {:print "$at(94,13047,13182)"} true;

    // opaque end: event::emit_event<coin::DepositEvent>($t14, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:9+135

    // write_back[Reference($t9).deposit_events (event::EventHandle<coin::DepositEvent>)]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:346:9+135
    $t9 := $UpdateMutation($t9, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_deposit_events($Dereference($t9), $Dereference($t14)));

    // $t17 := borrow_field<coin::CoinStore<#0>>.coin($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:15+20
    assume {:print "$at(94,13199,13219)"} true;
    $t17 := $ChildMutation($t9, 0, $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t9)));

    // assume Identical($t18, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t18 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::merge<#0>($t17, $t1) on_abort goto L7 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+33
    assume {:print "$at(94,13193,13226)"} true;
    call $t17 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t17, $t1);
    if ($abort_flag) {
        assume {:print "$at(94,13193,13226)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(23,7):", $t6} $t6 == $t6;
        goto L7;
    }

    // write_back[Reference($t9).coin (coin::Coin<#0>)]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+33
    $t9 := $UpdateMutation($t9, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t9), $Dereference($t17)));

    // write_back[coin::CoinStore<#0>@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:351:9+33
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:5+1
    assume {:print "$at(94,13232,13233)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:5+1
    assume {:print "$at(94,13232,13233)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:5+1
L7:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:352:5+1
    assume {:print "$at(94,13232,13233)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun coin::destroy_zero<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:357:5+292
procedure {:inline 1} $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'(_$t0: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t3: int;
    var $t4: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t0: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t1 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[zero_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:357:5+1
    assume {:print "$at(94,13482,13483)"} true;
    assume {:print "$track_local(23,11,0):", $t0} $t0 == $t0;

    // assume Identical($t2, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value($t0)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:13+61
    assume {:print "$at(94,13572,13633)"} true;
    assume ($t2 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) - $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t0))));

    // assume Identical($t3, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:13+61
    assume ($t3 == 0);

    // $t4 := borrow_global<coin::Ghost$supply<#0>>($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:13+61
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t3)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t3), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t3));
    }

    // write_ref($t4, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:13+61
    $t4 := $UpdateMutation($t4, $t2);

    // write_back[coin::Ghost$supply<#0>@]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:359:13+61
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t4),
        $Dereference($t4));

    // $t5 := unpack coin::Coin<#0>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:361:13+14
    assume {:print "$at(94,13657,13671)"} true;
    $t5 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t0);

    // $t6 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:26+1
    assume {:print "$at(94,13710,13711)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:23+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
    assume {:print "$at(94,13693,13768)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:53+29
L0:

    // $t8 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:53+29
    assume {:print "$at(94,13737,13766)"} true;
    $t8 := 7;
    assume $IsValid'u64'($t8);

    // $t9 := error::invalid_argument($t8) on_abort goto L4 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:29+54
    call $t9 := $1_error_invalid_argument($t8);
    if ($abort_flag) {
        assume {:print "$at(94,13713,13767)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(23,11):", $t10} $t10 == $t10;
        goto L4;
    }

    // trace_abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
    assume {:print "$at(94,13693,13768)"} true;
    assume {:print "$track_abort(23,11):", $t9} $t9 == $t9;

    // $t10 := move($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
    $t10 := $t9;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:362:9+75
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:363:5+1
    assume {:print "$at(94,13773,13774)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:363:5+1
    assume {:print "$at(94,13773,13774)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:363:5+1
L4:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:363:5+1
    assume {:print "$at(94,13773,13774)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun coin::extract_all<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:379:5+372
procedure {:inline 1} $1_coin_extract_all'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin')) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin', $ret1: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t1: int;
    var $t2: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t3: int;
    var $t4: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t7: int;
    var $t8: $Mutation (int);
    var $t9: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t12: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t2, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t2 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:379:5+1
    assume {:print "$at(94,14429,14430)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // $t3 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:380:27+10
    assume {:print "$at(94,14533,14543)"} true;
    $t3 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // trace_local[total_value]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:380:13+11
    assume {:print "$track_local(23,14,1):", $t3} $t3 == $t3;

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value($t0)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:382:13+56
    assume {:print "$at(94,14572,14628)"} true;
    assume ($t4 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) - $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)))));

    // assume Identical($t5, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:382:13+56
    assume ($t5 == 0);

    // $t6 := borrow_global<coin::Ghost$supply<#0>>($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:382:13+56
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5));
    }

    // write_ref($t6, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:382:13+56
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[coin::Ghost$supply<#0>@]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:382:13+56
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:384:22+1
    assume {:print "$at(94,14661,14662)"} true;
    $t7 := 0;
    assume $IsValid'u64'($t7);

    // $t8 := borrow_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:384:9+10
    $t8 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t8, $t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:384:9+14
    $t8 := $UpdateMutation($t8, $t7);

    // write_back[Reference($t0).value (u64)]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:384:9+14
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t8)));

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:384:9+14
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // assume Identical($t9, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:386:13+57
    assume {:print "$at(94,14691,14748)"} true;
    assume ($t9 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) + $t3)));

    // assume Identical($t10, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:386:13+57
    assume ($t10 == 0);

    // $t11 := borrow_global<coin::Ghost$supply<#0>>($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:386:13+57
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t10)) {
        call $ExecFailureAbort();
    } else {
        $t11 := $Mutation($Global($t10), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t10));
    }

    // write_ref($t11, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:386:13+57
    $t11 := $UpdateMutation($t11, $t9);

    // write_back[coin::Ghost$supply<#0>@]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:386:13+57
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t11),
        $Dereference($t11));

    // $t12 := pack coin::Coin<#0>($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:388:9+27
    assume {:print "$at(94,14768,14795)"} true;
    $t12 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t3);

    // trace_return[0]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:388:9+27
    assume {:print "$track_return(23,14,0):", $t12} $t12 == $t12;

    // trace_local[coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:388:9+27
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,14,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:389:5+1
    assume {:print "$at(94,14800,14801)"} true;
L1:

    // return $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:389:5+1
    assume {:print "$at(94,14800,14801)"} true;
    $ret0 := $t12;
    $ret1 := $t0;
    return;

}

// fun coin::is_account_registered<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:255:5+129
procedure {:inline 1} $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t2: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t1 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[account_addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:255:5+1
    assume {:print "$at(94,9353,9354)"} true;
    assume {:print "$track_local(23,21,0):", $t0} $t0 == $t0;

    // $t2 := exists<coin::CoinStore<#0>>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:256:9+6
    assume {:print "$at(94,9435,9441)"} true;
    $t2 := $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:256:9+41
    assume {:print "$track_return(23,21,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:257:5+1
    assume {:print "$at(94,9481,9482)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:257:5+1
    assume {:print "$at(94,9481,9482)"} true;
    $ret0 := $t2;
    return;

}

// fun coin::merge<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:500:5+469
procedure {:inline 1} $1_coin_merge'$1_aptos_coin_AptosCoin'(_$t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'), _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ($ret0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin'))
{
    // declare local variables
    var $t2: int;
    var $t3: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t4: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t5: int;
    var $t6: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t7: int;
    var $t8: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t9: int;
    var $t10: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $Mutation (int);
    var $t0: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t3 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // trace_local[dst_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:500:5+1
    assume {:print "$at(94,19274,19275)"} true;
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[source_coin]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:500:5+1
    assume {:print "$track_local(23,24,1):", $t1} $t1 == $t1;

    // assume Le(Add(select coin::Coin.value($t0), select coin::Coin.value($t1)), 18446744073709551615) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:502:13+53
    assume {:print "$at(94,19390,19443)"} true;
    assume (($value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)) + $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1)) <= 18446744073709551615);

    // assume Identical($t4, pack coin::Ghost$supply<#0>(Sub(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), select coin::Coin.value($t1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:505:13+63
    assume {:print "$at(94,19482,19545)"} true;
    assume ($t4 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) - $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1))));

    // assume Identical($t5, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:505:13+63
    assume ($t5 == 0);

    // $t6 := borrow_global<coin::Ghost$supply<#0>>($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:505:13+63
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t6 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t5));
    }

    // write_ref($t6, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:505:13+63
    $t6 := $UpdateMutation($t6, $t4);

    // write_back[coin::Ghost$supply<#0>@]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:505:13+63
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t6),
        $Dereference($t6));

    // $t7 := unpack coin::Coin<#0>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:507:13+14
    assume {:print "$at(94,19569,19583)"} true;
    $t7 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($t1);

    // trace_local[value]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:507:20+5
    assume {:print "$track_local(23,24,2):", $t7} $t7 == $t7;

    // assume Identical($t8, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), $t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:509:13+51
    assume {:print "$at(94,19626,19677)"} true;
    assume ($t8 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) + $t7)));

    // assume Identical($t9, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:509:13+51
    assume ($t9 == 0);

    // $t10 := borrow_global<coin::Ghost$supply<#0>>($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:509:13+51
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $Mutation($Global($t9), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t9));
    }

    // write_ref($t10, $t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:509:13+51
    $t10 := $UpdateMutation($t10, $t8);

    // write_back[coin::Ghost$supply<#0>@]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:509:13+51
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t10),
        $Dereference($t10));

    // $t11 := get_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:26+14
    assume {:print "$at(94,19714,19728)"} true;
    $t11 := $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0));

    // $t12 := +($t11, $t7) on_abort goto L2 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:41+1
    call $t12 := $AddU64($t11, $t7);
    if ($abort_flag) {
        assume {:print "$at(94,19729,19730)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(23,24):", $t13} $t13 == $t13;
        goto L2;
    }

    // $t14 := borrow_field<coin::Coin<#0>>.value($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:9+14
    $t14 := $ChildMutation($t0, 0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($Dereference($t0)));

    // write_ref($t14, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:9+39
    $t14 := $UpdateMutation($t14, $t12);

    // write_back[Reference($t0).value (u64)]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:9+39
    $t0 := $UpdateMutation($t0, $Update'$1_coin_Coin'$1_aptos_coin_AptosCoin''_value($Dereference($t0), $Dereference($t14)));

    // trace_local[dst_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:9+39
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // trace_local[dst_coin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:511:48+1
    $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' := $Dereference($t0);
    assume {:print "$track_local(23,24,0):", $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:512:5+1
    assume {:print "$at(94,19742,19743)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:512:5+1
    assume {:print "$at(94,19742,19743)"} true;
    $ret0 := $t0;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:512:5+1
L2:

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:512:5+1
    assume {:print "$at(94,19742,19743)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun coin::register<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:538:5+664
procedure {:inline 1} $1_coin_register'$1_aptos_coin_AptosCoin'(_$t0: $signer) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t3: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t4: int;
    var $t5: $1_account_Account;
    var $t6: int;
    var $t7: int;
    var $t8: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t9: bool;
    var $t10: int;
    var $t11: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t12: bool;
    var $t13: int;
    var $t14: $1_account_Account;
    var $t15: $1_event_EventHandle'$1_coin_DepositEvent';
    var $t16: int;
    var $t17: $1_account_Account;
    var $t18: $1_event_EventHandle'$1_coin_WithdrawEvent';
    var $t19: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t3 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t4, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:342:9+47
    assume {:print "$at(95,14541,14588)"} true;
    assume ($t4 == $1_signer_$address_of($t0));

    // assume Identical($t5, global<account::Account>($t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:343:9+49
    assume {:print "$at(95,14597,14646)"} true;
    assume ($t5 == $ResourceValue($1_account_Account_$memory, $t4));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:538:5+1
    assume {:print "$at(94,20583,20584)"} true;
    assume {:print "$track_local(23,28,0):", $t0} $t0 == $t0;

    // $t6 := signer::address_of($t0) on_abort goto L3 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:28+27
    assume {:print "$at(94,20660,20687)"} true;
    call $t6 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(94,20660,20687)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,28):", $t7} $t7 == $t7;
        goto L3;
    }

    // trace_local[account_addr]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:539:13+12
    assume {:print "$track_local(23,28,1):", $t6} $t6 == $t6;

    // assume Identical($t8, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t8 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t9 := coin::is_account_registered<#0>($t6) on_abort goto L3 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:541:13+45
    assume {:print "$at(94,20788,20833)"} true;
    call $t9 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t6);
    if ($abort_flag) {
        assume {:print "$at(94,20788,20833)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,28):", $t7} $t7 == $t7;
        goto L3;
    }

    // if ($t9) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:541:9+81
    if ($t9) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:13+6
    assume {:print "$at(94,20849,20855)"} true;
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:542:13+6
    assume {:print "$at(94,20849,20855)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:545:42+12
    assume {:print "$at(94,20909,20921)"} true;
L0:

    // account::register_coin<#0>($t6) on_abort goto L3 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:545:9+46
    assume {:print "$at(94,20876,20922)"} true;
    call $1_account_register_coin'$1_aptos_coin_AptosCoin'($t6);
    if ($abort_flag) {
        assume {:print "$at(94,20876,20922)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,28):", $t7} $t7 == $t7;
        goto L3;
    }

    // $t10 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:547:33+1
    assume {:print "$at(94,21003,21004)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // $t11 := pack coin::Coin<#0>($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:547:19+17
    $t11 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t10);

    // $t12 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:548:21+5
    assume {:print "$at(94,21028,21033)"} true;
    $t12 := false;
    assume $IsValid'bool'($t12);

    // assume Identical($t13, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t13 == $1_signer_$address_of($t0));

    // assume Identical($t14, global<account::Account>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t14 == $ResourceValue($1_account_Account_$memory, $t13));

    // $t15 := account::new_event_handle<coin::DepositEvent>($t0) on_abort goto L3 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:549:29+48
    assume {:print "$at(94,21063,21111)"} true;
    call $t15 := $1_account_new_event_handle'$1_coin_DepositEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(94,21063,21111)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,28):", $t7} $t7 == $t7;
        goto L3;
    }

    // assume Identical($t16, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:444:9+39
    assume {:print "$at(73,21650,21689)"} true;
    assume ($t16 == $1_signer_$address_of($t0));

    // assume Identical($t17, global<account::Account>($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:445:9+36
    assume {:print "$at(73,21698,21734)"} true;
    assume ($t17 == $ResourceValue($1_account_Account_$memory, $t16));

    // $t18 := account::new_event_handle<coin::WithdrawEvent>($t0) on_abort goto L3 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:550:30+49
    assume {:print "$at(94,21142,21191)"} true;
    call $t18 := $1_account_new_event_handle'$1_coin_WithdrawEvent'($t0);
    if ($abort_flag) {
        assume {:print "$at(94,21142,21191)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,28):", $t7} $t7 == $t7;
        goto L3;
    }

    // $t19 := pack coin::CoinStore<#0>($t11, $t12, $t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:546:26+253
    assume {:print "$at(94,20949,21202)"} true;
    $t19 := $1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t11, $t12, $t15, $t18);

    // trace_local[coin_store]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:546:13+10
    assume {:print "$track_local(23,28,2):", $t19} $t19 == $t19;

    // move_to<coin::CoinStore<#0>>($t19, $t0) on_abort goto L3 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:552:9+7
    assume {:print "$at(94,21212,21219)"} true;
    if ($ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $addr#$signer($t0))) {
        call $ExecFailureAbort();
    } else {
        $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $addr#$signer($t0), $t19);
    }
    if ($abort_flag) {
        assume {:print "$at(94,21212,21219)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(23,28):", $t7} $t7 == $t7;
        goto L3;
    }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:5+1
    assume {:print "$at(94,21246,21247)"} true;
L2:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:5+1
    assume {:print "$at(94,21246,21247)"} true;
    return;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:5+1
L3:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:553:5+1
    assume {:print "$at(94,21246,21247)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun coin::withdraw<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:571:5+697
procedure {:inline 1} $1_coin_withdraw'$1_aptos_coin_AptosCoin'(_$t0: $signer, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t4: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t5: int;
    var $t6: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: int;
    var $t9: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: $Mutation ($1_coin_CoinStore'$1_aptos_coin_AptosCoin');
    var $t18: bool;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $Mutation ($1_event_EventHandle'$1_coin_WithdrawEvent');
    var $t23: $1_coin_WithdrawEvent;
    var $t24: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t25: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t26: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $signer;
    var $t1: int;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'': $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t4 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t5, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:384:9+47
    assume {:print "$at(95,16622,16669)"} true;
    assume ($t5 == $1_signer_$address_of($t0));

    // assume Identical($t6, global<coin::CoinStore<#0>>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:385:9+59
    assume {:print "$at(95,16678,16737)"} true;
    assume ($t6 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t5));

    // assume Identical($t7, select coin::Coin.value(select coin::CoinStore.coin($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:386:9+36
    assume {:print "$at(95,16746,16782)"} true;
    assume ($t7 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t6)));

    // assume Identical($t8, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:394:9+47
    assume {:print "$at(95,17076,17123)"} true;
    assume ($t8 == $1_signer_$address_of($t0));

    // assume Identical($t9, global<coin::CoinStore<#0>>($t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:395:9+59
    assume {:print "$at(95,17132,17191)"} true;
    assume ($t9 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t8));

    // assume Identical($t10, select coin::Coin.value(select coin::CoinStore.coin($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:396:9+36
    assume {:print "$at(95,17200,17236)"} true;
    assume ($t10 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t9)));

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:571:5+1
    assume {:print "$at(94,21754,21755)"} true;
    assume {:print "$track_local(23,35,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:571:5+1
    assume {:print "$track_local(23,35,1):", $t1} $t1 == $t1;

    // $t11 := signer::address_of($t0) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:575:28+27
    assume {:print "$at(94,21902,21929)"} true;
    call $t11 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(94,21902,21929)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(23,35):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_local[account_addr]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:575:13+12
    assume {:print "$track_local(23,35,2):", $t11} $t11 == $t11;

    // assume Identical($t13, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t13 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t14 := coin::is_account_registered<#0>($t11) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:577:13+45
    assume {:print "$at(94,21960,22005)"} true;
    call $t14 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t11);
    if ($abort_flag) {
        assume {:print "$at(94,21960,22005)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(23,35):", $t12} $t12 == $t12;
        goto L7;
    }

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:576:9+134
    assume {:print "$at(94,21939,22073)"} true;
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:576:9+134
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:576:9+134
    assume {:print "$at(94,21939,22073)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:578:30+25
    assume {:print "$at(94,22036,22061)"} true;
L0:

    // $t15 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:578:30+25
    assume {:print "$at(94,22036,22061)"} true;
    $t15 := 5;
    assume $IsValid'u64'($t15);

    // $t16 := error::not_found($t15) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:578:13+43
    call $t16 := $1_error_not_found($t15);
    if ($abort_flag) {
        assume {:print "$at(94,22019,22062)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(23,35):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:576:9+134
    assume {:print "$at(94,21939,22073)"} true;
    assume {:print "$track_abort(23,35):", $t16} $t16 == $t16;

    // $t12 := move($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:576:9+134
    $t12 := $t16;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:576:9+134
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:581:65+12
    assume {:print "$at(94,22140,22152)"} true;
L2:

    // $t17 := borrow_global<coin::CoinStore<#0>>($t11) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:581:26+17
    assume {:print "$at(94,22101,22118)"} true;
    if (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(94,22101,22118)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(23,35):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_local[coin_store]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:581:13+10
    $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' := $Dereference($t17);
    assume {:print "$track_local(23,35,3):", $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''} $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'' == $temp_0'$1_coin_CoinStore'$1_aptos_coin_AptosCoin'';

    // $t18 := get_field<coin::CoinStore<#0>>.frozen($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:583:14+17
    assume {:print "$at(94,22185,22202)"} true;
    $t18 := $frozen#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t17));

    // $t19 := !($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:583:13+1
    call $t19 := $Not($t18);

    // if ($t19) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
    assume {:print "$at(94,22163,22260)"} true;
    if ($t19) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
    assume {:print "$at(94,22163,22260)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
L3:

    // destroy($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
    assume {:print "$at(94,22163,22260)"} true;

    // $t20 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:584:38+7
    assume {:print "$at(94,22241,22248)"} true;
    $t20 := 10;
    assume $IsValid'u64'($t20);

    // $t21 := error::permission_denied($t20) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:584:13+33
    call $t21 := $1_error_permission_denied($t20);
    if ($abort_flag) {
        assume {:print "$at(94,22216,22249)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(23,35):", $t12} $t12 == $t12;
        goto L7;
    }

    // trace_abort($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
    assume {:print "$at(94,22163,22260)"} true;
    assume {:print "$track_abort(23,35):", $t21} $t21 == $t21;

    // $t12 := move($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
    $t12 := $t21;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:582:9+97
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:588:18+10
    assume {:print "$at(94,22322,22332)"} true;
L5:

    // $t22 := borrow_field<coin::CoinStore<#0>>.withdraw_events($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:588:13+31
    assume {:print "$at(94,22317,22348)"} true;
    $t22 := $ChildMutation($t17, 3, $withdraw_events#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t17)));

    // $t23 := pack coin::WithdrawEvent($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:589:13+24
    assume {:print "$at(94,22362,22386)"} true;
    $t23 := $1_coin_WithdrawEvent($t1);

    // opaque begin: event::emit_event<coin::WithdrawEvent>($t22, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:587:9+126
    assume {:print "$at(94,22271,22397)"} true;

    // opaque end: event::emit_event<coin::WithdrawEvent>($t22, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:587:9+126

    // write_back[Reference($t17).withdraw_events (event::EventHandle<coin::WithdrawEvent>)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:587:9+126
    $t17 := $UpdateMutation($t17, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_withdraw_events($Dereference($t17), $Dereference($t22)));

    // $t24 := borrow_field<coin::CoinStore<#0>>.coin($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:592:17+20
    assume {:print "$at(94,22416,22436)"} true;
    $t24 := $ChildMutation($t17, 0, $coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($Dereference($t17)));

    // assume Identical($t25, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t25 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t26 := coin::extract<#0>($t24, $t1) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:592:9+37
    assume {:print "$at(94,22408,22445)"} true;
    call $t26,$t24 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t24, $t1);
    if ($abort_flag) {
        assume {:print "$at(94,22408,22445)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(23,35):", $t12} $t12 == $t12;
        goto L7;
    }

    // write_back[Reference($t17).coin (coin::Coin<#0>)]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:592:9+37
    $t17 := $UpdateMutation($t17, $Update'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''_coin($Dereference($t17), $Dereference($t24)));

    // write_back[coin::CoinStore<#0>@]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:592:9+37
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // trace_return[0]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:592:9+37
    assume {:print "$track_return(23,35,0):", $t26} $t26 == $t26;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:593:5+1
    assume {:print "$at(94,22450,22451)"} true;
L6:

    // return $t26 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:593:5+1
    assume {:print "$at(94,22450,22451)"} true;
    $ret0 := $t26;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:593:5+1
L7:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:593:5+1
    assume {:print "$at(94,22450,22451)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun coin::zero<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:596:5+193
procedure {:inline 1} $1_coin_zero'$1_aptos_coin_AptosCoin'() returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t0: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t1: $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin';
    var $t2: int;
    var $t3: $Mutation ($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin');
    var $t4: int;
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';

    // bytecode translation starts here
    // assume Identical($t0, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t0 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t1, pack coin::Ghost$supply<#0>(Add(select coin::Ghost$supply.v<#0>(global<coin::Ghost$supply<#0>>(0x0)), 0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:598:13+47
    assume {:print "$at(94,22589,22636)"} true;
    assume ($t1 == $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'(($v#$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0)) + 0)));

    // assume Identical($t2, 0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:598:13+47
    assume ($t2 == 0);

    // $t3 := borrow_global<coin::Ghost$supply<#0>>($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:598:13+47
    if (!$ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t2)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $Mutation($Global($t2), EmptyVec(), $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $t2));
    }

    // write_ref($t3, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:598:13+47
    $t3 := $UpdateMutation($t3, $t1);

    // write_back[coin::Ghost$supply<#0>@]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:598:13+47
    $1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory := $ResourceUpdate($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $GlobalLocationAddress($t3),
        $Dereference($t3));

    // $t4 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:601:20+1
    assume {:print "$at(94,22692,22693)"} true;
    $t4 := 0;
    assume $IsValid'u64'($t4);

    // $t5 := pack coin::Coin<#0>($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:600:9+47
    assume {:print "$at(94,22656,22703)"} true;
    $t5 := $1_coin_Coin'$1_aptos_coin_AptosCoin'($t4);

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:600:9+47
    assume {:print "$track_return(23,36,0):", $t5} $t5 == $t5;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:603:5+1
    assume {:print "$at(94,22708,22709)"} true;
L1:

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.move:603:5+1
    assume {:print "$at(94,22708,22709)"} true;
    $ret0 := $t5;
    return;

}

// struct aptos_coin::AptosCoin at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_coin.move:22:5+27
type {:datatype} $1_aptos_coin_AptosCoin;
function {:constructor} $1_aptos_coin_AptosCoin($dummy_field: bool): $1_aptos_coin_AptosCoin;
function {:inline} $Update'$1_aptos_coin_AptosCoin'_dummy_field(s: $1_aptos_coin_AptosCoin, x: bool): $1_aptos_coin_AptosCoin {
    $1_aptos_coin_AptosCoin(x)
}
function $IsValid'$1_aptos_coin_AptosCoin'(s: $1_aptos_coin_AptosCoin): bool {
    $IsValid'bool'($dummy_field#$1_aptos_coin_AptosCoin(s))
}
function {:inline} $IsEqual'$1_aptos_coin_AptosCoin'(s1: $1_aptos_coin_AptosCoin, s2: $1_aptos_coin_AptosCoin): bool {
    s1 == s2
}
var $1_aptos_coin_AptosCoin_$memory: $Memory $1_aptos_coin_AptosCoin;

// struct aptos_account::DirectCoinTransferConfigUpdatedEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:34:5+109
type {:datatype} $1_aptos_account_DirectCoinTransferConfigUpdatedEvent;
function {:constructor} $1_aptos_account_DirectCoinTransferConfigUpdatedEvent($new_allow_direct_transfers: bool): $1_aptos_account_DirectCoinTransferConfigUpdatedEvent;
function {:inline} $Update'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'_new_allow_direct_transfers(s: $1_aptos_account_DirectCoinTransferConfigUpdatedEvent, x: bool): $1_aptos_account_DirectCoinTransferConfigUpdatedEvent {
    $1_aptos_account_DirectCoinTransferConfigUpdatedEvent(x)
}
function $IsValid'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(s: $1_aptos_account_DirectCoinTransferConfigUpdatedEvent): bool {
    $IsValid'bool'($new_allow_direct_transfers#$1_aptos_account_DirectCoinTransferConfigUpdatedEvent(s))
}
function {:inline} $IsEqual'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'(s1: $1_aptos_account_DirectCoinTransferConfigUpdatedEvent, s2: $1_aptos_account_DirectCoinTransferConfigUpdatedEvent): bool {
    s1 == s2
}

// struct aptos_account::DirectTransferConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:28:5+177
type {:datatype} $1_aptos_account_DirectTransferConfig;
function {:constructor} $1_aptos_account_DirectTransferConfig($allow_arbitrary_coin_transfers: bool, $update_coin_transfer_events: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'): $1_aptos_account_DirectTransferConfig;
function {:inline} $Update'$1_aptos_account_DirectTransferConfig'_allow_arbitrary_coin_transfers(s: $1_aptos_account_DirectTransferConfig, x: bool): $1_aptos_account_DirectTransferConfig {
    $1_aptos_account_DirectTransferConfig(x, $update_coin_transfer_events#$1_aptos_account_DirectTransferConfig(s))
}
function {:inline} $Update'$1_aptos_account_DirectTransferConfig'_update_coin_transfer_events(s: $1_aptos_account_DirectTransferConfig, x: $1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent'): $1_aptos_account_DirectTransferConfig {
    $1_aptos_account_DirectTransferConfig($allow_arbitrary_coin_transfers#$1_aptos_account_DirectTransferConfig(s), x)
}
function $IsValid'$1_aptos_account_DirectTransferConfig'(s: $1_aptos_account_DirectTransferConfig): bool {
    $IsValid'bool'($allow_arbitrary_coin_transfers#$1_aptos_account_DirectTransferConfig(s))
      && $IsValid'$1_event_EventHandle'$1_aptos_account_DirectCoinTransferConfigUpdatedEvent''($update_coin_transfer_events#$1_aptos_account_DirectTransferConfig(s))
}
function {:inline} $IsEqual'$1_aptos_account_DirectTransferConfig'(s1: $1_aptos_account_DirectTransferConfig, s2: $1_aptos_account_DirectTransferConfig): bool {
    s1 == s2
}
var $1_aptos_account_DirectTransferConfig_$memory: $Memory $1_aptos_account_DirectTransferConfig;

// fun aptos_account::create_account [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:42:5+158
procedure {:inline 1} $1_aptos_account_create_account(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $signer;
    var $t2: Vec (int);
    var $t3: $signer;
    var $t4: int;
    var $t5: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t6: int;
    var $t7: $1_account_Account;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[auth_key]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:42:5+1
    assume {:print "$at(80,1826,1827)"} true;
    assume {:print "$track_local(25,5,0):", $t0} $t0 == $t0;

    // assume Identical($t2, bcs::$to_bytes<address>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t2 == $1_bcs_$to_bytes'address'($t0));

    // $t3 := account::create_account($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:43:22+33
    assume {:print "$at(80,1900,1933)"} true;
    call $t3 := $1_account_create_account($t0);
    if ($abort_flag) {
        assume {:print "$at(80,1900,1933)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(25,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_local[signer]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:43:13+6
    assume {:print "$track_local(25,5,1):", $t3} $t3 == $t3;

    // assume Identical($t5, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t5 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t6, signer::$address_of($t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:342:9+47
    assume {:print "$at(95,14541,14588)"} true;
    assume ($t6 == $1_signer_$address_of($t3));

    // assume Identical($t7, global<account::Account>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:343:9+49
    assume {:print "$at(95,14597,14646)"} true;
    assume ($t7 == $ResourceValue($1_account_Account_$memory, $t6));

    // coin::register<aptos_coin::AptosCoin>($t3) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:44:9+34
    assume {:print "$at(80,1943,1977)"} true;
    call $1_coin_register'$1_aptos_coin_AptosCoin'($t3);
    if ($abort_flag) {
        assume {:print "$at(80,1943,1977)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(25,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:45:5+1
    assume {:print "$at(80,1983,1984)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:45:5+1
    assume {:print "$at(80,1983,1984)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:45:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:45:5+1
    assume {:print "$at(80,1983,1984)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun aptos_account::assert_account_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:117:5+136
procedure {:inline 1} $1_aptos_account_assert_account_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:117:5+1
    assume {:print "$at(80,5296,5297)"} true;
    assume {:print "$track_local(25,0,0):", $t0} $t0 == $t0;

    // $t1 := account::exists_at($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:17+24
    assume {:print "$at(80,5362,5386)"} true;
    call $t1 := $1_account_exists_at($t0);
    if ($abort_flag) {
        assume {:print "$at(80,5362,5386)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(25,0):", $t2} $t2 == $t2;
        goto L4;
    }

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:9+71
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:9+71
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:9+71
    assume {:print "$at(80,5354,5425)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:60+18
L0:

    // $t3 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:60+18
    assume {:print "$at(80,5405,5423)"} true;
    $t3 := 1;
    assume $IsValid'u64'($t3);

    // $t4 := error::not_found($t3) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:43+36
    call $t4 := $1_error_not_found($t3);
    if ($abort_flag) {
        assume {:print "$at(80,5388,5424)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(25,0):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:9+71
    assume {:print "$at(80,5354,5425)"} true;
    assume {:print "$track_abort(25,0):", $t4} $t4 == $t4;

    // $t2 := move($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:9+71
    $t2 := $t4;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:9+71
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:118:80+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:119:5+1
    assume {:print "$at(80,5431,5432)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:119:5+1
    assume {:print "$at(80,5431,5432)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:119:5+1
L4:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:119:5+1
    assume {:print "$at(80,5431,5432)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun aptos_account::assert_account_is_registered_for_apt [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:121:5+221
procedure {:inline 1} $1_aptos_account_assert_account_is_registered_for_apt(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:121:5+1
    assume {:print "$at(80,5438,5439)"} true;
    assume {:print "$track_local(25,1,0):", $t0} $t0 == $t0;

    // aptos_account::assert_account_exists($t0) on_abort goto L4 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:122:9+27
    assume {:print "$at(80,5511,5538)"} true;
    call $1_aptos_account_assert_account_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(80,5511,5538)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(25,1):", $t1} $t1 == $t1;
        goto L4;
    }

    // assume Identical($t2, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t2 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t3 := coin::is_account_registered<aptos_coin::AptosCoin>($t0) on_abort goto L4 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:17+44
    assume {:print "$at(80,5556,5600)"} true;
    call $t3 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(80,5556,5600)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(25,1):", $t1} $t1 == $t1;
        goto L4;
    }

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:9+104
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:9+104
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:9+104
    assume {:print "$at(80,5548,5652)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:80+31
L0:

    // $t4 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:80+31
    assume {:print "$at(80,5619,5650)"} true;
    $t4 := 2;
    assume $IsValid'u64'($t4);

    // $t5 := error::not_found($t4) on_abort goto L4 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:63+49
    call $t5 := $1_error_not_found($t4);
    if ($abort_flag) {
        assume {:print "$at(80,5602,5651)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(25,1):", $t1} $t1 == $t1;
        goto L4;
    }

    // trace_abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:9+104
    assume {:print "$at(80,5548,5652)"} true;
    assume {:print "$track_abort(25,1):", $t5} $t5 == $t5;

    // $t1 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:9+104
    $t1 := $t5;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:9+104
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:123:113+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:124:5+1
    assume {:print "$at(80,5658,5659)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:124:5+1
    assume {:print "$at(80,5658,5659)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:124:5+1
L4:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:124:5+1
    assume {:print "$at(80,5658,5659)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun aptos_account::can_receive_direct_coin_transfers [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:157:5+244
procedure {:inline 1} $1_aptos_account_can_receive_direct_coin_transfers(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t2: bool;
    var $t3: bool;
    var $t4: bool;
    var $t5: $1_aptos_account_DirectTransferConfig;
    var $t6: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:157:5+1
    assume {:print "$at(80,7365,7366)"} true;
    assume {:print "$track_local(25,4,0):", $t0} $t0 == $t0;

    // $t2 := exists<aptos_account::DirectTransferConfig>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:10+6
    assume {:print "$at(80,7475,7481)"} true;
    $t2 := $ResourceExists($1_aptos_account_DirectTransferConfig_$memory, $t0);

    // $t3 := !($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+1
    call $t3 := $Not($t2);

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
L1:

    // $t4 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
    assume {:print "$at(80,7474,7603)"} true;
    $t4 := true;
    assume $IsValid'bool'($t4);

    // $t1 := $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
    $t1 := $t4;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:159:49+7
    assume {:print "$at(80,7564,7571)"} true;
L0:

    // $t5 := get_global<aptos_account::DirectTransferConfig>($t0) on_abort goto L4 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:159:13+13
    assume {:print "$at(80,7528,7541)"} true;
    if (!$ResourceExists($1_aptos_account_DirectTransferConfig_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(80,7528,7541)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(25,4):", $t6} $t6 == $t6;
        goto L4;
    }

    // $t1 := get_field<aptos_account::DirectTransferConfig>.allow_arbitrary_coin_transfers($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:159:13+75
    $t1 := $allow_arbitrary_coin_transfers#$1_aptos_account_DirectTransferConfig($t5);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
    assume {:print "$at(80,7474,7603)"} true;
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:158:9+129
    assume {:print "$at(80,7474,7603)"} true;
    assume {:print "$track_return(25,4,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:160:5+1
    assume {:print "$at(80,7608,7609)"} true;
L3:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:160:5+1
    assume {:print "$at(80,7608,7609)"} true;
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:160:5+1
L4:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:160:5+1
    assume {:print "$at(80,7608,7609)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun aptos_account::deposit_coins<aptos_coin::AptosCoin> [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:98:5+820
procedure {:inline 1} $1_aptos_account_deposit_coins'$1_aptos_coin_AptosCoin'(_$t0: int, _$t1: $1_coin_Coin'$1_aptos_coin_AptosCoin') returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $1_account_Account;
    var $t4: bool;
    var $t5: int;
    var $t6: bool;
    var $t7: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t8: bool;
    var $t9: bool;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $signer;
    var $t14: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t15: int;
    var $t16: $1_account_Account;
    var $t17: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t0: int;
    var $t1: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, global<account::Account>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.spec.move:200:9+39
    assume {:print "$at(81,9368,9407)"} true;
    assume ($t3 == $ResourceValue($1_account_Account_$memory, $t0));

    // trace_local[to]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:98:5+1
    assume {:print "$at(80,4470,4471)"} true;
    assume {:print "$track_local(25,6,0):", $t0} $t0 == $t0;

    // trace_local[coins]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:98:5+1
    assume {:print "$track_local(25,6,1):", $t1} $t1 == $t1;

    // $t4 := account::exists_at($t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:99:14+22
    assume {:print "$at(80,4586,4608)"} true;
    call $t4 := $1_account_exists_at($t0);
    if ($abort_flag) {
        assume {:print "$at(80,4586,4608)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t6 := !($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:99:13+1
    call $t6 := $Not($t4);

    // if ($t6) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:99:9+351
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:100:28+2
    assume {:print "$at(80,4639,4641)"} true;
L1:

    // aptos_account::create_account($t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:100:13+18
    assume {:print "$at(80,4624,4642)"} true;
    call $1_aptos_account_create_account($t0);
    if ($abort_flag) {
        assume {:print "$at(80,4624,4642)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // assert coin::$is_account_registered<aptos_coin::AptosCoin>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:102:17+50
    assume {:print "$at(80,4679,4729)"} true;
    assert {:msg "assert_failed(80,4679,4729): unknown assertion failed"}
      $1_coin_$is_account_registered'$1_aptos_coin_AptosCoin'($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0);

    // assume Implies(Eq<type_info::TypeInfo>(type_info::$type_of<#0>(), type_info::$type_of<aptos_coin::AptosCoin>()), coin::$is_account_registered<#0>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:103:17+161
    assume {:print "$at(80,4746,4907)"} true;
    assume ($IsEqual'$1_type_info_TypeInfo'($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9)), $1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))) ==> $1_coin_$is_account_registered'$1_aptos_coin_AptosCoin'($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t0));

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:107:52+2
    assume {:print "$at(80,4985,4987)"} true;
L0:

    // assume Identical($t7, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t7 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t8 := coin::is_account_registered<#0>($t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:107:14+41
    assume {:print "$at(80,4947,4988)"} true;
    call $t8 := $1_coin_is_account_registered'$1_aptos_coin_AptosCoin'($t0);
    if ($abort_flag) {
        assume {:print "$at(80,4947,4988)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // $t9 := !($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:107:13+1
    call $t9 := $Not($t8);

    // if ($t9) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:107:9+298
    if ($t9) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:109:51+2
    assume {:print "$at(80,5063,5065)"} true;
L3:

    // $t10 := aptos_account::can_receive_direct_coin_transfers($t0) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:109:17+37
    assume {:print "$at(80,5029,5066)"} true;
    call $t10 := $1_aptos_account_can_receive_direct_coin_transfers($t0);
    if ($abort_flag) {
        assume {:print "$at(80,5029,5066)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // if ($t10) goto L5 else goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:108:13+167
    assume {:print "$at(80,5004,5171)"} true;
    if ($t10) { goto L5; } else { goto L4; }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:108:13+167
L5:

    // goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:108:13+167
    assume {:print "$at(80,5004,5171)"} true;
    goto L6;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:110:42+46
    assume {:print "$at(80,5109,5155)"} true;
L4:

    // $t11 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:110:42+46
    assume {:print "$at(80,5109,5155)"} true;
    $t11 := 3;
    assume $IsValid'u64'($t11);

    // $t12 := error::permission_denied($t11) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:110:17+72
    call $t12 := $1_error_permission_denied($t11);
    if ($abort_flag) {
        assume {:print "$at(80,5084,5156)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:108:13+167
    assume {:print "$at(80,5004,5171)"} true;
    assume {:print "$track_abort(25,6):", $t12} $t12 == $t12;

    // $t5 := move($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:108:13+167
    $t5 := $t12;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:108:13+167
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:112:53+2
    assume {:print "$at(80,5225,5227)"} true;
L6:

    // $t13 := opaque begin: create_signer::create_signer($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:112:39+17
    assume {:print "$at(80,5211,5228)"} true;

    // assume WellFormed($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:112:39+17
    assume $IsValid'signer'($t13) && $1_signer_is_txn_signer($t13) && $1_signer_is_txn_signer_addr($addr#$signer($t13));

    // assume Eq<address>(signer::$address_of($t13), $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:112:39+17
    assume $IsEqual'address'($1_signer_$address_of($t13), $t0);

    // $t13 := opaque end: create_signer::create_signer($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:112:39+17

    // assume Identical($t14, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t14 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t15, signer::$address_of($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:342:9+47
    assume {:print "$at(95,14541,14588)"} true;
    assume ($t15 == $1_signer_$address_of($t13));

    // assume Identical($t16, global<account::Account>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:343:9+49
    assume {:print "$at(95,14597,14646)"} true;
    assume ($t16 == $ResourceValue($1_account_Account_$memory, $t15));

    // coin::register<#0>($t13) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:112:13+44
    assume {:print "$at(80,5185,5229)"} true;
    call $1_coin_register'$1_aptos_coin_AptosCoin'($t13);
    if ($abort_flag) {
        assume {:print "$at(80,5185,5229)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:114:33+2
    assume {:print "$at(80,5274,5276)"} true;
L2:

    // assume Identical($t17, select coin::CoinInfo.supply(global<coin::CoinInfo<#0>>(select type_info::TypeInfo.account_address(type_info::$type_of<#0>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t17 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::deposit<#0>($t0, $t1) on_abort goto L8 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:114:9+34
    assume {:print "$at(80,5250,5284)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(80,5250,5284)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(25,6):", $t5} $t5 == $t5;
        goto L8;
    }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:115:5+1
    assume {:print "$at(80,5289,5290)"} true;
L7:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:115:5+1
    assume {:print "$at(80,5289,5290)"} true;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:115:5+1
L8:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.move:115:5+1
    assume {:print "$at(80,5289,5290)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/chain_status.move:35:5+90
function {:inline} $1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker): bool {
    $ResourceExists($1_chain_status_GenesisEndMarker_$memory, 1)
}

// struct chain_status::GenesisEndMarker at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/chain_status.move:12:5+34
type {:datatype} $1_chain_status_GenesisEndMarker;
function {:constructor} $1_chain_status_GenesisEndMarker($dummy_field: bool): $1_chain_status_GenesisEndMarker;
function {:inline} $Update'$1_chain_status_GenesisEndMarker'_dummy_field(s: $1_chain_status_GenesisEndMarker, x: bool): $1_chain_status_GenesisEndMarker {
    $1_chain_status_GenesisEndMarker(x)
}
function $IsValid'$1_chain_status_GenesisEndMarker'(s: $1_chain_status_GenesisEndMarker): bool {
    $IsValid'bool'($dummy_field#$1_chain_status_GenesisEndMarker(s))
}
function {:inline} $IsEqual'$1_chain_status_GenesisEndMarker'(s1: $1_chain_status_GenesisEndMarker, s2: $1_chain_status_GenesisEndMarker): bool {
    s1 == s2
}
var $1_chain_status_GenesisEndMarker_$memory: $Memory $1_chain_status_GenesisEndMarker;

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:61:5+153
function {:inline} $1_timestamp_$now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:67:5+123
function {:inline} $1_timestamp_$now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    ($1_timestamp_$now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) div 1000000)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:22:10+111
function {:inline} $1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    $microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:26:10+93
function {:inline} $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds): int {
    ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) div 1000000)
}

// struct timestamp::CurrentTimeMicroseconds at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:12:5+73
type {:datatype} $1_timestamp_CurrentTimeMicroseconds;
function {:constructor} $1_timestamp_CurrentTimeMicroseconds($microseconds: int): $1_timestamp_CurrentTimeMicroseconds;
function {:inline} $Update'$1_timestamp_CurrentTimeMicroseconds'_microseconds(s: $1_timestamp_CurrentTimeMicroseconds, x: int): $1_timestamp_CurrentTimeMicroseconds {
    $1_timestamp_CurrentTimeMicroseconds(x)
}
function $IsValid'$1_timestamp_CurrentTimeMicroseconds'(s: $1_timestamp_CurrentTimeMicroseconds): bool {
    $IsValid'u64'($microseconds#$1_timestamp_CurrentTimeMicroseconds(s))
}
function {:inline} $IsEqual'$1_timestamp_CurrentTimeMicroseconds'(s1: $1_timestamp_CurrentTimeMicroseconds, s2: $1_timestamp_CurrentTimeMicroseconds): bool {
    s1 == s2
}
var $1_timestamp_CurrentTimeMicroseconds_$memory: $Memory $1_timestamp_CurrentTimeMicroseconds;

// fun timestamp::now_microseconds [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:61:5+153
procedure {:inline 1} $1_timestamp_now_microseconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_timestamp_CurrentTimeMicroseconds;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:48+16
    assume {:print "$at(143,2511,2527)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<timestamp::CurrentTimeMicroseconds>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+13
    if (!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(143,2472,2485)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(28,0):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_field<timestamp::CurrentTimeMicroseconds>.microseconds($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    $t3 := $microseconds#$1_timestamp_CurrentTimeMicroseconds($t1);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:62:9+69
    assume {:print "$track_return(28,0,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(143,2546,2547)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(143,2546,2547)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:63:5+1
    assume {:print "$at(143,2546,2547)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun timestamp::now_seconds [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:67:5+123
procedure {:inline 1} $1_timestamp_now_seconds() returns ($ret0: int)
{
    // declare local variables
    var $t0: int;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'u64': int;

    // bytecode translation starts here
    // $t0 := timestamp::now_microseconds() on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+18
    assume {:print "$at(143,2680,2698)"} true;
    call $t0 := $1_timestamp_now_microseconds();
    if ($abort_flag) {
        assume {:print "$at(143,2680,2698)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := 1000000 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:30+23
    $t2 := 1000000;
    assume $IsValid'u64'($t2);

    // $t3 := /($t0, $t2) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:28+1
    call $t3 := $Div($t0, $t2);
    if ($abort_flag) {
        assume {:print "$at(143,2699,2700)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(28,1):", $t1} $t1 == $t1;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:68:9+44
    assume {:print "$track_return(28,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(143,2729,2730)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(143,2729,2730)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.move:69:5+1
    assume {:print "$at(143,2729,2730)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/fixed_point32.move:55:10+109
function {:inline} $1_fixed_point32_spec_multiply_u64(val: int, multiplier: $1_fixed_point32_FixedPoint32): int {
    $shr((val * $value#$1_fixed_point32_FixedPoint32(multiplier)), 32)
}

// struct fixed_point32::FixedPoint32 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/fixed_point32.move:15:5+56
type {:datatype} $1_fixed_point32_FixedPoint32;
function {:constructor} $1_fixed_point32_FixedPoint32($value: int): $1_fixed_point32_FixedPoint32;
function {:inline} $Update'$1_fixed_point32_FixedPoint32'_value(s: $1_fixed_point32_FixedPoint32, x: int): $1_fixed_point32_FixedPoint32 {
    $1_fixed_point32_FixedPoint32(x)
}
function $IsValid'$1_fixed_point32_FixedPoint32'(s: $1_fixed_point32_FixedPoint32): bool {
    $IsValid'u64'($value#$1_fixed_point32_FixedPoint32(s))
}
function {:inline} $IsEqual'$1_fixed_point32_FixedPoint32'(s1: $1_fixed_point32_FixedPoint32, s2: $1_fixed_point32_FixedPoint32): bool {
    s1 == s2
}

// struct staking_config::StakingConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:49:5+1753
type {:datatype} $1_staking_config_StakingConfig;
function {:constructor} $1_staking_config_StakingConfig($minimum_stake: int, $maximum_stake: int, $recurring_lockup_duration_secs: int, $allow_validator_set_change: bool, $rewards_rate: int, $rewards_rate_denominator: int, $voting_power_increase_limit: int): $1_staking_config_StakingConfig;
function {:inline} $Update'$1_staking_config_StakingConfig'_minimum_stake(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig(x, $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_maximum_stake(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), x, $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_recurring_lockup_duration_secs(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), x, $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_allow_validator_set_change(s: $1_staking_config_StakingConfig, x: bool): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), x, $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_rewards_rate(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), x, $rewards_rate_denominator#$1_staking_config_StakingConfig(s), $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_rewards_rate_denominator(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), x, $voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $Update'$1_staking_config_StakingConfig'_voting_power_increase_limit(s: $1_staking_config_StakingConfig, x: int): $1_staking_config_StakingConfig {
    $1_staking_config_StakingConfig($minimum_stake#$1_staking_config_StakingConfig(s), $maximum_stake#$1_staking_config_StakingConfig(s), $recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s), $allow_validator_set_change#$1_staking_config_StakingConfig(s), $rewards_rate#$1_staking_config_StakingConfig(s), $rewards_rate_denominator#$1_staking_config_StakingConfig(s), x)
}
function $IsValid'$1_staking_config_StakingConfig'(s: $1_staking_config_StakingConfig): bool {
    $IsValid'u64'($minimum_stake#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($maximum_stake#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($recurring_lockup_duration_secs#$1_staking_config_StakingConfig(s))
      && $IsValid'bool'($allow_validator_set_change#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($rewards_rate#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($rewards_rate_denominator#$1_staking_config_StakingConfig(s))
      && $IsValid'u64'($voting_power_increase_limit#$1_staking_config_StakingConfig(s))
}
function {:inline} $IsEqual'$1_staking_config_StakingConfig'(s1: $1_staking_config_StakingConfig, s2: $1_staking_config_StakingConfig): bool {
    s1 == s2
}
var $1_staking_config_StakingConfig_$memory: $Memory $1_staking_config_StakingConfig;

// fun staking_config::get [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:169:5+118
procedure {:inline 1} $1_staking_config_get() returns ($ret0: $1_staking_config_StakingConfig)
{
    // declare local variables
    var $t0: int;
    var $t1: $1_staking_config_StakingConfig;
    var $t2: int;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;

    // bytecode translation starts here
    // $t0 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:170:39+16
    assume {:print "$at(102,8264,8280)"} true;
    $t0 := 1;
    assume $IsValid'address'($t0);

    // $t1 := get_global<staking_config::StakingConfig>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:170:10+13
    if (!$ResourceExists($1_staking_config_StakingConfig_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t1 := $ResourceValue($1_staking_config_StakingConfig_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(102,8235,8248)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(35,2):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:170:9+47
    assume {:print "$track_return(35,2,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
    assume {:print "$at(102,8286,8287)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
    assume {:print "$at(102,8286,8287)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:171:5+1
    assume {:print "$at(102,8286,8287)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun staking_config::get_recurring_lockup_duration [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:185:5+123
procedure {:inline 1} $1_staking_config_get_recurring_lockup_duration(_$t0: $1_staking_config_StakingConfig) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_staking_config_StakingConfig;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[config]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:185:5+1
    assume {:print "$at(102,8800,8801)"} true;
    assume {:print "$track_local(35,4,0):", $t0} $t0 == $t0;

    // $t1 := get_field<staking_config::StakingConfig>.recurring_lockup_duration_secs($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:186:9+37
    assume {:print "$at(102,8880,8917)"} true;
    $t1 := $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:186:9+37
    assume {:print "$track_return(35,4,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:187:5+1
    assume {:print "$at(102,8922,8923)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.move:187:5+1
    assume {:print "$at(102,8922,8923)"} true;
    $ret0 := $t1;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+71
function {:inline} $1_math64_$min(a: int, b: int): int {
    (if ((a < b)) then (a) else (b))
}

// fun math64::min [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+71
procedure {:inline 1} $1_math64_min(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t0: int;
    var $t1: int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[a]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+1
    assume {:print "$at(54,467,468)"} true;
    assume {:print "$track_local(36,6,0):", $t0} $t0 == $t0;

    // trace_local[b]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:17:5+1
    assume {:print "$track_local(36,6,1):", $t1} $t1 == $t1;

    // $t3 := <($t0, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:15+1
    assume {:print "$at(54,519,520)"} true;
    call $t3 := $Lt($t0, $t1);

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:20+1
L1:

    // $t2 := $t0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(54,513,532)"} true;
    $t2 := $t0;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:27+1
L0:

    // $t2 := $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(54,513,532)"} true;
    $t2 := $t1;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
L2:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:18:9+19
    assume {:print "$at(54,513,532)"} true;
    assume {:print "$track_return(36,6,0):", $t2} $t2 == $t2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:19:5+1
    assume {:print "$at(54,537,538)"} true;
L3:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/math64.move:19:5+1
    assume {:print "$at(54,537,538)"} true;
    $ret0 := $t2;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+89
function {:inline} $1_stake_$stake_pool_exists($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, addr: int): bool {
    $ResourceExists($1_stake_StakePool_$memory, addr)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:16:10+500
function {:inline} $1_stake_validator_set_is_valid($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance, $1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet): bool {
    (var validator_set := $ResourceValue($1_stake_ValidatorSet_$memory, 1); (((($1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $active_validators#$1_stake_ValidatorSet(validator_set)) && $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $pending_inactive#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $pending_active#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $active_validators#$1_stake_ValidatorSet(validator_set))) && $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $pending_inactive#$1_stake_ValidatorSet(validator_set))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:306:10+241
function {:inline} $1_stake_spec_validators_are_initialized($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, validators: Vec ($1_stake_ValidatorInfo)): bool {
    (var $range_0 := $Range(0, LenVec(validators)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (($1_stake_spec_has_stake_pool($1_stake_StakePool_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i))) && $1_stake_spec_has_validator_config($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i))))))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:313:10+234
function {:inline} $1_stake_spec_validator_indices_are_valid($1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance, validators: Vec ($1_stake_ValidatorInfo)): bool {
    (var $range_2 := $Range(0, LenVec(validators)); (forall $i_3: int :: $InRange($range_2, $i_3) ==> (var i := $i_3;
    (($validator_index#$1_stake_ValidatorConfig($ResourceValue($1_stake_ValidatorConfig_$memory, $addr#$1_stake_ValidatorInfo(ReadVec(validators, i)))) < $1_stake_spec_validator_index_upper_bound($1_stake_ValidatorPerformance_$memory))))))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:319:10+122
function {:inline} $1_stake_spec_validator_index_upper_bound($1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance): int {
    LenVec($validators#$1_stake_ValidatorPerformance($ResourceValue($1_stake_ValidatorPerformance_$memory, 1)))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:323:10+78
function {:inline} $1_stake_spec_has_stake_pool($1_stake_StakePool_$memory: $Memory $1_stake_StakePool, a: int): bool {
    $ResourceExists($1_stake_StakePool_$memory, a)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:327:10+90
function {:inline} $1_stake_spec_has_validator_config($1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig, a: int): bool {
    $ResourceExists($1_stake_ValidatorConfig_$memory, a)
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:340:10+148
function {:inline} $1_stake_spec_contains(validators: Vec ($1_stake_ValidatorInfo), addr: int): bool {
    (var $range_4 := $Range(0, LenVec(validators)); (exists $i_5: int :: $InRange($range_4, $i_5) && (var i := $i_5;
    ($IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec(validators, i)), addr)))))
}

// struct stake::AddStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:210:5+102
type {:datatype} $1_stake_AddStakeEvent;
function {:constructor} $1_stake_AddStakeEvent($pool_address: int, $amount_added: int): $1_stake_AddStakeEvent;
function {:inline} $Update'$1_stake_AddStakeEvent'_pool_address(s: $1_stake_AddStakeEvent, x: int): $1_stake_AddStakeEvent {
    $1_stake_AddStakeEvent(x, $amount_added#$1_stake_AddStakeEvent(s))
}
function {:inline} $Update'$1_stake_AddStakeEvent'_amount_added(s: $1_stake_AddStakeEvent, x: int): $1_stake_AddStakeEvent {
    $1_stake_AddStakeEvent($pool_address#$1_stake_AddStakeEvent(s), x)
}
function $IsValid'$1_stake_AddStakeEvent'(s: $1_stake_AddStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_AddStakeEvent(s))
      && $IsValid'u64'($amount_added#$1_stake_AddStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_AddStakeEvent'(s1: $1_stake_AddStakeEvent, s2: $1_stake_AddStakeEvent): bool {
    s1 == s2
}

// struct stake::DistributeRewardsEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:244:5+113
type {:datatype} $1_stake_DistributeRewardsEvent;
function {:constructor} $1_stake_DistributeRewardsEvent($pool_address: int, $rewards_amount: int): $1_stake_DistributeRewardsEvent;
function {:inline} $Update'$1_stake_DistributeRewardsEvent'_pool_address(s: $1_stake_DistributeRewardsEvent, x: int): $1_stake_DistributeRewardsEvent {
    $1_stake_DistributeRewardsEvent(x, $rewards_amount#$1_stake_DistributeRewardsEvent(s))
}
function {:inline} $Update'$1_stake_DistributeRewardsEvent'_rewards_amount(s: $1_stake_DistributeRewardsEvent, x: int): $1_stake_DistributeRewardsEvent {
    $1_stake_DistributeRewardsEvent($pool_address#$1_stake_DistributeRewardsEvent(s), x)
}
function $IsValid'$1_stake_DistributeRewardsEvent'(s: $1_stake_DistributeRewardsEvent): bool {
    $IsValid'address'($pool_address#$1_stake_DistributeRewardsEvent(s))
      && $IsValid'u64'($rewards_amount#$1_stake_DistributeRewardsEvent(s))
}
function {:inline} $IsEqual'$1_stake_DistributeRewardsEvent'(s1: $1_stake_DistributeRewardsEvent, s2: $1_stake_DistributeRewardsEvent): bool {
    s1 == s2
}

// struct stake::IncreaseLockupEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:234:5+153
type {:datatype} $1_stake_IncreaseLockupEvent;
function {:constructor} $1_stake_IncreaseLockupEvent($pool_address: int, $old_locked_until_secs: int, $new_locked_until_secs: int): $1_stake_IncreaseLockupEvent;
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_pool_address(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent(x, $old_locked_until_secs#$1_stake_IncreaseLockupEvent(s), $new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_old_locked_until_secs(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent($pool_address#$1_stake_IncreaseLockupEvent(s), x, $new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $Update'$1_stake_IncreaseLockupEvent'_new_locked_until_secs(s: $1_stake_IncreaseLockupEvent, x: int): $1_stake_IncreaseLockupEvent {
    $1_stake_IncreaseLockupEvent($pool_address#$1_stake_IncreaseLockupEvent(s), $old_locked_until_secs#$1_stake_IncreaseLockupEvent(s), x)
}
function $IsValid'$1_stake_IncreaseLockupEvent'(s: $1_stake_IncreaseLockupEvent): bool {
    $IsValid'address'($pool_address#$1_stake_IncreaseLockupEvent(s))
      && $IsValid'u64'($old_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
      && $IsValid'u64'($new_locked_until_secs#$1_stake_IncreaseLockupEvent(s))
}
function {:inline} $IsEqual'$1_stake_IncreaseLockupEvent'(s1: $1_stake_IncreaseLockupEvent, s2: $1_stake_IncreaseLockupEvent): bool {
    s1 == s2
}

// struct stake::IndividualValidatorPerformance at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:191:5+127
type {:datatype} $1_stake_IndividualValidatorPerformance;
function {:constructor} $1_stake_IndividualValidatorPerformance($successful_proposals: int, $failed_proposals: int): $1_stake_IndividualValidatorPerformance;
function {:inline} $Update'$1_stake_IndividualValidatorPerformance'_successful_proposals(s: $1_stake_IndividualValidatorPerformance, x: int): $1_stake_IndividualValidatorPerformance {
    $1_stake_IndividualValidatorPerformance(x, $failed_proposals#$1_stake_IndividualValidatorPerformance(s))
}
function {:inline} $Update'$1_stake_IndividualValidatorPerformance'_failed_proposals(s: $1_stake_IndividualValidatorPerformance, x: int): $1_stake_IndividualValidatorPerformance {
    $1_stake_IndividualValidatorPerformance($successful_proposals#$1_stake_IndividualValidatorPerformance(s), x)
}
function $IsValid'$1_stake_IndividualValidatorPerformance'(s: $1_stake_IndividualValidatorPerformance): bool {
    $IsValid'u64'($successful_proposals#$1_stake_IndividualValidatorPerformance(s))
      && $IsValid'u64'($failed_proposals#$1_stake_IndividualValidatorPerformance(s))
}
function {:inline} $IsEqual'$1_stake_IndividualValidatorPerformance'(s1: $1_stake_IndividualValidatorPerformance, s2: $1_stake_IndividualValidatorPerformance): bool {
    s1 == s2
}

// struct stake::JoinValidatorSetEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:240:5+83
type {:datatype} $1_stake_JoinValidatorSetEvent;
function {:constructor} $1_stake_JoinValidatorSetEvent($pool_address: int): $1_stake_JoinValidatorSetEvent;
function {:inline} $Update'$1_stake_JoinValidatorSetEvent'_pool_address(s: $1_stake_JoinValidatorSetEvent, x: int): $1_stake_JoinValidatorSetEvent {
    $1_stake_JoinValidatorSetEvent(x)
}
function $IsValid'$1_stake_JoinValidatorSetEvent'(s: $1_stake_JoinValidatorSetEvent): bool {
    $IsValid'address'($pool_address#$1_stake_JoinValidatorSetEvent(s))
}
function {:inline} $IsEqual'$1_stake_JoinValidatorSetEvent'(s1: $1_stake_JoinValidatorSetEvent, s2: $1_stake_JoinValidatorSetEvent): bool {
    s1 == s2
}

// struct stake::LeaveValidatorSetEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:259:5+84
type {:datatype} $1_stake_LeaveValidatorSetEvent;
function {:constructor} $1_stake_LeaveValidatorSetEvent($pool_address: int): $1_stake_LeaveValidatorSetEvent;
function {:inline} $Update'$1_stake_LeaveValidatorSetEvent'_pool_address(s: $1_stake_LeaveValidatorSetEvent, x: int): $1_stake_LeaveValidatorSetEvent {
    $1_stake_LeaveValidatorSetEvent(x)
}
function $IsValid'$1_stake_LeaveValidatorSetEvent'(s: $1_stake_LeaveValidatorSetEvent): bool {
    $IsValid'address'($pool_address#$1_stake_LeaveValidatorSetEvent(s))
}
function {:inline} $IsEqual'$1_stake_LeaveValidatorSetEvent'(s1: $1_stake_LeaveValidatorSetEvent, s2: $1_stake_LeaveValidatorSetEvent): bool {
    s1 == s2
}

// struct stake::OwnerCapability at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:100:5+76
type {:datatype} $1_stake_OwnerCapability;
function {:constructor} $1_stake_OwnerCapability($pool_address: int): $1_stake_OwnerCapability;
function {:inline} $Update'$1_stake_OwnerCapability'_pool_address(s: $1_stake_OwnerCapability, x: int): $1_stake_OwnerCapability {
    $1_stake_OwnerCapability(x)
}
function $IsValid'$1_stake_OwnerCapability'(s: $1_stake_OwnerCapability): bool {
    $IsValid'address'($pool_address#$1_stake_OwnerCapability(s))
}
function {:inline} $IsEqual'$1_stake_OwnerCapability'(s1: $1_stake_OwnerCapability, s2: $1_stake_OwnerCapability): bool {
    s1 == s2
}
var $1_stake_OwnerCapability_$memory: $Memory $1_stake_OwnerCapability;

// struct stake::ReactivateStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:215:5+103
type {:datatype} $1_stake_ReactivateStakeEvent;
function {:constructor} $1_stake_ReactivateStakeEvent($pool_address: int, $amount: int): $1_stake_ReactivateStakeEvent;
function {:inline} $Update'$1_stake_ReactivateStakeEvent'_pool_address(s: $1_stake_ReactivateStakeEvent, x: int): $1_stake_ReactivateStakeEvent {
    $1_stake_ReactivateStakeEvent(x, $amount#$1_stake_ReactivateStakeEvent(s))
}
function {:inline} $Update'$1_stake_ReactivateStakeEvent'_amount(s: $1_stake_ReactivateStakeEvent, x: int): $1_stake_ReactivateStakeEvent {
    $1_stake_ReactivateStakeEvent($pool_address#$1_stake_ReactivateStakeEvent(s), x)
}
function $IsValid'$1_stake_ReactivateStakeEvent'(s: $1_stake_ReactivateStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_ReactivateStakeEvent(s))
      && $IsValid'u64'($amount#$1_stake_ReactivateStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_ReactivateStakeEvent'(s1: $1_stake_ReactivateStakeEvent, s2: $1_stake_ReactivateStakeEvent): bool {
    s1 == s2
}

// struct stake::RegisterValidatorCandidateEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:200:5+93
type {:datatype} $1_stake_RegisterValidatorCandidateEvent;
function {:constructor} $1_stake_RegisterValidatorCandidateEvent($pool_address: int): $1_stake_RegisterValidatorCandidateEvent;
function {:inline} $Update'$1_stake_RegisterValidatorCandidateEvent'_pool_address(s: $1_stake_RegisterValidatorCandidateEvent, x: int): $1_stake_RegisterValidatorCandidateEvent {
    $1_stake_RegisterValidatorCandidateEvent(x)
}
function $IsValid'$1_stake_RegisterValidatorCandidateEvent'(s: $1_stake_RegisterValidatorCandidateEvent): bool {
    $IsValid'address'($pool_address#$1_stake_RegisterValidatorCandidateEvent(s))
}
function {:inline} $IsEqual'$1_stake_RegisterValidatorCandidateEvent'(s1: $1_stake_RegisterValidatorCandidateEvent, s2: $1_stake_RegisterValidatorCandidateEvent): bool {
    s1 == s2
}

// struct stake::RotateConsensusKeyEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:220:5+169
type {:datatype} $1_stake_RotateConsensusKeyEvent;
function {:constructor} $1_stake_RotateConsensusKeyEvent($pool_address: int, $old_consensus_pubkey: Vec (int), $new_consensus_pubkey: Vec (int)): $1_stake_RotateConsensusKeyEvent;
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_pool_address(s: $1_stake_RotateConsensusKeyEvent, x: int): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent(x, $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s), $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_old_consensus_pubkey(s: $1_stake_RotateConsensusKeyEvent, x: Vec (int)): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent($pool_address#$1_stake_RotateConsensusKeyEvent(s), x, $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $Update'$1_stake_RotateConsensusKeyEvent'_new_consensus_pubkey(s: $1_stake_RotateConsensusKeyEvent, x: Vec (int)): $1_stake_RotateConsensusKeyEvent {
    $1_stake_RotateConsensusKeyEvent($pool_address#$1_stake_RotateConsensusKeyEvent(s), $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s), x)
}
function $IsValid'$1_stake_RotateConsensusKeyEvent'(s: $1_stake_RotateConsensusKeyEvent): bool {
    $IsValid'address'($pool_address#$1_stake_RotateConsensusKeyEvent(s))
      && $IsValid'vec'u8''($old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
      && $IsValid'vec'u8''($new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s))
}
function {:inline} $IsEqual'$1_stake_RotateConsensusKeyEvent'(s1: $1_stake_RotateConsensusKeyEvent, s2: $1_stake_RotateConsensusKeyEvent): bool {
    $IsEqual'address'($pool_address#$1_stake_RotateConsensusKeyEvent(s1), $pool_address#$1_stake_RotateConsensusKeyEvent(s2))
    && $IsEqual'vec'u8''($old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s1), $old_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s2))
    && $IsEqual'vec'u8''($new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s1), $new_consensus_pubkey#$1_stake_RotateConsensusKeyEvent(s2))}

// struct stake::SetOperatorEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:204:5+140
type {:datatype} $1_stake_SetOperatorEvent;
function {:constructor} $1_stake_SetOperatorEvent($pool_address: int, $old_operator: int, $new_operator: int): $1_stake_SetOperatorEvent;
function {:inline} $Update'$1_stake_SetOperatorEvent'_pool_address(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent(x, $old_operator#$1_stake_SetOperatorEvent(s), $new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $Update'$1_stake_SetOperatorEvent'_old_operator(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent($pool_address#$1_stake_SetOperatorEvent(s), x, $new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $Update'$1_stake_SetOperatorEvent'_new_operator(s: $1_stake_SetOperatorEvent, x: int): $1_stake_SetOperatorEvent {
    $1_stake_SetOperatorEvent($pool_address#$1_stake_SetOperatorEvent(s), $old_operator#$1_stake_SetOperatorEvent(s), x)
}
function $IsValid'$1_stake_SetOperatorEvent'(s: $1_stake_SetOperatorEvent): bool {
    $IsValid'address'($pool_address#$1_stake_SetOperatorEvent(s))
      && $IsValid'address'($old_operator#$1_stake_SetOperatorEvent(s))
      && $IsValid'address'($new_operator#$1_stake_SetOperatorEvent(s))
}
function {:inline} $IsEqual'$1_stake_SetOperatorEvent'(s1: $1_stake_SetOperatorEvent, s2: $1_stake_SetOperatorEvent): bool {
    s1 == s2
}

// struct stake::StakePool at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:115:5+1829
type {:datatype} $1_stake_StakePool;
function {:constructor} $1_stake_StakePool($active: $1_coin_Coin'$1_aptos_coin_AptosCoin', $inactive: $1_coin_Coin'$1_aptos_coin_AptosCoin', $pending_active: $1_coin_Coin'$1_aptos_coin_AptosCoin', $pending_inactive: $1_coin_Coin'$1_aptos_coin_AptosCoin', $locked_until_secs: int, $operator_address: int, $delegated_voter: int, $initialize_validator_events: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent', $set_operator_events: $1_event_EventHandle'$1_stake_SetOperatorEvent', $add_stake_events: $1_event_EventHandle'$1_stake_AddStakeEvent', $reactivate_stake_events: $1_event_EventHandle'$1_stake_ReactivateStakeEvent', $rotate_consensus_key_events: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent', $update_network_and_fullnode_addresses_events: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent', $increase_lockup_events: $1_event_EventHandle'$1_stake_IncreaseLockupEvent', $join_validator_set_events: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent', $distribute_rewards_events: $1_event_EventHandle'$1_stake_DistributeRewardsEvent', $unlock_stake_events: $1_event_EventHandle'$1_stake_UnlockStakeEvent', $withdraw_stake_events: $1_event_EventHandle'$1_stake_WithdrawStakeEvent', $leave_validator_set_events: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): $1_stake_StakePool;
function {:inline} $Update'$1_stake_StakePool'_active(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool(x, $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_inactive(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), x, $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_pending_active(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), x, $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_pending_inactive(s: $1_stake_StakePool, x: $1_coin_Coin'$1_aptos_coin_AptosCoin'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), x, $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_locked_until_secs(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), x, $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_operator_address(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), x, $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_delegated_voter(s: $1_stake_StakePool, x: int): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), x, $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_initialize_validator_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), x, $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_set_operator_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_SetOperatorEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), x, $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_add_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_AddStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), x, $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_reactivate_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_ReactivateStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), x, $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_rotate_consensus_key_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_RotateConsensusKeyEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), x, $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_update_network_and_fullnode_addresses_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), x, $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_increase_lockup_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_IncreaseLockupEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), x, $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_join_validator_set_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_JoinValidatorSetEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), x, $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_distribute_rewards_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_DistributeRewardsEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), x, $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_unlock_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_UnlockStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), x, $withdraw_stake_events#$1_stake_StakePool(s), $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_withdraw_stake_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_WithdrawStakeEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), x, $leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $Update'$1_stake_StakePool'_leave_validator_set_events(s: $1_stake_StakePool, x: $1_event_EventHandle'$1_stake_LeaveValidatorSetEvent'): $1_stake_StakePool {
    $1_stake_StakePool($active#$1_stake_StakePool(s), $inactive#$1_stake_StakePool(s), $pending_active#$1_stake_StakePool(s), $pending_inactive#$1_stake_StakePool(s), $locked_until_secs#$1_stake_StakePool(s), $operator_address#$1_stake_StakePool(s), $delegated_voter#$1_stake_StakePool(s), $initialize_validator_events#$1_stake_StakePool(s), $set_operator_events#$1_stake_StakePool(s), $add_stake_events#$1_stake_StakePool(s), $reactivate_stake_events#$1_stake_StakePool(s), $rotate_consensus_key_events#$1_stake_StakePool(s), $update_network_and_fullnode_addresses_events#$1_stake_StakePool(s), $increase_lockup_events#$1_stake_StakePool(s), $join_validator_set_events#$1_stake_StakePool(s), $distribute_rewards_events#$1_stake_StakePool(s), $unlock_stake_events#$1_stake_StakePool(s), $withdraw_stake_events#$1_stake_StakePool(s), x)
}
function $IsValid'$1_stake_StakePool'(s: $1_stake_StakePool): bool {
    $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($active#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($inactive#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($pending_active#$1_stake_StakePool(s))
      && $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($pending_inactive#$1_stake_StakePool(s))
      && $IsValid'u64'($locked_until_secs#$1_stake_StakePool(s))
      && $IsValid'address'($operator_address#$1_stake_StakePool(s))
      && $IsValid'address'($delegated_voter#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_RegisterValidatorCandidateEvent''($initialize_validator_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_SetOperatorEvent''($set_operator_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_AddStakeEvent''($add_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_ReactivateStakeEvent''($reactivate_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_RotateConsensusKeyEvent''($rotate_consensus_key_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_UpdateNetworkAndFullnodeAddressesEvent''($update_network_and_fullnode_addresses_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_IncreaseLockupEvent''($increase_lockup_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_JoinValidatorSetEvent''($join_validator_set_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_DistributeRewardsEvent''($distribute_rewards_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_UnlockStakeEvent''($unlock_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_WithdrawStakeEvent''($withdraw_stake_events#$1_stake_StakePool(s))
      && $IsValid'$1_event_EventHandle'$1_stake_LeaveValidatorSetEvent''($leave_validator_set_events#$1_stake_StakePool(s))
}
function {:inline} $IsEqual'$1_stake_StakePool'(s1: $1_stake_StakePool, s2: $1_stake_StakePool): bool {
    s1 == s2
}
var $1_stake_StakePool_$memory: $Memory $1_stake_StakePool;

// struct stake::UnlockStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:249:5+108
type {:datatype} $1_stake_UnlockStakeEvent;
function {:constructor} $1_stake_UnlockStakeEvent($pool_address: int, $amount_unlocked: int): $1_stake_UnlockStakeEvent;
function {:inline} $Update'$1_stake_UnlockStakeEvent'_pool_address(s: $1_stake_UnlockStakeEvent, x: int): $1_stake_UnlockStakeEvent {
    $1_stake_UnlockStakeEvent(x, $amount_unlocked#$1_stake_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_stake_UnlockStakeEvent'_amount_unlocked(s: $1_stake_UnlockStakeEvent, x: int): $1_stake_UnlockStakeEvent {
    $1_stake_UnlockStakeEvent($pool_address#$1_stake_UnlockStakeEvent(s), x)
}
function $IsValid'$1_stake_UnlockStakeEvent'(s: $1_stake_UnlockStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_UnlockStakeEvent(s))
      && $IsValid'u64'($amount_unlocked#$1_stake_UnlockStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_UnlockStakeEvent'(s1: $1_stake_UnlockStakeEvent, s2: $1_stake_UnlockStakeEvent): bool {
    s1 == s2
}

// struct stake::UpdateNetworkAndFullnodeAddressesEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:226:5+274
type {:datatype} $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
function {:constructor} $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address: int, $old_network_addresses: Vec (int), $new_network_addresses: Vec (int), $old_fullnode_addresses: Vec (int), $new_fullnode_addresses: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent;
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_pool_address(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: int): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent(x, $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_old_network_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_new_network_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_old_fullnode_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x, $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $Update'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'_new_fullnode_addresses(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, x: Vec (int)): $1_stake_UpdateNetworkAndFullnodeAddressesEvent {
    $1_stake_UpdateNetworkAndFullnodeAddressesEvent($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s), x)
}
function $IsValid'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s: $1_stake_UpdateNetworkAndFullnodeAddressesEvent): bool {
    $IsValid'address'($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
      && $IsValid'vec'u8''($new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s))
}
function {:inline} $IsEqual'$1_stake_UpdateNetworkAndFullnodeAddressesEvent'(s1: $1_stake_UpdateNetworkAndFullnodeAddressesEvent, s2: $1_stake_UpdateNetworkAndFullnodeAddressesEvent): bool {
    $IsEqual'address'($pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $pool_address#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $old_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $new_network_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $old_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))
    && $IsEqual'vec'u8''($new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s1), $new_fullnode_addresses#$1_stake_UpdateNetworkAndFullnodeAddressesEvent(s2))}

// struct stake::ValidatorConfig at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:151:5+372
type {:datatype} $1_stake_ValidatorConfig;
function {:constructor} $1_stake_ValidatorConfig($consensus_pubkey: Vec (int), $network_addresses: Vec (int), $fullnode_addresses: Vec (int), $validator_index: int): $1_stake_ValidatorConfig;
function {:inline} $Update'$1_stake_ValidatorConfig'_consensus_pubkey(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig(x, $network_addresses#$1_stake_ValidatorConfig(s), $fullnode_addresses#$1_stake_ValidatorConfig(s), $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_network_addresses(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), x, $fullnode_addresses#$1_stake_ValidatorConfig(s), $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_fullnode_addresses(s: $1_stake_ValidatorConfig, x: Vec (int)): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), $network_addresses#$1_stake_ValidatorConfig(s), x, $validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $Update'$1_stake_ValidatorConfig'_validator_index(s: $1_stake_ValidatorConfig, x: int): $1_stake_ValidatorConfig {
    $1_stake_ValidatorConfig($consensus_pubkey#$1_stake_ValidatorConfig(s), $network_addresses#$1_stake_ValidatorConfig(s), $fullnode_addresses#$1_stake_ValidatorConfig(s), x)
}
function $IsValid'$1_stake_ValidatorConfig'(s: $1_stake_ValidatorConfig): bool {
    $IsValid'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig(s))
      && $IsValid'vec'u8''($network_addresses#$1_stake_ValidatorConfig(s))
      && $IsValid'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig(s))
      && $IsValid'u64'($validator_index#$1_stake_ValidatorConfig(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorConfig'(s1: $1_stake_ValidatorConfig, s2: $1_stake_ValidatorConfig): bool {
    $IsEqual'vec'u8''($consensus_pubkey#$1_stake_ValidatorConfig(s1), $consensus_pubkey#$1_stake_ValidatorConfig(s2))
    && $IsEqual'vec'u8''($network_addresses#$1_stake_ValidatorConfig(s1), $network_addresses#$1_stake_ValidatorConfig(s2))
    && $IsEqual'vec'u8''($fullnode_addresses#$1_stake_ValidatorConfig(s1), $fullnode_addresses#$1_stake_ValidatorConfig(s2))
    && $IsEqual'u64'($validator_index#$1_stake_ValidatorConfig(s1), $validator_index#$1_stake_ValidatorConfig(s2))}
var $1_stake_ValidatorConfig_$memory: $Memory $1_stake_ValidatorConfig;

// struct stake::ValidatorInfo at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:161:5+133
type {:datatype} $1_stake_ValidatorInfo;
function {:constructor} $1_stake_ValidatorInfo($addr: int, $voting_power: int, $config: $1_stake_ValidatorConfig): $1_stake_ValidatorInfo;
function {:inline} $Update'$1_stake_ValidatorInfo'_addr(s: $1_stake_ValidatorInfo, x: int): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo(x, $voting_power#$1_stake_ValidatorInfo(s), $config#$1_stake_ValidatorInfo(s))
}
function {:inline} $Update'$1_stake_ValidatorInfo'_voting_power(s: $1_stake_ValidatorInfo, x: int): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo($addr#$1_stake_ValidatorInfo(s), x, $config#$1_stake_ValidatorInfo(s))
}
function {:inline} $Update'$1_stake_ValidatorInfo'_config(s: $1_stake_ValidatorInfo, x: $1_stake_ValidatorConfig): $1_stake_ValidatorInfo {
    $1_stake_ValidatorInfo($addr#$1_stake_ValidatorInfo(s), $voting_power#$1_stake_ValidatorInfo(s), x)
}
function $IsValid'$1_stake_ValidatorInfo'(s: $1_stake_ValidatorInfo): bool {
    $IsValid'address'($addr#$1_stake_ValidatorInfo(s))
      && $IsValid'u64'($voting_power#$1_stake_ValidatorInfo(s))
      && $IsValid'$1_stake_ValidatorConfig'($config#$1_stake_ValidatorInfo(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorInfo'(s1: $1_stake_ValidatorInfo, s2: $1_stake_ValidatorInfo): bool {
    $IsEqual'address'($addr#$1_stake_ValidatorInfo(s1), $addr#$1_stake_ValidatorInfo(s2))
    && $IsEqual'u64'($voting_power#$1_stake_ValidatorInfo(s1), $voting_power#$1_stake_ValidatorInfo(s2))
    && $IsEqual'$1_stake_ValidatorConfig'($config#$1_stake_ValidatorInfo(s1), $config#$1_stake_ValidatorInfo(s2))}

// struct stake::ValidatorPerformance at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:196:5+103
type {:datatype} $1_stake_ValidatorPerformance;
function {:constructor} $1_stake_ValidatorPerformance($validators: Vec ($1_stake_IndividualValidatorPerformance)): $1_stake_ValidatorPerformance;
function {:inline} $Update'$1_stake_ValidatorPerformance'_validators(s: $1_stake_ValidatorPerformance, x: Vec ($1_stake_IndividualValidatorPerformance)): $1_stake_ValidatorPerformance {
    $1_stake_ValidatorPerformance(x)
}
function $IsValid'$1_stake_ValidatorPerformance'(s: $1_stake_ValidatorPerformance): bool {
    $IsValid'vec'$1_stake_IndividualValidatorPerformance''($validators#$1_stake_ValidatorPerformance(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorPerformance'(s1: $1_stake_ValidatorPerformance, s2: $1_stake_ValidatorPerformance): bool {
    $IsEqual'vec'$1_stake_IndividualValidatorPerformance''($validators#$1_stake_ValidatorPerformance(s1), $validators#$1_stake_ValidatorPerformance(s2))}
var $1_stake_ValidatorPerformance_$memory: $Memory $1_stake_ValidatorPerformance;

// struct stake::ValidatorSet at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:171:5+558
type {:datatype} $1_stake_ValidatorSet;
function {:constructor} $1_stake_ValidatorSet($consensus_scheme: int, $active_validators: Vec ($1_stake_ValidatorInfo), $pending_inactive: Vec ($1_stake_ValidatorInfo), $pending_active: Vec ($1_stake_ValidatorInfo), $total_voting_power: int, $total_joining_power: int): $1_stake_ValidatorSet;
function {:inline} $Update'$1_stake_ValidatorSet'_consensus_scheme(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet(x, $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_active_validators(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), x, $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_pending_inactive(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), x, $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_pending_active(s: $1_stake_ValidatorSet, x: Vec ($1_stake_ValidatorInfo)): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), x, $total_voting_power#$1_stake_ValidatorSet(s), $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_total_voting_power(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), x, $total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $Update'$1_stake_ValidatorSet'_total_joining_power(s: $1_stake_ValidatorSet, x: int): $1_stake_ValidatorSet {
    $1_stake_ValidatorSet($consensus_scheme#$1_stake_ValidatorSet(s), $active_validators#$1_stake_ValidatorSet(s), $pending_inactive#$1_stake_ValidatorSet(s), $pending_active#$1_stake_ValidatorSet(s), $total_voting_power#$1_stake_ValidatorSet(s), x)
}
function $IsValid'$1_stake_ValidatorSet'(s: $1_stake_ValidatorSet): bool {
    $IsValid'u8'($consensus_scheme#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($active_validators#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($pending_inactive#$1_stake_ValidatorSet(s))
      && $IsValid'vec'$1_stake_ValidatorInfo''($pending_active#$1_stake_ValidatorSet(s))
      && $IsValid'u128'($total_voting_power#$1_stake_ValidatorSet(s))
      && $IsValid'u128'($total_joining_power#$1_stake_ValidatorSet(s))
}
function {:inline} $IsEqual'$1_stake_ValidatorSet'(s1: $1_stake_ValidatorSet, s2: $1_stake_ValidatorSet): bool {
    $IsEqual'u8'($consensus_scheme#$1_stake_ValidatorSet(s1), $consensus_scheme#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($active_validators#$1_stake_ValidatorSet(s1), $active_validators#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($pending_inactive#$1_stake_ValidatorSet(s1), $pending_inactive#$1_stake_ValidatorSet(s2))
    && $IsEqual'vec'$1_stake_ValidatorInfo''($pending_active#$1_stake_ValidatorSet(s1), $pending_active#$1_stake_ValidatorSet(s2))
    && $IsEqual'u128'($total_voting_power#$1_stake_ValidatorSet(s1), $total_voting_power#$1_stake_ValidatorSet(s2))
    && $IsEqual'u128'($total_joining_power#$1_stake_ValidatorSet(s1), $total_joining_power#$1_stake_ValidatorSet(s2))}
var $1_stake_ValidatorSet_$memory: $Memory $1_stake_ValidatorSet;

// struct stake::WithdrawStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:254:5+111
type {:datatype} $1_stake_WithdrawStakeEvent;
function {:constructor} $1_stake_WithdrawStakeEvent($pool_address: int, $amount_withdrawn: int): $1_stake_WithdrawStakeEvent;
function {:inline} $Update'$1_stake_WithdrawStakeEvent'_pool_address(s: $1_stake_WithdrawStakeEvent, x: int): $1_stake_WithdrawStakeEvent {
    $1_stake_WithdrawStakeEvent(x, $amount_withdrawn#$1_stake_WithdrawStakeEvent(s))
}
function {:inline} $Update'$1_stake_WithdrawStakeEvent'_amount_withdrawn(s: $1_stake_WithdrawStakeEvent, x: int): $1_stake_WithdrawStakeEvent {
    $1_stake_WithdrawStakeEvent($pool_address#$1_stake_WithdrawStakeEvent(s), x)
}
function $IsValid'$1_stake_WithdrawStakeEvent'(s: $1_stake_WithdrawStakeEvent): bool {
    $IsValid'address'($pool_address#$1_stake_WithdrawStakeEvent(s))
      && $IsValid'u64'($amount_withdrawn#$1_stake_WithdrawStakeEvent(s))
}
function {:inline} $IsEqual'$1_stake_WithdrawStakeEvent'(s1: $1_stake_WithdrawStakeEvent, s2: $1_stake_WithdrawStakeEvent): bool {
    s1 == s2
}

// fun stake::assert_stake_pool_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:5+162
procedure {:inline 1} $1_stake_assert_stake_pool_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1319:5+1
    assume {:print "$at(131,62960,62961)"} true;
    assume {:print "$track_local(38,5,0):", $t0} $t0 == $t0;

    // $t1 := stake::stake_pool_exists($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:17+31
    assume {:print "$at(131,63030,63061)"} true;
    call $t1 := $1_stake_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(131,63030,63061)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:9+93
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:9+93
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:9+93
    assume {:print "$at(131,63022,63115)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:74+26
L0:

    // $t3 := 14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:74+26
    assume {:print "$at(131,63087,63113)"} true;
    $t3 := 14;
    assume $IsValid'u64'($t3);

    // $t4 := error::invalid_argument($t3) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:50+51
    call $t4 := $1_error_invalid_argument($t3);
    if ($abort_flag) {
        assume {:print "$at(131,63063,63114)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,5):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:9+93
    assume {:print "$at(131,63022,63115)"} true;
    assume {:print "$track_abort(38,5):", $t4} $t4 == $t4;

    // $t2 := move($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:9+93
    $t2 := $t4;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:9+93
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1320:102+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1321:5+1
    assume {:print "$at(131,63121,63122)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1321:5+1
    assume {:print "$at(131,63121,63122)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1321:5+1
L4:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:1321:5+1
    assume {:print "$at(131,63121,63122)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::get_delegated_voter [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+200
procedure {:inline 1} $1_stake_get_delegated_voter(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_StakePool;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:359:5+1
    assume {:print "$at(131,16317,16318)"} true;
    assume {:print "$track_local(38,16,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:360:9+38
    assume {:print "$at(131,16409,16447)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(131,16409,16447)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,16):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:361:9+13
    assume {:print "$at(131,16457,16470)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(131,16457,16470)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,16):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::StakePool>.delegated_voter($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:361:9+54
    $t3 := $delegated_voter#$1_stake_StakePool($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:361:9+54
    assume {:print "$track_return(38,16,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
    assume {:print "$at(131,16516,16517)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
    assume {:print "$at(131,16516,16517)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:362:5+1
    assume {:print "$at(131,16516,16517)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_lockup_secs [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+194
procedure {:inline 1} $1_stake_get_lockup_secs(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_stake_StakePool;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:294:5+1
    assume {:print "$at(131,13232,13233)"} true;
    assume {:print "$track_local(38,17,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:295:9+38
    assume {:print "$at(131,13316,13354)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(131,13316,13354)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:9+13
    assume {:print "$at(131,13364,13377)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(131,13364,13377)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(38,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<stake::StakePool>.locked_until_secs($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:9+56
    $t3 := $locked_until_secs#$1_stake_StakePool($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:296:9+56
    assume {:print "$track_return(38,17,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
    assume {:print "$at(131,13425,13426)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
    assume {:print "$at(131,13425,13426)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
L2:

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:297:5+1
    assume {:print "$at(131,13425,13426)"} true;
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun stake::get_stake [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+425
procedure {:inline 1} $1_stake_get_stake(_$t0: int) returns ($ret0: int, $ret1: int, $ret2: int, $ret3: int)
{
    // declare local variables
    var $t1: $1_stake_StakePool;
    var $t2: int;
    var $t3: $1_stake_StakePool;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t6: int;
    var $t7: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t8: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t9: int;
    var $t10: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t11: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t12: int;
    var $t13: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t14: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t15: int;
    var $t0: int;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:315:5+1
    assume {:print "$at(131,14196,14197)"} true;
    assume {:print "$track_local(38,22,0):", $t0} $t0 == $t0;

    // stake::assert_stake_pool_exists($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:316:9+38
    assume {:print "$at(131,14291,14329)"} true;
    call $1_stake_assert_stake_pool_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(131,14291,14329)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_global<stake::StakePool>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:26+13
    assume {:print "$at(131,14356,14369)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_stake_StakePool_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(131,14356,14369)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_local[stake_pool]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:317:13+10
    assume {:print "$track_local(38,22,1):", $t3} $t3 == $t3;

    // $t4 := get_field<stake::StakePool>.active($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:319:25+18
    assume {:print "$at(131,14430,14448)"} true;
    $t4 := $active#$1_stake_StakePool($t3);

    // assume Identical($t5, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t5 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t6 := coin::value<aptos_coin::AptosCoin>($t4) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:319:13+31
    assume {:print "$at(131,14418,14449)"} true;
    call $t6 := $1_coin_value'$1_aptos_coin_AptosCoin'($t4);
    if ($abort_flag) {
        assume {:print "$at(131,14418,14449)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t7 := get_field<stake::StakePool>.inactive($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:320:25+20
    assume {:print "$at(131,14475,14495)"} true;
    $t7 := $inactive#$1_stake_StakePool($t3);

    // assume Identical($t8, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t8 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t9 := coin::value<aptos_coin::AptosCoin>($t7) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:320:13+33
    assume {:print "$at(131,14463,14496)"} true;
    call $t9 := $1_coin_value'$1_aptos_coin_AptosCoin'($t7);
    if ($abort_flag) {
        assume {:print "$at(131,14463,14496)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t10 := get_field<stake::StakePool>.pending_active($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:321:25+26
    assume {:print "$at(131,14522,14548)"} true;
    $t10 := $pending_active#$1_stake_StakePool($t3);

    // assume Identical($t11, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t11 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t12 := coin::value<aptos_coin::AptosCoin>($t10) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:321:13+39
    assume {:print "$at(131,14510,14549)"} true;
    call $t12 := $1_coin_value'$1_aptos_coin_AptosCoin'($t10);
    if ($abort_flag) {
        assume {:print "$at(131,14510,14549)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t13 := get_field<stake::StakePool>.pending_inactive($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:322:25+28
    assume {:print "$at(131,14575,14603)"} true;
    $t13 := $pending_inactive#$1_stake_StakePool($t3);

    // assume Identical($t14, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t14 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t15 := coin::value<aptos_coin::AptosCoin>($t13) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:322:13+41
    assume {:print "$at(131,14563,14604)"} true;
    call $t15 := $1_coin_value'$1_aptos_coin_AptosCoin'($t13);
    if ($abort_flag) {
        assume {:print "$at(131,14563,14604)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(38,22):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$at(131,14404,14615)"} true;
    assume {:print "$track_return(38,22,0):", $t6} $t6 == $t6;

    // trace_return[1]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$track_return(38,22,1):", $t9} $t9 == $t9;

    // trace_return[2]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$track_return(38,22,2):", $t12} $t12 == $t12;

    // trace_return[3]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:318:9+211
    assume {:print "$track_return(38,22,3):", $t15} $t15 == $t15;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
    assume {:print "$at(131,14620,14621)"} true;
L1:

    // return ($t6, $t9, $t12, $t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
    assume {:print "$at(131,14620,14621)"} true;
    $ret0 := $t6;
    $ret1 := $t9;
    $ret2 := $t12;
    $ret3 := $t15;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:324:5+1
    assume {:print "$at(131,14620,14621)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun stake::get_validator_state [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+652
procedure {:inline 1} $1_stake_get_validator_state(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: $1_option_Option'u64';
    var $t2: $1_option_Option'u64';
    var $t3: $1_option_Option'u64';
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $1_stake_ValidatorSet;
    var $t8: $1_stake_ValidatorSet;
    var $t9: int;
    var $t10: $1_stake_ValidatorSet;
    var $t11: int;
    var $t12: Vec ($1_stake_ValidatorInfo);
    var $t13: $1_option_Option'u64';
    var $t14: bool;
    var $t15: int;
    var $t16: Vec ($1_stake_ValidatorInfo);
    var $t17: $1_option_Option'u64';
    var $t18: bool;
    var $t19: int;
    var $t20: Vec ($1_stake_ValidatorInfo);
    var $t21: $1_option_Option'u64';
    var $t22: bool;
    var $t23: int;
    var $t24: int;
    var $t0: int;
    var $temp_0'$1_stake_ValidatorSet': $1_stake_ValidatorSet;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t8, global<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:246:9+59
    assume {:print "$at(132,10599,10658)"} true;
    assume ($t8 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // trace_local[pool_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:328:5+1
    assume {:print "$at(131,14678,14679)"} true;
    assume {:print "$track_local(38,25,0):", $t0} $t0 == $t0;

    // $t9 := 0x1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:57+16
    assume {:print "$at(131,14817,14833)"} true;
    $t9 := 1;
    assume $IsValid'address'($t9);

    // $t10 := get_global<stake::ValidatorSet>($t9) on_abort goto L10 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:29+13
    if (!$ResourceExists($1_stake_ValidatorSet_$memory, $t9)) {
        call $ExecFailureAbort();
    } else {
        $t10 := $ResourceValue($1_stake_ValidatorSet_$memory, $t9);
    }
    if ($abort_flag) {
        assume {:print "$at(131,14789,14802)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(38,25):", $t11} $t11 == $t11;
        goto L10;
    }

    // trace_local[validator_set]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:329:13+13
    assume {:print "$track_local(38,25,7):", $t10} $t10 == $t10;

    // $t12 := get_field<stake::ValidatorSet>.pending_active($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:45+29
    assume {:print "$at(131,14880,14909)"} true;
    $t12 := $pending_active#$1_stake_ValidatorSet($t10);

    // $t13 := opaque begin: stake::find_validator($t12, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59

    // assume And(WellFormed($t13), Le(Len<u64>(select option::Option.vec($t13)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($IsValid'$1_option_Option'u64''($t13) && (LenVec($vec#$1_option_Option'u64'($t13)) <= 1));

    // assume Implies(option::$is_none<u64>($t13), forall i: Range(0, Len<stake::ValidatorInfo>($t12)): Neq<address>(select stake::ValidatorInfo.addr(Index($t12, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_none'u64'($t13) ==> (var $range_0 := $Range(0, LenVec($t12)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t13), Eq<address>(select stake::ValidatorInfo.addr(Index($t12, option::$borrow<u64>($t13))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t12, $1_option_$borrow'u64'($t13))), $t0));

    // assume Implies(option::$is_some<u64>($t13), stake::spec_contains($t12, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59
    assume ($1_option_$is_some'u64'($t13) ==> $1_stake_spec_contains($t12, $t0));

    // $t13 := opaque end: stake::find_validator($t12, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:30+59

    // $t14 := opaque begin: option::is_some<u64>($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77

    // assume WellFormed($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77
    assume $IsValid'bool'($t14);

    // assume Eq<bool>($t14, option::spec_is_some<u64>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77
    assume $IsEqual'bool'($t14, $1_option_spec_is_some'u64'($t13));

    // $t14 := opaque end: option::is_some<u64>($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:13+77

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
L1:

    // $t15 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:331:13+31
    assume {:print "$at(131,14941,14972)"} true;
    $t15 := 1;
    assume $IsValid'u64'($t15);

    // $t6 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(131,14844,15324)"} true;
    $t6 := $t15;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:53+13
    assume {:print "$at(131,15025,15038)"} true;
L0:

    // $t16 := get_field<stake::ValidatorSet>.active_validators($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:52+32
    assume {:print "$at(131,15024,15056)"} true;
    $t16 := $active_validators#$1_stake_ValidatorSet($t10);

    // $t17 := opaque begin: stake::find_validator($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62

    // assume And(WellFormed($t17), Le(Len<u64>(select option::Option.vec($t17)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($IsValid'$1_option_Option'u64''($t17) && (LenVec($vec#$1_option_Option'u64'($t17)) <= 1));

    // assume Implies(option::$is_none<u64>($t17), forall i: Range(0, Len<stake::ValidatorInfo>($t16)): Neq<address>(select stake::ValidatorInfo.addr(Index($t16, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_none'u64'($t17) ==> (var $range_0 := $Range(0, LenVec($t16)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t17), Eq<address>(select stake::ValidatorInfo.addr(Index($t16, option::$borrow<u64>($t17))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t16, $1_option_$borrow'u64'($t17))), $t0));

    // assume Implies(option::$is_some<u64>($t17), stake::spec_contains($t16, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62
    assume ($1_option_$is_some'u64'($t17) ==> $1_stake_spec_contains($t16, $t0));

    // $t17 := opaque end: stake::find_validator($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:37+62

    // $t18 := opaque begin: option::is_some<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80

    // assume WellFormed($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80
    assume $IsValid'bool'($t18);

    // assume Eq<bool>($t18, option::spec_is_some<u64>($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80
    assume $IsEqual'bool'($t18, $1_option_spec_is_some'u64'($t17));

    // $t18 := opaque end: option::is_some<u64>($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:20+80

    // if ($t18) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    if ($t18) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
L4:

    // $t19 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:333:13+23
    assume {:print "$at(131,15088,15111)"} true;
    $t19 := 2;
    assume $IsValid'u64'($t19);

    // $t5 := $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    assume {:print "$at(131,14988,15324)"} true;
    $t5 := $t19;

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:53+13
    assume {:print "$at(131,15164,15177)"} true;
L3:

    // $t20 := get_field<stake::ValidatorSet>.pending_inactive($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:52+31
    assume {:print "$at(131,15163,15194)"} true;
    $t20 := $pending_inactive#$1_stake_ValidatorSet($t10);

    // $t21 := opaque begin: stake::find_validator($t20, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61

    // assume And(WellFormed($t21), Le(Len<u64>(select option::Option.vec($t21)), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($IsValid'$1_option_Option'u64''($t21) && (LenVec($vec#$1_option_Option'u64'($t21)) <= 1));

    // assume Implies(option::$is_none<u64>($t21), forall i: Range(0, Len<stake::ValidatorInfo>($t20)): Neq<address>(select stake::ValidatorInfo.addr(Index($t20, i)), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_none'u64'($t21) ==> (var $range_0 := $Range(0, LenVec($t20)); (forall $i_1: int :: $InRange($range_0, $i_1) ==> (var i := $i_1;
    (!$IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, i)), $t0))))));

    // assume Implies(option::$is_some<u64>($t21), Eq<address>(select stake::ValidatorInfo.addr(Index($t20, option::$borrow<u64>($t21))), $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $IsEqual'address'($addr#$1_stake_ValidatorInfo(ReadVec($t20, $1_option_$borrow'u64'($t21))), $t0));

    // assume Implies(option::$is_some<u64>($t21), stake::spec_contains($t20, $t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61
    assume ($1_option_$is_some'u64'($t21) ==> $1_stake_spec_contains($t20, $t0));

    // $t21 := opaque end: stake::find_validator($t20, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:37+61

    // $t22 := opaque begin: option::is_some<u64>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79

    // assume WellFormed($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79
    assume $IsValid'bool'($t22);

    // assume Eq<bool>($t22, option::spec_is_some<u64>($t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79
    assume $IsEqual'bool'($t22, $1_option_spec_is_some'u64'($t21));

    // $t22 := opaque end: option::is_some<u64>($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:20+79

    // if ($t22) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    if ($t22) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:335:13+33
    assume {:print "$at(131,15226,15259)"} true;
L7:

    // $t23 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:335:13+33
    assume {:print "$at(131,15226,15259)"} true;
    $t23 := 3;
    assume $IsValid'u64'($t23);

    // $t4 := $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    assume {:print "$at(131,15127,15324)"} true;
    $t4 := $t23;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:337:13+25
    assume {:print "$at(131,15289,15314)"} true;
L6:

    // $t24 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:337:13+25
    assume {:print "$at(131,15289,15314)"} true;
    $t24 := 4;
    assume $IsValid'u64'($t24);

    // $t4 := $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
    assume {:print "$at(131,15127,15324)"} true;
    $t4 := $t24;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:334:16+197
L8:

    // $t5 := $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
    assume {:print "$at(131,14988,15324)"} true;
    $t5 := $t4;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:332:16+336
L5:

    // $t6 := $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(131,14844,15324)"} true;
    $t6 := $t5;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
L2:

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:330:9+480
    assume {:print "$at(131,14844,15324)"} true;
    assume {:print "$track_return(38,25,0):", $t6} $t6 == $t6;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(131,15329,15330)"} true;
L9:

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(131,15329,15330)"} true;
    $ret0 := $t6;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
L10:

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:339:5+1
    assume {:print "$at(131,15329,15330)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun stake::increase_lockup_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+905
procedure {:inline 1} $1_stake_increase_lockup_with_cap(_$t0: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t1: $1_staking_config_StakingConfig;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: $1_staking_config_StakingConfig;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $1_staking_config_StakingConfig;
    var $t14: $Mutation ($1_stake_StakePool);
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: $Mutation (int);
    var $t23: $Mutation ($1_event_EventHandle'$1_stake_IncreaseLockupEvent');
    var $t24: $1_stake_IncreaseLockupEvent;
    var $t0: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'$1_staking_config_StakingConfig': $1_staking_config_StakingConfig;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t6, global<staking_config::StakingConfig>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:67:9+69
    assume {:print "$at(132,3047,3116)"} true;
    assume ($t6 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t7, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:68:9+42
    assume {:print "$at(132,3125,3167)"} true;
    assume ($t7 == $pool_address#$1_stake_OwnerCapability($t0));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:69:9+53
    assume {:print "$at(132,3176,3229)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, timestamp::spec_now_seconds()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:71:9+48
    assume {:print "$at(132,3301,3349)"} true;
    assume ($t9 == $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory));

    // assume Identical($t10, select staking_config::StakingConfig.recurring_lockup_duration_secs($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:72:9+51
    assume {:print "$at(132,3358,3409)"} true;
    assume ($t10 == $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t6));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:763:5+1
    assume {:print "$at(131,35298,35299)"} true;
    assume {:print "$track_local(38,27,0):", $t0} $t0 == $t0;

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:764:28+22
    assume {:print "$at(131,35411,35433)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:764:13+12
    assume {:print "$track_local(38,27,4):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:765:9+38
    assume {:print "$at(131,35443,35481)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(131,35443,35481)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t13 := staking_config::get() on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:766:22+21
    assume {:print "$at(131,35504,35525)"} true;
    call $t13 := $1_staking_config_get();
    if ($abort_flag) {
        assume {:print "$at(131,35504,35525)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[config]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:766:13+6
    assume {:print "$track_local(38,27,1):", $t13} $t13 == $t13;

    // $t14 := borrow_global<stake::StakePool>($t11) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:26+17
    assume {:print "$at(131,35553,35570)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t14 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(131,35553,35570)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[stake_pool]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:768:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t14);
    assume {:print "$track_local(38,27,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t15 := get_field<stake::StakePool>.locked_until_secs($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:769:37+28
    assume {:print "$at(131,35633,35661)"} true;
    $t15 := $locked_until_secs#$1_stake_StakePool($Dereference($t14));

    // trace_local[old_locked_until_secs]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:769:13+21
    assume {:print "$track_local(38,27,3):", $t15} $t15 == $t15;

    // $t16 := timestamp::now_seconds() on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:37+24
    assume {:print "$at(131,35699,35723)"} true;
    call $t16 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(131,35699,35723)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t17 := staking_config::get_recurring_lockup_duration($t13) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:64+54
    call $t17 := $1_staking_config_get_recurring_lockup_duration($t13);
    if ($abort_flag) {
        assume {:print "$at(131,35726,35780)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // $t18 := +($t16, $t17) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:62+1
    call $t18 := $AddU64($t16, $t17);
    if ($abort_flag) {
        assume {:print "$at(131,35724,35725)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_local[new_locked_until_secs]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:770:13+21
    assume {:print "$track_local(38,27,2):", $t18} $t18 == $t18;

    // $t19 := <($t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:39+1
    assume {:print "$at(131,35820,35821)"} true;
    call $t19 := $Lt($t15, $t18);

    // if ($t19) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    if ($t19) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(131,35790,35886)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
L0:

    // destroy($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(131,35790,35886)"} true;

    // $t20 := 18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:88+15
    $t20 := 18;
    assume $IsValid'u64'($t20);

    // $t21 := error::invalid_argument($t20) on_abort goto L4 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:64+40
    call $t21 := $1_error_invalid_argument($t20);
    if ($abort_flag) {
        assume {:print "$at(131,35845,35885)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,27):", $t12} $t12 == $t12;
        goto L4;
    }

    // trace_abort($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    assume {:print "$at(131,35790,35886)"} true;
    assume {:print "$track_abort(38,27):", $t21} $t21 == $t21;

    // $t12 := move($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    $t12 := $t21;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:771:9+96
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:40+21
    assume {:print "$at(131,35927,35948)"} true;
L2:

    // $t22 := borrow_field<stake::StakePool>.locked_until_secs($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+28
    assume {:print "$at(131,35896,35924)"} true;
    $t22 := $ChildMutation($t14, 4, $locked_until_secs#$1_stake_StakePool($Dereference($t14)));

    // write_ref($t22, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+52
    $t22 := $UpdateMutation($t22, $t18);

    // write_back[Reference($t14).locked_until_secs (u64)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:772:9+52
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_locked_until_secs($Dereference($t14), $Dereference($t22)));

    // $t23 := borrow_field<stake::StakePool>.increase_lockup_events($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:775:13+38
    assume {:print "$at(131,35990,36028)"} true;
    $t23 := $ChildMutation($t14, 13, $increase_lockup_events#$1_stake_StakePool($Dereference($t14)));

    // $t24 := pack stake::IncreaseLockupEvent($t11, $t15, $t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:776:13+143
    assume {:print "$at(131,36042,36185)"} true;
    $t24 := $1_stake_IncreaseLockupEvent($t11, $t15, $t18);

    // opaque begin: event::emit_event<stake::IncreaseLockupEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    assume {:print "$at(131,35959,36196)"} true;

    // opaque end: event::emit_event<stake::IncreaseLockupEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237

    // write_back[Reference($t14).increase_lockup_events (event::EventHandle<stake::IncreaseLockupEvent>)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    $t14 := $UpdateMutation($t14, $Update'$1_stake_StakePool'_increase_lockup_events($Dereference($t14), $Dereference($t23)));

    // write_back[stake::StakePool@]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:774:9+237
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t14),
        $Dereference($t14));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(131,36202,36203)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(131,36202,36203)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
L4:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:782:5+1
    assume {:print "$at(131,36202,36203)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::set_delegated_voter_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+331
procedure {:inline 1} $1_stake_set_delegated_voter_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: $Mutation ($1_stake_StakePool);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_stake_StakePool);
    var $t8: $Mutation (int);
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:136:9+42
    assume {:print "$at(132,6139,6181)"} true;
    assume ($t4 == $pool_address#$1_stake_OwnerCapability($t0));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$at(131,27301,27302)"} true;
    assume {:print "$track_local(38,44,0):", $t0} $t0 == $t0;

    // trace_local[new_voter]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:601:5+1
    assume {:print "$track_local(38,44,1):", $t1} $t1 == $t1;

    // $t5 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:602:28+22
    assume {:print "$at(131,27438,27460)"} true;
    $t5 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:602:13+12
    assume {:print "$track_local(38,44,2):", $t5} $t5 == $t5;

    // stake::assert_stake_pool_exists($t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:603:9+38
    assume {:print "$at(131,27470,27508)"} true;
    call $1_stake_assert_stake_pool_exists($t5);
    if ($abort_flag) {
        assume {:print "$at(131,27470,27508)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,44):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t7 := borrow_global<stake::StakePool>($t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:26+17
    assume {:print "$at(131,27535,27552)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t5)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t5), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t5));
    }
    if ($abort_flag) {
        assume {:print "$at(131,27535,27552)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(38,44):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[stake_pool]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:604:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t7);
    assume {:print "$track_local(38,44,3):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t8 := borrow_field<stake::StakePool>.delegated_voter($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+26
    assume {:print "$at(131,27587,27613)"} true;
    $t8 := $ChildMutation($t7, 6, $delegated_voter#$1_stake_StakePool($Dereference($t7)));

    // write_ref($t8, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $t8 := $UpdateMutation($t8, $t1);

    // write_back[Reference($t7).delegated_voter (address)]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $t7 := $UpdateMutation($t7, $Update'$1_stake_StakePool'_delegated_voter($Dereference($t7), $Dereference($t8)));

    // write_back[stake::StakePool@]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:605:9+38
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(131,27631,27632)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(131,27631,27632)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:606:5+1
    assume {:print "$at(131,27631,27632)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun stake::set_operator_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+611
procedure {:inline 1} $1_stake_set_operator_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: int;
    var $t10: $Mutation (int);
    var $t11: $Mutation ($1_event_EventHandle'$1_stake_SetOperatorEvent');
    var $t12: $1_stake_SetOperatorEvent;
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t5, select stake::OwnerCapability.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:104:9+42
    assume {:print "$at(132,4820,4862)"} true;
    assume ($t5 == $pool_address#$1_stake_OwnerCapability($t0));

    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$at(131,26174,26175)"} true;
    assume {:print "$track_local(38,46,0):", $t0} $t0 == $t0;

    // trace_local[new_operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:575:5+1
    assume {:print "$track_local(38,46,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:576:28+22
    assume {:print "$at(131,26307,26329)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:576:13+12
    assume {:print "$track_local(38,46,3):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:577:9+38
    assume {:print "$at(131,26339,26377)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(131,26339,26377)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,46):", $t7} $t7 == $t7;
        goto L2;
    }

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:26+17
    assume {:print "$at(131,26404,26421)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(131,26404,26421)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,46):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[stake_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:578:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(38,46,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t9 := get_field<stake::StakePool>.operator_address($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:579:28+27
    assume {:print "$at(131,26475,26502)"} true;
    $t9 := $operator_address#$1_stake_StakePool($Dereference($t8));

    // trace_local[old_operator]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:579:13+12
    assume {:print "$track_local(38,46,2):", $t9} $t9 == $t9;

    // $t10 := borrow_field<stake::StakePool>.operator_address($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+27
    assume {:print "$at(131,26512,26539)"} true;
    $t10 := $ChildMutation($t8, 5, $operator_address#$1_stake_StakePool($Dereference($t8)));

    // write_ref($t10, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+42
    $t10 := $UpdateMutation($t10, $t1);

    // write_back[Reference($t8).operator_address (address)]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:580:9+42
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_operator_address($Dereference($t8), $Dereference($t10)));

    // $t11 := borrow_field<stake::StakePool>.set_operator_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:583:13+35
    assume {:print "$at(131,26596,26631)"} true;
    $t11 := $ChildMutation($t8, 8, $set_operator_events#$1_stake_StakePool($Dereference($t8)));

    // $t12 := pack stake::SetOperatorEvent($t6, $t9, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:584:13+122
    assume {:print "$at(131,26645,26767)"} true;
    $t12 := $1_stake_SetOperatorEvent($t6, $t9, $t1);

    // opaque begin: event::emit_event<stake::SetOperatorEvent>($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    assume {:print "$at(131,26565,26778)"} true;

    // opaque end: event::emit_event<stake::SetOperatorEvent>($t11, $t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213

    // write_back[Reference($t8).set_operator_events (event::EventHandle<stake::SetOperatorEvent>)]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_set_operator_events($Dereference($t8), $Dereference($t11)));

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:582:9+213
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(131,26784,26785)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(131,26784,26785)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:590:5+1
    assume {:print "$at(131,26784,26785)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun stake::stake_pool_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+89
procedure {:inline 1} $1_stake_stake_pool_exists(_$t0: int) returns ($ret0: bool)
{
    // declare local variables
    var $t1: bool;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[addr]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:400:5+1
    assume {:print "$at(131,18212,18213)"} true;
    assume {:print "$track_local(38,47,0):", $t0} $t0 == $t0;

    // $t1 := exists<stake::StakePool>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:9+6
    assume {:print "$at(131,18272,18278)"} true;
    $t1 := $ResourceExists($1_stake_StakePool_$memory, $t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:401:9+23
    assume {:print "$track_return(38,47,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:402:5+1
    assume {:print "$at(131,18300,18301)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:402:5+1
    assume {:print "$at(131,18300,18301)"} true;
    $ret0 := $t1;
    return;

}

// fun stake::unlock_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1066
procedure {:inline 1} $1_stake_unlock_with_cap(_$t0: int, _$t1: $1_stake_OwnerCapability) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_stake_StakePool);
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t6: int;
    var $t7: $1_stake_StakePool;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: $Mutation ($1_stake_StakePool);
    var $t14: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t15: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t16: int;
    var $t17: int;
    var $t18: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t19: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t20: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t21: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t22: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t23: $Mutation ($1_event_EventHandle'$1_stake_UnlockStakeEvent');
    var $t24: $1_stake_UnlockStakeEvent;
    var $t0: int;
    var $t1: $1_stake_OwnerCapability;
    var $1_stake_StakePool_$modifies: [int]bool;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t6, select stake::OwnerCapability.pool_address($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:56:9+42
    assume {:print "$at(132,2499,2541)"} true;
    assume ($t6 == $pool_address#$1_stake_OwnerCapability($t1));

    // assume Identical($t7, global<stake::StakePool>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:57:9+53
    assume {:print "$at(132,2550,2603)"} true;
    assume ($t7 == $ResourceValue($1_stake_StakePool_$memory, $t6));

    // assume Identical($t8, math64::$min($t0, select coin::Coin.value(select stake::StakePool.active($t7)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:60:9+76
    assume {:print "$at(132,2725,2801)"} true;
    assume ($t8 == $1_math64_$min($t0, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t7))));

    // trace_local[amount]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$at(131,39738,39739)"} true;
    assume {:print "$track_local(38,50,0):", $t0} $t0 == $t0;

    // trace_local[owner_cap]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:849:5+1
    assume {:print "$track_local(38,50,1):", $t1} $t1 == $t1;

    // $t9 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:23+1
    assume {:print "$at(131,39925,39926)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := ==($t0, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:20+2
    $t10 := $IsEqual'u64'($t0, $t9);

    // if ($t10) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:851:9+47
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:13+6
    assume {:print "$at(131,39942,39948)"} true;
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:852:13+6
    assume {:print "$at(131,39942,39948)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:28+9
    assume {:print "$at(131,40171,40180)"} true;
L0:

    // $t11 := get_field<stake::OwnerCapability>.pool_address($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:28+22
    assume {:print "$at(131,40171,40193)"} true;
    $t11 := $pool_address#$1_stake_OwnerCapability($t1);

    // trace_local[pool_address]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:857:13+12
    assume {:print "$track_local(38,50,3):", $t11} $t11 == $t11;

    // stake::assert_stake_pool_exists($t11) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:858:9+38
    assume {:print "$at(131,40203,40241)"} true;
    call $1_stake_assert_stake_pool_exists($t11);
    if ($abort_flag) {
        assume {:print "$at(131,40203,40241)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t13 := borrow_global<stake::StakePool>($t11) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:26+17
    assume {:print "$at(131,40268,40285)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t11)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $Mutation($Global($t11), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t11));
    }
    if ($abort_flag) {
        assume {:print "$at(131,40268,40285)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[stake_pool]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:859:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t13);
    assume {:print "$track_local(38,50,4):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // $t14 := get_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:46+18
    assume {:print "$at(131,40414,40432)"} true;
    $t14 := $active#$1_stake_StakePool($Dereference($t13));

    // assume Identical($t15, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t15 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t16 := coin::value<aptos_coin::AptosCoin>($t14) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:34+31
    assume {:print "$at(131,40402,40433)"} true;
    call $t16 := $1_coin_value'$1_aptos_coin_AptosCoin'($t14);
    if ($abort_flag) {
        assume {:print "$at(131,40402,40433)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // $t17 := math64::min($t0, $t16) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:22+44
    call $t17 := $1_math64_min($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(131,40390,40434)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // trace_local[amount#1]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:861:13+6
    assume {:print "$track_local(38,50,2):", $t17} $t17 == $t17;

    // $t18 := borrow_field<stake::StakePool>.active($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:44+22
    assume {:print "$at(131,40479,40501)"} true;
    $t18 := $ChildMutation($t13, 0, $active#$1_stake_StakePool($Dereference($t13)));

    // assume Identical($t19, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t19 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t20 := coin::extract<aptos_coin::AptosCoin>($t18, $t17) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:30+45
    assume {:print "$at(131,40465,40510)"} true;
    call $t20,$t18 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t18, $t17);
    if ($abort_flag) {
        assume {:print "$at(131,40465,40510)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).active (coin::Coin<aptos_coin::AptosCoin>)]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:30+45
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_active($Dereference($t13), $Dereference($t18)));

    // trace_local[unlocked_stake]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:862:13+14
    assume {:print "$track_local(38,50,5):", $t20} $t20 == $t20;

    // $t21 := borrow_field<stake::StakePool>.pending_inactive($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:32+32
    assume {:print "$at(131,40543,40575)"} true;
    $t21 := $ChildMutation($t13, 3, $pending_inactive#$1_stake_StakePool($Dereference($t13)));

    // assume Identical($t22, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t22 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::merge<aptos_coin::AptosCoin>($t21, $t20) on_abort goto L3 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:9+72
    assume {:print "$at(131,40520,40592)"} true;
    call $t21 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t21, $t20);
    if ($abort_flag) {
        assume {:print "$at(131,40520,40592)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(38,50):", $t12} $t12 == $t12;
        goto L3;
    }

    // write_back[Reference($t13).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:863:9+72
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t13), $Dereference($t21)));

    // $t23 := borrow_field<stake::StakePool>.unlock_stake_events($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:866:13+35
    assume {:print "$at(131,40634,40669)"} true;
    $t23 := $ChildMutation($t13, 16, $unlock_stake_events#$1_stake_StakePool($Dereference($t13)));

    // $t24 := pack stake::UnlockStakeEvent($t11, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:867:13+103
    assume {:print "$at(131,40683,40786)"} true;
    $t24 := $1_stake_UnlockStakeEvent($t11, $t17);

    // opaque begin: event::emit_event<stake::UnlockStakeEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    assume {:print "$at(131,40603,40797)"} true;

    // opaque end: event::emit_event<stake::UnlockStakeEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194

    // write_back[Reference($t13).unlock_stake_events (event::EventHandle<stake::UnlockStakeEvent>)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    $t13 := $UpdateMutation($t13, $Update'$1_stake_StakePool'_unlock_stake_events($Dereference($t13), $Dereference($t23)));

    // write_back[stake::StakePool@]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:865:9+194
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t13),
        $Dereference($t13));

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(131,40803,40804)"} true;
L2:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(131,40803,40804)"} true;
    return;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
L3:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:872:5+1
    assume {:print "$at(131,40803,40804)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun stake::withdraw_with_cap [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1450
procedure {:inline 1} $1_stake_withdraw_with_cap(_$t0: $1_stake_OwnerCapability, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: bool;
    var $t3: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t4: int;
    var $t5: $Mutation ($1_stake_StakePool);
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_stake_StakePool);
    var $t9: $1_stake_ValidatorSet;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: bool;
    var $t16: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t17: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t19: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t20: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t21: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t22: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t28: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t29: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t30: $Mutation ($1_event_EventHandle'$1_stake_WithdrawStakeEvent');
    var $t31: $1_stake_WithdrawStakeEvent;
    var $t32: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t33: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t34: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_stake_OwnerCapability;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_stake_OwnerCapability': $1_stake_OwnerCapability;
    var $temp_0'$1_stake_StakePool': $1_stake_StakePool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[owner_cap]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$at(131,41404,41405)"} true;
    assume {:print "$track_local(38,56,0):", $t0} $t0 == $t0;

    // trace_local[withdraw_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:887:5+1
    assume {:print "$track_local(38,56,1):", $t1} $t1 == $t1;

    // $t6 := get_field<stake::OwnerCapability>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:891:28+22
    assume {:print "$at(131,41585,41607)"} true;
    $t6 := $pool_address#$1_stake_OwnerCapability($t0);

    // trace_local[pool_address]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:891:13+12
    assume {:print "$track_local(38,56,4):", $t6} $t6 == $t6;

    // stake::assert_stake_pool_exists($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:892:9+38
    assume {:print "$at(131,41617,41655)"} true;
    call $1_stake_assert_stake_pool_exists($t6);
    if ($abort_flag) {
        assume {:print "$at(131,41617,41655)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t8 := borrow_global<stake::StakePool>($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:26+17
    assume {:print "$at(131,41682,41699)"} true;
    if (!$ResourceExists($1_stake_StakePool_$memory, $t6)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t6), EmptyVec(), $ResourceValue($1_stake_StakePool_$memory, $t6));
    }
    if ($abort_flag) {
        assume {:print "$at(131,41682,41699)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[stake_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:893:13+10
    $temp_0'$1_stake_StakePool' := $Dereference($t8);
    assume {:print "$track_local(38,56,5):", $temp_0'$1_stake_StakePool'} $temp_0'$1_stake_StakePool' == $temp_0'$1_stake_StakePool';

    // assume Identical($t9, global<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:246:9+59
    assume {:print "$at(132,10599,10658)"} true;
    assume ($t9 == $ResourceValue($1_stake_ValidatorSet_$memory, 1));

    // $t10 := stake::get_validator_state($t6) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+33
    assume {:print "$at(131,42040,42073)"} true;
    call $t10 := $1_stake_get_validator_state($t6);
    if ($abort_flag) {
        assume {:print "$at(131,42040,42073)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t11 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:50+25
    $t11 := 4;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:47+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:13+24
    assume {:print "$at(131,42118,42142)"} true;
L1:

    // $t13 := timestamp::now_seconds() on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:13+24
    assume {:print "$at(131,42118,42142)"} true;
    call $t13 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(131,42118,42142)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t14 := get_field<stake::StakePool>.locked_until_secs($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:41+28
    $t14 := $locked_until_secs#$1_stake_StakePool($Dereference($t8));

    // $t2 := >=($t13, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:898:38+2
    call $t2 := $Ge($t13, $t14);

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    assume {:print "$at(131,42040,42174)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
L0:

    // $t15 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    assume {:print "$at(131,42040,42174)"} true;
    $t15 := false;
    assume $IsValid'bool'($t15);

    // $t2 := $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
    $t2 := $t15;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:13+134
L2:

    // if ($t2) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:897:9+320
    assume {:print "$at(131,42036,42356)"} true;
    if ($t2) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:65+10
    assume {:print "$at(131,42242,42252)"} true;
L4:

    // $t16 := borrow_field<stake::StakePool>.pending_inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:60+32
    assume {:print "$at(131,42237,42269)"} true;
    $t16 := $ChildMutation($t8, 3, $pending_inactive#$1_stake_StakePool($Dereference($t8)));

    // assume Identical($t17, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t17 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t18 := coin::extract_all<aptos_coin::AptosCoin>($t16) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:42+51
    assume {:print "$at(131,42219,42270)"} true;
    call $t18,$t16 := $1_coin_extract_all'$1_aptos_coin_AptosCoin'($t16);
    if ($abort_flag) {
        assume {:print "$at(131,42219,42270)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).pending_inactive (coin::Coin<aptos_coin::AptosCoin>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:42+51
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_pending_inactive($Dereference($t8), $Dereference($t16)));

    // trace_local[pending_inactive_stake]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:899:17+22
    assume {:print "$track_local(38,56,3):", $t18} $t18 == $t18;

    // $t19 := borrow_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:25+24
    assume {:print "$at(131,42296,42320)"} true;
    $t19 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // assume Identical($t20, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t20 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::merge<aptos_coin::AptosCoin>($t19, $t18) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:13+61
    assume {:print "$at(131,42284,42345)"} true;
    call $t19 := $1_coin_merge'$1_aptos_coin_AptosCoin'($t19, $t18);
    if ($abort_flag) {
        assume {:print "$at(131,42284,42345)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:900:13+61
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t19)));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:31+15
    assume {:print "$at(131,42445,42460)"} true;
L3:

    // $t21 := get_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:60+20
    assume {:print "$at(131,42474,42494)"} true;
    $t21 := $inactive#$1_stake_StakePool($Dereference($t8));

    // assume Identical($t22, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t22 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t23 := coin::value<aptos_coin::AptosCoin>($t21) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:48+33
    assume {:print "$at(131,42462,42495)"} true;
    call $t23 := $1_coin_value'$1_aptos_coin_AptosCoin'($t21);
    if ($abort_flag) {
        assume {:print "$at(131,42462,42495)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // $t24 := math64::min($t1, $t23) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:27+55
    call $t24 := $1_math64_min($t1, $t23);
    if ($abort_flag) {
        assume {:print "$at(131,42441,42496)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_local[withdraw_amount]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:904:9+15
    assume {:print "$track_local(38,56,1):", $t24} $t24 == $t24;

    // $t25 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:32+1
    assume {:print "$at(131,42529,42530)"} true;
    $t25 := 0;
    assume $IsValid'u64'($t25);

    // $t26 := ==($t24, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:29+2
    $t26 := $IsEqual'u64'($t24, $t25);

    // if ($t26) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:9+56
    if ($t26) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
L6:

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$at(131,42532,42562)"} true;
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // destroy($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30

    // assume Identical($t27, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t27 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t28 := coin::zero<aptos_coin::AptosCoin>() on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:42+23
    assume {:print "$at(131,42539,42562)"} true;
    call $t28 := $1_coin_zero'$1_aptos_coin_AptosCoin'();
    if ($abort_flag) {
        assume {:print "$at(131,42539,42562)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // trace_return[0]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    assume {:print "$track_return(38,56,0):", $t28} $t28 == $t28;

    // $t29 := move($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    $t29 := $t28;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:905:35+30
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:908:18+10
    assume {:print "$at(131,42609,42619)"} true;
L5:

    // $t30 := borrow_field<stake::StakePool>.withdraw_stake_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:908:13+37
    assume {:print "$at(131,42604,42641)"} true;
    $t30 := $ChildMutation($t8, 17, $withdraw_stake_events#$1_stake_StakePool($Dereference($t8)));

    // $t31 := pack stake::WithdrawStakeEvent($t6, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:909:13+115
    assume {:print "$at(131,42655,42770)"} true;
    $t31 := $1_stake_WithdrawStakeEvent($t6, $t24);

    // opaque begin: event::emit_event<stake::WithdrawStakeEvent>($t30, $t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208
    assume {:print "$at(131,42573,42781)"} true;

    // opaque end: event::emit_event<stake::WithdrawStakeEvent>($t30, $t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208

    // write_back[Reference($t8).withdraw_stake_events (event::EventHandle<stake::WithdrawStakeEvent>)]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:907:9+208
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_withdraw_stake_events($Dereference($t8), $Dereference($t30)));

    // $t32 := borrow_field<stake::StakePool>.inactive($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:23+24
    assume {:print "$at(131,42806,42830)"} true;
    $t32 := $ChildMutation($t8, 1, $inactive#$1_stake_StakePool($Dereference($t8)));

    // assume Identical($t33, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t33 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t34 := coin::extract<aptos_coin::AptosCoin>($t32, $t24) on_abort goto L8 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    assume {:print "$at(131,42792,42848)"} true;
    call $t34,$t32 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t32, $t24);
    if ($abort_flag) {
        assume {:print "$at(131,42792,42848)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(38,56):", $t7} $t7 == $t7;
        goto L8;
    }

    // write_back[Reference($t8).inactive (coin::Coin<aptos_coin::AptosCoin>)]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $t8 := $UpdateMutation($t8, $Update'$1_stake_StakePool'_inactive($Dereference($t8), $Dereference($t32)));

    // write_back[stake::StakePool@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $1_stake_StakePool_$memory := $ResourceUpdate($1_stake_StakePool_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // trace_return[0]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    assume {:print "$track_return(38,56,0):", $t34} $t34 == $t34;

    // $t29 := move($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:915:9+56
    $t29 := $t34;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(131,42853,42854)"} true;
L7:

    // return $t29 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(131,42853,42854)"} true;
    $ret0 := $t29;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
L8:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.move:916:5+1
    assume {:print "$at(131,42853,42854)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:154:5+155
function {:inline} $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration): int {
    $last_reconfiguration_time#$1_reconfiguration_Configuration($ResourceValue($1_reconfiguration_Configuration_$memory, 1))
}

// struct reconfiguration::Configuration at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:33:5+306
type {:datatype} $1_reconfiguration_Configuration;
function {:constructor} $1_reconfiguration_Configuration($epoch: int, $last_reconfiguration_time: int, $events: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration;
function {:inline} $Update'$1_reconfiguration_Configuration'_epoch(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration(x, $last_reconfiguration_time#$1_reconfiguration_Configuration(s), $events#$1_reconfiguration_Configuration(s))
}
function {:inline} $Update'$1_reconfiguration_Configuration'_last_reconfiguration_time(s: $1_reconfiguration_Configuration, x: int): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch#$1_reconfiguration_Configuration(s), x, $events#$1_reconfiguration_Configuration(s))
}
function {:inline} $Update'$1_reconfiguration_Configuration'_events(s: $1_reconfiguration_Configuration, x: $1_event_EventHandle'$1_reconfiguration_NewEpochEvent'): $1_reconfiguration_Configuration {
    $1_reconfiguration_Configuration($epoch#$1_reconfiguration_Configuration(s), $last_reconfiguration_time#$1_reconfiguration_Configuration(s), x)
}
function $IsValid'$1_reconfiguration_Configuration'(s: $1_reconfiguration_Configuration): bool {
    $IsValid'u64'($epoch#$1_reconfiguration_Configuration(s))
      && $IsValid'u64'($last_reconfiguration_time#$1_reconfiguration_Configuration(s))
      && $IsValid'$1_event_EventHandle'$1_reconfiguration_NewEpochEvent''($events#$1_reconfiguration_Configuration(s))
}
function {:inline} $IsEqual'$1_reconfiguration_Configuration'(s1: $1_reconfiguration_Configuration, s2: $1_reconfiguration_Configuration): bool {
    s1 == s2
}
var $1_reconfiguration_Configuration_$memory: $Memory $1_reconfiguration_Configuration;

// struct reconfiguration::NewEpochEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.move:28:5+64
type {:datatype} $1_reconfiguration_NewEpochEvent;
function {:constructor} $1_reconfiguration_NewEpochEvent($epoch: int): $1_reconfiguration_NewEpochEvent;
function {:inline} $Update'$1_reconfiguration_NewEpochEvent'_epoch(s: $1_reconfiguration_NewEpochEvent, x: int): $1_reconfiguration_NewEpochEvent {
    $1_reconfiguration_NewEpochEvent(x)
}
function $IsValid'$1_reconfiguration_NewEpochEvent'(s: $1_reconfiguration_NewEpochEvent): bool {
    $IsValid'u64'($epoch#$1_reconfiguration_NewEpochEvent(s))
}
function {:inline} $IsEqual'$1_reconfiguration_NewEpochEvent'(s1: $1_reconfiguration_NewEpochEvent, s2: $1_reconfiguration_NewEpochEvent): bool {
    s1 == s2
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:38:10+241
function {:inline} $1_pool_u64_spec_shares(pool: $1_pool_u64_Pool, shareholder: int): int {
    (if ($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool(pool), shareholder)) then ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool(pool), shareholder)) else (0))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:105:10+310
function {:inline} $1_pool_u64_spec_amount_to_shares_with_total_coins(pool: $1_pool_u64_Pool, coins_amount: int, total_coins: int): int {
    (if (($IsEqual'u64'($total_coins#$1_pool_u64_Pool(pool), 0) || $IsEqual'u64'($total_shares#$1_pool_u64_Pool(pool), 0))) then ((coins_amount * $scaling_factor#$1_pool_u64_Pool(pool))) else (((coins_amount * $total_shares#$1_pool_u64_Pool(pool)) div total_coins)))
}

// spec fun at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:129:10+265
function {:inline} $1_pool_u64_spec_shares_to_amount_with_total_coins(pool: $1_pool_u64_Pool, shares: int, total_coins: int): int {
    (if (($IsEqual'u64'($total_coins#$1_pool_u64_Pool(pool), 0) || $IsEqual'u64'($total_shares#$1_pool_u64_Pool(pool), 0))) then (0) else (((shares * total_coins) div $total_shares#$1_pool_u64_Pool(pool))))
}

// struct pool_u64::Pool at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:38:5+449
type {:datatype} $1_pool_u64_Pool;
function {:constructor} $1_pool_u64_Pool($shareholders_limit: int, $total_coins: int, $total_shares: int, $shares: Table int (int), $shareholders: Vec (int), $scaling_factor: int): $1_pool_u64_Pool;
function {:inline} $Update'$1_pool_u64_Pool'_shareholders_limit(s: $1_pool_u64_Pool, x: int): $1_pool_u64_Pool {
    $1_pool_u64_Pool(x, $total_coins#$1_pool_u64_Pool(s), $total_shares#$1_pool_u64_Pool(s), $shares#$1_pool_u64_Pool(s), $shareholders#$1_pool_u64_Pool(s), $scaling_factor#$1_pool_u64_Pool(s))
}
function {:inline} $Update'$1_pool_u64_Pool'_total_coins(s: $1_pool_u64_Pool, x: int): $1_pool_u64_Pool {
    $1_pool_u64_Pool($shareholders_limit#$1_pool_u64_Pool(s), x, $total_shares#$1_pool_u64_Pool(s), $shares#$1_pool_u64_Pool(s), $shareholders#$1_pool_u64_Pool(s), $scaling_factor#$1_pool_u64_Pool(s))
}
function {:inline} $Update'$1_pool_u64_Pool'_total_shares(s: $1_pool_u64_Pool, x: int): $1_pool_u64_Pool {
    $1_pool_u64_Pool($shareholders_limit#$1_pool_u64_Pool(s), $total_coins#$1_pool_u64_Pool(s), x, $shares#$1_pool_u64_Pool(s), $shareholders#$1_pool_u64_Pool(s), $scaling_factor#$1_pool_u64_Pool(s))
}
function {:inline} $Update'$1_pool_u64_Pool'_shares(s: $1_pool_u64_Pool, x: Table int (int)): $1_pool_u64_Pool {
    $1_pool_u64_Pool($shareholders_limit#$1_pool_u64_Pool(s), $total_coins#$1_pool_u64_Pool(s), $total_shares#$1_pool_u64_Pool(s), x, $shareholders#$1_pool_u64_Pool(s), $scaling_factor#$1_pool_u64_Pool(s))
}
function {:inline} $Update'$1_pool_u64_Pool'_shareholders(s: $1_pool_u64_Pool, x: Vec (int)): $1_pool_u64_Pool {
    $1_pool_u64_Pool($shareholders_limit#$1_pool_u64_Pool(s), $total_coins#$1_pool_u64_Pool(s), $total_shares#$1_pool_u64_Pool(s), $shares#$1_pool_u64_Pool(s), x, $scaling_factor#$1_pool_u64_Pool(s))
}
function {:inline} $Update'$1_pool_u64_Pool'_scaling_factor(s: $1_pool_u64_Pool, x: int): $1_pool_u64_Pool {
    $1_pool_u64_Pool($shareholders_limit#$1_pool_u64_Pool(s), $total_coins#$1_pool_u64_Pool(s), $total_shares#$1_pool_u64_Pool(s), $shares#$1_pool_u64_Pool(s), $shareholders#$1_pool_u64_Pool(s), x)
}
function $IsValid'$1_pool_u64_Pool'(s: $1_pool_u64_Pool): bool {
    $IsValid'u64'($shareholders_limit#$1_pool_u64_Pool(s))
      && $IsValid'u64'($total_coins#$1_pool_u64_Pool(s))
      && $IsValid'u64'($total_shares#$1_pool_u64_Pool(s))
      && $IsValid'$1_simple_map_SimpleMap'address_u64''($shares#$1_pool_u64_Pool(s))
      && $IsValid'vec'address''($shareholders#$1_pool_u64_Pool(s))
      && $IsValid'u64'($scaling_factor#$1_pool_u64_Pool(s))
}
function {:inline} $IsEqual'$1_pool_u64_Pool'(s1: $1_pool_u64_Pool, s2: $1_pool_u64_Pool): bool {
    $IsEqual'u64'($shareholders_limit#$1_pool_u64_Pool(s1), $shareholders_limit#$1_pool_u64_Pool(s2))
    && $IsEqual'u64'($total_coins#$1_pool_u64_Pool(s1), $total_coins#$1_pool_u64_Pool(s2))
    && $IsEqual'u64'($total_shares#$1_pool_u64_Pool(s1), $total_shares#$1_pool_u64_Pool(s2))
    && $IsEqual'$1_simple_map_SimpleMap'address_u64''($shares#$1_pool_u64_Pool(s1), $shares#$1_pool_u64_Pool(s2))
    && $IsEqual'vec'address''($shareholders#$1_pool_u64_Pool(s1), $shareholders#$1_pool_u64_Pool(s2))
    && $IsEqual'u64'($scaling_factor#$1_pool_u64_Pool(s1), $scaling_factor#$1_pool_u64_Pool(s2))}

// fun pool_u64::contains [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:91:5+129
procedure {:inline 1} $1_pool_u64_contains(_$t0: $1_pool_u64_Pool, _$t1: int) returns ($ret0: bool)
{
    // declare local variables
    var $t2: Table int (int);
    var $t3: bool;
    var $t4: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:91:5+1
    assume {:print "$at(58,3640,3641)"} true;
    assume {:print "$track_local(55,5,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:91:5+1
    assume {:print "$track_local(55,5,1):", $t1} $t1 == $t1;

    // $t2 := get_field<pool_u64::Pool>.shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:92:34+12
    assume {:print "$at(58,3736,3748)"} true;
    $t2 := $shares#$1_pool_u64_Pool($t0);

    // $t3 := simple_map::contains_key<address, u64>($t2, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:92:9+52
    call $t3 := $1_simple_map_contains_key'address_u64'($t2, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,3711,3763)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,5):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:92:9+52
    assume {:print "$track_return(55,5,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:93:5+1
    assume {:print "$at(58,3768,3769)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:93:5+1
    assume {:print "$at(58,3768,3769)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:93:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:93:5+1
    assume {:print "$at(58,3768,3769)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64::to_u128 [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:259:5+57
procedure {:inline 1} $1_pool_u64_to_u128(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t0: int;
    var $temp_0'u128': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[num]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:259:5+1
    assume {:print "$at(58,11442,11443)"} true;
    assume {:print "$track_local(55,17,0):", $t0} $t0 == $t0;

    // $t1 := (u128)($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:260:9+13
    assume {:print "$at(58,11480,11493)"} true;
    call $t1 := $CastU128($t0);
    if ($abort_flag) {
        assume {:print "$at(58,11480,11493)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(55,17):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:260:9+13
    assume {:print "$track_return(55,17,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:261:5+1
    assume {:print "$at(58,11498,11499)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:261:5+1
    assume {:print "$at(58,11498,11499)"} true;
    $ret0 := $t1;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:261:5+1
L2:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:261:5+1
    assume {:print "$at(58,11498,11499)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun pool_u64::balance [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:105:5+161
procedure {:inline 1} $1_pool_u64_balance(_$t0: $1_pool_u64_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, pool_u64::spec_shares($t0, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:53:9+44
    assume {:print "$at(59,1730,1774)"} true;
    assume ($t3 == $1_pool_u64_spec_shares($t0, $t1));

    // assume Identical($t4, select pool_u64::Pool.total_coins($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:54:9+35
    assume {:print "$at(59,1783,1818)"} true;
    assume ($t4 == $total_coins#$1_pool_u64_Pool($t0));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:105:5+1
    assume {:print "$at(58,4118,4119)"} true;
    assume {:print "$track_local(55,3,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:105:5+1
    assume {:print "$track_local(55,3,1):", $t1} $t1 == $t1;

    // $t5 := pool_u64::shares($t0, $t1) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:106:26+25
    assume {:print "$at(58,4204,4229)"} true;
    call $t5 := $1_pool_u64_shares($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,4204,4229)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(55,3):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[num_shares]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:106:13+10
    assume {:print "$track_local(55,3,2):", $t5} $t5 == $t5;

    // $t7 := pool_u64::shares_to_amount($t0, $t5) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:107:9+34
    assume {:print "$at(58,4239,4273)"} true;
    call $t7 := $1_pool_u64_shares_to_amount($t0, $t5);
    if ($abort_flag) {
        assume {:print "$at(58,4239,4273)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(55,3):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_return[0]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:107:9+34
    assume {:print "$track_return(55,3,0):", $t7} $t7 == $t7;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:108:5+1
    assume {:print "$at(58,4278,4279)"} true;
L1:

    // return $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:108:5+1
    assume {:print "$at(58,4278,4279)"} true;
    $ret0 := $t7;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:108:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:108:5+1
    assume {:print "$at(58,4278,4279)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun pool_u64::add_shares [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:141:5+900
procedure {:inline 1} $1_pool_u64_add_shares(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int, _$t2: int) returns ($ret0: int, $ret1: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation (int);
    var $t8: bool;
    var $t9: bool;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: $1_pool_u64_Pool;
    var $t14: bool;
    var $t15: int;
    var $t16: $Mutation (Table int (int));
    var $t17: $Mutation (int);
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: int;
    var $t32: int;
    var $t33: $Mutation (Vec (int));
    var $t34: $Mutation (Table int (int));
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t8, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:74:9+73
    assume {:print "$at(59,2864,2937)"} true;
    assume ($t8 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t9, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:83:9+73
    assume {:print "$at(59,3186,3259)"} true;
    assume ($t9 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t10, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:84:9+68
    assume {:print "$at(59,3268,3336)"} true;
    assume ($t10 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t11, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:94:9+73
    assume {:print "$at(59,3636,3709)"} true;
    assume ($t11 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t12, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:95:9+68
    assume {:print "$at(59,3718,3786)"} true;
    assume ($t12 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:141:5+1
    assume {:print "$at(58,5643,5644)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,0,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:141:5+1
    assume {:print "$track_local(55,0,1):", $t1} $t1 == $t1;

    // trace_local[new_shares]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:141:5+1
    assume {:print "$track_local(55,0,2):", $t2} $t2 == $t2;

    // $t13 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:21+19
    assume {:print "$at(58,5741,5760)"} true;
    $t13 := $Dereference($t0);

    // $t14 := pool_u64::contains($t13, $t1) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:13+27
    call $t14 := $1_pool_u64_contains($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,5733,5760)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // if ($t14) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
    if ($t14) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:143:63+4
    assume {:print "$at(58,5826,5830)"} true;
L1:

    // $t16 := borrow_field<pool_u64::Pool>.shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:143:58+16
    assume {:print "$at(58,5821,5837)"} true;
    $t16 := $ChildMutation($t0, 3, $shares#$1_pool_u64_Pool($Dereference($t0)));

    // $t17 := simple_map::borrow_mut<address, u64>($t16, $t1) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:143:35+54
    call $t17,$t16 := $1_simple_map_borrow_mut'address_u64'($t16, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,5798,5852)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // trace_local[existing_shares]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:143:17+15
    $temp_0'u64' := $Dereference($t17);
    assume {:print "$track_local(55,0,7):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t18 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:144:34+16
    assume {:print "$at(58,5887,5903)"} true;
    $t18 := $Dereference($t17);

    // trace_local[current_shares]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:144:17+14
    assume {:print "$track_local(55,0,6):", $t18} $t18 == $t18;

    // $t19 := 18446744073709551615 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:21+7
    assume {:print "$at(58,5925,5932)"} true;
    $t19 := 18446744073709551615;
    assume $IsValid'u64'($t19);

    // $t20 := -($t19, $t18) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:29+1
    call $t20 := $Sub($t19, $t18);
    if ($abort_flag) {
        assume {:print "$at(58,5933,5934)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // $t21 := >=($t20, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:46+2
    call $t21 := $Ge($t20, $t2);

    // if ($t21) goto L3 else goto L15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
    if ($t21) { goto L3; } else { goto L15; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
L3:

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
    assume {:print "$at(58,5917,6019)"} true;
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
L2:

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
    assume {:print "$at(58,5917,6019)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,0,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // destroy($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102

    // $t22 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:85+28
    $t22 := 5;
    assume $IsValid'u64'($t22);

    // $t23 := error::invalid_argument($t22) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:61+53
    call $t23 := $1_error_invalid_argument($t22);
    if ($abort_flag) {
        assume {:print "$at(58,5965,6018)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // trace_abort($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
    assume {:print "$at(58,5917,6019)"} true;
    assume {:print "$track_abort(55,0):", $t23} $t23 == $t23;

    // $t15 := move($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
    $t15 := $t23;

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:145:13+102
    goto L14;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:147:32+14
    assume {:print "$at(58,6053,6067)"} true;
L4:

    // $t24 := +($t18, $t2) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:147:47+1
    assume {:print "$at(58,6068,6069)"} true;
    call $t24 := $AddU64($t18, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,6068,6069)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // write_ref($t17, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:147:13+46
    $t17 := $UpdateMutation($t17, $t24);

    // $t5 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:148:13+16
    assume {:print "$at(58,6094,6110)"} true;
    $t5 := $Dereference($t17);

    // write_back[Reference($t16)[]]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:148:13+16
    $t16 := $UpdateMutation($t16, UpdateTable($Dereference($t16), ReadVec(p#$Mutation($t17), LenVec(p#$Mutation($t16))), $Dereference($t17)));

    // write_back[Reference($t0).shares (simple_map::SimpleMap<address, u64>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:148:13+16
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_shares($Dereference($t0), $Dereference($t16)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:148:13+16
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,0,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
    assume {:print "$at(58,5729,6537)"} true;
    goto L5;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:20+10
    assume {:print "$at(58,6130,6140)"} true;
L0:

    // $t25 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:33+1
    assume {:print "$at(58,6143,6144)"} true;
    $t25 := 0;
    assume $IsValid'u64'($t25);

    // $t26 := >($t2, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:31+1
    call $t26 := $Gt($t2, $t25);

    // if ($t26) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:16+411
    if ($t26) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:151:33+4
    assume {:print "$at(58,6201,6205)"} true;
L7:

    // $t27 := get_field<pool_u64::Pool>.shareholders($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:151:32+18
    assume {:print "$at(58,6200,6218)"} true;
    $t27 := $shareholders#$1_pool_u64_Pool($Dereference($t0));

    // $t28 := vector::length<address>($t27) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:151:17+34
    call $t28 := $1_vector_length'address'($t27);
    if ($abort_flag) {
        assume {:print "$at(58,6185,6219)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // $t29 := get_field<pool_u64::Pool>.shareholders_limit($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:151:54+23
    $t29 := $shareholders_limit#$1_pool_u64_Pool($Dereference($t0));

    // $t30 := <($t28, $t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:151:52+1
    call $t30 := $Lt($t28, $t29);

    // if ($t30) goto L9 else goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
    assume {:print "$at(58,6160,6322)"} true;
    if ($t30) { goto L9; } else { goto L8; }

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
L9:

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
    assume {:print "$at(58,6160,6322)"} true;
    goto L10;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
L8:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
    assume {:print "$at(58,6160,6322)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162

    // $t31 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:152:38+22
    assume {:print "$at(58,6284,6306)"} true;
    $t31 := 2;
    assume $IsValid'u64'($t31);

    // $t32 := error::invalid_state($t31) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:152:17+44
    call $t32 := $1_error_invalid_state($t31);
    if ($abort_flag) {
        assume {:print "$at(58,6263,6307)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // trace_abort($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
    assume {:print "$at(58,6160,6322)"} true;
    assume {:print "$track_abort(55,0):", $t32} $t32 == $t32;

    // $t15 := move($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
    $t15 := $t32;

    // goto L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:150:13+162
    goto L14;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:155:36+4
    assume {:print "$at(58,6360,6364)"} true;
L10:

    // $t33 := borrow_field<pool_u64::Pool>.shareholders($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:155:31+22
    assume {:print "$at(58,6355,6377)"} true;
    $t33 := $ChildMutation($t0, 4, $shareholders#$1_pool_u64_Pool($Dereference($t0)));

    // vector::push_back<address>($t33, $t1) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:155:13+54
    call $t33 := $1_vector_push_back'address'($t33, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,6337,6391)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // write_back[Reference($t0).shareholders (vector<address>)]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:155:13+54
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_shareholders($Dereference($t0), $Dereference($t33)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:155:13+54
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,0,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // $t34 := borrow_field<pool_u64::Pool>.shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:156:29+16
    assume {:print "$at(58,6421,6437)"} true;
    $t34 := $ChildMutation($t0, 3, $shares#$1_pool_u64_Pool($Dereference($t0)));

    // simple_map::add<address, u64>($t34, $t1, $t2) on_abort goto L14 with $t15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:156:13+58
    call $t34 := $1_simple_map_add'address_u64'($t34, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,6405,6463)"} true;
        $t15 := $abort_code;
        assume {:print "$track_abort(55,0):", $t15} $t15 == $t15;
        goto L14;
    }

    // write_back[Reference($t0).shares (simple_map::SimpleMap<address, u64>)]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:156:13+58
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_shares($Dereference($t0), $Dereference($t34)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:156:13+58
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,0,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:16+411
    assume {:print "$at(58,6126,6537)"} true;
    goto L11;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:16+411
L6:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:16+411
    assume {:print "$at(58,6126,6537)"} true;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:149:16+411
L11:

    // $t5 := $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
    assume {:print "$at(58,5729,6537)"} true;
    $t5 := $t2;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
L5:

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
    assume {:print "$at(58,5729,6537)"} true;
    assume {:print "$track_return(55,0,0):", $t5} $t5 == $t5;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,0,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808

    // goto L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:142:9+808
    goto L13;

    // label L12 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L12:

    // destroy($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L2 at <internal>:1:1+10
    goto L2;

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:161:5+1
    assume {:print "$at(58,6542,6543)"} true;
L13:

    // return $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:161:5+1
    assume {:print "$at(58,6542,6543)"} true;
    $ret0 := $t5;
    $ret1 := $t0;
    return;

    // label L14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:161:5+1
L14:

    // abort($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:161:5+1
    assume {:print "$at(58,6542,6543)"} true;
    $abort_code := $t15;
    $abort_flag := true;
    return;

    // label L15 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L15:

    // destroy($t16) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L12 at <internal>:1:1+10
    goto L12;

}

// fun pool_u64::amount_to_shares [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:214:5+152
procedure {:inline 1} $1_pool_u64_amount_to_shares(_$t0: $1_pool_u64_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:214:5+1
    assume {:print "$at(58,8989,8990)"} true;
    assume {:print "$track_local(55,1,0):", $t0} $t0 == $t0;

    // trace_local[coins_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:214:5+1
    assume {:print "$track_local(55,1,1):", $t1} $t1 == $t1;

    // $t2 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:215:63+16
    assume {:print "$at(58,9118,9134)"} true;
    $t2 := $total_coins#$1_pool_u64_Pool($t0);

    // $t3 := pool_u64::amount_to_shares_with_total_coins($t0, $t1, $t2) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:215:9+71
    call $t3 := $1_pool_u64_amount_to_shares_with_total_coins($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,9064,9135)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,1):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:215:9+71
    assume {:print "$track_return(55,1,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:216:5+1
    assume {:print "$at(58,9140,9141)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:216:5+1
    assume {:print "$at(58,9140,9141)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:216:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:216:5+1
    assume {:print "$at(58,9140,9141)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64::amount_to_shares_with_total_coins [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:220:5+904
procedure {:inline 1} $1_pool_u64_amount_to_shares_with_total_coins(_$t0: $1_pool_u64_Pool, _$t1: int, _$t2: int) returns ($ret0: int)
{
    // declare local variables
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:220:5+1
    assume {:print "$at(58,9317,9318)"} true;
    assume {:print "$track_local(55,2,0):", $t0} $t0 == $t0;

    // trace_local[coins_amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:220:5+1
    assume {:print "$track_local(55,2,1):", $t1} $t1 == $t1;

    // trace_local[total_coins]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:220:5+1
    assume {:print "$track_local(55,2,2):", $t2} $t2 == $t2;

    // $t5 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+16
    assume {:print "$at(58,9502,9518)"} true;
    $t5 := $total_coins#$1_pool_u64_Pool($t0);

    // $t6 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:33+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:30+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+47
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+47
L1:

    // $t8 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+47
    assume {:print "$at(58,9502,9549)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t3 := $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+47
    $t3 := $t8;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+47
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:38+4
L0:

    // $t9 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:38+17
    assume {:print "$at(58,9527,9544)"} true;
    $t9 := $total_shares#$1_pool_u64_Pool($t0);

    // $t10 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:59+1
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // $t3 := ==($t9, $t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:56+2
    $t3 := $IsEqual'u64'($t9, $t10);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:13+47
L2:

    // if ($t3) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:9+717
    assume {:print "$at(58,9498,10215)"} true;
    if ($t3) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:225:13+12
    assume {:print "$at(58,9800,9812)"} true;
L4:

    // $t11 := get_field<pool_u64::Pool>.scaling_factor($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:225:28+19
    assume {:print "$at(58,9815,9834)"} true;
    $t11 := $scaling_factor#$1_pool_u64_Pool($t0);

    // $t4 := *($t1, $t11) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:225:26+1
    call $t4 := $MulU64($t1, $t11);
    if ($abort_flag) {
        assume {:print "$at(58,9813,9814)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:9+717
    assume {:print "$at(58,9498,10215)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:230:34+4
    assume {:print "$at(58,10154,10158)"} true;
L3:

    // $t13 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:230:54+17
    assume {:print "$at(58,10174,10191)"} true;
    $t13 := $total_shares#$1_pool_u64_Pool($t0);

    // $t4 := pool_u64::multiply_then_divide($t0, $t1, $t13, $t2) on_abort goto L7 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:230:13+72
    call $t4 := $1_pool_u64_multiply_then_divide($t0, $t1, $t13, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,10133,10205)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,2):", $t12} $t12 == $t12;
        goto L7;
    }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:9+717
    assume {:print "$at(58,9498,10215)"} true;
L5:

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:222:9+717
    assume {:print "$at(58,9498,10215)"} true;
    assume {:print "$track_return(55,2,0):", $t4} $t4 == $t4;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:232:5+1
    assume {:print "$at(58,10220,10221)"} true;
L6:

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:232:5+1
    assume {:print "$at(58,10220,10221)"} true;
    $ret0 := $t4;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:232:5+1
L7:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:232:5+1
    assume {:print "$at(58,10220,10221)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun pool_u64::total_coins [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:81:5+73
procedure {:inline 1} $1_pool_u64_total_coins(_$t0: $1_pool_u64_Pool) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t0: $1_pool_u64_Pool;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:81:5+1
    assume {:print "$at(58,3352,3353)"} true;
    assume {:print "$track_local(55,18,0):", $t0} $t0 == $t0;

    // $t1 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:82:9+16
    assume {:print "$at(58,3403,3419)"} true;
    $t1 := $total_coins#$1_pool_u64_Pool($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:82:9+16
    assume {:print "$track_return(55,18,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:83:5+1
    assume {:print "$at(58,3424,3425)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:83:5+1
    assume {:print "$at(58,3424,3425)"} true;
    $ret0 := $t1;
    return;

}

// fun pool_u64::buy_in [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:126:5+611
procedure {:inline 1} $1_pool_u64_buy_in(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int, _$t2: int) returns ($ret0: int, $ret1: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: $1_pool_u64_Pool;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: $Mutation (int);
    var $t32: int;
    var $t33: int;
    var $t34: $Mutation (int);
    var $t35: bool;
    var $t36: bool;
    var $t37: int;
    var $t38: bool;
    var $t39: int;
    var $t40: int;
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t5, pool_u64::spec_amount_to_shares_with_total_coins($t0, $t2, select pool_u64::Pool.total_coins($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:60:9+94
    assume {:print "$at(59,2129,2223)"} true;
    assume ($t5 == $1_pool_u64_spec_amount_to_shares_with_total_coins($Dereference($t0), $t2, $total_coins#$1_pool_u64_Pool($Dereference($t0))));

    // assume Identical($t6, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:83:9+73
    assume {:print "$at(59,3186,3259)"} true;
    assume ($t6 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t7, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:84:9+68
    assume {:print "$at(59,3268,3336)"} true;
    assume ($t7 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t8, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:94:9+73
    assume {:print "$at(59,3636,3709)"} true;
    assume ($t8 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t9, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:95:9+68
    assume {:print "$at(59,3718,3786)"} true;
    assume ($t9 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:126:5+1
    assume {:print "$at(58,4864,4865)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,4,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:126:5+1
    assume {:print "$track_local(55,4,1):", $t1} $t1 == $t1;

    // trace_local[coins_amount]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:126:5+1
    assume {:print "$track_local(55,4,2):", $t2} $t2 == $t2;

    // $t10 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:29+1
    assume {:print "$at(58,4975,4976)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // $t11 := ==($t2, $t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:26+2
    $t11 := $IsEqual'u64'($t2, $t10);

    // if ($t11) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:9+31
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8
L1:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8
    assume {:print "$at(58,4978,4986)"} true;

    // $t12 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:39+1
    $t12 := 0;
    assume $IsValid'u64'($t12);

    // trace_return[0]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8
    assume {:print "$track_return(55,4,0):", $t12} $t12 == $t12;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,4,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8

    // $t13 := move($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8
    $t13 := $t12;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:127:32+8
    goto L8;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:129:43+4
    assume {:print "$at(58,5031,5035)"} true;
L0:

    // $t14 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:129:42+20
    assume {:print "$at(58,5030,5050)"} true;
    $t14 := $Dereference($t0);

    // $t15 := pool_u64::amount_to_shares($t14, $t2) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:129:26+36
    call $t15 := $1_pool_u64_amount_to_shares($t14, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,5014,5050)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // trace_local[new_shares]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:129:13+10
    assume {:print "$track_local(55,4,4):", $t15} $t15 == $t15;

    // $t17 := 18446744073709551615 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:17+7
    assume {:print "$at(58,5068,5075)"} true;
    $t17 := 18446744073709551615;
    assume $IsValid'u64'($t17);

    // $t18 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:27+16
    $t18 := $total_coins#$1_pool_u64_Pool($Dereference($t0));

    // $t19 := -($t17, $t18) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:25+1
    call $t19 := $Sub($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(58,5076,5077)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t20 := >=($t19, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:44+2
    call $t20 := $Ge($t19, $t2);

    // if ($t20) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
    if ($t20) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
L3:

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
    assume {:print "$at(58,5060,5164)"} true;
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
L2:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
    assume {:print "$at(58,5060,5164)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104

    // $t21 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:85+26
    $t21 := 6;
    assume $IsValid'u64'($t21);

    // $t22 := error::invalid_argument($t21) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:61+51
    call $t22 := $1_error_invalid_argument($t21);
    if ($abort_flag) {
        assume {:print "$at(58,5112,5163)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // trace_abort($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
    assume {:print "$at(58,5060,5164)"} true;
    assume {:print "$track_abort(55,4):", $t22} $t22 == $t22;

    // $t16 := move($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
    $t16 := $t22;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:130:9+104
    goto L9;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:17+7
    assume {:print "$at(58,5182,5189)"} true;
L4:

    // $t23 := 18446744073709551615 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:17+7
    assume {:print "$at(58,5182,5189)"} true;
    $t23 := 18446744073709551615;
    assume $IsValid'u64'($t23);

    // $t24 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:27+17
    $t24 := $total_shares#$1_pool_u64_Pool($Dereference($t0));

    // $t25 := -($t23, $t24) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:25+1
    call $t25 := $Sub($t23, $t24);
    if ($abort_flag) {
        assume {:print "$at(58,5190,5191)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t26 := >=($t25, $t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:45+2
    call $t26 := $Ge($t25, $t15);

    // if ($t26) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
    if ($t26) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
L6:

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
    assume {:print "$at(58,5174,5277)"} true;
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
L5:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
    assume {:print "$at(58,5174,5277)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103

    // $t27 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:84+26
    $t27 := 6;
    assume $IsValid'u64'($t27);

    // $t28 := error::invalid_argument($t27) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:60+51
    call $t28 := $1_error_invalid_argument($t27);
    if ($abort_flag) {
        assume {:print "$at(58,5225,5276)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // trace_abort($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
    assume {:print "$at(58,5174,5277)"} true;
    assume {:print "$track_abort(55,4):", $t28} $t28 == $t28;

    // $t16 := move($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
    $t16 := $t28;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:131:9+103
    goto L9;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:28+4
    assume {:print "$at(58,5307,5311)"} true;
L7:

    // $t29 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:28+16
    assume {:print "$at(58,5307,5323)"} true;
    $t29 := $total_coins#$1_pool_u64_Pool($Dereference($t0));

    // $t30 := +($t29, $t2) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:45+1
    call $t30 := $AddU64($t29, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,5324,5325)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t31 := borrow_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:9+16
    $t31 := $ChildMutation($t0, 1, $total_coins#$1_pool_u64_Pool($Dereference($t0)));

    // write_ref($t31, $t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:9+50
    $t31 := $UpdateMutation($t31, $t30);

    // write_back[Reference($t0).total_coins (u64)]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:9+50
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_total_coins($Dereference($t0), $Dereference($t31)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:133:9+50
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,4,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // $t32 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:134:29+17
    assume {:print "$at(58,5368,5385)"} true;
    $t32 := $total_shares#$1_pool_u64_Pool($Dereference($t0));

    // $t33 := +($t32, $t15) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:134:47+1
    call $t33 := $AddU64($t32, $t15);
    if ($abort_flag) {
        assume {:print "$at(58,5386,5387)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // $t34 := borrow_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:134:9+17
    $t34 := $ChildMutation($t0, 2, $total_shares#$1_pool_u64_Pool($Dereference($t0)));

    // write_ref($t34, $t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:134:9+50
    $t34 := $UpdateMutation($t34, $t33);

    // write_back[Reference($t0).total_shares (u64)]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:134:9+50
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_total_shares($Dereference($t0), $Dereference($t34)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:134:9+50
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,4,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // assume Identical($t35, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:74:9+73
    assume {:print "$at(59,2864,2937)"} true;
    assume ($t35 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t36, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:83:9+73
    assume {:print "$at(59,3186,3259)"} true;
    assume ($t36 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t37, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:84:9+68
    assume {:print "$at(59,3268,3336)"} true;
    assume ($t37 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t38, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:94:9+73
    assume {:print "$at(59,3636,3709)"} true;
    assume ($t38 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // assume Identical($t39, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:95:9+68
    assume {:print "$at(59,3718,3786)"} true;
    assume ($t39 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1));

    // $t40 := pool_u64::add_shares($t0, $t1, $t15) on_abort goto L9 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:135:9+41
    assume {:print "$at(58,5408,5449)"} true;
    call $t40,$t0 := $1_pool_u64_add_shares($t0, $t1, $t15);
    if ($abort_flag) {
        assume {:print "$at(58,5408,5449)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(55,4):", $t16} $t16 == $t16;
        goto L9;
    }

    // destroy($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:135:9+41

    // trace_return[0]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:136:9+10
    assume {:print "$at(58,5459,5469)"} true;
    assume {:print "$track_return(55,4,0):", $t15} $t15 == $t15;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:136:9+10
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,4,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:136:9+10

    // $t13 := move($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:136:9+10
    $t13 := $t15;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:137:5+1
    assume {:print "$at(58,5474,5475)"} true;
L8:

    // return $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:137:5+1
    assume {:print "$at(58,5474,5475)"} true;
    $ret0 := $t13;
    $ret1 := $t0;
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:137:5+1
L9:

    // abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:137:5+1
    assume {:print "$at(58,5474,5475)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun pool_u64::deduct_shares [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:194:5+857
procedure {:inline 1} $1_pool_u64_deduct_shares(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int, _$t2: int) returns ($ret0: int, $ret1: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation (int);
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: $1_pool_u64_Pool;
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $1_pool_u64_Pool;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: $Mutation (Table int (int));
    var $t21: $Mutation (int);
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: Vec (int);
    var $t28: bool;
    var $t29: int;
    var $t30: $Mutation (Vec (int));
    var $t31: int;
    var $t32: $Mutation (Table int (int));
    var $t33: int;
    var $t34: int;
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t8, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:173:9+83
    assume {:print "$at(59,7278,7361)"} true;
    assume ($t8 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t2));

    // assume Identical($t9, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:181:9+83
    assume {:print "$at(59,7643,7726)"} true;
    assume ($t9 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t2));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:194:5+1
    assume {:print "$at(58,7989,7990)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,8,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:194:5+1
    assume {:print "$track_local(55,8,1):", $t1} $t1 == $t1;

    // trace_local[num_shares]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:194:5+1
    assume {:print "$track_local(55,8,2):", $t2} $t2 == $t2;

    // $t10 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:25+19
    assume {:print "$at(58,8094,8113)"} true;
    $t10 := $Dereference($t0);

    // $t11 := pool_u64::contains($t10, $t1) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:17+27
    call $t11 := $1_pool_u64_contains($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,8086,8113)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // if ($t11) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
    if ($t11) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
    assume {:print "$at(58,8078,8163)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
L0:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
    assume {:print "$at(58,8078,8163)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85

    // $t13 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:70+22
    $t13 := 1;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_argument($t13) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:46+47
    call $t14 := $1_error_invalid_argument($t13);
    if ($abort_flag) {
        assume {:print "$at(58,8115,8162)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
    assume {:print "$at(58,8078,8163)"} true;
    assume {:print "$track_abort(55,8):", $t14} $t14 == $t14;

    // $t12 := move($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
    $t12 := $t14;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:195:9+85
    goto L10;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:24+4
    assume {:print "$at(58,8188,8192)"} true;
L2:

    // $t15 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:23+19
    assume {:print "$at(58,8187,8206)"} true;
    $t15 := $Dereference($t0);

    // $t16 := pool_u64::shares($t15, $t1) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:17+25
    call $t16 := $1_pool_u64_shares($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,8181,8206)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // $t17 := >=($t16, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:43+2
    call $t17 := $Ge($t16, $t2);

    // if ($t17) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
    if ($t17) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
    assume {:print "$at(58,8173,8268)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
L3:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
    assume {:print "$at(58,8173,8268)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95

    // $t18 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:82+20
    $t18 := 4;
    assume $IsValid'u64'($t18);

    // $t19 := error::invalid_argument($t18) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:58+45
    call $t19 := $1_error_invalid_argument($t18);
    if ($abort_flag) {
        assume {:print "$at(58,8222,8267)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
    assume {:print "$at(58,8173,8268)"} true;
    assume {:print "$track_abort(55,8):", $t19} $t19 == $t19;

    // $t12 := move($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
    $t12 := $t19;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:196:9+95
    goto L10;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:198:59+4
    assume {:print "$at(58,8329,8333)"} true;
L5:

    // $t20 := borrow_field<pool_u64::Pool>.shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:198:54+16
    assume {:print "$at(58,8324,8340)"} true;
    $t20 := $ChildMutation($t0, 3, $shares#$1_pool_u64_Pool($Dereference($t0)));

    // $t21 := simple_map::borrow_mut<address, u64>($t20, $t1) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:198:31+54
    call $t21,$t20 := $1_simple_map_borrow_mut'address_u64'($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,8301,8355)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[existing_shares]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:198:13+15
    $temp_0'u64' := $Dereference($t21);
    assume {:print "$track_local(55,8,5):", $temp_0'u64'} $temp_0'u64' == $temp_0'u64';

    // $t22 := read_ref($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:199:28+16
    assume {:print "$at(58,8384,8400)"} true;
    $t22 := $Dereference($t21);

    // $t23 := -($t22, $t2) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:199:45+1
    call $t23 := $Sub($t22, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,8401,8402)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // write_ref($t21, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:199:9+48
    $t21 := $UpdateMutation($t21, $t23);

    // $t24 := read_ref($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:202:32+16
    assume {:print "$at(58,8521,8537)"} true;
    $t24 := $Dereference($t21);

    // write_back[Reference($t20)[]]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:202:32+16
    $t20 := $UpdateMutation($t20, UpdateTable($Dereference($t20), ReadVec(p#$Mutation($t21), LenVec(p#$Mutation($t20))), $Dereference($t21)));

    // write_back[Reference($t0).shares (simple_map::SimpleMap<address, u64>)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:202:32+16
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_shares($Dereference($t0), $Dereference($t20)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:202:32+16
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,8,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[remaining_shares]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:202:13+16
    assume {:print "$track_local(55,8,6):", $t24} $t24 == $t24;

    // $t25 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:203:33+1
    assume {:print "$at(58,8571,8572)"} true;
    $t25 := 0;
    assume $IsValid'u64'($t25);

    // $t26 := ==($t24, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:203:30+2
    $t26 := $IsEqual'u64'($t24, $t25);

    // if ($t26) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:203:9+266
    if ($t26) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:204:60+4
    assume {:print "$at(58,8635,8639)"} true;
L7:

    // $t27 := get_field<pool_u64::Pool>.shareholders($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:204:59+18
    assume {:print "$at(58,8634,8652)"} true;
    $t27 := $shareholders#$1_pool_u64_Pool($Dereference($t0));

    // ($t28, $t29) := vector::index_of<address>($t27, $t1) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:204:42+50
    call $t28,$t29 := $1_vector_index_of'address'($t27, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,8617,8667)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // trace_local[shareholder_index]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:204:21+17
    assume {:print "$track_local(55,8,7):", $t29} $t29 == $t29;

    // destroy($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:204:18+1

    // $t30 := borrow_field<pool_u64::Pool>.shareholders($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:205:28+22
    assume {:print "$at(58,8696,8718)"} true;
    $t30 := $ChildMutation($t0, 4, $shareholders#$1_pool_u64_Pool($Dereference($t0)));

    // $t31 := vector::remove<address>($t30, $t29) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:205:13+57
    call $t31,$t30 := $1_vector_remove'address'($t30, $t29);
    if ($abort_flag) {
        assume {:print "$at(58,8681,8738)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // write_back[Reference($t0).shareholders (vector<address>)]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:205:13+57
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_shareholders($Dereference($t0), $Dereference($t30)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:205:13+57
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,8,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // destroy($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:205:13+57

    // $t32 := borrow_field<pool_u64::Pool>.shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:32+16
    assume {:print "$at(58,8771,8787)"} true;
    $t32 := $ChildMutation($t0, 3, $shares#$1_pool_u64_Pool($Dereference($t0)));

    // ($t33, $t34) := simple_map::remove<address, u64>($t32, $t1) on_abort goto L10 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:13+50
    call $t33,$t34,$t32 := $1_simple_map_remove'address_u64'($t32, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,8752,8802)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(55,8):", $t12} $t12 == $t12;
        goto L10;
    }

    // write_back[Reference($t0).shares (simple_map::SimpleMap<address, u64>)]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:13+50
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_shares($Dereference($t0), $Dereference($t32)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:13+50
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,8,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // destroy($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:13+50

    // destroy($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:13+50

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:206:63+1
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:203:9+266
    assume {:print "$at(58,8547,8813)"} true;
L6:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:203:9+266
    assume {:print "$at(58,8547,8813)"} true;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:209:9+16
    assume {:print "$at(58,8824,8840)"} true;
L8:

    // trace_return[0]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:209:9+16
    assume {:print "$at(58,8824,8840)"} true;
    assume {:print "$track_return(55,8,0):", $t24} $t24 == $t24;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:209:9+16
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,8,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:209:9+16

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:210:5+1
    assume {:print "$at(58,8845,8846)"} true;
L9:

    // return $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:210:5+1
    assume {:print "$at(58,8845,8846)"} true;
    $ret0 := $t24;
    $ret1 := $t0;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:210:5+1
L10:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:210:5+1
    assume {:print "$at(58,8845,8846)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun pool_u64::multiply_then_divide [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:254:5+167
procedure {:inline 1} $1_pool_u64_multiply_then_divide(_$t0: $1_pool_u64_Pool, _$t1: int, _$t2: int, _$t3: int) returns ($ret0: int)
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:254:5+1
    assume {:print "$at(58,11269,11270)"} true;
    assume {:print "$track_local(55,10,0):", $t0} $t0 == $t0;

    // trace_local[x]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:254:5+1
    assume {:print "$track_local(55,10,1):", $t1} $t1 == $t1;

    // trace_local[y]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:254:5+1
    assume {:print "$track_local(55,10,2):", $t2} $t2 == $t2;

    // trace_local[z]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:254:5+1
    assume {:print "$track_local(55,10,3):", $t3} $t3 == $t3;

    // $t4 := pool_u64::to_u128($t1) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:255:23+10
    assume {:print "$at(58,11368,11378)"} true;
    call $t4 := $1_pool_u64_to_u128($t1);
    if ($abort_flag) {
        assume {:print "$at(58,11368,11378)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t6 := pool_u64::to_u128($t2) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:255:36+10
    call $t6 := $1_pool_u64_to_u128($t2);
    if ($abort_flag) {
        assume {:print "$at(58,11381,11391)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := *($t4, $t6) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:255:34+1
    call $t7 := $MulU128($t4, $t6);
    if ($abort_flag) {
        assume {:print "$at(58,11379,11380)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t8 := pool_u64::to_u128($t3) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:255:50+10
    call $t8 := $1_pool_u64_to_u128($t3);
    if ($abort_flag) {
        assume {:print "$at(58,11395,11405)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t9 := /($t7, $t8) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:255:48+1
    call $t9 := $Div($t7, $t8);
    if ($abort_flag) {
        assume {:print "$at(58,11393,11394)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t10 := (u64)($t9) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:256:9+15
    assume {:print "$at(58,11415,11430)"} true;
    call $t10 := $CastU64($t9);
    if ($abort_flag) {
        assume {:print "$at(58,11415,11430)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(55,10):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:256:9+15
    assume {:print "$track_return(55,10,0):", $t10} $t10 == $t10;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:257:5+1
    assume {:print "$at(58,11435,11436)"} true;
L1:

    // return $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:257:5+1
    assume {:print "$at(58,11435,11436)"} true;
    $ret0 := $t10;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:257:5+1
L2:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:257:5+1
    assume {:print "$at(58,11435,11436)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun pool_u64::redeem_shares [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:164:5+635
procedure {:inline 1} $1_pool_u64_redeem_shares(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int, _$t2: int) returns ($ret0: int, $ret1: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: $1_pool_u64_Pool;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_pool_u64_Pool;
    var $t15: int;
    var $t16: bool;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: $1_pool_u64_Pool;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: $Mutation (int);
    var $t28: int;
    var $t29: int;
    var $t30: $Mutation (int);
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t7, pool_u64::spec_shares_to_amount_with_total_coins($t0, $t2, select pool_u64::Pool.total_coins($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:145:9+102
    assume {:print "$at(59,5992,6094)"} true;
    assume ($t7 == $1_pool_u64_spec_shares_to_amount_with_total_coins($Dereference($t0), $t2, $total_coins#$1_pool_u64_Pool($Dereference($t0))));

    // assume Identical($t8, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:181:9+83
    assume {:print "$at(59,7643,7726)"} true;
    assume ($t8 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t2));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:164:5+1
    assume {:print "$at(58,6621,6622)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,11,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:164:5+1
    assume {:print "$track_local(55,11,1):", $t1} $t1 == $t1;

    // trace_local[shares_to_redeem]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:164:5+1
    assume {:print "$track_local(55,11,2):", $t2} $t2 == $t2;

    // $t9 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:25+19
    assume {:print "$at(58,6739,6758)"} true;
    $t9 := $Dereference($t0);

    // $t10 := pool_u64::contains($t9, $t1) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:17+27
    call $t10 := $1_pool_u64_contains($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,6731,6758)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // if ($t10) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
    if ($t10) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
    assume {:print "$at(58,6723,6808)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
L0:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
    assume {:print "$at(58,6723,6808)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85

    // $t12 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:70+22
    $t12 := 1;
    assume $IsValid'u64'($t12);

    // $t13 := error::invalid_argument($t12) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:46+47
    call $t13 := $1_error_invalid_argument($t12);
    if ($abort_flag) {
        assume {:print "$at(58,6760,6807)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
    assume {:print "$at(58,6723,6808)"} true;
    assume {:print "$track_abort(55,11):", $t13} $t13 == $t13;

    // $t11 := move($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
    $t11 := $t13;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:165:9+85
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:24+4
    assume {:print "$at(58,6833,6837)"} true;
L2:

    // $t14 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:23+19
    assume {:print "$at(58,6832,6851)"} true;
    $t14 := $Dereference($t0);

    // $t15 := pool_u64::shares($t14, $t1) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:17+25
    call $t15 := $1_pool_u64_shares($t14, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,6826,6851)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // $t16 := >=($t15, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:43+2
    call $t16 := $Ge($t15, $t2);

    // if ($t16) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
    if ($t16) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
    assume {:print "$at(58,6818,6919)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
L3:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
    assume {:print "$at(58,6818,6919)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101

    // $t17 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:88+20
    $t17 := 4;
    assume $IsValid'u64'($t17);

    // $t18 := error::invalid_argument($t17) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:64+45
    call $t18 := $1_error_invalid_argument($t17);
    if ($abort_flag) {
        assume {:print "$at(58,6873,6918)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_abort($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
    assume {:print "$at(58,6818,6919)"} true;
    assume {:print "$track_abort(55,11):", $t18} $t18 == $t18;

    // $t11 := move($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
    $t11 := $t18;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:166:9+101
    goto L9;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:13+16
    assume {:print "$at(58,6934,6950)"} true;
L5:

    // $t19 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:33+1
    assume {:print "$at(58,6954,6955)"} true;
    $t19 := 0;
    assume $IsValid'u64'($t19);

    // $t20 := ==($t2, $t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:30+2
    $t20 := $IsEqual'u64'($t2, $t19);

    // if ($t20) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:9+35
    if ($t20) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8
L7:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8
    assume {:print "$at(58,6957,6965)"} true;

    // $t21 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:43+1
    $t21 := 0;
    assume $IsValid'u64'($t21);

    // trace_return[0]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8
    assume {:print "$track_return(55,11,0):", $t21} $t21 == $t21;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,11,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8

    // $t22 := move($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8
    $t22 := $t21;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:168:36+8
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:170:47+4
    assume {:print "$at(58,7014,7018)"} true;
L6:

    // $t23 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:170:46+24
    assume {:print "$at(58,7013,7037)"} true;
    $t23 := $Dereference($t0);

    // $t24 := pool_u64::shares_to_amount($t23, $t2) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:170:30+40
    call $t24 := $1_pool_u64_shares_to_amount($t23, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,6997,7037)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // trace_local[redeemed_coins]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:170:13+14
    assume {:print "$track_local(55,11,6):", $t24} $t24 == $t24;

    // $t25 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:171:28+16
    assume {:print "$at(58,7066,7082)"} true;
    $t25 := $total_coins#$1_pool_u64_Pool($Dereference($t0));

    // $t26 := -($t25, $t24) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:171:45+1
    call $t26 := $Sub($t25, $t24);
    if ($abort_flag) {
        assume {:print "$at(58,7083,7084)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // $t27 := borrow_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:171:9+16
    $t27 := $ChildMutation($t0, 1, $total_coins#$1_pool_u64_Pool($Dereference($t0)));

    // write_ref($t27, $t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:171:9+52
    $t27 := $UpdateMutation($t27, $t26);

    // write_back[Reference($t0).total_coins (u64)]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:171:9+52
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_total_coins($Dereference($t0), $Dereference($t27)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:171:9+52
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,11,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // $t28 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:172:29+17
    assume {:print "$at(58,7129,7146)"} true;
    $t28 := $total_shares#$1_pool_u64_Pool($Dereference($t0));

    // $t29 := -($t28, $t2) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:172:47+1
    call $t29 := $Sub($t28, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,7147,7148)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // $t30 := borrow_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:172:9+17
    $t30 := $ChildMutation($t0, 2, $total_shares#$1_pool_u64_Pool($Dereference($t0)));

    // write_ref($t30, $t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:172:9+56
    $t30 := $UpdateMutation($t30, $t29);

    // write_back[Reference($t0).total_shares (u64)]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:172:9+56
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_total_shares($Dereference($t0), $Dereference($t30)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:172:9+56
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,11,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // assume Identical($t31, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:173:9+83
    assume {:print "$at(59,7278,7361)"} true;
    assume ($t31 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t2));

    // assume Identical($t32, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:181:9+83
    assume {:print "$at(59,7643,7726)"} true;
    assume ($t32 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t2));

    // $t33 := pool_u64::deduct_shares($t0, $t1, $t2) on_abort goto L9 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:173:9+50
    assume {:print "$at(58,7175,7225)"} true;
    call $t33,$t0 := $1_pool_u64_deduct_shares($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,7175,7225)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(55,11):", $t11} $t11 == $t11;
        goto L9;
    }

    // destroy($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:173:9+50

    // trace_return[0]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:175:9+14
    assume {:print "$at(58,7236,7250)"} true;
    assume {:print "$track_return(55,11,0):", $t24} $t24 == $t24;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:175:9+14
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,11,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:175:9+14

    // $t22 := move($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:175:9+14
    $t22 := $t24;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:176:5+1
    assume {:print "$at(58,7255,7256)"} true;
L8:

    // return $t22 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:176:5+1
    assume {:print "$at(58,7255,7256)"} true;
    $ret0 := $t22;
    $ret1 := $t0;
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:176:5+1
L9:

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:176:5+1
    assume {:print "$at(58,7255,7256)"} true;
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun pool_u64::shareholders [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:111:5+87
procedure {:inline 1} $1_pool_u64_shareholders(_$t0: $1_pool_u64_Pool) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t0: $1_pool_u64_Pool;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:111:5+1
    assume {:print "$at(58,4336,4337)"} true;
    assume {:print "$track_local(55,12,0):", $t0} $t0 == $t0;

    // $t1 := get_field<pool_u64::Pool>.shareholders($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:112:9+17
    assume {:print "$at(58,4400,4417)"} true;
    $t1 := $shareholders#$1_pool_u64_Pool($t0);

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:112:9+17
    assume {:print "$track_return(55,12,0):", $t1} $t1 == $t1;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:113:5+1
    assume {:print "$at(58,4422,4423)"} true;
L1:

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:113:5+1
    assume {:print "$at(58,4422,4423)"} true;
    $ret0 := $t1;
    return;

}

// fun pool_u64::shareholders_count [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:116:5+98
procedure {:inline 1} $1_pool_u64_shareholders_count(_$t0: $1_pool_u64_Pool) returns ($ret0: int)
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: int;
    var $t3: int;
    var $t0: $1_pool_u64_Pool;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:116:5+1
    assume {:print "$at(58,4482,4483)"} true;
    assume {:print "$track_local(55,13,0):", $t0} $t0 == $t0;

    // $t1 := get_field<pool_u64::Pool>.shareholders($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:117:24+18
    assume {:print "$at(58,4555,4573)"} true;
    $t1 := $shareholders#$1_pool_u64_Pool($t0);

    // $t2 := vector::length<address>($t1) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:117:9+34
    call $t2 := $1_vector_length'address'($t1);
    if ($abort_flag) {
        assume {:print "$at(58,4540,4574)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(55,13):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:117:9+34
    assume {:print "$track_return(55,13,0):", $t2} $t2 == $t2;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:118:5+1
    assume {:print "$at(58,4579,4580)"} true;
L1:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:118:5+1
    assume {:print "$at(58,4579,4580)"} true;
    $ret0 := $t2;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:118:5+1
L2:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:118:5+1
    assume {:print "$at(58,4579,4580)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun pool_u64::shares [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:96:5+209
procedure {:inline 1} $1_pool_u64_shares(_$t0: $1_pool_u64_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: bool;
    var $t4: int;
    var $t5: Table int (int);
    var $t6: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:96:5+1
    assume {:print "$at(58,3839,3840)"} true;
    assume {:print "$track_local(55,14,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:96:5+1
    assume {:print "$track_local(55,14,1):", $t1} $t1 == $t1;

    // $t3 := pool_u64::contains($t0, $t1) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:13+27
    assume {:print "$at(58,3911,3938)"} true;
    call $t3 := $1_pool_u64_contains($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,3911,3938)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,14):", $t4} $t4 == $t4;
        goto L4;
    }

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:9+135
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:98:34+4
    assume {:print "$at(58,3975,3979)"} true;
L1:

    // $t5 := get_field<pool_u64::Pool>.shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:98:33+12
    assume {:print "$at(58,3974,3986)"} true;
    $t5 := $shares#$1_pool_u64_Pool($t0);

    // $t2 := simple_map::borrow<address, u64>($t5, $t1) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:98:14+46
    call $t2 := $1_simple_map_borrow'address_u64'($t5, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,3955,4001)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,14):", $t4} $t4 == $t4;
        goto L4;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:9+135
    assume {:print "$at(58,3907,4042)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:9+135
L0:

    // $t6 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:100:13+1
    assume {:print "$at(58,4031,4032)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t2 := $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:9+135
    assume {:print "$at(58,3907,4042)"} true;
    $t2 := $t6;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:9+135
L2:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:97:9+135
    assume {:print "$at(58,3907,4042)"} true;
    assume {:print "$track_return(55,14,0):", $t2} $t2 == $t2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:102:5+1
    assume {:print "$at(58,4047,4048)"} true;
L3:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:102:5+1
    assume {:print "$at(58,4047,4048)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:102:5+1
L4:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:102:5+1
    assume {:print "$at(58,4047,4048)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64::shares_to_amount [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:236:5+140
procedure {:inline 1} $1_pool_u64_shares_to_amount(_$t0: $1_pool_u64_Pool, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:236:5+1
    assume {:print "$at(58,10355,10356)"} true;
    assume {:print "$track_local(55,15,0):", $t0} $t0 == $t0;

    // trace_local[shares]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:236:5+1
    assume {:print "$track_local(55,15,1):", $t1} $t1 == $t1;

    // $t2 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:237:57+16
    assume {:print "$at(58,10472,10488)"} true;
    $t2 := $total_coins#$1_pool_u64_Pool($t0);

    // $t3 := pool_u64::shares_to_amount_with_total_coins($t0, $t1, $t2) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:237:9+65
    call $t3 := $1_pool_u64_shares_to_amount_with_total_coins($t0, $t1, $t2);
    if ($abort_flag) {
        assume {:print "$at(58,10424,10489)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(55,15):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:237:9+65
    assume {:print "$track_return(55,15,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:238:5+1
    assume {:print "$at(58,10494,10495)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:238:5+1
    assume {:print "$at(58,10494,10495)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:238:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:238:5+1
    assume {:print "$at(58,10494,10495)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun pool_u64::shares_to_amount_with_total_coins [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:242:5+601
procedure {:inline 1} $1_pool_u64_shares_to_amount_with_total_coins(_$t0: $1_pool_u64_Pool, _$t1: int, _$t2: int) returns ($ret0: int)
{
    // declare local variables
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: bool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t0: $1_pool_u64_Pool;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:242:5+1
    assume {:print "$at(58,10662,10663)"} true;
    assume {:print "$track_local(55,16,0):", $t0} $t0 == $t0;

    // trace_local[shares]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:242:5+1
    assume {:print "$track_local(55,16,1):", $t1} $t1 == $t1;

    // trace_local[total_coins]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:242:5+1
    assume {:print "$track_local(55,16,2):", $t2} $t2 == $t2;

    // $t5 := get_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+16
    assume {:print "$at(58,10829,10845)"} true;
    $t5 := $total_coins#$1_pool_u64_Pool($t0);

    // $t6 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:33+1
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := ==($t5, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:30+2
    $t7 := $IsEqual'u64'($t5, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+47
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+47
L1:

    // $t8 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+47
    assume {:print "$at(58,10829,10876)"} true;
    $t8 := true;
    assume $IsValid'bool'($t8);

    // $t3 := $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+47
    $t3 := $t8;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+47
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:38+4
L0:

    // $t9 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:38+17
    assume {:print "$at(58,10854,10871)"} true;
    $t9 := $total_shares#$1_pool_u64_Pool($t0);

    // $t10 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:59+1
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // $t3 := ==($t9, $t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:56+2
    $t3 := $IsEqual'u64'($t9, $t10);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:13+47
L2:

    // if ($t3) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:9+432
    assume {:print "$at(58,10825,11257)"} true;
    if ($t3) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:9+432
L4:

    // $t11 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:245:13+1
    assume {:print "$at(58,10892,10893)"} true;
    $t11 := 0;
    assume $IsValid'u64'($t11);

    // $t4 := $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:9+432
    assume {:print "$at(58,10825,11257)"} true;
    $t4 := $t11;

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:9+432
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:250:34+4
    assume {:print "$at(58,11202,11206)"} true;
L3:

    // $t12 := get_field<pool_u64::Pool>.total_shares($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:250:61+17
    assume {:print "$at(58,11229,11246)"} true;
    $t12 := $total_shares#$1_pool_u64_Pool($t0);

    // $t4 := pool_u64::multiply_then_divide($t0, $t1, $t2, $t12) on_abort goto L7 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:250:13+66
    call $t4 := $1_pool_u64_multiply_then_divide($t0, $t1, $t2, $t12);
    if ($abort_flag) {
        assume {:print "$at(58,11181,11247)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(55,16):", $t13} $t13 == $t13;
        goto L7;
    }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:9+432
    assume {:print "$at(58,10825,11257)"} true;
L5:

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:244:9+432
    assume {:print "$at(58,10825,11257)"} true;
    assume {:print "$track_return(55,16,0):", $t4} $t4 == $t4;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:252:5+1
    assume {:print "$at(58,11262,11263)"} true;
L6:

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:252:5+1
    assume {:print "$at(58,11262,11263)"} true;
    $ret0 := $t4;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:252:5+1
L7:

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:252:5+1
    assume {:print "$at(58,11262,11263)"} true;
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun pool_u64::transfer_shares [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:179:5+546
procedure {:inline 1} $1_pool_u64_transfer_shares(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int, _$t2: int, _$t3: int) returns ($ret0: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: $1_pool_u64_Pool;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: $1_pool_u64_Pool;
    var $t12: int;
    var $t13: bool;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: bool;
    var $t22: bool;
    var $t23: int;
    var $t24: bool;
    var $t25: int;
    var $t26: int;
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:179:5+1
    assume {:print "$at(58,7327,7328)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,20,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[shareholder_1]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:179:5+1
    assume {:print "$track_local(55,20,1):", $t1} $t1 == $t1;

    // trace_local[shareholder_2]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:179:5+1
    assume {:print "$track_local(55,20,2):", $t2} $t2 == $t2;

    // trace_local[shares_to_transfer]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:179:5+1
    assume {:print "$track_local(55,20,3):", $t3} $t3 == $t3;

    // $t6 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:25+21
    assume {:print "$at(58,7509,7530)"} true;
    $t6 := $Dereference($t0);

    // $t7 := pool_u64::contains($t6, $t1) on_abort goto L9 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:17+29
    call $t7 := $1_pool_u64_contains($t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,7501,7530)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(55,20):", $t8} $t8 == $t8;
        goto L9;
    }

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
    assume {:print "$at(58,7493,7580)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
L0:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
    assume {:print "$at(58,7493,7580)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87

    // $t9 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:72+22
    $t9 := 1;
    assume $IsValid'u64'($t9);

    // $t10 := error::invalid_argument($t9) on_abort goto L9 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:48+47
    call $t10 := $1_error_invalid_argument($t9);
    if ($abort_flag) {
        assume {:print "$at(58,7532,7579)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(55,20):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
    assume {:print "$at(58,7493,7580)"} true;
    assume {:print "$track_abort(55,20):", $t10} $t10 == $t10;

    // $t8 := move($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
    $t8 := $t10;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:185:9+87
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:24+4
    assume {:print "$at(58,7605,7609)"} true;
L2:

    // $t11 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:23+21
    assume {:print "$at(58,7604,7625)"} true;
    $t11 := $Dereference($t0);

    // $t12 := pool_u64::shares($t11, $t1) on_abort goto L9 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:17+27
    call $t12 := $1_pool_u64_shares($t11, $t1);
    if ($abort_flag) {
        assume {:print "$at(58,7598,7625)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(55,20):", $t8} $t8 == $t8;
        goto L9;
    }

    // $t13 := >=($t12, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:45+2
    call $t13 := $Ge($t12, $t3);

    // if ($t13) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
    if ($t13) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
    assume {:print "$at(58,7590,7695)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
L3:

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
    assume {:print "$at(58,7590,7695)"} true;

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105

    // $t14 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:92+20
    $t14 := 4;
    assume $IsValid'u64'($t14);

    // $t15 := error::invalid_argument($t14) on_abort goto L9 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:68+45
    call $t15 := $1_error_invalid_argument($t14);
    if ($abort_flag) {
        assume {:print "$at(58,7649,7694)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(55,20):", $t8} $t8 == $t8;
        goto L9;
    }

    // trace_abort($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
    assume {:print "$at(58,7590,7695)"} true;
    assume {:print "$track_abort(55,20):", $t15} $t15 == $t15;

    // $t8 := move($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
    $t8 := $t15;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:186:9+105
    goto L9;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:13+18
    assume {:print "$at(58,7709,7727)"} true;
L5:

    // $t16 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:35+1
    assume {:print "$at(58,7731,7732)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := ==($t3, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:32+2
    $t17 := $IsEqual'u64'($t3, $t16);

    // if ($t17) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:9+35
    if ($t17) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:38+6
L7:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:38+6
    assume {:print "$at(58,7734,7740)"} true;

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:38+6
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,20,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:38+6

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:187:38+6
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:189:23+4
    assume {:print "$at(58,7765,7769)"} true;
L6:

    // assume Identical($t18, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:173:9+83
    assume {:print "$at(59,7278,7361)"} true;
    assume ($t18 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t3));

    // assume Identical($t19, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t1), $t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:181:9+83
    assume {:print "$at(59,7643,7726)"} true;
    assume ($t19 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t1) - $t3));

    // $t20 := pool_u64::deduct_shares($t0, $t1, $t3) on_abort goto L9 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:189:9+54
    assume {:print "$at(58,7751,7805)"} true;
    call $t20,$t0 := $1_pool_u64_deduct_shares($t0, $t1, $t3);
    if ($abort_flag) {
        assume {:print "$at(58,7751,7805)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(55,20):", $t8} $t8 == $t8;
        goto L9;
    }

    // destroy($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:189:9+54

    // assume Identical($t21, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:74:9+73
    assume {:print "$at(59,2864,2937)"} true;
    assume ($t21 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t2));

    // assume Identical($t22, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:83:9+73
    assume {:print "$at(59,3186,3259)"} true;
    assume ($t22 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t2));

    // assume Identical($t23, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:84:9+68
    assume {:print "$at(59,3268,3336)"} true;
    assume ($t23 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t2));

    // assume Identical($t24, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:94:9+73
    assume {:print "$at(59,3636,3709)"} true;
    assume ($t24 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t2));

    // assume Identical($t25, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t0), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:95:9+68
    assume {:print "$at(59,3718,3786)"} true;
    assume ($t25 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), $t2));

    // $t26 := pool_u64::add_shares($t0, $t2, $t3) on_abort goto L9 with $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:190:9+51
    assume {:print "$at(58,7815,7866)"} true;
    call $t26,$t0 := $1_pool_u64_add_shares($t0, $t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(58,7815,7866)"} true;
        $t8 := $abort_code;
        assume {:print "$track_abort(55,20):", $t8} $t8 == $t8;
        goto L9;
    }

    // destroy($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:190:9+51

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:190:60+1
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,20,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:190:60+1

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:191:5+1
    assume {:print "$at(58,7872,7873)"} true;
L8:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:191:5+1
    assume {:print "$at(58,7872,7873)"} true;
    $ret0 := $t0;
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:191:5+1
L9:

    // abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:191:5+1
    assume {:print "$at(58,7872,7873)"} true;
    $abort_code := $t8;
    $abort_flag := true;
    return;

}

// fun pool_u64::update_total_coins [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:121:5+120
procedure {:inline 1} $1_pool_u64_update_total_coins(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int) returns ($ret0: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t2: $Mutation (int);
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:121:5+1
    assume {:print "$at(58,4634,4635)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,21,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[new_total_coins]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:121:5+1
    assume {:print "$track_local(55,21,1):", $t1} $t1 == $t1;

    // $t2 := borrow_field<pool_u64::Pool>.total_coins($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:122:9+16
    assume {:print "$at(58,4713,4729)"} true;
    $t2 := $ChildMutation($t0, 1, $total_coins#$1_pool_u64_Pool($Dereference($t0)));

    // write_ref($t2, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:122:9+34
    $t2 := $UpdateMutation($t2, $t1);

    // write_back[Reference($t0).total_coins (u64)]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:122:9+34
    $t0 := $UpdateMutation($t0, $Update'$1_pool_u64_Pool'_total_coins($Dereference($t0), $Dereference($t2)));

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:122:9+34
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,21,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:122:43+1
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(55,21,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:122:43+1

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:123:5+1
    assume {:print "$at(58,4753,4754)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.move:123:5+1
    assume {:print "$at(58,4753,4754)"} true;
    $ret0 := $t0;
    return;

}

// struct staking_contract::AddStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:129:5+122
type {:datatype} $1_staking_contract_AddStakeEvent;
function {:constructor} $1_staking_contract_AddStakeEvent($operator: int, $pool_address: int, $amount: int): $1_staking_contract_AddStakeEvent;
function {:inline} $Update'$1_staking_contract_AddStakeEvent'_operator(s: $1_staking_contract_AddStakeEvent, x: int): $1_staking_contract_AddStakeEvent {
    $1_staking_contract_AddStakeEvent(x, $pool_address#$1_staking_contract_AddStakeEvent(s), $amount#$1_staking_contract_AddStakeEvent(s))
}
function {:inline} $Update'$1_staking_contract_AddStakeEvent'_pool_address(s: $1_staking_contract_AddStakeEvent, x: int): $1_staking_contract_AddStakeEvent {
    $1_staking_contract_AddStakeEvent($operator#$1_staking_contract_AddStakeEvent(s), x, $amount#$1_staking_contract_AddStakeEvent(s))
}
function {:inline} $Update'$1_staking_contract_AddStakeEvent'_amount(s: $1_staking_contract_AddStakeEvent, x: int): $1_staking_contract_AddStakeEvent {
    $1_staking_contract_AddStakeEvent($operator#$1_staking_contract_AddStakeEvent(s), $pool_address#$1_staking_contract_AddStakeEvent(s), x)
}
function $IsValid'$1_staking_contract_AddStakeEvent'(s: $1_staking_contract_AddStakeEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_AddStakeEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_AddStakeEvent(s))
      && $IsValid'u64'($amount#$1_staking_contract_AddStakeEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_AddStakeEvent'(s1: $1_staking_contract_AddStakeEvent, s2: $1_staking_contract_AddStakeEvent): bool {
    s1 == s2
}

// struct staking_contract::UnlockStakeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:142:5+156
type {:datatype} $1_staking_contract_UnlockStakeEvent;
function {:constructor} $1_staking_contract_UnlockStakeEvent($operator: int, $pool_address: int, $amount: int, $commission_paid: int): $1_staking_contract_UnlockStakeEvent;
function {:inline} $Update'$1_staking_contract_UnlockStakeEvent'_operator(s: $1_staking_contract_UnlockStakeEvent, x: int): $1_staking_contract_UnlockStakeEvent {
    $1_staking_contract_UnlockStakeEvent(x, $pool_address#$1_staking_contract_UnlockStakeEvent(s), $amount#$1_staking_contract_UnlockStakeEvent(s), $commission_paid#$1_staking_contract_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_staking_contract_UnlockStakeEvent'_pool_address(s: $1_staking_contract_UnlockStakeEvent, x: int): $1_staking_contract_UnlockStakeEvent {
    $1_staking_contract_UnlockStakeEvent($operator#$1_staking_contract_UnlockStakeEvent(s), x, $amount#$1_staking_contract_UnlockStakeEvent(s), $commission_paid#$1_staking_contract_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_staking_contract_UnlockStakeEvent'_amount(s: $1_staking_contract_UnlockStakeEvent, x: int): $1_staking_contract_UnlockStakeEvent {
    $1_staking_contract_UnlockStakeEvent($operator#$1_staking_contract_UnlockStakeEvent(s), $pool_address#$1_staking_contract_UnlockStakeEvent(s), x, $commission_paid#$1_staking_contract_UnlockStakeEvent(s))
}
function {:inline} $Update'$1_staking_contract_UnlockStakeEvent'_commission_paid(s: $1_staking_contract_UnlockStakeEvent, x: int): $1_staking_contract_UnlockStakeEvent {
    $1_staking_contract_UnlockStakeEvent($operator#$1_staking_contract_UnlockStakeEvent(s), $pool_address#$1_staking_contract_UnlockStakeEvent(s), $amount#$1_staking_contract_UnlockStakeEvent(s), x)
}
function $IsValid'$1_staking_contract_UnlockStakeEvent'(s: $1_staking_contract_UnlockStakeEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_UnlockStakeEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_UnlockStakeEvent(s))
      && $IsValid'u64'($amount#$1_staking_contract_UnlockStakeEvent(s))
      && $IsValid'u64'($commission_paid#$1_staking_contract_UnlockStakeEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_UnlockStakeEvent'(s1: $1_staking_contract_UnlockStakeEvent, s2: $1_staking_contract_UnlockStakeEvent): bool {
    s1 == s2
}

// struct staking_contract::AddDistributionEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:155:5+130
type {:datatype} $1_staking_contract_AddDistributionEvent;
function {:constructor} $1_staking_contract_AddDistributionEvent($operator: int, $pool_address: int, $amount: int): $1_staking_contract_AddDistributionEvent;
function {:inline} $Update'$1_staking_contract_AddDistributionEvent'_operator(s: $1_staking_contract_AddDistributionEvent, x: int): $1_staking_contract_AddDistributionEvent {
    $1_staking_contract_AddDistributionEvent(x, $pool_address#$1_staking_contract_AddDistributionEvent(s), $amount#$1_staking_contract_AddDistributionEvent(s))
}
function {:inline} $Update'$1_staking_contract_AddDistributionEvent'_pool_address(s: $1_staking_contract_AddDistributionEvent, x: int): $1_staking_contract_AddDistributionEvent {
    $1_staking_contract_AddDistributionEvent($operator#$1_staking_contract_AddDistributionEvent(s), x, $amount#$1_staking_contract_AddDistributionEvent(s))
}
function {:inline} $Update'$1_staking_contract_AddDistributionEvent'_amount(s: $1_staking_contract_AddDistributionEvent, x: int): $1_staking_contract_AddDistributionEvent {
    $1_staking_contract_AddDistributionEvent($operator#$1_staking_contract_AddDistributionEvent(s), $pool_address#$1_staking_contract_AddDistributionEvent(s), x)
}
function $IsValid'$1_staking_contract_AddDistributionEvent'(s: $1_staking_contract_AddDistributionEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_AddDistributionEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_AddDistributionEvent(s))
      && $IsValid'u64'($amount#$1_staking_contract_AddDistributionEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_AddDistributionEvent'(s1: $1_staking_contract_AddDistributionEvent, s2: $1_staking_contract_AddDistributionEvent): bool {
    s1 == s2
}

// struct staking_contract::CreateStakingContractEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:109:5+199
type {:datatype} $1_staking_contract_CreateStakingContractEvent;
function {:constructor} $1_staking_contract_CreateStakingContractEvent($operator: int, $voter: int, $pool_address: int, $principal: int, $commission_percentage: int): $1_staking_contract_CreateStakingContractEvent;
function {:inline} $Update'$1_staking_contract_CreateStakingContractEvent'_operator(s: $1_staking_contract_CreateStakingContractEvent, x: int): $1_staking_contract_CreateStakingContractEvent {
    $1_staking_contract_CreateStakingContractEvent(x, $voter#$1_staking_contract_CreateStakingContractEvent(s), $pool_address#$1_staking_contract_CreateStakingContractEvent(s), $principal#$1_staking_contract_CreateStakingContractEvent(s), $commission_percentage#$1_staking_contract_CreateStakingContractEvent(s))
}
function {:inline} $Update'$1_staking_contract_CreateStakingContractEvent'_voter(s: $1_staking_contract_CreateStakingContractEvent, x: int): $1_staking_contract_CreateStakingContractEvent {
    $1_staking_contract_CreateStakingContractEvent($operator#$1_staking_contract_CreateStakingContractEvent(s), x, $pool_address#$1_staking_contract_CreateStakingContractEvent(s), $principal#$1_staking_contract_CreateStakingContractEvent(s), $commission_percentage#$1_staking_contract_CreateStakingContractEvent(s))
}
function {:inline} $Update'$1_staking_contract_CreateStakingContractEvent'_pool_address(s: $1_staking_contract_CreateStakingContractEvent, x: int): $1_staking_contract_CreateStakingContractEvent {
    $1_staking_contract_CreateStakingContractEvent($operator#$1_staking_contract_CreateStakingContractEvent(s), $voter#$1_staking_contract_CreateStakingContractEvent(s), x, $principal#$1_staking_contract_CreateStakingContractEvent(s), $commission_percentage#$1_staking_contract_CreateStakingContractEvent(s))
}
function {:inline} $Update'$1_staking_contract_CreateStakingContractEvent'_principal(s: $1_staking_contract_CreateStakingContractEvent, x: int): $1_staking_contract_CreateStakingContractEvent {
    $1_staking_contract_CreateStakingContractEvent($operator#$1_staking_contract_CreateStakingContractEvent(s), $voter#$1_staking_contract_CreateStakingContractEvent(s), $pool_address#$1_staking_contract_CreateStakingContractEvent(s), x, $commission_percentage#$1_staking_contract_CreateStakingContractEvent(s))
}
function {:inline} $Update'$1_staking_contract_CreateStakingContractEvent'_commission_percentage(s: $1_staking_contract_CreateStakingContractEvent, x: int): $1_staking_contract_CreateStakingContractEvent {
    $1_staking_contract_CreateStakingContractEvent($operator#$1_staking_contract_CreateStakingContractEvent(s), $voter#$1_staking_contract_CreateStakingContractEvent(s), $pool_address#$1_staking_contract_CreateStakingContractEvent(s), $principal#$1_staking_contract_CreateStakingContractEvent(s), x)
}
function $IsValid'$1_staking_contract_CreateStakingContractEvent'(s: $1_staking_contract_CreateStakingContractEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_CreateStakingContractEvent(s))
      && $IsValid'address'($voter#$1_staking_contract_CreateStakingContractEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_CreateStakingContractEvent(s))
      && $IsValid'u64'($principal#$1_staking_contract_CreateStakingContractEvent(s))
      && $IsValid'u64'($commission_percentage#$1_staking_contract_CreateStakingContractEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_CreateStakingContractEvent'(s1: $1_staking_contract_CreateStakingContractEvent, s2: $1_staking_contract_CreateStakingContractEvent): bool {
    s1 == s2
}

// struct staking_contract::DistributeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:161:5+153
type {:datatype} $1_staking_contract_DistributeEvent;
function {:constructor} $1_staking_contract_DistributeEvent($operator: int, $pool_address: int, $recipient: int, $amount: int): $1_staking_contract_DistributeEvent;
function {:inline} $Update'$1_staking_contract_DistributeEvent'_operator(s: $1_staking_contract_DistributeEvent, x: int): $1_staking_contract_DistributeEvent {
    $1_staking_contract_DistributeEvent(x, $pool_address#$1_staking_contract_DistributeEvent(s), $recipient#$1_staking_contract_DistributeEvent(s), $amount#$1_staking_contract_DistributeEvent(s))
}
function {:inline} $Update'$1_staking_contract_DistributeEvent'_pool_address(s: $1_staking_contract_DistributeEvent, x: int): $1_staking_contract_DistributeEvent {
    $1_staking_contract_DistributeEvent($operator#$1_staking_contract_DistributeEvent(s), x, $recipient#$1_staking_contract_DistributeEvent(s), $amount#$1_staking_contract_DistributeEvent(s))
}
function {:inline} $Update'$1_staking_contract_DistributeEvent'_recipient(s: $1_staking_contract_DistributeEvent, x: int): $1_staking_contract_DistributeEvent {
    $1_staking_contract_DistributeEvent($operator#$1_staking_contract_DistributeEvent(s), $pool_address#$1_staking_contract_DistributeEvent(s), x, $amount#$1_staking_contract_DistributeEvent(s))
}
function {:inline} $Update'$1_staking_contract_DistributeEvent'_amount(s: $1_staking_contract_DistributeEvent, x: int): $1_staking_contract_DistributeEvent {
    $1_staking_contract_DistributeEvent($operator#$1_staking_contract_DistributeEvent(s), $pool_address#$1_staking_contract_DistributeEvent(s), $recipient#$1_staking_contract_DistributeEvent(s), x)
}
function $IsValid'$1_staking_contract_DistributeEvent'(s: $1_staking_contract_DistributeEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_DistributeEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_DistributeEvent(s))
      && $IsValid'address'($recipient#$1_staking_contract_DistributeEvent(s))
      && $IsValid'u64'($amount#$1_staking_contract_DistributeEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_DistributeEvent'(s1: $1_staking_contract_DistributeEvent, s2: $1_staking_contract_DistributeEvent): bool {
    s1 == s2
}

// struct staking_contract::RequestCommissionEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:135:5+177
type {:datatype} $1_staking_contract_RequestCommissionEvent;
function {:constructor} $1_staking_contract_RequestCommissionEvent($operator: int, $pool_address: int, $accumulated_rewards: int, $commission_amount: int): $1_staking_contract_RequestCommissionEvent;
function {:inline} $Update'$1_staking_contract_RequestCommissionEvent'_operator(s: $1_staking_contract_RequestCommissionEvent, x: int): $1_staking_contract_RequestCommissionEvent {
    $1_staking_contract_RequestCommissionEvent(x, $pool_address#$1_staking_contract_RequestCommissionEvent(s), $accumulated_rewards#$1_staking_contract_RequestCommissionEvent(s), $commission_amount#$1_staking_contract_RequestCommissionEvent(s))
}
function {:inline} $Update'$1_staking_contract_RequestCommissionEvent'_pool_address(s: $1_staking_contract_RequestCommissionEvent, x: int): $1_staking_contract_RequestCommissionEvent {
    $1_staking_contract_RequestCommissionEvent($operator#$1_staking_contract_RequestCommissionEvent(s), x, $accumulated_rewards#$1_staking_contract_RequestCommissionEvent(s), $commission_amount#$1_staking_contract_RequestCommissionEvent(s))
}
function {:inline} $Update'$1_staking_contract_RequestCommissionEvent'_accumulated_rewards(s: $1_staking_contract_RequestCommissionEvent, x: int): $1_staking_contract_RequestCommissionEvent {
    $1_staking_contract_RequestCommissionEvent($operator#$1_staking_contract_RequestCommissionEvent(s), $pool_address#$1_staking_contract_RequestCommissionEvent(s), x, $commission_amount#$1_staking_contract_RequestCommissionEvent(s))
}
function {:inline} $Update'$1_staking_contract_RequestCommissionEvent'_commission_amount(s: $1_staking_contract_RequestCommissionEvent, x: int): $1_staking_contract_RequestCommissionEvent {
    $1_staking_contract_RequestCommissionEvent($operator#$1_staking_contract_RequestCommissionEvent(s), $pool_address#$1_staking_contract_RequestCommissionEvent(s), $accumulated_rewards#$1_staking_contract_RequestCommissionEvent(s), x)
}
function $IsValid'$1_staking_contract_RequestCommissionEvent'(s: $1_staking_contract_RequestCommissionEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_RequestCommissionEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_RequestCommissionEvent(s))
      && $IsValid'u64'($accumulated_rewards#$1_staking_contract_RequestCommissionEvent(s))
      && $IsValid'u64'($commission_amount#$1_staking_contract_RequestCommissionEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_RequestCommissionEvent'(s1: $1_staking_contract_RequestCommissionEvent, s2: $1_staking_contract_RequestCommissionEvent): bool {
    s1 == s2
}

// struct staking_contract::ResetLockupEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:124:5+105
type {:datatype} $1_staking_contract_ResetLockupEvent;
function {:constructor} $1_staking_contract_ResetLockupEvent($operator: int, $pool_address: int): $1_staking_contract_ResetLockupEvent;
function {:inline} $Update'$1_staking_contract_ResetLockupEvent'_operator(s: $1_staking_contract_ResetLockupEvent, x: int): $1_staking_contract_ResetLockupEvent {
    $1_staking_contract_ResetLockupEvent(x, $pool_address#$1_staking_contract_ResetLockupEvent(s))
}
function {:inline} $Update'$1_staking_contract_ResetLockupEvent'_pool_address(s: $1_staking_contract_ResetLockupEvent, x: int): $1_staking_contract_ResetLockupEvent {
    $1_staking_contract_ResetLockupEvent($operator#$1_staking_contract_ResetLockupEvent(s), x)
}
function $IsValid'$1_staking_contract_ResetLockupEvent'(s: $1_staking_contract_ResetLockupEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_ResetLockupEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_ResetLockupEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_ResetLockupEvent'(s1: $1_staking_contract_ResetLockupEvent, s2: $1_staking_contract_ResetLockupEvent): bool {
    s1 == s2
}

// struct staking_contract::StakingContract at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:68:5+692
type {:datatype} $1_staking_contract_StakingContract;
function {:constructor} $1_staking_contract_StakingContract($principal: int, $pool_address: int, $owner_cap: $1_stake_OwnerCapability, $commission_percentage: int, $distribution_pool: $1_pool_u64_Pool, $signer_cap: $1_account_SignerCapability): $1_staking_contract_StakingContract;
function {:inline} $Update'$1_staking_contract_StakingContract'_principal(s: $1_staking_contract_StakingContract, x: int): $1_staking_contract_StakingContract {
    $1_staking_contract_StakingContract(x, $pool_address#$1_staking_contract_StakingContract(s), $owner_cap#$1_staking_contract_StakingContract(s), $commission_percentage#$1_staking_contract_StakingContract(s), $distribution_pool#$1_staking_contract_StakingContract(s), $signer_cap#$1_staking_contract_StakingContract(s))
}
function {:inline} $Update'$1_staking_contract_StakingContract'_pool_address(s: $1_staking_contract_StakingContract, x: int): $1_staking_contract_StakingContract {
    $1_staking_contract_StakingContract($principal#$1_staking_contract_StakingContract(s), x, $owner_cap#$1_staking_contract_StakingContract(s), $commission_percentage#$1_staking_contract_StakingContract(s), $distribution_pool#$1_staking_contract_StakingContract(s), $signer_cap#$1_staking_contract_StakingContract(s))
}
function {:inline} $Update'$1_staking_contract_StakingContract'_owner_cap(s: $1_staking_contract_StakingContract, x: $1_stake_OwnerCapability): $1_staking_contract_StakingContract {
    $1_staking_contract_StakingContract($principal#$1_staking_contract_StakingContract(s), $pool_address#$1_staking_contract_StakingContract(s), x, $commission_percentage#$1_staking_contract_StakingContract(s), $distribution_pool#$1_staking_contract_StakingContract(s), $signer_cap#$1_staking_contract_StakingContract(s))
}
function {:inline} $Update'$1_staking_contract_StakingContract'_commission_percentage(s: $1_staking_contract_StakingContract, x: int): $1_staking_contract_StakingContract {
    $1_staking_contract_StakingContract($principal#$1_staking_contract_StakingContract(s), $pool_address#$1_staking_contract_StakingContract(s), $owner_cap#$1_staking_contract_StakingContract(s), x, $distribution_pool#$1_staking_contract_StakingContract(s), $signer_cap#$1_staking_contract_StakingContract(s))
}
function {:inline} $Update'$1_staking_contract_StakingContract'_distribution_pool(s: $1_staking_contract_StakingContract, x: $1_pool_u64_Pool): $1_staking_contract_StakingContract {
    $1_staking_contract_StakingContract($principal#$1_staking_contract_StakingContract(s), $pool_address#$1_staking_contract_StakingContract(s), $owner_cap#$1_staking_contract_StakingContract(s), $commission_percentage#$1_staking_contract_StakingContract(s), x, $signer_cap#$1_staking_contract_StakingContract(s))
}
function {:inline} $Update'$1_staking_contract_StakingContract'_signer_cap(s: $1_staking_contract_StakingContract, x: $1_account_SignerCapability): $1_staking_contract_StakingContract {
    $1_staking_contract_StakingContract($principal#$1_staking_contract_StakingContract(s), $pool_address#$1_staking_contract_StakingContract(s), $owner_cap#$1_staking_contract_StakingContract(s), $commission_percentage#$1_staking_contract_StakingContract(s), $distribution_pool#$1_staking_contract_StakingContract(s), x)
}
function $IsValid'$1_staking_contract_StakingContract'(s: $1_staking_contract_StakingContract): bool {
    $IsValid'u64'($principal#$1_staking_contract_StakingContract(s))
      && $IsValid'address'($pool_address#$1_staking_contract_StakingContract(s))
      && $IsValid'$1_stake_OwnerCapability'($owner_cap#$1_staking_contract_StakingContract(s))
      && $IsValid'u64'($commission_percentage#$1_staking_contract_StakingContract(s))
      && $IsValid'$1_pool_u64_Pool'($distribution_pool#$1_staking_contract_StakingContract(s))
      && $IsValid'$1_account_SignerCapability'($signer_cap#$1_staking_contract_StakingContract(s))
}
function {:inline} $IsEqual'$1_staking_contract_StakingContract'(s1: $1_staking_contract_StakingContract, s2: $1_staking_contract_StakingContract): bool {
    $IsEqual'u64'($principal#$1_staking_contract_StakingContract(s1), $principal#$1_staking_contract_StakingContract(s2))
    && $IsEqual'address'($pool_address#$1_staking_contract_StakingContract(s1), $pool_address#$1_staking_contract_StakingContract(s2))
    && $IsEqual'$1_stake_OwnerCapability'($owner_cap#$1_staking_contract_StakingContract(s1), $owner_cap#$1_staking_contract_StakingContract(s2))
    && $IsEqual'u64'($commission_percentage#$1_staking_contract_StakingContract(s1), $commission_percentage#$1_staking_contract_StakingContract(s2))
    && $IsEqual'$1_pool_u64_Pool'($distribution_pool#$1_staking_contract_StakingContract(s1), $distribution_pool#$1_staking_contract_StakingContract(s2))
    && $IsEqual'$1_account_SignerCapability'($signer_cap#$1_staking_contract_StakingContract(s1), $signer_cap#$1_staking_contract_StakingContract(s2))}

// struct staking_contract::Store at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:82:5+690
type {:datatype} $1_staking_contract_Store;
function {:constructor} $1_staking_contract_Store($staking_contracts: Table int ($1_staking_contract_StakingContract), $create_staking_contract_events: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent', $update_voter_events: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent', $reset_lockup_events: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent', $add_stake_events: $1_event_EventHandle'$1_staking_contract_AddStakeEvent', $request_commission_events: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent', $unlock_stake_events: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent', $switch_operator_events: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent', $add_distribution_events: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent', $distribute_events: $1_event_EventHandle'$1_staking_contract_DistributeEvent'): $1_staking_contract_Store;
function {:inline} $Update'$1_staking_contract_Store'_staking_contracts(s: $1_staking_contract_Store, x: Table int ($1_staking_contract_StakingContract)): $1_staking_contract_Store {
    $1_staking_contract_Store(x, $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_create_staking_contract_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), x, $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_update_voter_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_UpdateVoterEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), x, $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_reset_lockup_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_ResetLockupEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), x, $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_add_stake_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_AddStakeEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), x, $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_request_commission_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), x, $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_unlock_stake_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_UnlockStakeEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), x, $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_switch_operator_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), x, $add_distribution_events#$1_staking_contract_Store(s), $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_add_distribution_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_AddDistributionEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), x, $distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $Update'$1_staking_contract_Store'_distribute_events(s: $1_staking_contract_Store, x: $1_event_EventHandle'$1_staking_contract_DistributeEvent'): $1_staking_contract_Store {
    $1_staking_contract_Store($staking_contracts#$1_staking_contract_Store(s), $create_staking_contract_events#$1_staking_contract_Store(s), $update_voter_events#$1_staking_contract_Store(s), $reset_lockup_events#$1_staking_contract_Store(s), $add_stake_events#$1_staking_contract_Store(s), $request_commission_events#$1_staking_contract_Store(s), $unlock_stake_events#$1_staking_contract_Store(s), $switch_operator_events#$1_staking_contract_Store(s), $add_distribution_events#$1_staking_contract_Store(s), x)
}
function $IsValid'$1_staking_contract_Store'(s: $1_staking_contract_Store): bool {
    $IsValid'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''($staking_contracts#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''($create_staking_contract_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''($update_voter_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''($reset_lockup_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''($add_stake_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''($request_commission_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''($unlock_stake_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''($switch_operator_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''($add_distribution_events#$1_staking_contract_Store(s))
      && $IsValid'$1_event_EventHandle'$1_staking_contract_DistributeEvent''($distribute_events#$1_staking_contract_Store(s))
}
function {:inline} $IsEqual'$1_staking_contract_Store'(s1: $1_staking_contract_Store, s2: $1_staking_contract_Store): bool {
    $IsEqual'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''($staking_contracts#$1_staking_contract_Store(s1), $staking_contracts#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_CreateStakingContractEvent''($create_staking_contract_events#$1_staking_contract_Store(s1), $create_staking_contract_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_UpdateVoterEvent''($update_voter_events#$1_staking_contract_Store(s1), $update_voter_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_ResetLockupEvent''($reset_lockup_events#$1_staking_contract_Store(s1), $reset_lockup_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_AddStakeEvent''($add_stake_events#$1_staking_contract_Store(s1), $add_stake_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''($request_commission_events#$1_staking_contract_Store(s1), $request_commission_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_UnlockStakeEvent''($unlock_stake_events#$1_staking_contract_Store(s1), $unlock_stake_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent''($switch_operator_events#$1_staking_contract_Store(s1), $switch_operator_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''($add_distribution_events#$1_staking_contract_Store(s1), $add_distribution_events#$1_staking_contract_Store(s2))
    && $IsEqual'$1_event_EventHandle'$1_staking_contract_DistributeEvent''($distribute_events#$1_staking_contract_Store(s1), $distribute_events#$1_staking_contract_Store(s2))}
var $1_staking_contract_Store_$memory: $Memory $1_staking_contract_Store;

// struct staking_contract::SwitchOperatorEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:149:5+143
type {:datatype} $1_staking_contract_SwitchOperatorEvent;
function {:constructor} $1_staking_contract_SwitchOperatorEvent($old_operator: int, $new_operator: int, $pool_address: int): $1_staking_contract_SwitchOperatorEvent;
function {:inline} $Update'$1_staking_contract_SwitchOperatorEvent'_old_operator(s: $1_staking_contract_SwitchOperatorEvent, x: int): $1_staking_contract_SwitchOperatorEvent {
    $1_staking_contract_SwitchOperatorEvent(x, $new_operator#$1_staking_contract_SwitchOperatorEvent(s), $pool_address#$1_staking_contract_SwitchOperatorEvent(s))
}
function {:inline} $Update'$1_staking_contract_SwitchOperatorEvent'_new_operator(s: $1_staking_contract_SwitchOperatorEvent, x: int): $1_staking_contract_SwitchOperatorEvent {
    $1_staking_contract_SwitchOperatorEvent($old_operator#$1_staking_contract_SwitchOperatorEvent(s), x, $pool_address#$1_staking_contract_SwitchOperatorEvent(s))
}
function {:inline} $Update'$1_staking_contract_SwitchOperatorEvent'_pool_address(s: $1_staking_contract_SwitchOperatorEvent, x: int): $1_staking_contract_SwitchOperatorEvent {
    $1_staking_contract_SwitchOperatorEvent($old_operator#$1_staking_contract_SwitchOperatorEvent(s), $new_operator#$1_staking_contract_SwitchOperatorEvent(s), x)
}
function $IsValid'$1_staking_contract_SwitchOperatorEvent'(s: $1_staking_contract_SwitchOperatorEvent): bool {
    $IsValid'address'($old_operator#$1_staking_contract_SwitchOperatorEvent(s))
      && $IsValid'address'($new_operator#$1_staking_contract_SwitchOperatorEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_SwitchOperatorEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_SwitchOperatorEvent'(s1: $1_staking_contract_SwitchOperatorEvent, s2: $1_staking_contract_SwitchOperatorEvent): bool {
    s1 == s2
}

// struct staking_contract::UpdateVoterEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:117:5+161
type {:datatype} $1_staking_contract_UpdateVoterEvent;
function {:constructor} $1_staking_contract_UpdateVoterEvent($operator: int, $pool_address: int, $old_voter: int, $new_voter: int): $1_staking_contract_UpdateVoterEvent;
function {:inline} $Update'$1_staking_contract_UpdateVoterEvent'_operator(s: $1_staking_contract_UpdateVoterEvent, x: int): $1_staking_contract_UpdateVoterEvent {
    $1_staking_contract_UpdateVoterEvent(x, $pool_address#$1_staking_contract_UpdateVoterEvent(s), $old_voter#$1_staking_contract_UpdateVoterEvent(s), $new_voter#$1_staking_contract_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_staking_contract_UpdateVoterEvent'_pool_address(s: $1_staking_contract_UpdateVoterEvent, x: int): $1_staking_contract_UpdateVoterEvent {
    $1_staking_contract_UpdateVoterEvent($operator#$1_staking_contract_UpdateVoterEvent(s), x, $old_voter#$1_staking_contract_UpdateVoterEvent(s), $new_voter#$1_staking_contract_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_staking_contract_UpdateVoterEvent'_old_voter(s: $1_staking_contract_UpdateVoterEvent, x: int): $1_staking_contract_UpdateVoterEvent {
    $1_staking_contract_UpdateVoterEvent($operator#$1_staking_contract_UpdateVoterEvent(s), $pool_address#$1_staking_contract_UpdateVoterEvent(s), x, $new_voter#$1_staking_contract_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_staking_contract_UpdateVoterEvent'_new_voter(s: $1_staking_contract_UpdateVoterEvent, x: int): $1_staking_contract_UpdateVoterEvent {
    $1_staking_contract_UpdateVoterEvent($operator#$1_staking_contract_UpdateVoterEvent(s), $pool_address#$1_staking_contract_UpdateVoterEvent(s), $old_voter#$1_staking_contract_UpdateVoterEvent(s), x)
}
function $IsValid'$1_staking_contract_UpdateVoterEvent'(s: $1_staking_contract_UpdateVoterEvent): bool {
    $IsValid'address'($operator#$1_staking_contract_UpdateVoterEvent(s))
      && $IsValid'address'($pool_address#$1_staking_contract_UpdateVoterEvent(s))
      && $IsValid'address'($old_voter#$1_staking_contract_UpdateVoterEvent(s))
      && $IsValid'address'($new_voter#$1_staking_contract_UpdateVoterEvent(s))
}
function {:inline} $IsEqual'$1_staking_contract_UpdateVoterEvent'(s1: $1_staking_contract_UpdateVoterEvent, s2: $1_staking_contract_UpdateVoterEvent): bool {
    s1 == s2
}

// fun staking_contract::add_distribution [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:632:5+833
procedure {:inline 1} $1_staking_contract_add_distribution(_$t0: int, _$t1: $Mutation ($1_staking_contract_StakingContract), _$t2: int, _$t3: int, _$t4: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent')) returns ($ret0: $Mutation ($1_staking_contract_StakingContract), $ret1: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent'))
{
    // declare local variables
    var $t5: $Mutation ($1_pool_u64_Pool);
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_pool_u64_Pool);
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: bool;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: $1_staking_contract_AddDistributionEvent;
    var $t0: int;
    var $t1: $Mutation ($1_staking_contract_StakingContract);
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent');
    var $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'': $1_event_EventHandle'$1_staking_contract_AddDistributionEvent';
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;
    $t4 := _$t4;

    // bytecode translation starts here
    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:632:5+1
    assume {:print "$at(133,30099,30100)"} true;
    assume {:print "$track_local(56,0,0):", $t0} $t0 == $t0;

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:632:5+1
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,0,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // trace_local[recipient]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:632:5+1
    assume {:print "$track_local(56,0,2):", $t2} $t2 == $t2;

    // trace_local[coins_amount]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:632:5+1
    assume {:print "$track_local(56,0,3):", $t3} $t3 == $t3;

    // trace_local[add_distribution_events]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:632:5+1
    $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' := $Dereference($t4);
    assume {:print "$track_local(56,0,4):", $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'';

    // $t8 := borrow_field<staking_contract::StakingContract>.distribution_pool($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:639:33+39
    assume {:print "$at(133,30364,30403)"} true;
    $t8 := $ChildMutation($t1, 4, $distribution_pool#$1_staking_contract_StakingContract($Dereference($t1)));

    // trace_local[distribution_pool]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:639:13+17
    $temp_0'$1_pool_u64_Pool' := $Dereference($t8);
    assume {:print "$track_local(56,0,5):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // $t9 := get_field<staking_contract::StakingContract>.pool_address($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:640:69+29
    assume {:print "$at(133,30473,30502)"} true;
    $t9 := $pool_address#$1_staking_contract_StakingContract($Dereference($t1));

    // ($t10, $t11, $t12, $t13) := stake::get_stake($t9) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:640:52+47
    call $t10,$t11,$t12,$t13 := $1_stake_get_stake($t9);
    if ($abort_flag) {
        assume {:print "$at(133,30456,30503)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,0):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[total_distribution_amount]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:640:23+25
    assume {:print "$track_local(56,0,7):", $t13} $t13 == $t13;

    // destroy($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:640:20+1

    // destroy($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:640:17+1

    // destroy($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:640:14+1

    // $t15 := get_field<staking_contract::StakingContract>.commission_percentage($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:642:69+38
    assume {:print "$at(133,30607,30645)"} true;
    $t15 := $commission_percentage#$1_staking_contract_StakingContract($Dereference($t1));

    // staking_contract::update_distribution_pool($t8, $t13, $t0, $t15) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:641:9+133
    assume {:print "$at(133,30513,30646)"} true;
    call $t8 := $1_staking_contract_update_distribution_pool($t8, $t13, $t0, $t15);
    if ($abort_flag) {
        assume {:print "$at(133,30513,30646)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,0):", $t14} $t14 == $t14;
        goto L2;
    }

    // assume Identical($t16, pool_u64::spec_amount_to_shares_with_total_coins($t8, $t3, select pool_u64::Pool.total_coins($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:60:9+94
    assume {:print "$at(59,2129,2223)"} true;
    assume ($t16 == $1_pool_u64_spec_amount_to_shares_with_total_coins($Dereference($t8), $t3, $total_coins#$1_pool_u64_Pool($Dereference($t8))));

    // assume Identical($t17, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t8), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:83:9+73
    assume {:print "$at(59,3186,3259)"} true;
    assume ($t17 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t8)), $t2));

    // assume Identical($t18, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t8), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:84:9+68
    assume {:print "$at(59,3268,3336)"} true;
    assume ($t18 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t8)), $t2));

    // assume Identical($t19, simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t8), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:94:9+73
    assume {:print "$at(59,3636,3709)"} true;
    assume ($t19 == $1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t8)), $t2));

    // assume Identical($t20, simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t8), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:95:9+68
    assume {:print "$at(59,3718,3786)"} true;
    assume ($t20 == $1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t8)), $t2));

    // $t21 := pool_u64::buy_in($t8, $t2, $t3) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:644:9+60
    assume {:print "$at(133,30657,30717)"} true;
    call $t21,$t8 := $1_pool_u64_buy_in($t8, $t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(133,30657,30717)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,0):", $t14} $t14 == $t14;
        goto L2;
    }

    // write_back[Reference($t1).distribution_pool (pool_u64::Pool)]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:644:9+60
    $t1 := $UpdateMutation($t1, $Update'$1_staking_contract_StakingContract'_distribution_pool($Dereference($t1), $Dereference($t8)));

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:644:9+60
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,0,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // destroy($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:644:9+60

    // $t22 := get_field<staking_contract::StakingContract>.pool_address($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:645:28+29
    assume {:print "$at(133,30746,30775)"} true;
    $t22 := $pool_address#$1_staking_contract_StakingContract($Dereference($t1));

    // trace_local[pool_address]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:645:13+12
    assume {:print "$track_local(56,0,6):", $t22} $t22 == $t22;

    // $t23 := pack staking_contract::AddDistributionEvent($t0, $t22, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:648:13+69
    assume {:print "$at(133,30846,30915)"} true;
    $t23 := $1_staking_contract_AddDistributionEvent($t0, $t22, $t3);

    // opaque begin: event::emit_event<staking_contract::AddDistributionEvent>($t4, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:646:9+140
    assume {:print "$at(133,30785,30925)"} true;

    // opaque end: event::emit_event<staking_contract::AddDistributionEvent>($t4, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:646:9+140

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:649:10+1
    assume {:print "$at(133,30925,30926)"} true;
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,0,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // pack_ref_deep($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:649:10+1

    // trace_local[add_distribution_events]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:649:10+1
    $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' := $Dereference($t4);
    assume {:print "$track_local(56,0,4):", $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'';

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:650:5+1
    assume {:print "$at(133,30931,30932)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:650:5+1
    assume {:print "$at(133,30931,30932)"} true;
    $ret0 := $t1;
    $ret1 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:650:5+1
L2:

    // abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:650:5+1
    assume {:print "$at(133,30931,30932)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// fun staking_contract::assert_staking_contract_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:622:5+446
procedure {:inline 1} $1_staking_contract_assert_staking_contract_exists(_$t0: int, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: Table int ($1_staking_contract_StakingContract);
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_staking_contract_Store);
    var $t9: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t10: Table int ($1_staking_contract_StakingContract);
    var $t11: bool;
    var $t12: int;
    var $t13: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t3 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:622:5+1
    assume {:print "$at(133,29541,29542)"} true;
    assume {:print "$track_local(56,2,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:622:5+1
    assume {:print "$track_local(56,2,1):", $t1} $t1 == $t1;

    // $t4 := exists<staking_contract::Store>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:17+6
    assume {:print "$at(133,29645,29651)"} true;
    $t4 := $ResourceExists($1_staking_contract_Store_$memory, $t0);

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:9+87
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:9+87
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:9+87
    assume {:print "$at(133,29637,29724)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:57+37
L0:

    // $t5 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:57+37
    assume {:print "$at(133,29685,29722)"} true;
    $t5 := 3;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:40+55
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(133,29668,29723)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,2):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:9+87
    assume {:print "$at(133,29637,29724)"} true;
    assume {:print "$track_abort(56,2):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:9+87
    $t7 := $t6;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:623:9+87
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:624:63+6
    assume {:print "$at(133,29788,29794)"} true;
L2:

    // $t8 := borrow_global<staking_contract::Store>($t0) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:624:38+17
    assume {:print "$at(133,29763,29780)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_staking_contract_Store_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(133,29763,29780)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,2):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t9 := borrow_field<staking_contract::Store>.staking_contracts($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:624:33+55
    $t9 := $ChildMutation($t8, 0, $staking_contracts#$1_staking_contract_Store($Dereference($t8)));

    // $t10 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:626:37+30
    assume {:print "$at(133,29868,29898)"} true;
    $t10 := $Dereference($t9);

    // pack_ref_deep($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:626:37+30

    // $t11 := simple_map::contains_key<address, staking_contract::StakingContract>($t10, $t1) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:626:13+54
    call $t11 := $1_simple_map_contains_key'address_$1_staking_contract_StakingContract'($t10, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,29844,29898)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,2):", $t7} $t7 == $t7;
        goto L7;
    }

    // if ($t11) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:625:9+157
    assume {:print "$at(133,29823,29980)"} true;
    if ($t11) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:625:9+157
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:625:9+157
    assume {:print "$at(133,29823,29980)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:627:30+39
    assume {:print "$at(133,29929,29968)"} true;
L3:

    // $t12 := 4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:627:30+39
    assume {:print "$at(133,29929,29968)"} true;
    $t12 := 4;
    assume $IsValid'u64'($t12);

    // $t13 := error::not_found($t12) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:627:13+57
    call $t13 := $1_error_not_found($t12);
    if ($abort_flag) {
        assume {:print "$at(133,29912,29969)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(56,2):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:625:9+157
    assume {:print "$at(133,29823,29980)"} true;
    assume {:print "$track_abort(56,2):", $t13} $t13 == $t13;

    // $t7 := move($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:625:9+157
    $t7 := $t13;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:625:9+157
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:628:10+1
    assume {:print "$at(133,29980,29981)"} true;
L5:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:629:5+1
    assume {:print "$at(133,29986,29987)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:629:5+1
    assume {:print "$at(133,29986,29987)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:629:5+1
L7:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:629:5+1
    assume {:print "$at(133,29986,29987)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun staking_contract::distribute [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:570:5+389
procedure {:inline 1} $1_staking_contract_distribute(_$t0: int, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $Mutation ($1_staking_contract_StakingContract);
    var $t3: $Mutation ($1_staking_contract_Store);
    var $t4: Table int ($1_staking_contract_StakingContract);
    var $t5: Table int ($1_staking_contract_StakingContract);
    var $t6: int;
    var $t7: $Mutation ($1_staking_contract_Store);
    var $t8: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t9: $Mutation ($1_staking_contract_StakingContract);
    var $t10: $Mutation ($1_event_EventHandle'$1_staking_contract_DistributeEvent');
    var $t11: int;
    var $t12: $1_stake_StakePool;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'$1_staking_contract_Store': $1_staking_contract_Store;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t4, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t4 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:570:5+1
    assume {:print "$at(133,27075,27076)"} true;
    assume {:print "$track_local(56,7,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:570:5+1
    assume {:print "$track_local(56,7,1):", $t1} $t1 == $t1;

    // assume Identical($t5, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t5 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // staking_contract::assert_staking_contract_exists($t0, $t1) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:571:9+48
    assume {:print "$at(133,27164,27212)"} true;
    call $1_staking_contract_assert_staking_contract_exists($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,27164,27212)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(56,7):", $t6} $t6 == $t6;
        goto L2;
    }

    // $t7 := borrow_global<staking_contract::Store>($t0) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:572:21+17
    assume {:print "$at(133,27234,27251)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t7 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_staking_contract_Store_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(133,27234,27251)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(56,7):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[store]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:572:13+5
    $temp_0'$1_staking_contract_Store' := $Dereference($t7);
    assume {:print "$track_local(56,7,3):", $temp_0'$1_staking_contract_Store'} $temp_0'$1_staking_contract_Store' == $temp_0'$1_staking_contract_Store';

    // $t8 := borrow_field<staking_contract::Store>.staking_contracts($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:573:55+28
    assume {:print "$at(133,27322,27350)"} true;
    $t8 := $ChildMutation($t7, 0, $staking_contracts#$1_staking_contract_Store($Dereference($t7)));

    // $t9 := simple_map::borrow_mut<address, staking_contract::StakingContract>($t8, $t1) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:573:32+63
    call $t9,$t8 := $1_simple_map_borrow_mut'address_$1_staking_contract_StakingContract'($t8, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,27299,27362)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(56,7):", $t6} $t6 == $t6;
        goto L2;
    }

    // trace_local[staking_contract]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:573:13+16
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t9);
    assume {:print "$track_local(56,7,2):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // $t10 := borrow_field<staking_contract::Store>.distribute_events($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:65+28
    assume {:print "$at(133,27428,27456)"} true;
    $t10 := $ChildMutation($t7, 9, $distribute_events#$1_staking_contract_Store($Dereference($t7)));

    // assume Identical($t11, select staking_contract::StakingContract.pool_address($t9)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:194:9+49
    assume {:print "$at(134,8605,8654)"} true;
    assume ($t11 == $pool_address#$1_staking_contract_StakingContract($Dereference($t9)));

    // assume Identical($t12, global<stake::StakePool>($t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:195:9+63
    assume {:print "$at(134,8663,8726)"} true;
    assume ($t12 == $ResourceValue($1_stake_StakePool_$memory, $t11));

    // staking_contract::distribute_internal($t0, $t1, $t9, $t10) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85
    assume {:print "$at(133,27372,27457)"} true;
    call $t9,$t10 := $1_staking_contract_distribute_internal($t0, $t1, $t9, $t10);
    if ($abort_flag) {
        assume {:print "$at(133,27372,27457)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(56,7):", $t6} $t6 == $t6;
        goto L2;
    }

    // write_back[Reference($t8)[]]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85
    $t8 := $UpdateMutation($t8, UpdateTable($Dereference($t8), ReadVec(p#$Mutation($t9), LenVec(p#$Mutation($t8))), $Dereference($t9)));

    // write_back[Reference($t7).staking_contracts (simple_map::SimpleMap<address, staking_contract::StakingContract>)]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85
    $t7 := $UpdateMutation($t7, $Update'$1_staking_contract_Store'_staking_contracts($Dereference($t7), $Dereference($t8)));

    // pack_ref_deep($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85

    // write_back[staking_contract::Store@]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85
    $1_staking_contract_Store_$memory := $ResourceUpdate($1_staking_contract_Store_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // write_back[Reference($t7).distribute_events (event::EventHandle<staking_contract::DistributeEvent>)]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85
    $t7 := $UpdateMutation($t7, $Update'$1_staking_contract_Store'_distribute_events($Dereference($t7), $Dereference($t10)));

    // pack_ref_deep($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85

    // write_back[staking_contract::Store@]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:574:9+85
    $1_staking_contract_Store_$memory := $ResourceUpdate($1_staking_contract_Store_$memory, $GlobalLocationAddress($t7),
        $Dereference($t7));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:575:5+1
    assume {:print "$at(133,27463,27464)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:575:5+1
    assume {:print "$at(133,27463,27464)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:575:5+1
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:575:5+1
    assume {:print "$at(133,27463,27464)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun staking_contract::distribute_internal [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:578:5+1906
procedure {:inline 1} $1_staking_contract_distribute_internal(_$t0: int, _$t1: int, _$t2: $Mutation ($1_staking_contract_StakingContract), _$t3: $Mutation ($1_event_EventHandle'$1_staking_contract_DistributeEvent')) returns ($ret0: $Mutation ($1_staking_contract_StakingContract), $ret1: $Mutation ($1_event_EventHandle'$1_staking_contract_DistributeEvent'))
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t7: int;
    var $t8: int;
    var $t9: $Mutation ($1_pool_u64_Pool);
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: Vec (int);
    var $t15: int;
    var $t16: int;
    var $t17: $1_stake_StakePool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: $1_stake_OwnerCapability;
    var $t26: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t27: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t32: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t33: $Mutation ($1_pool_u64_Pool);
    var $t34: int;
    var $t35: $1_pool_u64_Pool;
    var $t36: int;
    var $t37: int;
    var $t38: bool;
    var $t39: $1_pool_u64_Pool;
    var $t40: Vec (int);
    var $t41: int;
    var $t42: int;
    var $t43: $1_pool_u64_Pool;
    var $t44: int;
    var $t45: int;
    var $t46: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t47: $1_staking_contract_DistributeEvent;
    var $t48: $Mutation (Vec (int));
    var $t49: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t50: int;
    var $t51: int;
    var $t52: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t53: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t54: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t55: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t56: int;
    var $t57: int;
    var $t58: bool;
    var $t59: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t60: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t61: int;
    var $t62: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t63: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t0: int;
    var $t1: int;
    var $t2: $Mutation ($1_staking_contract_StakingContract);
    var $t3: $Mutation ($1_event_EventHandle'$1_staking_contract_DistributeEvent');
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'': $1_event_EventHandle'$1_staking_contract_DistributeEvent';
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // assume Identical($t16, select staking_contract::StakingContract.pool_address($t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:194:9+49
    assume {:print "$at(134,8605,8654)"} true;
    assume ($t16 == $pool_address#$1_staking_contract_StakingContract($Dereference($t2)));

    // assume Identical($t17, global<stake::StakePool>($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:195:9+63
    assume {:print "$at(134,8663,8726)"} true;
    assume ($t17 == $ResourceValue($1_stake_StakePool_$memory, $t16));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:578:5+1
    assume {:print "$at(133,27553,27554)"} true;
    assume {:print "$track_local(56,8,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:578:5+1
    assume {:print "$track_local(56,8,1):", $t1} $t1 == $t1;

    // trace_local[staking_contract]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:578:5+1
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t2);
    assume {:print "$track_local(56,8,2):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // trace_local[distribute_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:578:5+1
    $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,8,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'';

    // $t18 := get_field<staking_contract::StakingContract>.pool_address($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:584:28+29
    assume {:print "$at(133,27775,27804)"} true;
    $t18 := $pool_address#$1_staking_contract_StakingContract($Dereference($t2));

    // trace_local[pool_address]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:584:13+12
    assume {:print "$track_local(56,8,12):", $t18} $t18 == $t18;

    // ($t19, $t20, $t21, $t22) := stake::get_stake($t18) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:585:50+30
    assume {:print "$at(133,27855,27885)"} true;
    call $t19,$t20,$t21,$t22 := $1_stake_get_stake($t18);
    if ($abort_flag) {
        assume {:print "$at(133,27855,27885)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[pending_inactive]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:585:30+16
    assume {:print "$track_local(56,8,11):", $t22} $t22 == $t22;

    // destroy($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:585:27+1

    // trace_local[inactive]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:585:17+8
    assume {:print "$track_local(56,8,10):", $t20} $t20 == $t20;

    // destroy($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:585:14+1

    // $t24 := +($t20, $t22) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:586:53+1
    assume {:print "$at(133,27939,27940)"} true;
    call $t24 := $AddU64($t20, $t22);
    if ($abort_flag) {
        assume {:print "$at(133,27939,27940)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[total_potential_withdrawable]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:586:13+28
    assume {:print "$track_local(56,8,15):", $t24} $t24 == $t24;

    // $t25 := get_field<staking_contract::StakingContract>.owner_cap($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:587:46+27
    assume {:print "$at(133,28004,28031)"} true;
    $t25 := $owner_cap#$1_staking_contract_StakingContract($Dereference($t2));

    // $t6 := stake::withdraw_with_cap($t25, $t24) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:587:21+83
    call $t6 := $1_stake_withdraw_with_cap($t25, $t24);
    if ($abort_flag) {
        assume {:print "$at(133,27979,28062)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[coins]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:587:13+5
    assume {:print "$track_local(56,8,6):", $t6} $t6 == $t6;

    // $t26 := copy($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:588:47+6
    assume {:print "$at(133,28110,28116)"} true;
    $t26 := $t6;

    // assume Identical($t27, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t27 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t28 := coin::value<aptos_coin::AptosCoin>($t26) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:588:35+19
    assume {:print "$at(133,28098,28117)"} true;
    call $t28 := $1_coin_value'$1_aptos_coin_AptosCoin'($t26);
    if ($abort_flag) {
        assume {:print "$at(133,28098,28117)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[distribution_amount]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:588:13+19
    assume {:print "$track_local(56,8,8):", $t28} $t28 == $t28;

    // $t29 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:589:36+1
    assume {:print "$at(133,28154,28155)"} true;
    $t29 := 0;
    assume $IsValid'u64'($t29);

    // $t30 := ==($t28, $t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:589:33+2
    $t30 := $IsEqual'u64'($t28, $t29);

    // if ($t30) goto L1 else goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:589:9+99
    if ($t30) { goto L1; } else { goto L12; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:590:13+25
    assume {:print "$at(133,28171,28196)"} true;
L1:

    // destroy($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:590:13+25
    assume {:print "$at(133,28171,28196)"} true;

    // destroy($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:590:13+25

    // $t31 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:590:32+5
    $t31 := $t6;

    // assume Identical($t32, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t32 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t31) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:590:13+25
    assume {:print "$at(133,28171,28196)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t31);
    if ($abort_flag) {
        assume {:print "$at(133,28171,28196)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[staking_contract]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:591:13+6
    assume {:print "$at(133,28210,28216)"} true;
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t2);
    assume {:print "$track_local(56,8,2):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // pack_ref_deep($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:591:13+6

    // trace_local[distribute_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:591:13+6
    $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,8,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'';

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:591:13+6
    goto L10;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:594:38+16
    assume {:print "$at(133,28266,28282)"} true;
L0:

    // $t33 := borrow_field<staking_contract::StakingContract>.distribution_pool($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:594:33+39
    assume {:print "$at(133,28261,28300)"} true;
    $t33 := $ChildMutation($t2, 4, $distribution_pool#$1_staking_contract_StakingContract($Dereference($t2)));

    // trace_local[distribution_pool]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:594:13+17
    $temp_0'$1_pool_u64_Pool' := $Dereference($t33);
    assume {:print "$track_local(56,8,9):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // $t34 := get_field<staking_contract::StakingContract>.commission_percentage($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:596:63+38
    assume {:print "$at(133,28398,28436)"} true;
    $t34 := $commission_percentage#$1_staking_contract_StakingContract($Dereference($t2));

    // staking_contract::update_distribution_pool($t33, $t28, $t1, $t34) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:595:9+127
    assume {:print "$at(133,28310,28437)"} true;
    call $t33 := $1_staking_contract_update_distribution_pool($t33, $t28, $t1, $t34);
    if ($abort_flag) {
        assume {:print "$at(133,28310,28437)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume {:print "$at(133,28544,28561)"} true;
L5:

    // $t6 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume {:print "$at(133,28544,28561)"} true;
    havoc $t6;

    // assume WellFormed($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t6);

    // $t14 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t14;

    // assume WellFormed($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'vec'address''($t14);

    // $t35 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t35;

    // assume And(WellFormed($t35), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t35), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t35), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t35))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t35))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t35), i), Index(select pool_u64::Pool.shareholders($t35), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume ($IsValid'$1_pool_u64_Pool'($t35) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t35), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t35), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t35))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t35))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t35), i), ReadVec($shareholders#$1_pool_u64_Pool($t35), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t36 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t36;

    // assume WellFormed($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'u64'($t36);

    // $t37 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t37;

    // assume WellFormed($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'u64'($t37);

    // $t38 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t38;

    // assume WellFormed($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'bool'($t38);

    // $t39 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t39;

    // assume And(WellFormed($t39), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t39), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t39), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t39))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t39))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t39), i), Index(select pool_u64::Pool.shareholders($t39), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume ($IsValid'$1_pool_u64_Pool'($t39) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t39), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t39), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t39))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t39))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t39), i), ReadVec($shareholders#$1_pool_u64_Pool($t39), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t40 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t40;

    // assume WellFormed($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'vec'address''($t40);

    // $t41 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t41;

    // assume WellFormed($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'u64'($t41);

    // $t42 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t42;

    // assume WellFormed($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'address'($t42);

    // $t43 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t43;

    // assume And(WellFormed($t43), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t43), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t43), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t43))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t43))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t43), i), Index(select pool_u64::Pool.shareholders($t43), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume ($IsValid'$1_pool_u64_Pool'($t43) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t43), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t43), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t43))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t43))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t43), i), ReadVec($shareholders#$1_pool_u64_Pool($t43), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t44 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t44;

    // assume WellFormed($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'u64'($t44);

    // $t45 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t45;

    // assume WellFormed($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'u64'($t45);

    // $t46 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t46;

    // assume WellFormed($t46) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t46);

    // $t47 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t47;

    // assume WellFormed($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'$1_staking_contract_DistributeEvent'($t47);

    // $t3 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'';
    $t3 := $UpdateMutation($t3, $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'');

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'$1_event_EventHandle'$1_staking_contract_DistributeEvent''($Dereference($t3));

    // $t33 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $temp_0'$1_pool_u64_Pool';
    $t33 := $UpdateMutation($t33, $temp_0'$1_pool_u64_Pool');

    // assume And(WellFormed($t33), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t33), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t33), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t33))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t33))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t33), i), Index(select pool_u64::Pool.shareholders($t33), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume ($IsValid'$1_pool_u64_Pool'($Dereference($t33)) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t33)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($Dereference($t33)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($Dereference($t33)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($Dereference($t33)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($Dereference($t33)), i), ReadVec($shareholders#$1_pool_u64_Pool($Dereference($t33)), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t48 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t48;

    // assume WellFormed($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'vec'address''($Dereference($t48));

    // $t49 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    havoc $t49;

    // assume WellFormed($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($Dereference($t49));

    // trace_local[distribute_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume {:print "$info(): enter loop, variable(s) distribute_events, coins, recipients havocked and reassigned"} true;
    $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,8,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'';

    // trace_local[coins]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume {:print "$track_local(56,8,6):", $t6} $t6 == $t6;

    // trace_local[recipients]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume {:print "$track_local(56,8,14):", $t14} $t14 == $t14;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    assume !$abort_flag;

    // $t35 := read_ref($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:45+17
    $t35 := $Dereference($t33);

    // $t36 := pool_u64::shareholders_count($t35) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:16+47
    call $t36 := $1_pool_u64_shareholders_count($t35);
    if ($abort_flag) {
        assume {:print "$at(133,28515,28562)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // $t37 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:66+1
    $t37 := 0;
    assume $IsValid'u64'($t37);

    // $t38 := >($t36, $t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:64+1
    call $t38 := $Gt($t36, $t37);

    // if ($t38) goto L13 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:9+661
    if ($t38) { goto L13; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:599:9+661
L3:

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:600:53+17
    assume {:print "$at(133,28622,28639)"} true;
L4:

    // $t39 := read_ref($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:600:53+17
    assume {:print "$at(133,28622,28639)"} true;
    $t39 := $Dereference($t33);

    // $t14 := pool_u64::shareholders($t39) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:600:30+41
    call $t14 := $1_pool_u64_shareholders($t39);
    if ($abort_flag) {
        assume {:print "$at(133,28599,28640)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[recipients]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:600:17+10
    assume {:print "$track_local(56,8,14):", $t14} $t14 == $t14;

    // $t48 := borrow_local($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:601:45+15
    assume {:print "$at(133,28686,28701)"} true;
    $t48 := $Mutation($Local(14), EmptyVec(), $t14);

    // $t40 := read_ref($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:601:44+20
    $t40 := $Dereference($t48);

    // trace_local[recipients]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:601:44+20
    assume {:print "$track_local(56,8,14):", $t14} $t14 == $t14;

    // $t41 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:601:62+1
    $t41 := 0;
    assume $IsValid'u64'($t41);

    // $t42 := vector::borrow<address>($t40, $t41) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:601:30+34
    call $t42 := $1_vector_borrow'address'($t40, $t41);
    if ($abort_flag) {
        assume {:print "$at(133,28671,28705)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[recipient]($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:601:17+9
    assume {:print "$track_local(56,8,13):", $t42} $t42 == $t42;

    // $t43 := read_ref($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:602:50+30
    assume {:print "$at(133,28756,28786)"} true;
    $t43 := $Dereference($t33);

    // $t44 := pool_u64::shares($t43, $t42) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:602:34+46
    call $t44 := $1_pool_u64_shares($t43, $t42);
    if ($abort_flag) {
        assume {:print "$at(133,28740,28786)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[current_shares]($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:602:17+14
    assume {:print "$track_local(56,8,7):", $t44} $t44 == $t44;

    // assume Identical($t50, pool_u64::spec_shares_to_amount_with_total_coins($t33, $t44, select pool_u64::Pool.total_coins($t33))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:145:9+102
    assume {:print "$at(59,5992,6094)"} true;
    assume ($t50 == $1_pool_u64_spec_shares_to_amount_with_total_coins($Dereference($t33), $t44, $total_coins#$1_pool_u64_Pool($Dereference($t33))));

    // assume Identical($t51, Sub(simple_map::spec_get<address, u64>(select pool_u64::Pool.shares($t33), $t42), $t44)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:181:9+83
    assume {:print "$at(59,7643,7726)"} true;
    assume ($t51 == ($1_simple_map_spec_get'address_u64'($shares#$1_pool_u64_Pool($Dereference($t33)), $t42) - $t44));

    // $t45 := pool_u64::redeem_shares($t33, $t42, $t44) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:603:40+69
    assume {:print "$at(133,28827,28896)"} true;
    call $t45,$t33 := $1_pool_u64_redeem_shares($t33, $t42, $t44);
    if ($abort_flag) {
        assume {:print "$at(133,28827,28896)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // trace_local[amount_to_distribute]($t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:603:17+20
    assume {:print "$track_local(56,8,5):", $t45} $t45 == $t45;

    // $t49 := borrow_local($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:604:52+10
    assume {:print "$at(133,28949,28959)"} true;
    $t49 := $Mutation($Local(6), EmptyVec(), $t6);

    // assume Identical($t52, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t52 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t46 := coin::extract<aptos_coin::AptosCoin>($t49, $t45) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:604:38+47
    assume {:print "$at(133,28935,28982)"} true;
    call $t46,$t49 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t49, $t45);
    if ($abort_flag) {
        assume {:print "$at(133,28935,28982)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // write_back[LocalRoot($t6)@]($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:604:38+47
    $t6 := $Dereference($t49);

    // trace_local[coins]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:604:38+47
    assume {:print "$track_local(56,8,6):", $t6} $t6 == $t6;

    // assume Identical($t53, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t53 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::deposit<aptos_coin::AptosCoin>($t42, $t46) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:604:13+73
    assume {:print "$at(133,28910,28983)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t42, $t46);
    if ($abort_flag) {
        assume {:print "$at(133,28910,28983)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // $t47 := pack staking_contract::DistributeEvent($t1, $t18, $t42, $t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:608:17+83
    assume {:print "$at(133,29061,29144)"} true;
    $t47 := $1_staking_contract_DistributeEvent($t1, $t18, $t42, $t45);

    // opaque begin: event::emit_event<staking_contract::DistributeEvent>($t3, $t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:606:13+160
    assume {:print "$at(133,28998,29158)"} true;

    // opaque end: event::emit_event<staking_contract::DistributeEvent>($t3, $t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:606:13+160

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:609:14+1
    assume {:print "$at(133,29158,29159)"} true;
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    assume {:print "$at(133,29251,29453)"} true;
L2:

    // destroy($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    assume {:print "$at(133,29251,29453)"} true;

    // $t54 := copy($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:25+6
    $t54 := $t6;

    // assume Identical($t55, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t55 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t56 := coin::value<aptos_coin::AptosCoin>($t54) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:13+19
    assume {:print "$at(133,29255,29274)"} true;
    call $t56 := $1_coin_value'$1_aptos_coin_AptosCoin'($t54);
    if ($abort_flag) {
        assume {:print "$at(133,29255,29274)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // $t57 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:35+1
    $t57 := 0;
    assume $IsValid'u64'($t57);

    // $t58 := >($t56, $t57) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:33+1
    call $t58 := $Gt($t56, $t57);

    // if ($t58) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    if ($t58) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:614:27+6
    assume {:print "$at(133,29308,29314)"} true;
L7:

    // $t59 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:614:35+5
    assume {:print "$at(133,29316,29321)"} true;
    $t59 := $t6;

    // assume Identical($t60, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t60 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::deposit<aptos_coin::AptosCoin>($t0, $t59) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:614:13+28
    assume {:print "$at(133,29294,29322)"} true;
    call $1_coin_deposit'$1_aptos_coin_AptosCoin'($t0, $t59);
    if ($abort_flag) {
        assume {:print "$at(133,29294,29322)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // $t61 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:615:61+1
    assume {:print "$at(133,29384,29385)"} true;
    $t61 := 0;
    assume $IsValid'u64'($t61);

    // pool_u64::update_total_coins($t33, $t61) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:615:13+50
    call $t33 := $1_pool_u64_update_total_coins($t33, $t61);
    if ($abort_flag) {
        assume {:print "$at(133,29336,29386)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // write_back[Reference($t2).distribution_pool (pool_u64::Pool)]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:615:13+50
    $t2 := $UpdateMutation($t2, $Update'$1_staking_contract_StakingContract'_distribution_pool($Dereference($t2), $Dereference($t33)));

    // trace_local[staking_contract]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:615:13+50
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t2);
    assume {:print "$track_local(56,8,2):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    assume {:print "$at(133,29251,29453)"} true;
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:617:13+25
    assume {:print "$at(133,29417,29442)"} true;
L6:

    // write_back[Reference($t2).distribution_pool (pool_u64::Pool)]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:617:13+25
    assume {:print "$at(133,29417,29442)"} true;
    $t2 := $UpdateMutation($t2, $Update'$1_staking_contract_StakingContract'_distribution_pool($Dereference($t2), $Dereference($t33)));

    // trace_local[staking_contract]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:617:13+25
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t2);
    assume {:print "$track_local(56,8,2):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // destroy($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:617:13+25

    // $t62 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:617:32+5
    $t62 := $t6;

    // assume Identical($t63, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t63 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t62) on_abort goto L11 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:617:13+25
    assume {:print "$at(133,29417,29442)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t62);
    if ($abort_flag) {
        assume {:print "$at(133,29417,29442)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,8):", $t23} $t23 == $t23;
        goto L11;
    }

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    assume {:print "$at(133,29251,29453)"} true;
L8:

    // trace_local[staking_contract]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    assume {:print "$at(133,29251,29453)"} true;
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t2);
    assume {:print "$track_local(56,8,2):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // pack_ref_deep($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202

    // trace_local[distribute_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,8,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_DistributeEvent'';

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    goto L10;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    // Loop invariant checking block for the loop started with header: L5
L9:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:613:9+202
    assume {:print "$at(133,29251,29453)"} true;
    assume false;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:619:5+1
    assume {:print "$at(133,29458,29459)"} true;
L10:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:619:5+1
    assume {:print "$at(133,29458,29459)"} true;
    $ret0 := $t2;
    $ret1 := $t3;
    return;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:619:5+1
L11:

    // abort($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:619:5+1
    assume {:print "$at(133,29458,29459)"} true;
    $abort_code := $t23;
    $abort_flag := true;
    return;

    // label L12 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L12:

    // destroy($t3) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L0 at <internal>:1:1+10
    goto L0;

    // label L13 at <internal>:1:1+10
L13:

    // destroy($t2) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L3 at <internal>:1:1+10
    goto L3;

}

// fun staking_contract::get_staking_contract_amounts_internal [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:653:5+869
procedure {:inline 1} $1_staking_contract_get_staking_contract_amounts_internal(_$t0: $1_staking_contract_StakingContract) returns ($ret0: int, $ret1: int, $ret2: int)
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $1_stake_StakePool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t0: $1_staking_contract_StakingContract;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t5, select staking_contract::StakingContract.pool_address($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t5 == $pool_address#$1_staking_contract_StakingContract($t0));

    // assume Identical($t6, global<stake::StakePool>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t6 == $ResourceValue($1_stake_StakePool_$memory, $t5));

    // assume Identical($t7, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t7 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t6)));

    // assume Identical($t8, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t8 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t6)));

    // assume Identical($t9, Add($t7, $t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t9 == ($t7 + $t8));

    // assume Identical($t10, Sub($t9, select staking_contract::StakingContract.principal($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t10 == ($t9 - $principal#$1_staking_contract_StakingContract($t0)));

    // trace_local[staking_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:653:5+1
    assume {:print "$at(133,31011,31012)"} true;
    assume {:print "$track_local(56,9,0):", $t0} $t0 == $t0;

    // $t11 := get_field<staking_contract::StakingContract>.pool_address($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:658:63+29
    assume {:print "$at(133,31532,31561)"} true;
    $t11 := $pool_address#$1_staking_contract_StakingContract($t0);

    // ($t12, $t13, $t14, $t15) := stake::get_stake($t11) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:658:46+47
    call $t12,$t13,$t14,$t15 := $1_stake_get_stake($t11);
    if ($abort_flag) {
        assume {:print "$at(133,31515,31562)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(56,9):", $t16} $t16 == $t16;
        goto L2;
    }

    // destroy($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:658:41+1

    // trace_local[pending_active]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:658:25+14
    assume {:print "$track_local(56,9,3):", $t14} $t14 == $t14;

    // destroy($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:658:22+1

    // $t17 := +($t12, $t14) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:659:41+1
    assume {:print "$at(133,31604,31605)"} true;
    call $t17 := $AddU64($t12, $t14);
    if ($abort_flag) {
        assume {:print "$at(133,31604,31605)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(56,9):", $t16} $t16 == $t16;
        goto L2;
    }

    // trace_local[total_active_stake]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:659:13+18
    assume {:print "$track_local(56,9,4):", $t17} $t17 == $t17;

    // $t18 := get_field<staking_contract::StakingContract>.principal($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:660:56+26
    assume {:print "$at(133,31677,31703)"} true;
    $t18 := $principal#$1_staking_contract_StakingContract($t0);

    // $t19 := -($t17, $t18) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:660:54+1
    call $t19 := $Sub($t17, $t18);
    if ($abort_flag) {
        assume {:print "$at(133,31675,31676)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(56,9):", $t16} $t16 == $t16;
        goto L2;
    }

    // trace_local[accumulated_rewards]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:660:13+19
    assume {:print "$track_local(56,9,1):", $t19} $t19 == $t19;

    // $t20 := get_field<staking_contract::StakingContract>.commission_percentage($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:661:55+38
    assume {:print "$at(133,31759,31797)"} true;
    $t20 := $commission_percentage#$1_staking_contract_StakingContract($t0);

    // $t21 := *($t19, $t20) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:661:53+1
    call $t21 := $MulU64($t19, $t20);
    if ($abort_flag) {
        assume {:print "$at(133,31757,31758)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(56,9):", $t16} $t16 == $t16;
        goto L2;
    }

    // $t22 := 100 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:661:96+3
    $t22 := 100;
    assume $IsValid'u64'($t22);

    // $t23 := /($t21, $t22) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:661:94+1
    call $t23 := $Div($t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(133,31798,31799)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(56,9):", $t16} $t16 == $t16;
        goto L2;
    }

    // trace_local[commission_amount]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:661:13+17
    assume {:print "$track_local(56,9,2):", $t23} $t23 == $t23;

    // trace_return[0]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:663:9+60
    assume {:print "$at(133,31814,31874)"} true;
    assume {:print "$track_return(56,9,0):", $t17} $t17 == $t17;

    // trace_return[1]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:663:9+60
    assume {:print "$track_return(56,9,1):", $t19} $t19 == $t19;

    // trace_return[2]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:663:9+60
    assume {:print "$track_return(56,9,2):", $t23} $t23 == $t23;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:664:5+1
    assume {:print "$at(133,31879,31880)"} true;
L1:

    // return ($t17, $t19, $t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:664:5+1
    assume {:print "$at(133,31879,31880)"} true;
    $ret0 := $t17;
    $ret1 := $t19;
    $ret2 := $t23;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:664:5+1
L2:

    // abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:664:5+1
    assume {:print "$at(133,31879,31880)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun staking_contract::request_commission_internal [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:422:5+1338
procedure {:inline 1} $1_staking_contract_request_commission_internal(_$t0: int, _$t1: $Mutation ($1_staking_contract_StakingContract), _$t2: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent'), _$t3: $Mutation ($1_event_EventHandle'$1_staking_contract_RequestCommissionEvent')) returns ($ret0: int, $ret1: $Mutation ($1_staking_contract_StakingContract), $ret2: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent'), $ret3: $Mutation ($1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'))
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: $1_staking_contract_StakingContract;
    var $t14: int;
    var $t15: $1_stake_StakePool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: $Mutation (int);
    var $t26: int;
    var $t27: bool;
    var $t28: int;
    var $t29: int;
    var $t30: $1_stake_OwnerCapability;
    var $t31: int;
    var $t32: $1_stake_StakePool;
    var $t33: int;
    var $t34: int;
    var $t35: $1_staking_contract_RequestCommissionEvent;
    var $t0: int;
    var $t1: $Mutation ($1_staking_contract_StakingContract);
    var $t2: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent');
    var $t3: $Mutation ($1_event_EventHandle'$1_staking_contract_RequestCommissionEvent');
    var $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'': $1_event_EventHandle'$1_staking_contract_AddDistributionEvent';
    var $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'': $1_event_EventHandle'$1_staking_contract_RequestCommissionEvent';
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // assume Identical($t7, select staking_contract::StakingContract.pool_address($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t7 == $pool_address#$1_staking_contract_StakingContract($Dereference($t1)));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t9 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t8)));

    // assume Identical($t10, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t10 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t8)));

    // assume Identical($t11, Add($t9, $t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t11 == ($t9 + $t10));

    // assume Identical($t12, Sub($t11, select staking_contract::StakingContract.principal($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t12 == ($t11 - $principal#$1_staking_contract_StakingContract($Dereference($t1))));

    // trace_local[operator]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:422:5+1
    assume {:print "$at(133,20130,20131)"} true;
    assume {:print "$track_local(56,14,0):", $t0} $t0 == $t0;

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:422:5+1
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,14,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // trace_local[add_distribution_events]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:422:5+1
    $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' := $Dereference($t2);
    assume {:print "$track_local(56,14,2):", $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'';

    // trace_local[request_commission_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:422:5+1
    $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,14,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'';

    // $t13 := read_ref($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:430:51+16
    assume {:print "$at(133,20593,20609)"} true;
    $t13 := $Dereference($t1);

    // assume Identical($t14, select staking_contract::StakingContract.pool_address($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t14 == $pool_address#$1_staking_contract_StakingContract($t13));

    // assume Identical($t15, global<stake::StakePool>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t15 == $ResourceValue($1_stake_StakePool_$memory, $t14));

    // assume Identical($t16, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t15))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t16 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t15)));

    // assume Identical($t17, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t15))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t17 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t15)));

    // assume Identical($t18, Add($t16, $t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t18 == ($t16 + $t17));

    // assume Identical($t19, Sub($t18, select staking_contract::StakingContract.principal($t13))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t19 == ($t18 - $principal#$1_staking_contract_StakingContract($t13)));

    // ($t20, $t21, $t22) := staking_contract::get_staking_contract_amounts_internal($t13) on_abort goto L3 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:430:13+55
    assume {:print "$at(133,20555,20610)"} true;
    call $t20,$t21,$t22 := $1_staking_contract_get_staking_contract_amounts_internal($t13);
    if ($abort_flag) {
        assume {:print "$at(133,20555,20610)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,14):", $t23} $t23 == $t23;
        goto L3;
    }

    // trace_local[commission_amount]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:429:55+17
    assume {:print "$at(133,20522,20539)"} true;
    assume {:print "$track_local(56,14,5):", $t22} $t22 == $t22;

    // trace_local[accumulated_rewards]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:429:34+19
    assume {:print "$track_local(56,14,4):", $t21} $t21 == $t21;

    // $t24 := -($t20, $t22) on_abort goto L3 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:431:57+1
    assume {:print "$at(133,20668,20669)"} true;
    call $t24 := $Sub($t20, $t22);
    if ($abort_flag) {
        assume {:print "$at(133,20668,20669)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,14):", $t23} $t23 == $t23;
        goto L3;
    }

    // $t25 := borrow_field<staking_contract::StakingContract>.principal($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:431:9+26
    $t25 := $ChildMutation($t1, 0, $principal#$1_staking_contract_StakingContract($Dereference($t1)));

    // write_ref($t25, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:431:9+67
    $t25 := $UpdateMutation($t25, $t24);

    // write_back[Reference($t1).principal (u64)]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:431:9+67
    $t1 := $UpdateMutation($t1, $Update'$1_staking_contract_StakingContract'_principal($Dereference($t1), $Dereference($t25)));

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:431:9+67
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,14,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // $t26 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:434:34+1
    assume {:print "$at(133,20781,20782)"} true;
    $t26 := 0;
    assume $IsValid'u64'($t26);

    // $t27 := ==($t22, $t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:434:31+2
    $t27 := $IsEqual'u64'($t22, $t26);

    // if ($t27) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:434:9+60
    if ($t27) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    assume {:print "$at(133,20798,20806)"} true;
L1:

    // destroy($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    assume {:print "$at(133,20798,20806)"} true;

    // destroy($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8

    // destroy($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8

    // $t28 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:20+1
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // trace_return[0]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    assume {:print "$track_return(56,14,0):", $t28} $t28 == $t28;

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,14,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // pack_ref_deep($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8

    // trace_local[add_distribution_events]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' := $Dereference($t2);
    assume {:print "$track_local(56,14,2):", $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'';

    // trace_local[request_commission_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,14,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'';

    // $t29 := move($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    $t29 := $t28;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:435:13+8
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:439:26+8
    assume {:print "$at(133,20892,20900)"} true;
L0:

    // staking_contract::add_distribution($t0, $t1, $t0, $t22, $t2) on_abort goto L3 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:439:9+98
    assume {:print "$at(133,20875,20973)"} true;
    call $t1,$t2 := $1_staking_contract_add_distribution($t0, $t1, $t0, $t22, $t2);
    if ($abort_flag) {
        assume {:print "$at(133,20875,20973)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,14):", $t23} $t23 == $t23;
        goto L3;
    }

    // $t30 := get_field<staking_contract::StakingContract>.owner_cap($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:443:51+27
    assume {:print "$at(133,21174,21201)"} true;
    $t30 := $owner_cap#$1_staking_contract_StakingContract($Dereference($t1));

    // assume Identical($t31, select stake::OwnerCapability.pool_address($t30)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:56:9+42
    assume {:print "$at(132,2499,2541)"} true;
    assume ($t31 == $pool_address#$1_stake_OwnerCapability($t30));

    // assume Identical($t32, global<stake::StakePool>($t31)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:57:9+53
    assume {:print "$at(132,2550,2603)"} true;
    assume ($t32 == $ResourceValue($1_stake_StakePool_$memory, $t31));

    // assume Identical($t33, math64::$min($t22, select coin::Coin.value(select stake::StakePool.active($t32)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:60:9+76
    assume {:print "$at(132,2725,2801)"} true;
    assume ($t33 == $1_math64_$min($t22, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t32))));

    // stake::unlock_with_cap($t22, $t30) on_abort goto L3 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:443:9+70
    assume {:print "$at(133,21132,21202)"} true;
    call $1_stake_unlock_with_cap($t22, $t30);
    if ($abort_flag) {
        assume {:print "$at(133,21132,21202)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(56,14):", $t23} $t23 == $t23;
        goto L3;
    }

    // $t34 := get_field<staking_contract::StakingContract>.pool_address($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:445:28+29
    assume {:print "$at(133,21232,21261)"} true;
    $t34 := $pool_address#$1_staking_contract_StakingContract($Dereference($t1));

    // trace_local[pool_address]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:445:13+12
    assume {:print "$track_local(56,14,6):", $t34} $t34 == $t34;

    // $t35 := pack staking_contract::RequestCommissionEvent($t0, $t34, $t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:448:13+89
    assume {:print "$at(133,21334,21423)"} true;
    $t35 := $1_staking_contract_RequestCommissionEvent($t0, $t34, $t21, $t22);

    // opaque begin: event::emit_event<staking_contract::RequestCommissionEvent>($t3, $t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:446:9+163
    assume {:print "$at(133,21271,21434)"} true;

    // opaque end: event::emit_event<staking_contract::RequestCommissionEvent>($t3, $t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:446:9+163

    // trace_return[0]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:451:9+17
    assume {:print "$at(133,21445,21462)"} true;
    assume {:print "$track_return(56,14,0):", $t22} $t22 == $t22;

    // trace_local[staking_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:451:9+17
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t1);
    assume {:print "$track_local(56,14,1):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // pack_ref_deep($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:451:9+17

    // trace_local[add_distribution_events]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:451:9+17
    $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' := $Dereference($t2);
    assume {:print "$track_local(56,14,2):", $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_AddDistributionEvent'';

    // trace_local[request_commission_events]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:451:9+17
    $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'' := $Dereference($t3);
    assume {:print "$track_local(56,14,3):", $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent''} $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'' == $temp_0'$1_event_EventHandle'$1_staking_contract_RequestCommissionEvent'';

    // $t29 := move($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:451:9+17
    $t29 := $t22;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:452:5+1
    assume {:print "$at(133,21467,21468)"} true;
L2:

    // return $t29 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:452:5+1
    assume {:print "$at(133,21467,21468)"} true;
    $ret0 := $t29;
    $ret1 := $t1;
    $ret2 := $t2;
    $ret3 := $t3;
    return;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:452:5+1
L3:

    // abort($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:452:5+1
    assume {:print "$at(133,21467,21468)"} true;
    $abort_code := $t23;
    $abort_flag := true;
    return;

}

// fun staking_contract::reset_lockup [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:352:5+596
procedure {:inline 1} $1_staking_contract_reset_lockup(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $Mutation ($1_staking_contract_StakingContract);
    var $t5: $Mutation ($1_staking_contract_Store);
    var $t6: int;
    var $t7: Table int ($1_staking_contract_StakingContract);
    var $t8: $1_staking_contract_Store;
    var $t9: $1_staking_contract_StakingContract;
    var $t10: int;
    var $t11: $1_staking_config_StakingConfig;
    var $t12: $1_stake_StakePool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: Table int ($1_staking_contract_StakingContract);
    var $t19: $Mutation ($1_staking_contract_Store);
    var $t20: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t21: $Mutation ($1_staking_contract_StakingContract);
    var $t22: int;
    var $t23: $1_stake_OwnerCapability;
    var $t24: $1_staking_config_StakingConfig;
    var $t25: int;
    var $t26: $1_stake_StakePool;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation ($1_event_EventHandle'$1_staking_contract_ResetLockupEvent');
    var $t30: $1_staking_contract_ResetLockupEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'$1_staking_contract_Store': $1_staking_contract_Store;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t6, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:106:9+48
    assume {:print "$at(134,4774,4822)"} true;
    assume ($t6 == $1_signer_$address_of($t0));

    // assume Identical($t7, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t7 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t6)));

    // assume Identical($t8, global<staking_contract::Store>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:316:9+34
    assume {:print "$at(134,13411,13445)"} true;
    assume ($t8 == $ResourceValue($1_staking_contract_Store_$memory, $t6));

    // assume Identical($t9, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t8), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:317:9+79
    assume {:print "$at(134,13454,13533)"} true;
    assume ($t9 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t8), $t1));

    // assume Identical($t10, select stake::OwnerCapability.pool_address(select staking_contract::StakingContract.owner_cap($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:318:9+59
    assume {:print "$at(134,13542,13601)"} true;
    assume ($t10 == $pool_address#$1_stake_OwnerCapability($owner_cap#$1_staking_contract_StakingContract($t9)));

    // assume Identical($t11, global<staking_config::StakingConfig>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:323:9+69
    assume {:print "$at(134,13747,13816)"} true;
    assume ($t11 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t12, global<stake::StakePool>($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:324:9+56
    assume {:print "$at(134,13825,13881)"} true;
    assume ($t12 == $ResourceValue($1_stake_StakePool_$memory, $t10));

    // assume Identical($t13, select stake::StakePool.locked_until_secs($t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:325:9+57
    assume {:print "$at(134,13890,13947)"} true;
    assume ($t13 == $locked_until_secs#$1_stake_StakePool($t12));

    // assume Identical($t14, Div(select timestamp::CurrentTimeMicroseconds.microseconds(global<timestamp::CurrentTimeMicroseconds>(0x1)), 1000000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:326:9+126
    assume {:print "$at(134,13956,14082)"} true;
    assume ($t14 == ($microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)) div 1000000));

    // assume Identical($t15, Add($t14, select staking_config::StakingConfig.recurring_lockup_duration_secs($t11))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:327:9+77
    assume {:print "$at(134,14091,14168)"} true;
    assume ($t15 == ($t14 + $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t11)));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:352:5+1
    assume {:print "$at(133,16467,16468)"} true;
    assume {:print "$track_local(56,15,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:352:5+1
    assume {:print "$track_local(56,15,1):", $t1} $t1 == $t1;

    // $t16 := signer::address_of($t0) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:353:30+26
    assume {:print "$at(133,16579,16605)"} true;
    call $t16 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(133,16579,16605)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,15):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[staker_address]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:353:13+14
    assume {:print "$track_local(56,15,3):", $t16} $t16 == $t16;

    // assume Identical($t18, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t18 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t16)));

    // staking_contract::assert_staking_contract_exists($t16, $t1) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:354:9+56
    assume {:print "$at(133,16615,16671)"} true;
    call $1_staking_contract_assert_staking_contract_exists($t16, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,16615,16671)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,15):", $t17} $t17 == $t17;
        goto L2;
    }

    // $t19 := borrow_global<staking_contract::Store>($t16) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:356:21+17
    assume {:print "$at(133,16694,16711)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t16)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t16), EmptyVec(), $ResourceValue($1_staking_contract_Store_$memory, $t16));
    }
    if ($abort_flag) {
        assume {:print "$at(133,16694,16711)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,15):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[store]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:356:13+5
    $temp_0'$1_staking_contract_Store' := $Dereference($t19);
    assume {:print "$track_local(56,15,5):", $temp_0'$1_staking_contract_Store'} $temp_0'$1_staking_contract_Store' == $temp_0'$1_staking_contract_Store';

    // $t20 := borrow_field<staking_contract::Store>.staking_contracts($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:357:55+28
    assume {:print "$at(133,16790,16818)"} true;
    $t20 := $ChildMutation($t19, 0, $staking_contracts#$1_staking_contract_Store($Dereference($t19)));

    // $t21 := simple_map::borrow_mut<address, staking_contract::StakingContract>($t20, $t1) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:357:32+63
    call $t21,$t20 := $1_simple_map_borrow_mut'address_$1_staking_contract_StakingContract'($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,16767,16830)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,15):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[staking_contract]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:357:13+16
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t21);
    assume {:print "$track_local(56,15,4):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // $t22 := get_field<staking_contract::StakingContract>.pool_address($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:358:28+29
    assume {:print "$at(133,16859,16888)"} true;
    $t22 := $pool_address#$1_staking_contract_StakingContract($Dereference($t21));

    // trace_local[pool_address]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:358:13+12
    assume {:print "$track_local(56,15,2):", $t22} $t22 == $t22;

    // $t23 := get_field<staking_contract::StakingContract>.owner_cap($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:359:41+27
    assume {:print "$at(133,16930,16957)"} true;
    $t23 := $owner_cap#$1_staking_contract_StakingContract($Dereference($t21));

    // assume Identical($t24, global<staking_config::StakingConfig>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:67:9+69
    assume {:print "$at(132,3047,3116)"} true;
    assume ($t24 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t25, select stake::OwnerCapability.pool_address($t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:68:9+42
    assume {:print "$at(132,3125,3167)"} true;
    assume ($t25 == $pool_address#$1_stake_OwnerCapability($t23));

    // assume Identical($t26, global<stake::StakePool>($t25)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:69:9+53
    assume {:print "$at(132,3176,3229)"} true;
    assume ($t26 == $ResourceValue($1_stake_StakePool_$memory, $t25));

    // assume Identical($t27, timestamp::spec_now_seconds()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:71:9+48
    assume {:print "$at(132,3301,3349)"} true;
    assume ($t27 == $1_timestamp_spec_now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory));

    // assume Identical($t28, select staking_config::StakingConfig.recurring_lockup_duration_secs($t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:72:9+51
    assume {:print "$at(132,3358,3409)"} true;
    assume ($t28 == $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t24));

    // stake::increase_lockup_with_cap($t23) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:359:9+60
    assume {:print "$at(133,16898,16958)"} true;
    call $1_stake_increase_lockup_with_cap($t23);
    if ($abort_flag) {
        assume {:print "$at(133,16898,16958)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,15):", $t17} $t17 == $t17;
        goto L2;
    }

    // $t29 := borrow_field<staking_contract::Store>.reset_lockup_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:20+30
    assume {:print "$at(133,16980,17010)"} true;
    $t29 := $ChildMutation($t19, 3, $reset_lockup_events#$1_staking_contract_Store($Dereference($t19)));

    // $t30 := pack staking_contract::ResetLockupEvent($t1, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:52+43
    $t30 := $1_staking_contract_ResetLockupEvent($t1, $t22);

    // opaque begin: event::emit_event<staking_contract::ResetLockupEvent>($t29, $t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:9+87

    // opaque end: event::emit_event<staking_contract::ResetLockupEvent>($t29, $t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:9+87

    // write_back[Reference($t19).reset_lockup_events (event::EventHandle<staking_contract::ResetLockupEvent>)]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:9+87
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_reset_lockup_events($Dereference($t19), $Dereference($t29)));

    // pack_ref_deep($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:9+87

    // write_back[staking_contract::Store@]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:361:9+87
    $1_staking_contract_Store_$memory := $ResourceUpdate($1_staking_contract_Store_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:362:5+1
    assume {:print "$at(133,17062,17063)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:362:5+1
    assume {:print "$at(133,17062,17063)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:362:5+1
L2:

    // abort($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:362:5+1
    assume {:print "$at(133,17062,17063)"} true;
    $abort_code := $t17;
    $abort_flag := true;
    return;

}

// fun staking_contract::staking_contract_amounts [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:208:5+395
procedure {:inline 1} $1_staking_contract_staking_contract_amounts(_$t0: int, _$t1: int) returns ($ret0: int, $ret1: int, $ret2: int)
{
    // declare local variables
    var $t2: Table int ($1_staking_contract_StakingContract);
    var $t3: $1_staking_contract_StakingContract;
    var $t4: Table int ($1_staking_contract_StakingContract);
    var $t5: int;
    var $t6: $1_stake_StakePool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: Table int ($1_staking_contract_StakingContract);
    var $t12: int;
    var $t13: $1_staking_contract_Store;
    var $t14: Table int ($1_staking_contract_StakingContract);
    var $t15: $1_staking_contract_StakingContract;
    var $t16: int;
    var $t17: $1_stake_StakePool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t2, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:25:9+64
    assume {:print "$at(134,958,1022)"} true;
    assume ($t2 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // assume Identical($t3, simple_map::spec_get<address, staking_contract::StakingContract>($t2, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:26:9+73
    assume {:print "$at(134,1031,1104)"} true;
    assume ($t3 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t2, $t1));

    // assume Identical($t4, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:259:9+64
    assume {:print "$at(134,11186,11250)"} true;
    assume ($t4 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // assume Identical($t5, select staking_contract::StakingContract.pool_address($t3)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t5 == $pool_address#$1_staking_contract_StakingContract($t3));

    // assume Identical($t6, global<stake::StakePool>($t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t6 == $ResourceValue($1_stake_StakePool_$memory, $t5));

    // assume Identical($t7, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t7 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t6)));

    // assume Identical($t8, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t8 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t6)));

    // assume Identical($t9, Add($t7, $t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t9 == ($t7 + $t8));

    // assume Identical($t10, Sub($t9, select staking_contract::StakingContract.principal($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t10 == ($t9 - $principal#$1_staking_contract_StakingContract($t3)));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:208:5+1
    assume {:print "$at(133,9573,9574)"} true;
    assume {:print "$track_local(56,17,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:208:5+1
    assume {:print "$track_local(56,17,1):", $t1} $t1 == $t1;

    // assume Identical($t11, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t11 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // staking_contract::assert_staking_contract_exists($t0, $t1) on_abort goto L2 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:209:9+48
    assume {:print "$at(133,9687,9735)"} true;
    call $1_staking_contract_assert_staking_contract_exists($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,9687,9735)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(56,17):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t13 := get_global<staking_contract::Store>($t0) on_abort goto L2 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:210:34+13
    assume {:print "$at(133,9770,9783)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t13 := $ResourceValue($1_staking_contract_Store_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(133,9770,9783)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(56,17):", $t12} $t12 == $t12;
        goto L2;
    }

    // $t14 := get_field<staking_contract::Store>.staking_contracts($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:210:33+47
    $t14 := $staking_contracts#$1_staking_contract_Store($t13);

    // $t15 := simple_map::borrow<address, staking_contract::StakingContract>($t14, $t1) on_abort goto L2 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:211:32+48
    assume {:print "$at(133,9849,9897)"} true;
    call $t15 := $1_simple_map_borrow'address_$1_staking_contract_StakingContract'($t14, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,9849,9897)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(56,17):", $t12} $t12 == $t12;
        goto L2;
    }

    // assume Identical($t16, select staking_contract::StakingContract.pool_address($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t16 == $pool_address#$1_staking_contract_StakingContract($t15));

    // assume Identical($t17, global<stake::StakePool>($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t17 == $ResourceValue($1_stake_StakePool_$memory, $t16));

    // assume Identical($t18, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t18 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t17)));

    // assume Identical($t19, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t17))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t19 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t17)));

    // assume Identical($t20, Add($t18, $t19)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t20 == ($t18 + $t19));

    // assume Identical($t21, Sub($t20, select staking_contract::StakingContract.principal($t15))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t21 == ($t20 - $principal#$1_staking_contract_StakingContract($t15)));

    // ($t22, $t23, $t24) := staking_contract::get_staking_contract_amounts_internal($t15) on_abort goto L2 with $t12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:212:9+55
    assume {:print "$at(133,9907,9962)"} true;
    call $t22,$t23,$t24 := $1_staking_contract_get_staking_contract_amounts_internal($t15);
    if ($abort_flag) {
        assume {:print "$at(133,9907,9962)"} true;
        $t12 := $abort_code;
        assume {:print "$track_abort(56,17):", $t12} $t12 == $t12;
        goto L2;
    }

    // trace_return[0]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:212:9+55
    assume {:print "$track_return(56,17,0):", $t22} $t22 == $t22;

    // trace_return[1]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:212:9+55
    assume {:print "$track_return(56,17,1):", $t23} $t23 == $t23;

    // trace_return[2]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:212:9+55
    assume {:print "$track_return(56,17,2):", $t24} $t24 == $t24;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:213:5+1
    assume {:print "$at(133,9967,9968)"} true;
L1:

    // return ($t22, $t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:213:5+1
    assume {:print "$at(133,9967,9968)"} true;
    $ret0 := $t22;
    $ret1 := $t23;
    $ret2 := $t24;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:213:5+1
L2:

    // abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:213:5+1
    assume {:print "$at(133,9967,9968)"} true;
    $abort_code := $t12;
    $abort_flag := true;
    return;

}

// fun staking_contract::switch_operator [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:526:5+1891
procedure {:inline 1} $1_staking_contract_switch_operator(_$t0: $signer, _$t1: int, _$t2: int, _$t3: int) returns ()
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $Mutation ($1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent');
    var $t9: int;
    var $t10: int;
    var $t11: $1_staking_contract_StakingContract;
    var $t12: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t13: $Mutation ($1_staking_contract_Store);
    var $t14: int;
    var $t15: $1_staking_contract_Store;
    var $t16: Table int ($1_staking_contract_StakingContract);
    var $t17: Table int ($1_staking_contract_StakingContract);
    var $t18: int;
    var $t19: int;
    var $t20: Table int ($1_staking_contract_StakingContract);
    var $t21: $Mutation ($1_staking_contract_Store);
    var $t22: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t23: Table int ($1_staking_contract_StakingContract);
    var $t24: bool;
    var $t25: bool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: $1_staking_contract_StakingContract;
    var $t30: $Mutation ($1_staking_contract_StakingContract);
    var $t31: $Mutation ($1_event_EventHandle'$1_staking_contract_DistributeEvent');
    var $t32: int;
    var $t33: $1_stake_StakePool;
    var $t34: $Mutation ($1_staking_contract_StakingContract);
    var $t35: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent');
    var $t36: $Mutation ($1_event_EventHandle'$1_staking_contract_RequestCommissionEvent');
    var $t37: int;
    var $t38: $1_stake_StakePool;
    var $t39: int;
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: $1_staking_contract_StakingContract;
    var $t45: $1_stake_OwnerCapability;
    var $t46: int;
    var $t47: $Mutation ($1_staking_contract_StakingContract);
    var $t48: $Mutation (int);
    var $t49: $1_staking_contract_StakingContract;
    var $t50: int;
    var $t51: $1_staking_contract_StakingContract;
    var $t52: $Mutation ($1_event_EventHandle'$1_staking_contract_SwitchOperatorEvent');
    var $t53: $1_staking_contract_SwitchOperatorEvent;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract'': Table int ($1_staking_contract_StakingContract);
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'$1_staking_contract_Store': $1_staking_contract_Store;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // assume Identical($t14, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:170:9+48
    assume {:print "$at(134,7475,7523)"} true;
    assume ($t14 == $1_signer_$address_of($t0));

    // assume Identical($t15, global<staking_contract::Store>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:172:9+42
    assume {:print "$at(134,7620,7662)"} true;
    assume ($t15 == $ResourceValue($1_staking_contract_Store_$memory, $t14));

    // assume Identical($t16, select staking_contract::Store.staking_contracts($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:173:9+48
    assume {:print "$at(134,7671,7719)"} true;
    assume ($t16 == $staking_contracts#$1_staking_contract_Store($t15));

    // assume Identical($t17, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t14))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t17 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t14)));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:526:5+1
    assume {:print "$at(133,24994,24995)"} true;
    assume {:print "$track_local(56,19,0):", $t0} $t0 == $t0;

    // trace_local[old_operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:526:5+1
    assume {:print "$track_local(56,19,1):", $t1} $t1 == $t1;

    // trace_local[new_operator]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:526:5+1
    assume {:print "$track_local(56,19,2):", $t2} $t2 == $t2;

    // trace_local[new_commission_percentage]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:526:5+1
    assume {:print "$track_local(56,19,3):", $t3} $t3 == $t3;

    // $t18 := signer::address_of($t0) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:532:30+26
    assume {:print "$at(133,25207,25233)"} true;
    call $t18 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(133,25207,25233)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // trace_local[staker_address]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:532:13+14
    assume {:print "$track_local(56,19,10):", $t18} $t18 == $t18;

    // assume Identical($t20, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t18))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t20 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t18)));

    // staking_contract::assert_staking_contract_exists($t18, $t1) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:533:9+60
    assume {:print "$at(133,25243,25303)"} true;
    call $1_staking_contract_assert_staking_contract_exists($t18, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,25243,25303)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t21 := borrow_global<staking_contract::Store>($t18) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:536:21+17
    assume {:print "$at(133,25439,25456)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t18)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t18), EmptyVec(), $ResourceValue($1_staking_contract_Store_$memory, $t18));
    }
    if ($abort_flag) {
        assume {:print "$at(133,25439,25456)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // trace_local[store]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:536:13+5
    $temp_0'$1_staking_contract_Store' := $Dereference($t21);
    assume {:print "$track_local(56,19,13):", $temp_0'$1_staking_contract_Store'} $temp_0'$1_staking_contract_Store' == $temp_0'$1_staking_contract_Store';

    // $t22 := borrow_field<staking_contract::Store>.staking_contracts($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:537:33+28
    assume {:print "$at(133,25513,25541)"} true;
    $t22 := $ChildMutation($t21, 0, $staking_contracts#$1_staking_contract_Store($Dereference($t21)));

    // trace_local[staking_contracts]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:537:13+17
    $temp_0'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract'' := $Dereference($t22);
    assume {:print "$track_local(56,19,12):", $temp_0'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract''} $temp_0'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract'' == $temp_0'$1_simple_map_SimpleMap'address_$1_staking_contract_StakingContract'';

    // $t23 := read_ref($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:539:38+34
    assume {:print "$at(133,25597,25631)"} true;
    $t23 := $Dereference($t22);

    // $t24 := simple_map::contains_key<address, staking_contract::StakingContract>($t23, $t2) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:539:14+58
    call $t24 := $1_simple_map_contains_key'address_$1_staking_contract_StakingContract'($t23, $t2);
    if ($abort_flag) {
        assume {:print "$at(133,25573,25631)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t25 := !($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:539:13+1
    call $t25 := $Not($t24);

    // if ($t25) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
    assume {:print "$at(133,25551,25707)"} true;
    if ($t25) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
    assume {:print "$at(133,25551,25707)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
L0:

    // destroy($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
    assume {:print "$at(133,25551,25707)"} true;

    // pack_ref_deep($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156

    // destroy($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156

    // $t26 := 5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:540:34+29
    assume {:print "$at(133,25666,25695)"} true;
    $t26 := 5;
    assume $IsValid'u64'($t26);

    // $t27 := error::invalid_state($t26) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:540:13+51
    call $t27 := $1_error_invalid_state($t26);
    if ($abort_flag) {
        assume {:print "$at(133,25645,25696)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // trace_abort($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
    assume {:print "$at(133,25551,25707)"} true;
    assume {:print "$track_abort(56,19):", $t27} $t27 == $t27;

    // $t19 := move($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
    $t19 := $t27;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:538:9+156
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:543:56+17
    assume {:print "$at(133,25765,25782)"} true;
L2:

    // ($t28, $t29) := simple_map::remove<address, staking_contract::StakingContract>($t22, $t1) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:543:37+52
    assume {:print "$at(133,25746,25798)"} true;
    call $t28,$t29,$t22 := $1_simple_map_remove'address_$1_staking_contract_StakingContract'($t22, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,25746,25798)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t11 := $t29 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:543:17+16
    $t11 := $t29;

    // trace_local[staking_contract]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:543:17+16
    assume {:print "$track_local(56,19,11):", $t11} $t11 == $t11;

    // destroy($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:543:14+1

    // $t30 := borrow_local($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:59+21
    assume {:print "$at(133,25919,25940)"} true;
    $t30 := $Mutation($Local(11), EmptyVec(), $t11);

    // $t31 := borrow_field<staking_contract::Store>.distribute_events($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:82+28
    $t31 := $ChildMutation($t21, 9, $distribute_events#$1_staking_contract_Store($Dereference($t21)));

    // assume Identical($t32, select staking_contract::StakingContract.pool_address($t30)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:194:9+49
    assume {:print "$at(134,8605,8654)"} true;
    assume ($t32 == $pool_address#$1_staking_contract_StakingContract($Dereference($t30)));

    // assume Identical($t33, global<stake::StakePool>($t32)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:195:9+63
    assume {:print "$at(134,8663,8726)"} true;
    assume ($t33 == $ResourceValue($1_stake_StakePool_$memory, $t32));

    // staking_contract::distribute_internal($t18, $t1, $t30, $t31) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:9+102
    assume {:print "$at(133,25869,25971)"} true;
    call $t30,$t31 := $1_staking_contract_distribute_internal($t18, $t1, $t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(133,25869,25971)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // pack_ref_deep($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:9+102

    // write_back[LocalRoot($t11)@]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:9+102
    $t11 := $Dereference($t30);

    // trace_local[staking_contract]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:9+102
    assume {:print "$track_local(56,19,11):", $t11} $t11 == $t11;

    // write_back[Reference($t21).distribute_events (event::EventHandle<staking_contract::DistributeEvent>)]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:545:9+102
    $t21 := $UpdateMutation($t21, $Update'$1_staking_contract_Store'_distribute_events($Dereference($t21), $Dereference($t31)));

    // $t34 := borrow_local($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:551:13+21
    assume {:print "$at(133,26216,26237)"} true;
    $t34 := $Mutation($Local(11), EmptyVec(), $t11);

    // $t35 := borrow_field<staking_contract::Store>.add_distribution_events($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:552:13+34
    assume {:print "$at(133,26251,26285)"} true;
    $t35 := $ChildMutation($t21, 8, $add_distribution_events#$1_staking_contract_Store($Dereference($t21)));

    // $t36 := borrow_field<staking_contract::Store>.request_commission_events($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:553:13+36
    assume {:print "$at(133,26299,26335)"} true;
    $t36 := $ChildMutation($t21, 5, $request_commission_events#$1_staking_contract_Store($Dereference($t21)));

    // assume Identical($t37, select staking_contract::StakingContract.pool_address($t34)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t37 == $pool_address#$1_staking_contract_StakingContract($Dereference($t34)));

    // assume Identical($t38, global<stake::StakePool>($t37)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t38 == $ResourceValue($1_stake_StakePool_$memory, $t37));

    // assume Identical($t39, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t38))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t39 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t38)));

    // assume Identical($t40, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t38))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t40 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t38)));

    // assume Identical($t41, Add($t39, $t40)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t41 == ($t39 + $t40));

    // assume Identical($t42, Sub($t41, select staking_contract::StakingContract.principal($t34))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t42 == ($t41 - $principal#$1_staking_contract_StakingContract($Dereference($t34))));

    // $t43 := staking_contract::request_commission_internal($t1, $t34, $t35, $t36) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197
    assume {:print "$at(133,26149,26346)"} true;
    call $t43,$t34,$t35,$t36 := $1_staking_contract_request_commission_internal($t1, $t34, $t35, $t36);
    if ($abort_flag) {
        assume {:print "$at(133,26149,26346)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // pack_ref_deep($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197

    // write_back[LocalRoot($t11)@]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197
    $t11 := $Dereference($t34);

    // trace_local[staking_contract]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197
    assume {:print "$track_local(56,19,11):", $t11} $t11 == $t11;

    // write_back[Reference($t21).add_distribution_events (event::EventHandle<staking_contract::AddDistributionEvent>)]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197
    $t21 := $UpdateMutation($t21, $Update'$1_staking_contract_Store'_add_distribution_events($Dereference($t21), $Dereference($t35)));

    // write_back[Reference($t21).request_commission_events (event::EventHandle<staking_contract::RequestCommissionEvent>)]($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197
    $t21 := $UpdateMutation($t21, $Update'$1_staking_contract_Store'_request_commission_events($Dereference($t21), $Dereference($t36)));

    // destroy($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:549:9+197

    // $t44 := copy($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:557:39+16
    assume {:print "$at(133,26471,26487)"} true;
    $t44 := $t11;

    // $t45 := get_field<staking_contract::StakingContract>.owner_cap($t44) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:557:38+27
    $t45 := $owner_cap#$1_staking_contract_StakingContract($t44);

    // assume Identical($t46, select stake::OwnerCapability.pool_address($t45)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:104:9+42
    assume {:print "$at(132,4820,4862)"} true;
    assume ($t46 == $pool_address#$1_stake_OwnerCapability($t45));

    // stake::set_operator_with_cap($t45, $t2) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:557:9+71
    assume {:print "$at(133,26441,26512)"} true;
    call $1_stake_set_operator_with_cap($t45, $t2);
    if ($abort_flag) {
        assume {:print "$at(133,26441,26512)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // $t47 := borrow_local($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+16
    assume {:print "$at(133,26522,26538)"} true;
    $t47 := $Mutation($Local(11), EmptyVec(), $t11);

    // $t48 := borrow_field<staking_contract::StakingContract>.commission_percentage($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+38
    $t48 := $ChildMutation($t47, 3, $commission_percentage#$1_staking_contract_StakingContract($Dereference($t47)));

    // write_ref($t48, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+66
    $t48 := $UpdateMutation($t48, $t3);

    // write_back[Reference($t47).commission_percentage (u64)]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+66
    $t47 := $UpdateMutation($t47, $Update'$1_staking_contract_StakingContract'_commission_percentage($Dereference($t47), $Dereference($t48)));

    // pack_ref_deep($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+66

    // write_back[LocalRoot($t11)@]($t47) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+66
    $t11 := $Dereference($t47);

    // trace_local[staking_contract]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:558:9+66
    assume {:print "$track_local(56,19,11):", $t11} $t11 == $t11;

    // $t49 := copy($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:560:28+16
    assume {:print "$at(133,26618,26634)"} true;
    $t49 := $t11;

    // $t50 := get_field<staking_contract::StakingContract>.pool_address($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:560:28+29
    $t50 := $pool_address#$1_staking_contract_StakingContract($t49);

    // trace_local[pool_address]($t50) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:560:13+12
    assume {:print "$track_local(56,19,9):", $t50} $t50 == $t50;

    // $t51 := move($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:561:58+16
    assume {:print "$at(133,26706,26722)"} true;
    $t51 := $t11;

    // simple_map::add<address, staking_contract::StakingContract>($t22, $t2, $t51) on_abort goto L4 with $t19 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:561:9+66
    call $t22 := $1_simple_map_add'address_$1_staking_contract_StakingContract'($t22, $t2, $t51);
    if ($abort_flag) {
        assume {:print "$at(133,26657,26723)"} true;
        $t19 := $abort_code;
        assume {:print "$track_abort(56,19):", $t19} $t19 == $t19;
        goto L4;
    }

    // write_back[Reference($t21).staking_contracts (simple_map::SimpleMap<address, staking_contract::StakingContract>)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:561:9+66
    $t21 := $UpdateMutation($t21, $Update'$1_staking_contract_Store'_staking_contracts($Dereference($t21), $Dereference($t22)));

    // $t52 := borrow_field<staking_contract::Store>.switch_operator_events($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:563:13+33
    assume {:print "$at(133,26757,26790)"} true;
    $t52 := $ChildMutation($t21, 7, $switch_operator_events#$1_staking_contract_Store($Dereference($t21)));

    // $t53 := pack staking_contract::SwitchOperatorEvent($t1, $t2, $t50) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:564:13+64
    assume {:print "$at(133,26804,26868)"} true;
    $t53 := $1_staking_contract_SwitchOperatorEvent($t1, $t2, $t50);

    // opaque begin: event::emit_event<staking_contract::SwitchOperatorEvent>($t52, $t53) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:562:9+145
    assume {:print "$at(133,26733,26878)"} true;

    // opaque end: event::emit_event<staking_contract::SwitchOperatorEvent>($t52, $t53) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:562:9+145

    // write_back[Reference($t21).switch_operator_events (event::EventHandle<staking_contract::SwitchOperatorEvent>)]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:562:9+145
    $t21 := $UpdateMutation($t21, $Update'$1_staking_contract_Store'_switch_operator_events($Dereference($t21), $Dereference($t52)));

    // pack_ref_deep($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:562:9+145

    // write_back[staking_contract::Store@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:562:9+145
    $1_staking_contract_Store_$memory := $ResourceUpdate($1_staking_contract_Store_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:566:5+1
    assume {:print "$at(133,26884,26885)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:566:5+1
    assume {:print "$at(133,26884,26885)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:566:5+1
L4:

    // abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:566:5+1
    assume {:print "$at(133,26884,26885)"} true;
    $abort_code := $t19;
    $abort_flag := true;
    return;

}

// fun staking_contract::unlock_stake [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:456:5+2017
procedure {:inline 1} $1_staking_contract_unlock_stake(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_event_EventHandle'$1_staking_contract_UnlockStakeEvent');
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: $Mutation ($1_staking_contract_StakingContract);
    var $t13: $Mutation ($1_staking_contract_Store);
    var $t14: int;
    var $t15: bool;
    var $t16: int;
    var $t17: int;
    var $t18: Table int ($1_staking_contract_StakingContract);
    var $t19: $Mutation ($1_staking_contract_Store);
    var $t20: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t21: $Mutation ($1_staking_contract_StakingContract);
    var $t22: $Mutation ($1_event_EventHandle'$1_staking_contract_DistributeEvent');
    var $t23: int;
    var $t24: $1_stake_StakePool;
    var $t25: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent');
    var $t26: $Mutation ($1_event_EventHandle'$1_staking_contract_RequestCommissionEvent');
    var $t27: int;
    var $t28: $1_stake_StakePool;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: bool;
    var $t40: int;
    var $t41: int;
    var $t42: $Mutation (int);
    var $t43: $Mutation ($1_event_EventHandle'$1_staking_contract_AddDistributionEvent');
    var $t44: $1_stake_OwnerCapability;
    var $t45: int;
    var $t46: $1_stake_StakePool;
    var $t47: int;
    var $t48: int;
    var $t49: $Mutation ($1_event_EventHandle'$1_staking_contract_UnlockStakeEvent');
    var $t50: $1_staking_contract_UnlockStakeEvent;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'$1_staking_contract_Store': $1_staking_contract_Store;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:456:5+1
    assume {:print "$at(133,21655,21656)"} true;
    assume {:print "$track_local(56,22,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:456:5+1
    assume {:print "$track_local(56,22,1):", $t1} $t1 == $t1;

    // trace_local[amount]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:456:5+1
    assume {:print "$track_local(56,22,2):", $t2} $t2 == $t2;

    // $t14 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:458:23+1
    assume {:print "$at(133,21814,21815)"} true;
    $t14 := 0;
    assume $IsValid'u64'($t14);

    // $t15 := ==($t2, $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:458:20+2
    $t15 := $IsEqual'u64'($t2, $t14);

    // if ($t15) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:458:9+23
    if ($t15) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:458:26+6
L1:

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:458:26+6
    assume {:print "$at(133,21817,21823)"} true;
    goto L4;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:460:49+6
    assume {:print "$at(133,21874,21880)"} true;
L0:

    // $t16 := signer::address_of($t0) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:460:30+26
    assume {:print "$at(133,21855,21881)"} true;
    call $t16 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(133,21855,21881)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // trace_local[staker_address]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:460:13+14
    assume {:print "$track_local(56,22,11):", $t16} $t16 == $t16;

    // assume Identical($t18, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t18 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t16)));

    // staking_contract::assert_staking_contract_exists($t16, $t1) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:461:9+56
    assume {:print "$at(133,21891,21947)"} true;
    call $1_staking_contract_assert_staking_contract_exists($t16, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,21891,21947)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // $t19 := borrow_global<staking_contract::Store>($t16) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:463:21+17
    assume {:print "$at(133,21970,21987)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t16)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t16), EmptyVec(), $ResourceValue($1_staking_contract_Store_$memory, $t16));
    }
    if ($abort_flag) {
        assume {:print "$at(133,21970,21987)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // trace_local[store]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:463:13+5
    $temp_0'$1_staking_contract_Store' := $Dereference($t19);
    assume {:print "$track_local(56,22,13):", $temp_0'$1_staking_contract_Store'} $temp_0'$1_staking_contract_Store' == $temp_0'$1_staking_contract_Store';

    // $t20 := borrow_field<staking_contract::Store>.staking_contracts($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:464:55+28
    assume {:print "$at(133,22066,22094)"} true;
    $t20 := $ChildMutation($t19, 0, $staking_contracts#$1_staking_contract_Store($Dereference($t19)));

    // $t21 := simple_map::borrow_mut<address, staking_contract::StakingContract>($t20, $t1) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:464:32+63
    call $t21,$t20 := $1_simple_map_borrow_mut'address_$1_staking_contract_StakingContract'($t20, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,22043,22106)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // trace_local[staking_contract]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:464:13+16
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t21);
    assume {:print "$track_local(56,22,12):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // $t22 := borrow_field<staking_contract::Store>.distribute_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:467:73+28
    assume {:print "$at(133,22242,22270)"} true;
    $t22 := $ChildMutation($t19, 9, $distribute_events#$1_staking_contract_Store($Dereference($t19)));

    // assume Identical($t23, select staking_contract::StakingContract.pool_address($t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:194:9+49
    assume {:print "$at(134,8605,8654)"} true;
    assume ($t23 == $pool_address#$1_staking_contract_StakingContract($Dereference($t21)));

    // assume Identical($t24, global<stake::StakePool>($t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:195:9+63
    assume {:print "$at(134,8663,8726)"} true;
    assume ($t24 == $ResourceValue($1_stake_StakePool_$memory, $t23));

    // staking_contract::distribute_internal($t16, $t1, $t21, $t22) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:467:9+93
    assume {:print "$at(133,22178,22271)"} true;
    call $t21,$t22 := $1_staking_contract_distribute_internal($t16, $t1, $t21, $t22);
    if ($abort_flag) {
        assume {:print "$at(133,22178,22271)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // write_back[Reference($t19).distribute_events (event::EventHandle<staking_contract::DistributeEvent>)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:467:9+93
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_distribute_events($Dereference($t19), $Dereference($t22)));

    // $t25 := borrow_field<staking_contract::Store>.add_distribution_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:474:13+34
    assume {:print "$at(133,22564,22598)"} true;
    $t25 := $ChildMutation($t19, 8, $add_distribution_events#$1_staking_contract_Store($Dereference($t19)));

    // $t26 := borrow_field<staking_contract::Store>.request_commission_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:475:13+36
    assume {:print "$at(133,22612,22648)"} true;
    $t26 := $ChildMutation($t19, 5, $request_commission_events#$1_staking_contract_Store($Dereference($t19)));

    // assume Identical($t27, select staking_contract::StakingContract.pool_address($t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t27 == $pool_address#$1_staking_contract_StakingContract($Dereference($t21)));

    // assume Identical($t28, global<stake::StakePool>($t27)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t28 == $ResourceValue($1_stake_StakePool_$memory, $t27));

    // assume Identical($t29, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t28))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t29 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t28)));

    // assume Identical($t30, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t28))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t30 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t28)));

    // assume Identical($t31, Add($t29, $t30)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t31 == ($t29 + $t30));

    // assume Identical($t32, Sub($t31, select staking_contract::StakingContract.principal($t21))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t32 == ($t31 - $principal#$1_staking_contract_StakingContract($Dereference($t21))));

    // $t33 := staking_contract::request_commission_internal($t1, $t21, $t25, $t26) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:471:31+188
    assume {:print "$at(133,22471,22659)"} true;
    call $t33,$t21,$t25,$t26 := $1_staking_contract_request_commission_internal($t1, $t21, $t25, $t26);
    if ($abort_flag) {
        assume {:print "$at(133,22471,22659)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // write_back[Reference($t19).add_distribution_events (event::EventHandle<staking_contract::AddDistributionEvent>)]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:471:31+188
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_add_distribution_events($Dereference($t19), $Dereference($t25)));

    // write_back[Reference($t19).request_commission_events (event::EventHandle<staking_contract::RequestCommissionEvent>)]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:471:31+188
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_request_commission_events($Dereference($t19), $Dereference($t26)));

    // trace_local[commission_paid]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:471:13+15
    assume {:print "$track_local(56,22,9):", $t33} $t33 == $t33;

    // $t34 := get_field<staking_contract::StakingContract>.pool_address($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:480:50+29
    assume {:print "$at(133,22870,22899)"} true;
    $t34 := $pool_address#$1_staking_contract_StakingContract($Dereference($t21));

    // ($t35, $t36, $t37, $t38) := stake::get_stake($t34) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:480:33+47
    call $t35,$t36,$t37,$t38 := $1_stake_get_stake($t34);
    if ($abort_flag) {
        assume {:print "$at(133,22853,22900)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // destroy($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:480:28+1

    // destroy($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:480:25+1

    // destroy($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:480:22+1

    // trace_local[active]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:480:14+6
    assume {:print "$track_local(56,22,8):", $t35} $t35 == $t35;

    // $t39 := <($t35, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:481:20+1
    assume {:print "$at(133,22921,22922)"} true;
    call $t39 := $Lt($t35, $t2);

    // if ($t39) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:481:9+61
    if ($t39) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:482:22+6
    assume {:print "$at(133,22954,22960)"} true;
L3:

    // $t2 := $t35 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:482:13+6
    assume {:print "$at(133,22945,22951)"} true;
    $t2 := $t35;

    // trace_local[amount]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:482:13+6
    assume {:print "$track_local(56,22,2):", $t35} $t35 == $t35;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:484:38+16
    assume {:print "$at(133,23010,23026)"} true;
L2:

    // $t40 := get_field<staking_contract::StakingContract>.principal($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:484:38+26
    assume {:print "$at(133,23010,23036)"} true;
    $t40 := $principal#$1_staking_contract_StakingContract($Dereference($t21));

    // $t41 := -($t40, $t2) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:484:65+1
    call $t41 := $Sub($t40, $t2);
    if ($abort_flag) {
        assume {:print "$at(133,23037,23038)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // $t42 := borrow_field<staking_contract::StakingContract>.principal($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:484:9+26
    $t42 := $ChildMutation($t21, 0, $principal#$1_staking_contract_StakingContract($Dereference($t21)));

    // write_ref($t42, $t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:484:9+64
    $t42 := $UpdateMutation($t42, $t41);

    // write_back[Reference($t21).principal (u64)]($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:484:9+64
    $t21 := $UpdateMutation($t21, $Update'$1_staking_contract_StakingContract'_principal($Dereference($t21), $Dereference($t42)));

    // $t43 := borrow_field<staking_contract::Store>.add_distribution_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:488:65+34
    assume {:print "$at(133,23187,23221)"} true;
    $t43 := $ChildMutation($t19, 8, $add_distribution_events#$1_staking_contract_Store($Dereference($t19)));

    // staking_contract::add_distribution($t1, $t21, $t16, $t2, $t43) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:487:9+117
    assume {:print "$at(133,23105,23222)"} true;
    call $t21,$t43 := $1_staking_contract_add_distribution($t1, $t21, $t16, $t2, $t43);
    if ($abort_flag) {
        assume {:print "$at(133,23105,23222)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // write_back[Reference($t19).add_distribution_events (event::EventHandle<staking_contract::AddDistributionEvent>)]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:487:9+117
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_add_distribution_events($Dereference($t19), $Dereference($t43)));

    // $t44 := get_field<staking_contract::StakingContract>.owner_cap($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:492:40+27
    assume {:print "$at(133,23421,23448)"} true;
    $t44 := $owner_cap#$1_staking_contract_StakingContract($Dereference($t21));

    // assume Identical($t45, select stake::OwnerCapability.pool_address($t44)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:56:9+42
    assume {:print "$at(132,2499,2541)"} true;
    assume ($t45 == $pool_address#$1_stake_OwnerCapability($t44));

    // assume Identical($t46, global<stake::StakePool>($t45)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:57:9+53
    assume {:print "$at(132,2550,2603)"} true;
    assume ($t46 == $ResourceValue($1_stake_StakePool_$memory, $t45));

    // assume Identical($t47, math64::$min($t2, select coin::Coin.value(select stake::StakePool.active($t46)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:60:9+76
    assume {:print "$at(132,2725,2801)"} true;
    assume ($t47 == $1_math64_$min($t2, $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t46))));

    // stake::unlock_with_cap($t2, $t44) on_abort goto L5 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:492:9+59
    assume {:print "$at(133,23390,23449)"} true;
    call $1_stake_unlock_with_cap($t2, $t44);
    if ($abort_flag) {
        assume {:print "$at(133,23390,23449)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(56,22):", $t17} $t17 == $t17;
        goto L5;
    }

    // $t48 := get_field<staking_contract::StakingContract>.pool_address($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:494:28+29
    assume {:print "$at(133,23479,23508)"} true;
    $t48 := $pool_address#$1_staking_contract_StakingContract($Dereference($t21));

    // write_back[Reference($t20)[]]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:494:28+29
    $t20 := $UpdateMutation($t20, UpdateTable($Dereference($t20), ReadVec(p#$Mutation($t21), LenVec(p#$Mutation($t20))), $Dereference($t21)));

    // write_back[Reference($t19).staking_contracts (simple_map::SimpleMap<address, staking_contract::StakingContract>)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:494:28+29
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_staking_contracts($Dereference($t19), $Dereference($t20)));

    // trace_local[pool_address]($t48) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:494:13+12
    assume {:print "$track_local(56,22,10):", $t48} $t48 == $t48;

    // $t49 := borrow_field<staking_contract::Store>.unlock_stake_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:496:13+30
    assume {:print "$at(133,23542,23572)"} true;
    $t49 := $ChildMutation($t19, 6, $unlock_stake_events#$1_staking_contract_Store($Dereference($t19)));

    // $t50 := pack staking_contract::UnlockStakeEvent($t1, $t48, $t2, $t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:497:13+68
    assume {:print "$at(133,23586,23654)"} true;
    $t50 := $1_staking_contract_UnlockStakeEvent($t1, $t48, $t2, $t33);

    // opaque begin: event::emit_event<staking_contract::UnlockStakeEvent>($t49, $t50) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:495:9+147
    assume {:print "$at(133,23518,23665)"} true;

    // opaque end: event::emit_event<staking_contract::UnlockStakeEvent>($t49, $t50) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:495:9+147

    // write_back[Reference($t19).unlock_stake_events (event::EventHandle<staking_contract::UnlockStakeEvent>)]($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:495:9+147
    $t19 := $UpdateMutation($t19, $Update'$1_staking_contract_Store'_unlock_stake_events($Dereference($t19), $Dereference($t49)));

    // pack_ref_deep($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:495:9+147

    // write_back[staking_contract::Store@]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:495:9+147
    $1_staking_contract_Store_$memory := $ResourceUpdate($1_staking_contract_Store_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:499:5+1
    assume {:print "$at(133,23671,23672)"} true;
L4:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:499:5+1
    assume {:print "$at(133,23671,23672)"} true;
    return;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:499:5+1
L5:

    // abort($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:499:5+1
    assume {:print "$at(133,23671,23672)"} true;
    $abort_code := $t17;
    $abort_flag := true;
    return;

}

// fun staking_contract::update_distribution_pool [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:692:5+1743
procedure {:inline 1} $1_staking_contract_update_distribution_pool(_$t0: $Mutation ($1_pool_u64_Pool), _$t1: int, _$t2: int, _$t3: int) returns ($ret0: $Mutation ($1_pool_u64_Pool))
{
    // declare local variables
    var $t4: Vec (int);
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: Vec (int);
    var $t19: $1_pool_u64_Pool;
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: $1_pool_u64_Pool;
    var $t24: Vec (int);
    var $t25: int;
    var $t26: int;
    var $t27: bool;
    var $t28: int;
    var $t29: bool;
    var $t30: $1_pool_u64_Pool;
    var $t31: int;
    var $t32: $1_pool_u64_Pool;
    var $t33: int;
    var $t34: $1_pool_u64_Pool;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: int;
    var $t40: $1_pool_u64_Pool;
    var $t41: int;
    var $t42: int;
    var $t43: int;
    var $t44: int;
    var $t45: int;
    var $t0: $Mutation ($1_pool_u64_Pool);
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // trace_local[distribution_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:692:5+1
    assume {:print "$at(133,33342,33343)"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(56,24,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[updated_total_coins]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:692:5+1
    assume {:print "$track_local(56,24,1):", $t1} $t1 == $t1;

    // trace_local[operator]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:692:5+1
    assume {:print "$track_local(56,24,2):", $t2} $t2 == $t2;

    // trace_local[commission_percentage]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:692:5+1
    assume {:print "$track_local(56,24,3):", $t3} $t3 == $t3;

    // $t19 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:699:35+17
    assume {:print "$at(133,33632,33649)"} true;
    $t19 := $Dereference($t0);

    // $t20 := pool_u64::total_coins($t19) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:699:13+40
    call $t20 := $1_pool_u64_total_coins($t19);
    if ($abort_flag) {
        assume {:print "$at(133,33610,33650)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // $t22 := ==($t20, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:699:54+2
    $t22 := $IsEqual'u64'($t20, $t1);

    // if ($t22) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:699:9+99
    if ($t22) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:700:13+6
    assume {:print "$at(133,33689,33695)"} true;
L1:

    // destroy($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:700:13+6
    assume {:print "$at(133,33689,33695)"} true;

    // trace_local[distribution_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:700:13+6
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(56,24,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:700:13+6

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:700:13+6
    goto L9;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:705:52+17
    assume {:print "$at(133,33933,33950)"} true;
L0:

    // $t23 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:705:52+17
    assume {:print "$at(133,33933,33950)"} true;
    $t23 := $Dereference($t0);

    // $t24 := pool_u64::shareholders($t23) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:705:29+41
    call $t24 := $1_pool_u64_shareholders($t23);
    if ($abort_flag) {
        assume {:print "$at(133,33910,33951)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[v#216]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:706:9+1038
    assume {:print "$at(133,33961,34999)"} true;
    assume {:print "$track_local(56,24,18):", $t24} $t24 == $t24;

    // $t25 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:17+1
    assume {:print "$at(18,9246,9247)"} true;
    $t25 := 0;
    assume $IsValid'u64'($t25);

    // trace_local[i#218]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:13+1
    assume {:print "$track_local(56,24,11):", $t25} $t25 == $t25;

    // $t26 := vector::length<address>($t24) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:19+9
    assume {:print "$at(18,9267,9276)"} true;
    call $t26 := $1_vector_length'address'($t24);
    if ($abort_flag) {
        assume {:print "$at(18,9267,9276)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[len#219]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:13+3
    assume {:print "$track_local(56,24,12):", $t26} $t26 == $t26;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
L7:

    // $t11 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
    havoc $t11;

    // assume WellFormed($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t11);

    // $t27 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t27;

    // assume WellFormed($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'bool'($t27);

    // $t28 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t28;

    // assume WellFormed($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t28);

    // $t29 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t29;

    // assume WellFormed($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'bool'($t29);

    // $t30 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t30;

    // assume And(WellFormed($t30), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t30), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t30), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t30))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t30))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t30), i), Index(select pool_u64::Pool.shareholders($t30), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_pool_u64_Pool'($t30) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t30), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t30), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t30))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t30))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t30), i), ReadVec($shareholders#$1_pool_u64_Pool($t30), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t31 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t31;

    // assume WellFormed($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t31);

    // $t32 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t32;

    // assume And(WellFormed($t32), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t32), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t32), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t32))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t32))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t32), i), Index(select pool_u64::Pool.shareholders($t32), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_pool_u64_Pool'($t32) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t32), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t32), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t32))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t32))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t32), i), ReadVec($shareholders#$1_pool_u64_Pool($t32), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t33 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t33;

    // assume WellFormed($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t33);

    // $t34 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t34;

    // assume And(WellFormed($t34), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t34), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t34), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t34))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t34))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t34), i), Index(select pool_u64::Pool.shareholders($t34), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_pool_u64_Pool'($t34) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t34), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t34), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t34))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t34))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t34), i), ReadVec($shareholders#$1_pool_u64_Pool($t34), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t35 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t35;

    // assume WellFormed($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t35);

    // $t36 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t36;

    // assume WellFormed($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t36);

    // $t37 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t37;

    // assume WellFormed($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t37);

    // $t38 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t38;

    // assume WellFormed($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t38);

    // $t39 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t39;

    // assume WellFormed($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t39);

    // $t40 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t40;

    // assume And(WellFormed($t40), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t40), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t40), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t40))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t40))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t40), i), Index(select pool_u64::Pool.shareholders($t40), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_pool_u64_Pool'($t40) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($t40), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($t40), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t40))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($t40))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($t40), i), ReadVec($shareholders#$1_pool_u64_Pool($t40), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t41 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t41;

    // assume WellFormed($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t41);

    // $t42 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t42;

    // assume WellFormed($t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t42);

    // $t43 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t43;

    // assume WellFormed($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t43);

    // $t0 := havoc[mut]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $temp_0'$1_pool_u64_Pool';
    $t0 := $UpdateMutation($t0, $temp_0'$1_pool_u64_Pool');

    // assume And(WellFormed($t0), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares($t0), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders($t0), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders($t0))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders($t0))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders($t0), i), Index(select pool_u64::Pool.shareholders($t0), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_pool_u64_Pool'($Dereference($t0)) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($Dereference($t0)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($Dereference($t0)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($Dereference($t0)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($Dereference($t0)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($Dereference($t0)), i), ReadVec($shareholders#$1_pool_u64_Pool($Dereference($t0)), j)) ==> $IsEqual'num'(i, j))))))))));

    // trace_local[distribution_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$info(): enter loop, variable(s) distribution_pool, i#218 havocked and reassigned"} true;
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(56,24,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // trace_local[i#218]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$track_local(56,24,11):", $t11} $t11 == $t11;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume !$abort_flag;

    // $t27 := <($t11, $t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:18+1
    call $t27 := $Lt($t11, $t26);

    // if ($t27) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
    if ($t27) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
L3:

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:22+1
    assume {:print "$at(18,9325,9326)"} true;
L4:

    // $t28 := vector::borrow<address>($t24, $t11) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:15+12
    assume {:print "$at(18,9318,9330)"} true;
    call $t28 := $1_vector_borrow'address'($t24, $t11);
    if ($abort_flag) {
        assume {:print "$at(18,9318,9330)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[shareholder#221]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:707:17+11
    assume {:print "$at(133,34028,34039)"} true;
    assume {:print "$track_local(56,24,14):", $t28} $t28 == $t28;

    // $t29 := !=($t28, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:708:29+2
    assume {:print "$at(133,34093,34095)"} true;
    $t29 := !$IsEqual'address'($t28, $t2);

    // if ($t29) goto L6 else goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:708:13+910
    if ($t29) { goto L6; } else { goto L11; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:709:47+17
    assume {:print "$at(133,34154,34171)"} true;
L6:

    // $t30 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:709:46+32
    assume {:print "$at(133,34153,34185)"} true;
    $t30 := $Dereference($t0);

    // $t31 := pool_u64::shares($t30, $t28) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:709:30+48
    call $t31 := $1_pool_u64_shares($t30, $t28);
    if ($abort_flag) {
        assume {:print "$at(133,34137,34185)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[shares#222]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:709:21+6
    assume {:print "$track_local(56,24,15):", $t31} $t31 == $t31;

    // $t32 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:710:55+32
    assume {:print "$at(133,34241,34273)"} true;
    $t32 := $Dereference($t0);

    // assume Identical($t44, pool_u64::spec_shares($t32, $t28)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:53:9+44
    assume {:print "$at(59,1730,1774)"} true;
    assume ($t44 == $1_pool_u64_spec_shares($t32, $t28));

    // assume Identical($t45, select pool_u64::Pool.total_coins($t32)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:54:9+35
    assume {:print "$at(59,1783,1818)"} true;
    assume ($t45 == $total_coins#$1_pool_u64_Pool($t32));

    // $t33 := pool_u64::balance($t32, $t28) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:710:38+49
    assume {:print "$at(133,34224,34273)"} true;
    call $t33 := $1_pool_u64_balance($t32, $t28);
    if ($abort_flag) {
        assume {:print "$at(133,34224,34273)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[previous_worth#223]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:710:21+14
    assume {:print "$track_local(56,24,13):", $t33} $t33 == $t33;

    // $t34 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:711:80+69
    assume {:print "$at(133,34354,34423)"} true;
    $t34 := $Dereference($t0);

    // $t35 := pool_u64::shares_to_amount_with_total_coins($t34, $t31, $t1) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:711:37+112
    call $t35 := $1_pool_u64_shares_to_amount_with_total_coins($t34, $t31, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,34311,34423)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // $t36 := -($t35, $t33) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:713:56+1
    assume {:print "$at(133,34480,34481)"} true;
    call $t36 := $Sub($t35, $t33);
    if ($abort_flag) {
        assume {:print "$at(133,34480,34481)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // $t37 := *($t36, $t3) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:713:74+1
    call $t37 := $MulU64($t36, $t3);
    if ($abort_flag) {
        assume {:print "$at(133,34498,34499)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // $t38 := 100 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:713:100+3
    $t38 := 100;
    assume $IsValid'u64'($t38);

    // $t39 := /($t37, $t38) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:713:98+1
    call $t39 := $Div($t37, $t38);
    if ($abort_flag) {
        assume {:print "$at(133,34522,34523)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[unpaid_commission#225]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:713:21+17
    assume {:print "$track_local(56,24,17):", $t39} $t39 == $t39;

    // $t40 := read_ref($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:716:85+80
    assume {:print "$at(133,34787,34867)"} true;
    $t40 := $Dereference($t0);

    // $t41 := pool_u64::amount_to_shares_with_total_coins($t40, $t39, $t1) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:716:42+123
    call $t41 := $1_pool_u64_amount_to_shares_with_total_coins($t40, $t39, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,34744,34867)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[shares_to_transfer#226]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:716:21+18
    assume {:print "$track_local(56,24,16):", $t41} $t41 == $t41;

    // pool_u64::transfer_shares($t0, $t28, $t2, $t41) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:718:17+87
    assume {:print "$at(133,34885,34972)"} true;
    call $t0 := $1_pool_u64_transfer_shares($t0, $t28, $t2, $t41);
    if ($abort_flag) {
        assume {:print "$at(133,34885,34972)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:17+1
    assume {:print "$at(18,9349,9350)"} true;
L5:

    // $t42 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:21+1
    assume {:print "$at(18,9353,9354)"} true;
    $t42 := 1;
    assume $IsValid'u64'($t42);

    // $t43 := +($t11, $t42) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:19+1
    call $t43 := $AddU64($t11, $t42);
    if ($abort_flag) {
        assume {:print "$at(18,9351,9352)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[i#218]($t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+1
    assume {:print "$track_local(56,24,11):", $t43} $t43 == $t43;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+9
    goto L8;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:9+68
    assume {:print "$at(133,35010,35078)"} true;
L2:

    // pool_u64::update_total_coins($t0, $t1) on_abort goto L10 with $t21 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:9+68
    assume {:print "$at(133,35010,35078)"} true;
    call $t0 := $1_pool_u64_update_total_coins($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,35010,35078)"} true;
        $t21 := $abort_code;
        assume {:print "$track_abort(56,24):", $t21} $t21 == $t21;
        goto L10;
    }

    // trace_local[distribution_pool]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:77+1
    $temp_0'$1_pool_u64_Pool' := $Dereference($t0);
    assume {:print "$track_local(56,24,0):", $temp_0'$1_pool_u64_Pool'} $temp_0'$1_pool_u64_Pool' == $temp_0'$1_pool_u64_Pool';

    // pack_ref_deep($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:77+1

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:77+1
    goto L9;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:9+68
    // Loop invariant checking block for the loop started with header: L7
L8:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:722:9+68
    assume {:print "$at(133,35010,35078)"} true;
    assume false;
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:723:5+1
    assume {:print "$at(133,35084,35085)"} true;
L9:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:723:5+1
    assume {:print "$at(133,35084,35085)"} true;
    $ret0 := $t0;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:723:5+1
L10:

    // abort($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:723:5+1
    assume {:print "$at(133,35084,35085)"} true;
    $abort_code := $t21;
    $abort_flag := true;
    return;

    // label L11 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L11:

    // destroy($t0) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // goto L5 at <internal>:1:1+10
    goto L5;

}

// fun staking_contract::update_voter [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:335:5+754
procedure {:inline 1} $1_staking_contract_update_voter(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation ($1_staking_contract_StakingContract);
    var $t7: $Mutation ($1_staking_contract_Store);
    var $t8: int;
    var $t9: $1_staking_contract_Store;
    var $t10: $1_staking_contract_StakingContract;
    var $t11: int;
    var $t12: Table int ($1_staking_contract_StakingContract);
    var $t13: int;
    var $t14: int;
    var $t15: Table int ($1_staking_contract_StakingContract);
    var $t16: $Mutation ($1_staking_contract_Store);
    var $t17: $Mutation (Table int ($1_staking_contract_StakingContract));
    var $t18: $Mutation ($1_staking_contract_StakingContract);
    var $t19: int;
    var $t20: int;
    var $t21: $1_stake_OwnerCapability;
    var $t22: int;
    var $t23: $Mutation ($1_event_EventHandle'$1_staking_contract_UpdateVoterEvent');
    var $t24: $1_staking_contract_UpdateVoterEvent;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_staking_contract_StakingContract': $1_staking_contract_StakingContract;
    var $temp_0'$1_staking_contract_Store': $1_staking_contract_Store;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // bytecode translation starts here
    // assume Identical($t8, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:99:9+48
    assume {:print "$at(134,4471,4519)"} true;
    assume ($t8 == $1_signer_$address_of($t0));

    // assume Identical($t9, global<staking_contract::Store>($t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:276:9+34
    assume {:print "$at(134,11729,11763)"} true;
    assume ($t9 == $ResourceValue($1_staking_contract_Store_$memory, $t8));

    // assume Identical($t10, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t9), $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:277:9+79
    assume {:print "$at(134,11772,11851)"} true;
    assume ($t10 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t9), $t1));

    // assume Identical($t11, select staking_contract::StakingContract.pool_address($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:278:9+49
    assume {:print "$at(134,11860,11909)"} true;
    assume ($t11 == $pool_address#$1_staking_contract_StakingContract($t10));

    // assume Identical($t12, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t12 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t8)));

    // trace_local[staker]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:335:5+1
    assume {:print "$at(133,15603,15604)"} true;
    assume {:print "$track_local(56,25,0):", $t0} $t0 == $t0;

    // trace_local[operator]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:335:5+1
    assume {:print "$track_local(56,25,1):", $t1} $t1 == $t1;

    // trace_local[new_voter]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:335:5+1
    assume {:print "$track_local(56,25,2):", $t2} $t2 == $t2;

    // $t13 := signer::address_of($t0) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:336:30+26
    assume {:print "$at(133,15735,15761)"} true;
    call $t13 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(133,15735,15761)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,25):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[staker_address]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:336:13+14
    assume {:print "$track_local(56,25,5):", $t13} $t13 == $t13;

    // assume Identical($t15, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t13))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t15 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t13)));

    // staking_contract::assert_staking_contract_exists($t13, $t1) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:337:9+56
    assume {:print "$at(133,15771,15827)"} true;
    call $1_staking_contract_assert_staking_contract_exists($t13, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,15771,15827)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,25):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t16 := borrow_global<staking_contract::Store>($t13) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:339:21+17
    assume {:print "$at(133,15850,15867)"} true;
    if (!$ResourceExists($1_staking_contract_Store_$memory, $t13)) {
        call $ExecFailureAbort();
    } else {
        $t16 := $Mutation($Global($t13), EmptyVec(), $ResourceValue($1_staking_contract_Store_$memory, $t13));
    }
    if ($abort_flag) {
        assume {:print "$at(133,15850,15867)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,25):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[store]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:339:13+5
    $temp_0'$1_staking_contract_Store' := $Dereference($t16);
    assume {:print "$track_local(56,25,7):", $temp_0'$1_staking_contract_Store'} $temp_0'$1_staking_contract_Store' == $temp_0'$1_staking_contract_Store';

    // $t17 := borrow_field<staking_contract::Store>.staking_contracts($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:340:55+28
    assume {:print "$at(133,15946,15974)"} true;
    $t17 := $ChildMutation($t16, 0, $staking_contracts#$1_staking_contract_Store($Dereference($t16)));

    // $t18 := simple_map::borrow_mut<address, staking_contract::StakingContract>($t17, $t1) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:340:32+63
    call $t18,$t17 := $1_simple_map_borrow_mut'address_$1_staking_contract_StakingContract'($t17, $t1);
    if ($abort_flag) {
        assume {:print "$at(133,15923,15986)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,25):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[staking_contract]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:340:13+16
    $temp_0'$1_staking_contract_StakingContract' := $Dereference($t18);
    assume {:print "$track_local(56,25,6):", $temp_0'$1_staking_contract_StakingContract'} $temp_0'$1_staking_contract_StakingContract' == $temp_0'$1_staking_contract_StakingContract';

    // $t19 := get_field<staking_contract::StakingContract>.pool_address($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:341:28+29
    assume {:print "$at(133,16015,16044)"} true;
    $t19 := $pool_address#$1_staking_contract_StakingContract($Dereference($t18));

    // trace_local[pool_address]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:341:13+12
    assume {:print "$track_local(56,25,4):", $t19} $t19 == $t19;

    // $t20 := stake::get_delegated_voter($t19) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:342:25+40
    assume {:print "$at(133,16070,16110)"} true;
    call $t20 := $1_stake_get_delegated_voter($t19);
    if ($abort_flag) {
        assume {:print "$at(133,16070,16110)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,25):", $t14} $t14 == $t14;
        goto L2;
    }

    // trace_local[old_voter]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:342:13+9
    assume {:print "$track_local(56,25,3):", $t20} $t20 == $t20;

    // $t21 := get_field<staking_contract::StakingContract>.owner_cap($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:343:45+27
    assume {:print "$at(133,16156,16183)"} true;
    $t21 := $owner_cap#$1_staking_contract_StakingContract($Dereference($t18));

    // assume Identical($t22, select stake::OwnerCapability.pool_address($t21)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:136:9+42
    assume {:print "$at(132,6139,6181)"} true;
    assume ($t22 == $pool_address#$1_stake_OwnerCapability($t21));

    // stake::set_delegated_voter_with_cap($t21, $t2) on_abort goto L2 with $t14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:343:9+75
    assume {:print "$at(133,16120,16195)"} true;
    call $1_stake_set_delegated_voter_with_cap($t21, $t2);
    if ($abort_flag) {
        assume {:print "$at(133,16120,16195)"} true;
        $t14 := $abort_code;
        assume {:print "$track_abort(56,25):", $t14} $t14 == $t14;
        goto L2;
    }

    // $t23 := borrow_field<staking_contract::Store>.update_voter_events($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:346:13+30
    assume {:print "$at(133,16230,16260)"} true;
    $t23 := $ChildMutation($t16, 2, $update_voter_events#$1_staking_contract_Store($Dereference($t16)));

    // $t24 := pack staking_contract::UpdateVoterEvent($t1, $t19, $t20, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:347:13+65
    assume {:print "$at(133,16274,16339)"} true;
    $t24 := $1_staking_contract_UpdateVoterEvent($t1, $t19, $t20, $t2);

    // opaque begin: event::emit_event<staking_contract::UpdateVoterEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:345:9+144
    assume {:print "$at(133,16206,16350)"} true;

    // opaque end: event::emit_event<staking_contract::UpdateVoterEvent>($t23, $t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:345:9+144

    // write_back[Reference($t16).update_voter_events (event::EventHandle<staking_contract::UpdateVoterEvent>)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:345:9+144
    $t16 := $UpdateMutation($t16, $Update'$1_staking_contract_Store'_update_voter_events($Dereference($t16), $Dereference($t23)));

    // pack_ref_deep($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:345:9+144

    // write_back[staking_contract::Store@]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:345:9+144
    $1_staking_contract_Store_$memory := $ResourceUpdate($1_staking_contract_Store_$memory, $GlobalLocationAddress($t16),
        $Dereference($t16));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:349:5+1
    assume {:print "$at(133,16356,16357)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:349:5+1
    assume {:print "$at(133,16356,16357)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:349:5+1
L2:

    // abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.move:349:5+1
    assume {:print "$at(133,16356,16357)"} true;
    $abort_code := $t14;
    $abort_flag := true;
    return;

}

// struct vesting::DistributeEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:230:5+134
type {:datatype} $1_vesting_DistributeEvent;
function {:constructor} $1_vesting_DistributeEvent($admin: int, $vesting_contract_address: int, $amount: int): $1_vesting_DistributeEvent;
function {:inline} $Update'$1_vesting_DistributeEvent'_admin(s: $1_vesting_DistributeEvent, x: int): $1_vesting_DistributeEvent {
    $1_vesting_DistributeEvent(x, $vesting_contract_address#$1_vesting_DistributeEvent(s), $amount#$1_vesting_DistributeEvent(s))
}
function {:inline} $Update'$1_vesting_DistributeEvent'_vesting_contract_address(s: $1_vesting_DistributeEvent, x: int): $1_vesting_DistributeEvent {
    $1_vesting_DistributeEvent($admin#$1_vesting_DistributeEvent(s), x, $amount#$1_vesting_DistributeEvent(s))
}
function {:inline} $Update'$1_vesting_DistributeEvent'_amount(s: $1_vesting_DistributeEvent, x: int): $1_vesting_DistributeEvent {
    $1_vesting_DistributeEvent($admin#$1_vesting_DistributeEvent(s), $vesting_contract_address#$1_vesting_DistributeEvent(s), x)
}
function $IsValid'$1_vesting_DistributeEvent'(s: $1_vesting_DistributeEvent): bool {
    $IsValid'address'($admin#$1_vesting_DistributeEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_DistributeEvent(s))
      && $IsValid'u64'($amount#$1_vesting_DistributeEvent(s))
}
function {:inline} $IsEqual'$1_vesting_DistributeEvent'(s1: $1_vesting_DistributeEvent, s2: $1_vesting_DistributeEvent): bool {
    s1 == s2
}

// struct vesting::ResetLockupEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:200:5+194
type {:datatype} $1_vesting_ResetLockupEvent;
function {:constructor} $1_vesting_ResetLockupEvent($admin: int, $vesting_contract_address: int, $staking_pool_address: int, $new_lockup_expiration_secs: int): $1_vesting_ResetLockupEvent;
function {:inline} $Update'$1_vesting_ResetLockupEvent'_admin(s: $1_vesting_ResetLockupEvent, x: int): $1_vesting_ResetLockupEvent {
    $1_vesting_ResetLockupEvent(x, $vesting_contract_address#$1_vesting_ResetLockupEvent(s), $staking_pool_address#$1_vesting_ResetLockupEvent(s), $new_lockup_expiration_secs#$1_vesting_ResetLockupEvent(s))
}
function {:inline} $Update'$1_vesting_ResetLockupEvent'_vesting_contract_address(s: $1_vesting_ResetLockupEvent, x: int): $1_vesting_ResetLockupEvent {
    $1_vesting_ResetLockupEvent($admin#$1_vesting_ResetLockupEvent(s), x, $staking_pool_address#$1_vesting_ResetLockupEvent(s), $new_lockup_expiration_secs#$1_vesting_ResetLockupEvent(s))
}
function {:inline} $Update'$1_vesting_ResetLockupEvent'_staking_pool_address(s: $1_vesting_ResetLockupEvent, x: int): $1_vesting_ResetLockupEvent {
    $1_vesting_ResetLockupEvent($admin#$1_vesting_ResetLockupEvent(s), $vesting_contract_address#$1_vesting_ResetLockupEvent(s), x, $new_lockup_expiration_secs#$1_vesting_ResetLockupEvent(s))
}
function {:inline} $Update'$1_vesting_ResetLockupEvent'_new_lockup_expiration_secs(s: $1_vesting_ResetLockupEvent, x: int): $1_vesting_ResetLockupEvent {
    $1_vesting_ResetLockupEvent($admin#$1_vesting_ResetLockupEvent(s), $vesting_contract_address#$1_vesting_ResetLockupEvent(s), $staking_pool_address#$1_vesting_ResetLockupEvent(s), x)
}
function $IsValid'$1_vesting_ResetLockupEvent'(s: $1_vesting_ResetLockupEvent): bool {
    $IsValid'address'($admin#$1_vesting_ResetLockupEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_ResetLockupEvent(s))
      && $IsValid'address'($staking_pool_address#$1_vesting_ResetLockupEvent(s))
      && $IsValid'u64'($new_lockup_expiration_secs#$1_vesting_ResetLockupEvent(s))
}
function {:inline} $IsEqual'$1_vesting_ResetLockupEvent'(s1: $1_vesting_ResetLockupEvent, s2: $1_vesting_ResetLockupEvent): bool {
    s1 == s2
}

// struct vesting::UpdateVoterEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:192:5+209
type {:datatype} $1_vesting_UpdateVoterEvent;
function {:constructor} $1_vesting_UpdateVoterEvent($admin: int, $vesting_contract_address: int, $staking_pool_address: int, $old_voter: int, $new_voter: int): $1_vesting_UpdateVoterEvent;
function {:inline} $Update'$1_vesting_UpdateVoterEvent'_admin(s: $1_vesting_UpdateVoterEvent, x: int): $1_vesting_UpdateVoterEvent {
    $1_vesting_UpdateVoterEvent(x, $vesting_contract_address#$1_vesting_UpdateVoterEvent(s), $staking_pool_address#$1_vesting_UpdateVoterEvent(s), $old_voter#$1_vesting_UpdateVoterEvent(s), $new_voter#$1_vesting_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateVoterEvent'_vesting_contract_address(s: $1_vesting_UpdateVoterEvent, x: int): $1_vesting_UpdateVoterEvent {
    $1_vesting_UpdateVoterEvent($admin#$1_vesting_UpdateVoterEvent(s), x, $staking_pool_address#$1_vesting_UpdateVoterEvent(s), $old_voter#$1_vesting_UpdateVoterEvent(s), $new_voter#$1_vesting_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateVoterEvent'_staking_pool_address(s: $1_vesting_UpdateVoterEvent, x: int): $1_vesting_UpdateVoterEvent {
    $1_vesting_UpdateVoterEvent($admin#$1_vesting_UpdateVoterEvent(s), $vesting_contract_address#$1_vesting_UpdateVoterEvent(s), x, $old_voter#$1_vesting_UpdateVoterEvent(s), $new_voter#$1_vesting_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateVoterEvent'_old_voter(s: $1_vesting_UpdateVoterEvent, x: int): $1_vesting_UpdateVoterEvent {
    $1_vesting_UpdateVoterEvent($admin#$1_vesting_UpdateVoterEvent(s), $vesting_contract_address#$1_vesting_UpdateVoterEvent(s), $staking_pool_address#$1_vesting_UpdateVoterEvent(s), x, $new_voter#$1_vesting_UpdateVoterEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateVoterEvent'_new_voter(s: $1_vesting_UpdateVoterEvent, x: int): $1_vesting_UpdateVoterEvent {
    $1_vesting_UpdateVoterEvent($admin#$1_vesting_UpdateVoterEvent(s), $vesting_contract_address#$1_vesting_UpdateVoterEvent(s), $staking_pool_address#$1_vesting_UpdateVoterEvent(s), $old_voter#$1_vesting_UpdateVoterEvent(s), x)
}
function $IsValid'$1_vesting_UpdateVoterEvent'(s: $1_vesting_UpdateVoterEvent): bool {
    $IsValid'address'($admin#$1_vesting_UpdateVoterEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_UpdateVoterEvent(s))
      && $IsValid'address'($staking_pool_address#$1_vesting_UpdateVoterEvent(s))
      && $IsValid'address'($old_voter#$1_vesting_UpdateVoterEvent(s))
      && $IsValid'address'($new_voter#$1_vesting_UpdateVoterEvent(s))
}
function {:inline} $IsEqual'$1_vesting_UpdateVoterEvent'(s1: $1_vesting_UpdateVoterEvent, s2: $1_vesting_UpdateVoterEvent): bool {
    s1 == s2
}

// struct vesting::AdminStore at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:165:5+265
type {:datatype} $1_vesting_AdminStore;
function {:constructor} $1_vesting_AdminStore($vesting_contracts: Vec (int), $nonce: int, $create_events: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'): $1_vesting_AdminStore;
function {:inline} $Update'$1_vesting_AdminStore'_vesting_contracts(s: $1_vesting_AdminStore, x: Vec (int)): $1_vesting_AdminStore {
    $1_vesting_AdminStore(x, $nonce#$1_vesting_AdminStore(s), $create_events#$1_vesting_AdminStore(s))
}
function {:inline} $Update'$1_vesting_AdminStore'_nonce(s: $1_vesting_AdminStore, x: int): $1_vesting_AdminStore {
    $1_vesting_AdminStore($vesting_contracts#$1_vesting_AdminStore(s), x, $create_events#$1_vesting_AdminStore(s))
}
function {:inline} $Update'$1_vesting_AdminStore'_create_events(s: $1_vesting_AdminStore, x: $1_event_EventHandle'$1_vesting_CreateVestingContractEvent'): $1_vesting_AdminStore {
    $1_vesting_AdminStore($vesting_contracts#$1_vesting_AdminStore(s), $nonce#$1_vesting_AdminStore(s), x)
}
function $IsValid'$1_vesting_AdminStore'(s: $1_vesting_AdminStore): bool {
    $IsValid'vec'address''($vesting_contracts#$1_vesting_AdminStore(s))
      && $IsValid'u64'($nonce#$1_vesting_AdminStore(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''($create_events#$1_vesting_AdminStore(s))
}
function {:inline} $IsEqual'$1_vesting_AdminStore'(s1: $1_vesting_AdminStore, s2: $1_vesting_AdminStore): bool {
    $IsEqual'vec'address''($vesting_contracts#$1_vesting_AdminStore(s1), $vesting_contracts#$1_vesting_AdminStore(s2))
    && $IsEqual'u64'($nonce#$1_vesting_AdminStore(s1), $nonce#$1_vesting_AdminStore(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_CreateVestingContractEvent''($create_events#$1_vesting_AdminStore(s1), $create_events#$1_vesting_AdminStore(s2))}
var $1_vesting_AdminStore_$memory: $Memory $1_vesting_AdminStore;

// struct vesting::AdminWithdrawEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:241:5+137
type {:datatype} $1_vesting_AdminWithdrawEvent;
function {:constructor} $1_vesting_AdminWithdrawEvent($admin: int, $vesting_contract_address: int, $amount: int): $1_vesting_AdminWithdrawEvent;
function {:inline} $Update'$1_vesting_AdminWithdrawEvent'_admin(s: $1_vesting_AdminWithdrawEvent, x: int): $1_vesting_AdminWithdrawEvent {
    $1_vesting_AdminWithdrawEvent(x, $vesting_contract_address#$1_vesting_AdminWithdrawEvent(s), $amount#$1_vesting_AdminWithdrawEvent(s))
}
function {:inline} $Update'$1_vesting_AdminWithdrawEvent'_vesting_contract_address(s: $1_vesting_AdminWithdrawEvent, x: int): $1_vesting_AdminWithdrawEvent {
    $1_vesting_AdminWithdrawEvent($admin#$1_vesting_AdminWithdrawEvent(s), x, $amount#$1_vesting_AdminWithdrawEvent(s))
}
function {:inline} $Update'$1_vesting_AdminWithdrawEvent'_amount(s: $1_vesting_AdminWithdrawEvent, x: int): $1_vesting_AdminWithdrawEvent {
    $1_vesting_AdminWithdrawEvent($admin#$1_vesting_AdminWithdrawEvent(s), $vesting_contract_address#$1_vesting_AdminWithdrawEvent(s), x)
}
function $IsValid'$1_vesting_AdminWithdrawEvent'(s: $1_vesting_AdminWithdrawEvent): bool {
    $IsValid'address'($admin#$1_vesting_AdminWithdrawEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_AdminWithdrawEvent(s))
      && $IsValid'u64'($amount#$1_vesting_AdminWithdrawEvent(s))
}
function {:inline} $IsEqual'$1_vesting_AdminWithdrawEvent'(s1: $1_vesting_AdminWithdrawEvent, s2: $1_vesting_AdminWithdrawEvent): bool {
    s1 == s2
}

// struct vesting::CreateVestingContractEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:173:5+290
type {:datatype} $1_vesting_CreateVestingContractEvent;
function {:constructor} $1_vesting_CreateVestingContractEvent($operator: int, $voter: int, $grant_amount: int, $withdrawal_address: int, $vesting_contract_address: int, $staking_pool_address: int, $commission_percentage: int): $1_vesting_CreateVestingContractEvent;
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_operator(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent(x, $voter#$1_vesting_CreateVestingContractEvent(s), $grant_amount#$1_vesting_CreateVestingContractEvent(s), $withdrawal_address#$1_vesting_CreateVestingContractEvent(s), $vesting_contract_address#$1_vesting_CreateVestingContractEvent(s), $staking_pool_address#$1_vesting_CreateVestingContractEvent(s), $commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_voter(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent($operator#$1_vesting_CreateVestingContractEvent(s), x, $grant_amount#$1_vesting_CreateVestingContractEvent(s), $withdrawal_address#$1_vesting_CreateVestingContractEvent(s), $vesting_contract_address#$1_vesting_CreateVestingContractEvent(s), $staking_pool_address#$1_vesting_CreateVestingContractEvent(s), $commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_grant_amount(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent($operator#$1_vesting_CreateVestingContractEvent(s), $voter#$1_vesting_CreateVestingContractEvent(s), x, $withdrawal_address#$1_vesting_CreateVestingContractEvent(s), $vesting_contract_address#$1_vesting_CreateVestingContractEvent(s), $staking_pool_address#$1_vesting_CreateVestingContractEvent(s), $commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_withdrawal_address(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent($operator#$1_vesting_CreateVestingContractEvent(s), $voter#$1_vesting_CreateVestingContractEvent(s), $grant_amount#$1_vesting_CreateVestingContractEvent(s), x, $vesting_contract_address#$1_vesting_CreateVestingContractEvent(s), $staking_pool_address#$1_vesting_CreateVestingContractEvent(s), $commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_vesting_contract_address(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent($operator#$1_vesting_CreateVestingContractEvent(s), $voter#$1_vesting_CreateVestingContractEvent(s), $grant_amount#$1_vesting_CreateVestingContractEvent(s), $withdrawal_address#$1_vesting_CreateVestingContractEvent(s), x, $staking_pool_address#$1_vesting_CreateVestingContractEvent(s), $commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_staking_pool_address(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent($operator#$1_vesting_CreateVestingContractEvent(s), $voter#$1_vesting_CreateVestingContractEvent(s), $grant_amount#$1_vesting_CreateVestingContractEvent(s), $withdrawal_address#$1_vesting_CreateVestingContractEvent(s), $vesting_contract_address#$1_vesting_CreateVestingContractEvent(s), x, $commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $Update'$1_vesting_CreateVestingContractEvent'_commission_percentage(s: $1_vesting_CreateVestingContractEvent, x: int): $1_vesting_CreateVestingContractEvent {
    $1_vesting_CreateVestingContractEvent($operator#$1_vesting_CreateVestingContractEvent(s), $voter#$1_vesting_CreateVestingContractEvent(s), $grant_amount#$1_vesting_CreateVestingContractEvent(s), $withdrawal_address#$1_vesting_CreateVestingContractEvent(s), $vesting_contract_address#$1_vesting_CreateVestingContractEvent(s), $staking_pool_address#$1_vesting_CreateVestingContractEvent(s), x)
}
function $IsValid'$1_vesting_CreateVestingContractEvent'(s: $1_vesting_CreateVestingContractEvent): bool {
    $IsValid'address'($operator#$1_vesting_CreateVestingContractEvent(s))
      && $IsValid'address'($voter#$1_vesting_CreateVestingContractEvent(s))
      && $IsValid'u64'($grant_amount#$1_vesting_CreateVestingContractEvent(s))
      && $IsValid'address'($withdrawal_address#$1_vesting_CreateVestingContractEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_CreateVestingContractEvent(s))
      && $IsValid'address'($staking_pool_address#$1_vesting_CreateVestingContractEvent(s))
      && $IsValid'u64'($commission_percentage#$1_vesting_CreateVestingContractEvent(s))
}
function {:inline} $IsEqual'$1_vesting_CreateVestingContractEvent'(s1: $1_vesting_CreateVestingContractEvent, s2: $1_vesting_CreateVestingContractEvent): bool {
    s1 == s2
}

// struct vesting::SetBeneficiaryEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:207:5+215
type {:datatype} $1_vesting_SetBeneficiaryEvent;
function {:constructor} $1_vesting_SetBeneficiaryEvent($admin: int, $vesting_contract_address: int, $shareholder: int, $old_beneficiary: int, $new_beneficiary: int): $1_vesting_SetBeneficiaryEvent;
function {:inline} $Update'$1_vesting_SetBeneficiaryEvent'_admin(s: $1_vesting_SetBeneficiaryEvent, x: int): $1_vesting_SetBeneficiaryEvent {
    $1_vesting_SetBeneficiaryEvent(x, $vesting_contract_address#$1_vesting_SetBeneficiaryEvent(s), $shareholder#$1_vesting_SetBeneficiaryEvent(s), $old_beneficiary#$1_vesting_SetBeneficiaryEvent(s), $new_beneficiary#$1_vesting_SetBeneficiaryEvent(s))
}
function {:inline} $Update'$1_vesting_SetBeneficiaryEvent'_vesting_contract_address(s: $1_vesting_SetBeneficiaryEvent, x: int): $1_vesting_SetBeneficiaryEvent {
    $1_vesting_SetBeneficiaryEvent($admin#$1_vesting_SetBeneficiaryEvent(s), x, $shareholder#$1_vesting_SetBeneficiaryEvent(s), $old_beneficiary#$1_vesting_SetBeneficiaryEvent(s), $new_beneficiary#$1_vesting_SetBeneficiaryEvent(s))
}
function {:inline} $Update'$1_vesting_SetBeneficiaryEvent'_shareholder(s: $1_vesting_SetBeneficiaryEvent, x: int): $1_vesting_SetBeneficiaryEvent {
    $1_vesting_SetBeneficiaryEvent($admin#$1_vesting_SetBeneficiaryEvent(s), $vesting_contract_address#$1_vesting_SetBeneficiaryEvent(s), x, $old_beneficiary#$1_vesting_SetBeneficiaryEvent(s), $new_beneficiary#$1_vesting_SetBeneficiaryEvent(s))
}
function {:inline} $Update'$1_vesting_SetBeneficiaryEvent'_old_beneficiary(s: $1_vesting_SetBeneficiaryEvent, x: int): $1_vesting_SetBeneficiaryEvent {
    $1_vesting_SetBeneficiaryEvent($admin#$1_vesting_SetBeneficiaryEvent(s), $vesting_contract_address#$1_vesting_SetBeneficiaryEvent(s), $shareholder#$1_vesting_SetBeneficiaryEvent(s), x, $new_beneficiary#$1_vesting_SetBeneficiaryEvent(s))
}
function {:inline} $Update'$1_vesting_SetBeneficiaryEvent'_new_beneficiary(s: $1_vesting_SetBeneficiaryEvent, x: int): $1_vesting_SetBeneficiaryEvent {
    $1_vesting_SetBeneficiaryEvent($admin#$1_vesting_SetBeneficiaryEvent(s), $vesting_contract_address#$1_vesting_SetBeneficiaryEvent(s), $shareholder#$1_vesting_SetBeneficiaryEvent(s), $old_beneficiary#$1_vesting_SetBeneficiaryEvent(s), x)
}
function $IsValid'$1_vesting_SetBeneficiaryEvent'(s: $1_vesting_SetBeneficiaryEvent): bool {
    $IsValid'address'($admin#$1_vesting_SetBeneficiaryEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_SetBeneficiaryEvent(s))
      && $IsValid'address'($shareholder#$1_vesting_SetBeneficiaryEvent(s))
      && $IsValid'address'($old_beneficiary#$1_vesting_SetBeneficiaryEvent(s))
      && $IsValid'address'($new_beneficiary#$1_vesting_SetBeneficiaryEvent(s))
}
function {:inline} $IsEqual'$1_vesting_SetBeneficiaryEvent'(s1: $1_vesting_SetBeneficiaryEvent, s2: $1_vesting_SetBeneficiaryEvent): bool {
    s1 == s2
}

// struct vesting::StakingInfo at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:123:5+384
type {:datatype} $1_vesting_StakingInfo;
function {:constructor} $1_vesting_StakingInfo($pool_address: int, $operator: int, $voter: int, $commission_percentage: int): $1_vesting_StakingInfo;
function {:inline} $Update'$1_vesting_StakingInfo'_pool_address(s: $1_vesting_StakingInfo, x: int): $1_vesting_StakingInfo {
    $1_vesting_StakingInfo(x, $operator#$1_vesting_StakingInfo(s), $voter#$1_vesting_StakingInfo(s), $commission_percentage#$1_vesting_StakingInfo(s))
}
function {:inline} $Update'$1_vesting_StakingInfo'_operator(s: $1_vesting_StakingInfo, x: int): $1_vesting_StakingInfo {
    $1_vesting_StakingInfo($pool_address#$1_vesting_StakingInfo(s), x, $voter#$1_vesting_StakingInfo(s), $commission_percentage#$1_vesting_StakingInfo(s))
}
function {:inline} $Update'$1_vesting_StakingInfo'_voter(s: $1_vesting_StakingInfo, x: int): $1_vesting_StakingInfo {
    $1_vesting_StakingInfo($pool_address#$1_vesting_StakingInfo(s), $operator#$1_vesting_StakingInfo(s), x, $commission_percentage#$1_vesting_StakingInfo(s))
}
function {:inline} $Update'$1_vesting_StakingInfo'_commission_percentage(s: $1_vesting_StakingInfo, x: int): $1_vesting_StakingInfo {
    $1_vesting_StakingInfo($pool_address#$1_vesting_StakingInfo(s), $operator#$1_vesting_StakingInfo(s), $voter#$1_vesting_StakingInfo(s), x)
}
function $IsValid'$1_vesting_StakingInfo'(s: $1_vesting_StakingInfo): bool {
    $IsValid'address'($pool_address#$1_vesting_StakingInfo(s))
      && $IsValid'address'($operator#$1_vesting_StakingInfo(s))
      && $IsValid'address'($voter#$1_vesting_StakingInfo(s))
      && $IsValid'u64'($commission_percentage#$1_vesting_StakingInfo(s))
}
function {:inline} $IsEqual'$1_vesting_StakingInfo'(s1: $1_vesting_StakingInfo, s2: $1_vesting_StakingInfo): bool {
    s1 == s2
}

// struct vesting::TerminateEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:236:5+112
type {:datatype} $1_vesting_TerminateEvent;
function {:constructor} $1_vesting_TerminateEvent($admin: int, $vesting_contract_address: int): $1_vesting_TerminateEvent;
function {:inline} $Update'$1_vesting_TerminateEvent'_admin(s: $1_vesting_TerminateEvent, x: int): $1_vesting_TerminateEvent {
    $1_vesting_TerminateEvent(x, $vesting_contract_address#$1_vesting_TerminateEvent(s))
}
function {:inline} $Update'$1_vesting_TerminateEvent'_vesting_contract_address(s: $1_vesting_TerminateEvent, x: int): $1_vesting_TerminateEvent {
    $1_vesting_TerminateEvent($admin#$1_vesting_TerminateEvent(s), x)
}
function $IsValid'$1_vesting_TerminateEvent'(s: $1_vesting_TerminateEvent): bool {
    $IsValid'address'($admin#$1_vesting_TerminateEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_TerminateEvent(s))
}
function {:inline} $IsEqual'$1_vesting_TerminateEvent'(s1: $1_vesting_TerminateEvent, s2: $1_vesting_TerminateEvent): bool {
    s1 == s2
}

// struct vesting::UnlockRewardsEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:215:5+176
type {:datatype} $1_vesting_UnlockRewardsEvent;
function {:constructor} $1_vesting_UnlockRewardsEvent($admin: int, $vesting_contract_address: int, $staking_pool_address: int, $amount: int): $1_vesting_UnlockRewardsEvent;
function {:inline} $Update'$1_vesting_UnlockRewardsEvent'_admin(s: $1_vesting_UnlockRewardsEvent, x: int): $1_vesting_UnlockRewardsEvent {
    $1_vesting_UnlockRewardsEvent(x, $vesting_contract_address#$1_vesting_UnlockRewardsEvent(s), $staking_pool_address#$1_vesting_UnlockRewardsEvent(s), $amount#$1_vesting_UnlockRewardsEvent(s))
}
function {:inline} $Update'$1_vesting_UnlockRewardsEvent'_vesting_contract_address(s: $1_vesting_UnlockRewardsEvent, x: int): $1_vesting_UnlockRewardsEvent {
    $1_vesting_UnlockRewardsEvent($admin#$1_vesting_UnlockRewardsEvent(s), x, $staking_pool_address#$1_vesting_UnlockRewardsEvent(s), $amount#$1_vesting_UnlockRewardsEvent(s))
}
function {:inline} $Update'$1_vesting_UnlockRewardsEvent'_staking_pool_address(s: $1_vesting_UnlockRewardsEvent, x: int): $1_vesting_UnlockRewardsEvent {
    $1_vesting_UnlockRewardsEvent($admin#$1_vesting_UnlockRewardsEvent(s), $vesting_contract_address#$1_vesting_UnlockRewardsEvent(s), x, $amount#$1_vesting_UnlockRewardsEvent(s))
}
function {:inline} $Update'$1_vesting_UnlockRewardsEvent'_amount(s: $1_vesting_UnlockRewardsEvent, x: int): $1_vesting_UnlockRewardsEvent {
    $1_vesting_UnlockRewardsEvent($admin#$1_vesting_UnlockRewardsEvent(s), $vesting_contract_address#$1_vesting_UnlockRewardsEvent(s), $staking_pool_address#$1_vesting_UnlockRewardsEvent(s), x)
}
function $IsValid'$1_vesting_UnlockRewardsEvent'(s: $1_vesting_UnlockRewardsEvent): bool {
    $IsValid'address'($admin#$1_vesting_UnlockRewardsEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_UnlockRewardsEvent(s))
      && $IsValid'address'($staking_pool_address#$1_vesting_UnlockRewardsEvent(s))
      && $IsValid'u64'($amount#$1_vesting_UnlockRewardsEvent(s))
}
function {:inline} $IsEqual'$1_vesting_UnlockRewardsEvent'(s1: $1_vesting_UnlockRewardsEvent, s2: $1_vesting_UnlockRewardsEvent): bool {
    s1 == s2
}

// struct vesting::UpdateOperatorEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:183:5+254
type {:datatype} $1_vesting_UpdateOperatorEvent;
function {:constructor} $1_vesting_UpdateOperatorEvent($admin: int, $vesting_contract_address: int, $staking_pool_address: int, $old_operator: int, $new_operator: int, $commission_percentage: int): $1_vesting_UpdateOperatorEvent;
function {:inline} $Update'$1_vesting_UpdateOperatorEvent'_admin(s: $1_vesting_UpdateOperatorEvent, x: int): $1_vesting_UpdateOperatorEvent {
    $1_vesting_UpdateOperatorEvent(x, $vesting_contract_address#$1_vesting_UpdateOperatorEvent(s), $staking_pool_address#$1_vesting_UpdateOperatorEvent(s), $old_operator#$1_vesting_UpdateOperatorEvent(s), $new_operator#$1_vesting_UpdateOperatorEvent(s), $commission_percentage#$1_vesting_UpdateOperatorEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateOperatorEvent'_vesting_contract_address(s: $1_vesting_UpdateOperatorEvent, x: int): $1_vesting_UpdateOperatorEvent {
    $1_vesting_UpdateOperatorEvent($admin#$1_vesting_UpdateOperatorEvent(s), x, $staking_pool_address#$1_vesting_UpdateOperatorEvent(s), $old_operator#$1_vesting_UpdateOperatorEvent(s), $new_operator#$1_vesting_UpdateOperatorEvent(s), $commission_percentage#$1_vesting_UpdateOperatorEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateOperatorEvent'_staking_pool_address(s: $1_vesting_UpdateOperatorEvent, x: int): $1_vesting_UpdateOperatorEvent {
    $1_vesting_UpdateOperatorEvent($admin#$1_vesting_UpdateOperatorEvent(s), $vesting_contract_address#$1_vesting_UpdateOperatorEvent(s), x, $old_operator#$1_vesting_UpdateOperatorEvent(s), $new_operator#$1_vesting_UpdateOperatorEvent(s), $commission_percentage#$1_vesting_UpdateOperatorEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateOperatorEvent'_old_operator(s: $1_vesting_UpdateOperatorEvent, x: int): $1_vesting_UpdateOperatorEvent {
    $1_vesting_UpdateOperatorEvent($admin#$1_vesting_UpdateOperatorEvent(s), $vesting_contract_address#$1_vesting_UpdateOperatorEvent(s), $staking_pool_address#$1_vesting_UpdateOperatorEvent(s), x, $new_operator#$1_vesting_UpdateOperatorEvent(s), $commission_percentage#$1_vesting_UpdateOperatorEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateOperatorEvent'_new_operator(s: $1_vesting_UpdateOperatorEvent, x: int): $1_vesting_UpdateOperatorEvent {
    $1_vesting_UpdateOperatorEvent($admin#$1_vesting_UpdateOperatorEvent(s), $vesting_contract_address#$1_vesting_UpdateOperatorEvent(s), $staking_pool_address#$1_vesting_UpdateOperatorEvent(s), $old_operator#$1_vesting_UpdateOperatorEvent(s), x, $commission_percentage#$1_vesting_UpdateOperatorEvent(s))
}
function {:inline} $Update'$1_vesting_UpdateOperatorEvent'_commission_percentage(s: $1_vesting_UpdateOperatorEvent, x: int): $1_vesting_UpdateOperatorEvent {
    $1_vesting_UpdateOperatorEvent($admin#$1_vesting_UpdateOperatorEvent(s), $vesting_contract_address#$1_vesting_UpdateOperatorEvent(s), $staking_pool_address#$1_vesting_UpdateOperatorEvent(s), $old_operator#$1_vesting_UpdateOperatorEvent(s), $new_operator#$1_vesting_UpdateOperatorEvent(s), x)
}
function $IsValid'$1_vesting_UpdateOperatorEvent'(s: $1_vesting_UpdateOperatorEvent): bool {
    $IsValid'address'($admin#$1_vesting_UpdateOperatorEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_UpdateOperatorEvent(s))
      && $IsValid'address'($staking_pool_address#$1_vesting_UpdateOperatorEvent(s))
      && $IsValid'address'($old_operator#$1_vesting_UpdateOperatorEvent(s))
      && $IsValid'address'($new_operator#$1_vesting_UpdateOperatorEvent(s))
      && $IsValid'u64'($commission_percentage#$1_vesting_UpdateOperatorEvent(s))
}
function {:inline} $IsEqual'$1_vesting_UpdateOperatorEvent'(s1: $1_vesting_UpdateOperatorEvent, s2: $1_vesting_UpdateOperatorEvent): bool {
    s1 == s2
}

// struct vesting::VestEvent at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:222:5+195
type {:datatype} $1_vesting_VestEvent;
function {:constructor} $1_vesting_VestEvent($admin: int, $vesting_contract_address: int, $staking_pool_address: int, $period_vested: int, $amount: int): $1_vesting_VestEvent;
function {:inline} $Update'$1_vesting_VestEvent'_admin(s: $1_vesting_VestEvent, x: int): $1_vesting_VestEvent {
    $1_vesting_VestEvent(x, $vesting_contract_address#$1_vesting_VestEvent(s), $staking_pool_address#$1_vesting_VestEvent(s), $period_vested#$1_vesting_VestEvent(s), $amount#$1_vesting_VestEvent(s))
}
function {:inline} $Update'$1_vesting_VestEvent'_vesting_contract_address(s: $1_vesting_VestEvent, x: int): $1_vesting_VestEvent {
    $1_vesting_VestEvent($admin#$1_vesting_VestEvent(s), x, $staking_pool_address#$1_vesting_VestEvent(s), $period_vested#$1_vesting_VestEvent(s), $amount#$1_vesting_VestEvent(s))
}
function {:inline} $Update'$1_vesting_VestEvent'_staking_pool_address(s: $1_vesting_VestEvent, x: int): $1_vesting_VestEvent {
    $1_vesting_VestEvent($admin#$1_vesting_VestEvent(s), $vesting_contract_address#$1_vesting_VestEvent(s), x, $period_vested#$1_vesting_VestEvent(s), $amount#$1_vesting_VestEvent(s))
}
function {:inline} $Update'$1_vesting_VestEvent'_period_vested(s: $1_vesting_VestEvent, x: int): $1_vesting_VestEvent {
    $1_vesting_VestEvent($admin#$1_vesting_VestEvent(s), $vesting_contract_address#$1_vesting_VestEvent(s), $staking_pool_address#$1_vesting_VestEvent(s), x, $amount#$1_vesting_VestEvent(s))
}
function {:inline} $Update'$1_vesting_VestEvent'_amount(s: $1_vesting_VestEvent, x: int): $1_vesting_VestEvent {
    $1_vesting_VestEvent($admin#$1_vesting_VestEvent(s), $vesting_contract_address#$1_vesting_VestEvent(s), $staking_pool_address#$1_vesting_VestEvent(s), $period_vested#$1_vesting_VestEvent(s), x)
}
function $IsValid'$1_vesting_VestEvent'(s: $1_vesting_VestEvent): bool {
    $IsValid'address'($admin#$1_vesting_VestEvent(s))
      && $IsValid'address'($vesting_contract_address#$1_vesting_VestEvent(s))
      && $IsValid'address'($staking_pool_address#$1_vesting_VestEvent(s))
      && $IsValid'u64'($period_vested#$1_vesting_VestEvent(s))
      && $IsValid'u64'($amount#$1_vesting_VestEvent(s))
}
function {:inline} $IsEqual'$1_vesting_VestEvent'(s1: $1_vesting_VestEvent, s2: $1_vesting_VestEvent): bool {
    s1 == s2
}

// struct vesting::VestingAccountManagement at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:161:5+90
type {:datatype} $1_vesting_VestingAccountManagement;
function {:constructor} $1_vesting_VestingAccountManagement($roles: Table int (int)): $1_vesting_VestingAccountManagement;
function {:inline} $Update'$1_vesting_VestingAccountManagement'_roles(s: $1_vesting_VestingAccountManagement, x: Table int (int)): $1_vesting_VestingAccountManagement {
    $1_vesting_VestingAccountManagement(x)
}
function $IsValid'$1_vesting_VestingAccountManagement'(s: $1_vesting_VestingAccountManagement): bool {
    $IsValid'$1_simple_map_SimpleMap'$1_string_String_address''($roles#$1_vesting_VestingAccountManagement(s))
}
function {:inline} $IsEqual'$1_vesting_VestingAccountManagement'(s1: $1_vesting_VestingAccountManagement, s2: $1_vesting_VestingAccountManagement): bool {
    $IsEqual'$1_simple_map_SimpleMap'$1_string_String_address''($roles#$1_vesting_VestingAccountManagement(s1), $roles#$1_vesting_VestingAccountManagement(s2))}
var $1_vesting_VestingAccountManagement_$memory: $Memory $1_vesting_VestingAccountManagement;

// struct vesting::VestingContract at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:134:5+1189
type {:datatype} $1_vesting_VestingContract;
function {:constructor} $1_vesting_VestingContract($state: int, $admin: int, $grant_pool: $1_pool_u64_Pool, $beneficiaries: Table int (int), $vesting_schedule: $1_vesting_VestingSchedule, $withdrawal_address: int, $staking: $1_vesting_StakingInfo, $remaining_grant: int, $signer_cap: $1_account_SignerCapability, $update_operator_events: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent', $update_voter_events: $1_event_EventHandle'$1_vesting_UpdateVoterEvent', $reset_lockup_events: $1_event_EventHandle'$1_vesting_ResetLockupEvent', $set_beneficiary_events: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent', $unlock_rewards_events: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent', $vest_events: $1_event_EventHandle'$1_vesting_VestEvent', $distribute_events: $1_event_EventHandle'$1_vesting_DistributeEvent', $terminate_events: $1_event_EventHandle'$1_vesting_TerminateEvent', $admin_withdraw_events: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'): $1_vesting_VestingContract;
function {:inline} $Update'$1_vesting_VestingContract'_state(s: $1_vesting_VestingContract, x: int): $1_vesting_VestingContract {
    $1_vesting_VestingContract(x, $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_admin(s: $1_vesting_VestingContract, x: int): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), x, $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_grant_pool(s: $1_vesting_VestingContract, x: $1_pool_u64_Pool): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), x, $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_beneficiaries(s: $1_vesting_VestingContract, x: Table int (int)): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), x, $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_vesting_schedule(s: $1_vesting_VestingContract, x: $1_vesting_VestingSchedule): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), x, $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_withdrawal_address(s: $1_vesting_VestingContract, x: int): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), x, $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_staking(s: $1_vesting_VestingContract, x: $1_vesting_StakingInfo): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), x, $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_remaining_grant(s: $1_vesting_VestingContract, x: int): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), x, $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_signer_cap(s: $1_vesting_VestingContract, x: $1_account_SignerCapability): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), x, $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_update_operator_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_UpdateOperatorEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), x, $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_update_voter_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_UpdateVoterEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), x, $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_reset_lockup_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_ResetLockupEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), x, $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_set_beneficiary_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_SetBeneficiaryEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), x, $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_unlock_rewards_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_UnlockRewardsEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), x, $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_vest_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_VestEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), x, $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_distribute_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_DistributeEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), x, $terminate_events#$1_vesting_VestingContract(s), $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_terminate_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_TerminateEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), x, $admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $Update'$1_vesting_VestingContract'_admin_withdraw_events(s: $1_vesting_VestingContract, x: $1_event_EventHandle'$1_vesting_AdminWithdrawEvent'): $1_vesting_VestingContract {
    $1_vesting_VestingContract($state#$1_vesting_VestingContract(s), $admin#$1_vesting_VestingContract(s), $grant_pool#$1_vesting_VestingContract(s), $beneficiaries#$1_vesting_VestingContract(s), $vesting_schedule#$1_vesting_VestingContract(s), $withdrawal_address#$1_vesting_VestingContract(s), $staking#$1_vesting_VestingContract(s), $remaining_grant#$1_vesting_VestingContract(s), $signer_cap#$1_vesting_VestingContract(s), $update_operator_events#$1_vesting_VestingContract(s), $update_voter_events#$1_vesting_VestingContract(s), $reset_lockup_events#$1_vesting_VestingContract(s), $set_beneficiary_events#$1_vesting_VestingContract(s), $unlock_rewards_events#$1_vesting_VestingContract(s), $vest_events#$1_vesting_VestingContract(s), $distribute_events#$1_vesting_VestingContract(s), $terminate_events#$1_vesting_VestingContract(s), x)
}
function $IsValid'$1_vesting_VestingContract'(s: $1_vesting_VestingContract): bool {
    $IsValid'u64'($state#$1_vesting_VestingContract(s))
      && $IsValid'address'($admin#$1_vesting_VestingContract(s))
      && $IsValid'$1_pool_u64_Pool'($grant_pool#$1_vesting_VestingContract(s))
      && $IsValid'$1_simple_map_SimpleMap'address_address''($beneficiaries#$1_vesting_VestingContract(s))
      && $IsValid'$1_vesting_VestingSchedule'($vesting_schedule#$1_vesting_VestingContract(s))
      && $IsValid'address'($withdrawal_address#$1_vesting_VestingContract(s))
      && $IsValid'$1_vesting_StakingInfo'($staking#$1_vesting_VestingContract(s))
      && $IsValid'u64'($remaining_grant#$1_vesting_VestingContract(s))
      && $IsValid'$1_account_SignerCapability'($signer_cap#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''($update_operator_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''($update_voter_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_ResetLockupEvent''($reset_lockup_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''($set_beneficiary_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''($unlock_rewards_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_VestEvent''($vest_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_DistributeEvent''($distribute_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_TerminateEvent''($terminate_events#$1_vesting_VestingContract(s))
      && $IsValid'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''($admin_withdraw_events#$1_vesting_VestingContract(s))
}
function {:inline} $IsEqual'$1_vesting_VestingContract'(s1: $1_vesting_VestingContract, s2: $1_vesting_VestingContract): bool {
    $IsEqual'u64'($state#$1_vesting_VestingContract(s1), $state#$1_vesting_VestingContract(s2))
    && $IsEqual'address'($admin#$1_vesting_VestingContract(s1), $admin#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_pool_u64_Pool'($grant_pool#$1_vesting_VestingContract(s1), $grant_pool#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_simple_map_SimpleMap'address_address''($beneficiaries#$1_vesting_VestingContract(s1), $beneficiaries#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_vesting_VestingSchedule'($vesting_schedule#$1_vesting_VestingContract(s1), $vesting_schedule#$1_vesting_VestingContract(s2))
    && $IsEqual'address'($withdrawal_address#$1_vesting_VestingContract(s1), $withdrawal_address#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_vesting_StakingInfo'($staking#$1_vesting_VestingContract(s1), $staking#$1_vesting_VestingContract(s2))
    && $IsEqual'u64'($remaining_grant#$1_vesting_VestingContract(s1), $remaining_grant#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_account_SignerCapability'($signer_cap#$1_vesting_VestingContract(s1), $signer_cap#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_UpdateOperatorEvent''($update_operator_events#$1_vesting_VestingContract(s1), $update_operator_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_UpdateVoterEvent''($update_voter_events#$1_vesting_VestingContract(s1), $update_voter_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_ResetLockupEvent''($reset_lockup_events#$1_vesting_VestingContract(s1), $reset_lockup_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_SetBeneficiaryEvent''($set_beneficiary_events#$1_vesting_VestingContract(s1), $set_beneficiary_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_UnlockRewardsEvent''($unlock_rewards_events#$1_vesting_VestingContract(s1), $unlock_rewards_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_VestEvent''($vest_events#$1_vesting_VestingContract(s1), $vest_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_DistributeEvent''($distribute_events#$1_vesting_VestingContract(s1), $distribute_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_TerminateEvent''($terminate_events#$1_vesting_VestingContract(s1), $terminate_events#$1_vesting_VestingContract(s2))
    && $IsEqual'$1_event_EventHandle'$1_vesting_AdminWithdrawEvent''($admin_withdraw_events#$1_vesting_VestingContract(s1), $admin_withdraw_events#$1_vesting_VestingContract(s2))}
var $1_vesting_VestingContract_$memory: $Memory $1_vesting_VestingContract;

// struct vesting::VestingSchedule at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:106:5+1037
type {:datatype} $1_vesting_VestingSchedule;
function {:constructor} $1_vesting_VestingSchedule($schedule: Vec ($1_fixed_point32_FixedPoint32), $start_timestamp_secs: int, $period_duration: int, $last_vested_period: int): $1_vesting_VestingSchedule;
function {:inline} $Update'$1_vesting_VestingSchedule'_schedule(s: $1_vesting_VestingSchedule, x: Vec ($1_fixed_point32_FixedPoint32)): $1_vesting_VestingSchedule {
    $1_vesting_VestingSchedule(x, $start_timestamp_secs#$1_vesting_VestingSchedule(s), $period_duration#$1_vesting_VestingSchedule(s), $last_vested_period#$1_vesting_VestingSchedule(s))
}
function {:inline} $Update'$1_vesting_VestingSchedule'_start_timestamp_secs(s: $1_vesting_VestingSchedule, x: int): $1_vesting_VestingSchedule {
    $1_vesting_VestingSchedule($schedule#$1_vesting_VestingSchedule(s), x, $period_duration#$1_vesting_VestingSchedule(s), $last_vested_period#$1_vesting_VestingSchedule(s))
}
function {:inline} $Update'$1_vesting_VestingSchedule'_period_duration(s: $1_vesting_VestingSchedule, x: int): $1_vesting_VestingSchedule {
    $1_vesting_VestingSchedule($schedule#$1_vesting_VestingSchedule(s), $start_timestamp_secs#$1_vesting_VestingSchedule(s), x, $last_vested_period#$1_vesting_VestingSchedule(s))
}
function {:inline} $Update'$1_vesting_VestingSchedule'_last_vested_period(s: $1_vesting_VestingSchedule, x: int): $1_vesting_VestingSchedule {
    $1_vesting_VestingSchedule($schedule#$1_vesting_VestingSchedule(s), $start_timestamp_secs#$1_vesting_VestingSchedule(s), $period_duration#$1_vesting_VestingSchedule(s), x)
}
function $IsValid'$1_vesting_VestingSchedule'(s: $1_vesting_VestingSchedule): bool {
    $IsValid'vec'$1_fixed_point32_FixedPoint32''($schedule#$1_vesting_VestingSchedule(s))
      && $IsValid'u64'($start_timestamp_secs#$1_vesting_VestingSchedule(s))
      && $IsValid'u64'($period_duration#$1_vesting_VestingSchedule(s))
      && $IsValid'u64'($last_vested_period#$1_vesting_VestingSchedule(s))
}
function {:inline} $IsEqual'$1_vesting_VestingSchedule'(s1: $1_vesting_VestingSchedule, s2: $1_vesting_VestingSchedule): bool {
    $IsEqual'vec'$1_fixed_point32_FixedPoint32''($schedule#$1_vesting_VestingSchedule(s1), $schedule#$1_vesting_VestingSchedule(s2))
    && $IsEqual'u64'($start_timestamp_secs#$1_vesting_VestingSchedule(s1), $start_timestamp_secs#$1_vesting_VestingSchedule(s2))
    && $IsEqual'u64'($period_duration#$1_vesting_VestingSchedule(s1), $period_duration#$1_vesting_VestingSchedule(s2))
    && $IsEqual'u64'($last_vested_period#$1_vesting_VestingSchedule(s1), $last_vested_period#$1_vesting_VestingSchedule(s2))}

// fun vesting::operator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:321:5+244
procedure {:timeLimit 200} $1_vesting_operator$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_StakingInfo;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#60: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:321:5+1
    assume {:print "$at(2,14901,14902)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:321:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @60 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:321:5+1
    $1_vesting_VestingContract_$memory#60 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:321:5+1
    assume {:print "$track_local(57,14,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:322:9+56
    assume {:print "$at(2,15000,15056)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,15000,15056)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,14):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:323:9+13
    assume {:print "$at(2,15066,15079)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,15066,15079)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,14):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.staking($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:323:9+64
    $t3 := $staking#$1_vesting_VestingContract($t2);

    // $t4 := get_field<vesting::StakingInfo>.operator($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:323:9+73
    $t4 := $operator#$1_vesting_StakingInfo($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:323:9+73
    assume {:print "$track_return(57,14,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:324:5+1
    assume {:print "$at(2,15144,15145)"} true;
L1:

    // assert Not(Not(exists[@60]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:36:9+61
    assume {:print "$at(3,1205,1266)"} true;
    assert {:msg "assert_failed(3,1205,1266): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#60, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:36:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:324:5+1
    assume {:print "$at(2,15144,15145)"} true;
L2:

    // assert Not(exists[@60]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:35:5+135
    assume {:print "$at(3,1137,1272)"} true;
    assert {:msg "assert_failed(3,1137,1272): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#60, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:35:5+135
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::voter [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:331:5+238
procedure {:timeLimit 200} $1_vesting_voter$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_StakingInfo;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#59: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:331:5+1
    assume {:print "$at(2,15393,15394)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:331:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @59 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:331:5+1
    $1_vesting_VestingContract_$memory#59 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:331:5+1
    assume {:print "$track_local(57,40,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:332:9+56
    assume {:print "$at(2,15489,15545)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,15489,15545)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,40):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:333:9+13
    assume {:print "$at(2,15555,15568)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,15555,15568)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,40):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.staking($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:333:9+64
    $t3 := $staking#$1_vesting_VestingContract($t2);

    // $t4 := get_field<vesting::StakingInfo>.voter($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:333:9+70
    $t4 := $voter#$1_vesting_StakingInfo($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:333:9+70
    assume {:print "$track_return(57,40,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:334:5+1
    assume {:print "$at(2,15630,15631)"} true;
L1:

    // assert Not(Not(exists[@59]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:40:9+61
    assume {:print "$at(3,1343,1404)"} true;
    assert {:msg "assert_failed(3,1343,1404): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#59, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:40:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:334:5+1
    assume {:print "$at(2,15630,15631)"} true;
L2:

    // assert Not(exists[@59]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:39:5+132
    assume {:print "$at(3,1278,1410)"} true;
    assert {:msg "assert_failed(3,1278,1410): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#59, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:39:5+132
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::shareholder [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+811
procedure {:timeLimit 200} $1_vesting_shareholder$verify(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: Vec (int);
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: Vec (int);
    var $t9: Vec (int);
    var $t10: $1_vesting_VestingContract;
    var $t11: $1_vesting_VestingContract;
    var $t12: $1_vesting_VestingContract;
    var $t13: int;
    var $t14: $1_vesting_VestingContract;
    var $t15: Vec (int);
    var $t16: bool;
    var $t17: int;
    var $t18: $1_vesting_VestingContract;
    var $t19: int;
    var $t20: bool;
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: int;
    var $t25: int;
    var $t26: bool;
    var $t27: bool;
    var $t28: bool;
    var $t29: int;
    var $t30: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'bool': bool;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    var $1_vesting_VestingContract_$memory#105: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+1
    assume {:print "$at(2,19217,19218)"} true;
    assume $IsValid'address'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t11, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t11 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // @105 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+1
    assume {:print "$at(2,19217,19218)"} true;
    $1_vesting_VestingContract_$memory#105 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+1
    assume {:print "$track_local(57,23,0):", $t0} $t0 == $t0;

    // trace_local[shareholder_or_beneficiary]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:396:5+1
    assume {:print "$track_local(57,23,1):", $t1} $t1 == $t1;

    // assume Identical($t12, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t12 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:397:9+56
    assume {:print "$at(2,19356,19412)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,19356,19412)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // assume Identical($t14, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t14 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // $t15 := vesting::shareholders($t0) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:399:29+38
    assume {:print "$at(2,19443,19481)"} true;
    call $t15 := $1_vesting_shareholders($t0);
    if ($abort_flag) {
        assume {:print "$at(2,19443,19481)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // trace_local[shareholders]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:399:13+12
    assume {:print "$track_local(57,23,8):", $t15} $t15 == $t15;

    // $t16 := vector::contains<address>($t15, $t1) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:400:13+59
    assume {:print "$at(2,19495,19554)"} true;
    call $t16 := $1_vector_contains'address'($t15, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,19495,19554)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // if ($t16) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:400:9+122
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:401:13+33
    assume {:print "$at(2,19570,19603)"} true;
L1:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:401:13+33
    assume {:print "$at(2,19570,19603)"} true;
    assume {:print "$track_return(57,23,0):", $t1} $t1 == $t1;

    // $t17 := move($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:401:13+33
    $t17 := $t1;

    // goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:401:13+33
    goto L12;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:403:63+24
    assume {:print "$at(2,19677,19701)"} true;
L0:

    // $t18 := get_global<vesting::VestingContract>($t0) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:403:32+13
    assume {:print "$at(2,19646,19659)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,19646,19659)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // trace_local[vesting_contract]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:403:13+16
    assume {:print "$track_local(57,23,10):", $t18} $t18 == $t18;

    // $t19 := 0x0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:404:22+4
    assume {:print "$at(2,19725,19729)"} true;
    $t19 := 0;
    assume $IsValid'address'($t19);

    // trace_local[result]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:404:13+6
    assume {:print "$track_local(57,23,5):", $t19} $t19 == $t19;

    // trace_local[v#251]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:405:9+266
    assume {:print "$at(2,19739,20005)"} true;
    assume {:print "$track_local(57,23,9):", $t15} $t15 == $t15;

    // $t20 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:534:22+5
    assume {:print "$at(18,18638,18643)"} true;
    $t20 := false;
    assume $IsValid'bool'($t20);

    // trace_local[result#253]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:534:13+6
    assume {:print "$track_local(57,23,6):", $t20} $t20 == $t20;

    // $t21 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:535:17+1
    assume {:print "$at(18,18661,18662)"} true;
    $t21 := 0;
    assume $IsValid'u64'($t21);

    // trace_local[i#254]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:535:13+1
    assume {:print "$track_local(57,23,4):", $t21} $t21 == $t21;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume {:print "$at(18,18679,18680)"} true;
L10:

    // $t3 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume {:print "$at(18,18679,18680)"} true;
    havoc $t3;

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'bool'($t3);

    // $t4 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t4;

    // assume WellFormed($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'u64'($t4);

    // $t5 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t5;

    // assume WellFormed($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'address'($t5);

    // $t6 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t6;

    // assume WellFormed($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'bool'($t6);

    // $t22 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t22;

    // assume WellFormed($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'u64'($t22);

    // $t23 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t23;

    // assume WellFormed($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'bool'($t23);

    // $t24 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t24;

    // assume WellFormed($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'address'($t24);

    // $t25 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t25;

    // assume WellFormed($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'address'($t25);

    // $t26 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t26;

    // assume WellFormed($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'bool'($t26);

    // $t27 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t27;

    // assume WellFormed($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'bool'($t27);

    // $t28 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t28;

    // assume WellFormed($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'bool'($t28);

    // $t29 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t29;

    // assume WellFormed($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'u64'($t29);

    // $t30 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    havoc $t30;

    // assume WellFormed($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume $IsValid'u64'($t30);

    // trace_local[i#254]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume {:print "$info(): enter loop, variable(s) i#254, result, result#253 havocked and reassigned"} true;
    assume {:print "$track_local(57,23,4):", $t4} $t4 == $t4;

    // trace_local[result]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume {:print "$track_local(57,23,5):", $t5} $t5 == $t5;

    // trace_local[result#253]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume {:print "$track_local(57,23,6):", $t6} $t6 == $t6;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:16+1
    assume !$abort_flag;

    // $t22 := vector::length<address>($t15) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:20+9
    call $t22 := $1_vector_length'address'($t15);
    if ($abort_flag) {
        assume {:print "$at(18,18683,18692)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // $t23 := <($t4, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:18+1
    call $t23 := $Lt($t4, $t22);

    // if ($t23) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:9+156
    if ($t23) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:536:9+156
L3:

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:537:31+1
    assume {:print "$at(18,18726,18727)"} true;
L4:

    // $t24 := vector::borrow<address>($t15, $t4) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:537:24+12
    assume {:print "$at(18,18719,18731)"} true;
    call $t24 := $1_vector_borrow'address'($t15, $t4);
    if ($abort_flag) {
        assume {:print "$at(18,18719,18731)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // trace_local[shareholder#255]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:537:24+12
    assume {:print "$track_local(57,23,7):", $t24} $t24 == $t24;

    // $t25 := vesting::get_beneficiary($t18, $t24) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:47+47
    assume {:print "$at(2,19827,19874)"} true;
    call $t25 := $1_vesting_get_beneficiary($t18, $t24);
    if ($abort_flag) {
        assume {:print "$at(2,19827,19874)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // $t26 := ==($t1, $t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:44+2
    $t26 := $IsEqual'address'($t1, $t25);

    // if ($t26) goto L6 else goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:13+201
    if ($t26) { goto L6; } else { goto L5; }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:407:27+11
    assume {:print "$at(2,19904,19915)"} true;
L6:

    // $t5 := $t24 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:407:17+6
    assume {:print "$at(2,19894,19900)"} true;
    $t5 := $t24;

    // trace_local[result]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:407:17+6
    assume {:print "$track_local(57,23,5):", $t24} $t24 == $t24;

    // $t27 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:408:17+4
    assume {:print "$at(2,19933,19937)"} true;
    $t27 := true;
    assume $IsValid'bool'($t27);

    // $t3 := $t27 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:13+201
    assume {:print "$at(2,19793,19994)"} true;
    $t3 := $t27;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:13+201
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:13+201
L5:

    // $t28 := false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:410:17+5
    assume {:print "$at(2,19975,19980)"} true;
    $t28 := false;
    assume $IsValid'bool'($t28);

    // $t3 := $t28 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:13+201
    assume {:print "$at(2,19793,19994)"} true;
    $t3 := $t28;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:406:13+201
L7:

    // $t6 := $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:537:13+6
    assume {:print "$at(18,18708,18714)"} true;
    $t6 := $t3;

    // trace_local[result#253]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:537:13+6
    assume {:print "$track_local(57,23,6):", $t3} $t3 == $t3;

    // if ($t3) goto L9 else goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:538:13+49
    assume {:print "$at(18,18746,18795)"} true;
    if ($t3) { goto L9; } else { goto L8; }

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:539:17+5
    assume {:print "$at(18,18776,18781)"} true;
L9:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:539:17+5
    assume {:print "$at(18,18776,18781)"} true;
    goto L2;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:541:17+1
    assume {:print "$at(18,18813,18814)"} true;
L8:

    // $t29 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:541:21+1
    assume {:print "$at(18,18817,18818)"} true;
    $t29 := 1;
    assume $IsValid'u64'($t29);

    // $t30 := +($t4, $t29) on_abort goto L13 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:541:19+1
    call $t30 := $AddU64($t4, $t29);
    if ($abort_flag) {
        assume {:print "$at(18,18815,18816)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,23):", $t13} $t13 == $t13;
        goto L13;
    }

    // trace_local[i#254]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:541:13+1
    assume {:print "$track_local(57,23,4):", $t30} $t30 == $t30;

    // goto L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:541:13+9
    goto L11;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:543:9+6
    assume {:print "$at(18,18838,18844)"} true;
L2:

    // destroy($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:543:9+6
    assume {:print "$at(18,18838,18844)"} true;

    // trace_return[0]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:414:9+6
    assume {:print "$at(2,20016,20022)"} true;
    assume {:print "$track_return(57,23,0):", $t5} $t5 == $t5;

    // $t17 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:414:9+6
    $t17 := $t5;

    // goto L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:414:9+6
    goto L12;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:543:9+6
    // Loop invariant checking block for the loop started with header: L10
    assume {:print "$at(18,18838,18844)"} true;
L11:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:543:9+6
    assume {:print "$at(18,18838,18844)"} true;
    assume false;
    return;

    // label L12 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:415:5+1
    assume {:print "$at(2,20027,20028)"} true;
L12:

    // assert Not(Not(exists[@105]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:388:9+53
    assume {:print "$at(3,16316,16369)"} true;
    assert {:msg "assert_failed(3,16316,16369): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#105, $t0);

    // assert Not(Neq<u64>(select vesting::VestingContract.state($t11), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    assume {:print "$at(3,16452,16508)"} true;
    assert {:msg "assert_failed(3,16452,16508): function does not abort under this condition"}
      !!$IsEqual'u64'($state#$1_vesting_VestingContract($t11), 1);

    // return $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    $ret0 := $t17;
    return;

    // label L13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:415:5+1
    assume {:print "$at(2,20027,20028)"} true;
L13:

    // assert Or(Not(exists[@105]<vesting::VestingContract>($t0)), Neq<u64>(select vesting::VestingContract.state($t11), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:119:5+375
    assume {:print "$at(3,5566,5941)"} true;
    assert {:msg "assert_failed(3,5566,5941): abort not covered by any of the `aborts_if` clauses"}
      (!$ResourceExists($1_vesting_VestingContract_$memory#105, $t0) || !$IsEqual'u64'($state#$1_vesting_VestingContract($t11), 1));

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:119:5+375
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun vesting::shareholders [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+325
procedure {:inline 1} $1_vesting_shareholders(_$t0: int) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: $1_vesting_VestingContract;
    var $t2: $1_vesting_VestingContract;
    var $t3: int;
    var $t4: $1_vesting_VestingContract;
    var $t5: $1_pool_u64_Pool;
    var $t6: Vec (int);
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t1 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+1
    assume {:print "$at(2,18423,18424)"} true;
    assume {:print "$track_local(57,24,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t2 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:384:9+56
    assume {:print "$at(2,18534,18590)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,18534,18590)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,24):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:386:32+13
    assume {:print "$at(2,18624,18637)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18624,18637)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,24):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<vesting::VestingContract>.grant_pool($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:387:32+28
    assume {:print "$at(2,18713,18741)"} true;
    $t5 := $grant_pool#$1_vesting_VestingContract($t4);

    // $t6 := pool_u64::shareholders($t5) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:387:9+52
    call $t6 := $1_pool_u64_shareholders($t5);
    if ($abort_flag) {
        assume {:print "$at(2,18690,18742)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,24):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:387:9+52
    assume {:print "$track_return(57,24,0):", $t6} $t6 == $t6;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:388:5+1
    assume {:print "$at(2,18747,18748)"} true;
L1:

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:388:5+1
    assume {:print "$at(2,18747,18748)"} true;
    $ret0 := $t6;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:388:5+1
L2:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:388:5+1
    assume {:print "$at(2,18747,18748)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun vesting::shareholders [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+325
procedure {:timeLimit 200} $1_vesting_shareholders$verify(_$t0: int) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: $1_vesting_VestingContract;
    var $t2: $1_vesting_VestingContract;
    var $t3: int;
    var $t4: $1_vesting_VestingContract;
    var $t5: $1_pool_u64_Pool;
    var $t6: Vec (int);
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'vec'address'': Vec (int);
    var $1_vesting_VestingContract_$memory#75: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+1
    assume {:print "$at(2,18423,18424)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t1, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t1 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // @75 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+1
    assume {:print "$at(2,18423,18424)"} true;
    $1_vesting_VestingContract_$memory#75 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:383:5+1
    assume {:print "$track_local(57,24,0):", $t0} $t0 == $t0;

    // assume Identical($t2, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t2 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:384:9+56
    assume {:print "$at(2,18534,18590)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,18534,18590)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,24):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t4 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:386:32+13
    assume {:print "$at(2,18624,18637)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,18624,18637)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,24):", $t3} $t3 == $t3;
        goto L2;
    }

    // $t5 := get_field<vesting::VestingContract>.grant_pool($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:387:32+28
    assume {:print "$at(2,18713,18741)"} true;
    $t5 := $grant_pool#$1_vesting_VestingContract($t4);

    // $t6 := pool_u64::shareholders($t5) on_abort goto L2 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:387:9+52
    call $t6 := $1_pool_u64_shareholders($t5);
    if ($abort_flag) {
        assume {:print "$at(2,18690,18742)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,24):", $t3} $t3 == $t3;
        goto L2;
    }

    // trace_return[0]($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:387:9+52
    assume {:print "$track_return(57,24,0):", $t6} $t6 == $t6;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:388:5+1
    assume {:print "$at(2,18747,18748)"} true;
L1:

    // assert Not(Not(exists[@75]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:388:9+53
    assume {:print "$at(3,16316,16369)"} true;
    assert {:msg "assert_failed(3,16316,16369): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#75, $t0);

    // assert Not(Neq<u64>(select vesting::VestingContract.state($t1), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    assume {:print "$at(3,16452,16508)"} true;
    assert {:msg "assert_failed(3,16452,16508): function does not abort under this condition"}
      !!$IsEqual'u64'($state#$1_vesting_VestingContract($t1), 1);

    // return $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    $ret0 := $t6;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:388:5+1
    assume {:print "$at(2,18747,18748)"} true;
L2:

    // assert Or(Not(exists[@75]<vesting::VestingContract>($t0)), Neq<u64>(select vesting::VestingContract.state($t1), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:113:5+185
    assume {:print "$at(3,5262,5447)"} true;
    assert {:msg "assert_failed(3,5262,5447): abort not covered by any of the `aborts_if` clauses"}
      (!$ResourceExists($1_vesting_VestingContract_$memory#75, $t0) || !$IsEqual'u64'($state#$1_vesting_VestingContract($t1), 1));

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:113:5+185
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun vesting::distribute [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1779
procedure {:inline 1} $1_vesting_distribute(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t6: $1_pool_u64_Pool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: Vec (int);
    var $t14: $Mutation ($1_vesting_VestingContract);
    var $t15: $1_vesting_VestingContract;
    var $t16: int;
    var $t17: $Mutation ($1_vesting_VestingContract);
    var $t18: $1_vesting_VestingContract;
    var $t19: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t20: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t25: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t26: $1_pool_u64_Pool;
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t35: $1_vesting_VestingContract;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t40: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t41: $1_account_Account;
    var $t42: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t43: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t44: int;
    var $t45: int;
    var $t46: bool;
    var $t47: int;
    var $t48: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t49: $1_account_Account;
    var $t50: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t51: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t52: $Mutation ($1_event_EventHandle'$1_vesting_DistributeEvent');
    var $t53: int;
    var $t54: $1_vesting_DistributeEvent;
    var $t0: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume {:print "$at(2,29668,29669)"} true;
    assume {:print "$track_local(57,8,0):", $t0} $t0 == $t0;

    // assume Identical($t15, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t15 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:624:9+48
    assume {:print "$at(2,29758,29806)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,29758,29806)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // $t17 := borrow_global<vesting::VestingContract>($t0) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:626:32+17
    assume {:print "$at(2,29840,29857)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(2,29840,29857)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[vesting_contract]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:626:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t17);
    assume {:print "$track_local(57,8,14):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t18 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:627:35+36
    assume {:print "$at(2,29928,29964)"} true;
    $t18 := $Dereference($t17);

    // $t5 := vesting::withdraw_stake($t18, $t0) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:627:21+50
    call $t5 := $1_vesting_withdraw_stake($t18, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,29914,29964)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[coins]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:627:13+5
    assume {:print "$track_local(57,8,5):", $t5} $t5 == $t5;

    // $t19 := copy($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:628:53+6
    assume {:print "$at(2,30018,30024)"} true;
    $t19 := $t5;

    // assume Identical($t20, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t20 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t21 := coin::value<aptos_coin::AptosCoin>($t19) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:628:41+19
    assume {:print "$at(2,30006,30025)"} true;
    call $t21 := $1_coin_value'$1_aptos_coin_AptosCoin'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,30006,30025)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[total_distribution_amount]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:628:13+25
    assume {:print "$track_local(57,8,12):", $t21} $t21 == $t21;

    // $t22 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:629:42+1
    assume {:print "$at(2,30068,30069)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:629:39+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:629:9+105
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25
    assume {:print "$at(2,30085,30110)"} true;
L1:

    // pack_ref_deep($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25
    assume {:print "$at(2,30085,30110)"} true;

    // destroy($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25

    // $t24 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:32+5
    $t24 := $t5;

    // assume Identical($t25, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t25 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t24) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25
    assume {:print "$at(2,30085,30110)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t24);
    if ($abort_flag) {
        assume {:print "$at(2,30085,30110)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:631:13+6
    assume {:print "$at(2,30124,30130)"} true;
    goto L10;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:635:27+16
    assume {:print "$at(2,30242,30258)"} true;
L0:

    // $t26 := get_field<vesting::VestingContract>.grant_pool($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:635:26+28
    assume {:print "$at(2,30241,30269)"} true;
    $t26 := $grant_pool#$1_vesting_VestingContract($Dereference($t17));

    // trace_local[grant_pool]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:635:13+10
    assume {:print "$track_local(57,8,6):", $t26} $t26 == $t26;

    // $t27 := pool_u64::shareholders($t26) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:636:29+34
    assume {:print "$at(2,30299,30333)"} true;
    call $t27 := $1_pool_u64_shareholders($t26);
    if ($abort_flag) {
        assume {:print "$at(2,30299,30333)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[v#235]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:637:9+519
    assume {:print "$at(2,30343,30862)"} true;
    assume {:print "$track_local(57,8,13):", $t27} $t27 == $t27;

    // $t28 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:17+1
    assume {:print "$at(18,9246,9247)"} true;
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // trace_local[i#237]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:13+1
    assume {:print "$track_local(57,8,7):", $t28} $t28 == $t28;

    // $t29 := vector::length<address>($t27) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:19+9
    assume {:print "$at(18,9267,9276)"} true;
    call $t29 := $1_vector_length'address'($t27);
    if ($abort_flag) {
        assume {:print "$at(18,9267,9276)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[len#238]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:13+3
    assume {:print "$track_local(57,8,8):", $t29} $t29 == $t29;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
L5:

    // $t5 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
    havoc $t5;

    // assume WellFormed($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t5);

    // $t7 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t7;

    // assume WellFormed($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t7);

    // $t30 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t30;

    // assume WellFormed($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'bool'($t30);

    // $t31 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t31;

    // assume WellFormed($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t31);

    // $t32 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t32;

    // assume WellFormed($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t32);

    // $t33 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t33;

    // assume WellFormed($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t33);

    // $t34 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t34;

    // assume WellFormed($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t34);

    // $t35 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t35;

    // assume And(WellFormed($t35), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t35)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_vesting_VestingContract'($t35) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t36 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t36;

    // assume WellFormed($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t36);

    // $t37 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t37;

    // assume WellFormed($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t37);

    // $t38 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t38;

    // assume WellFormed($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t38);

    // $t39 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t39;

    // assume WellFormed($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($Dereference($t39));

    // trace_local[coins]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$info(): enter loop, variable(s) coins, i#237 havocked and reassigned"} true;
    assume {:print "$track_local(57,8,5):", $t5} $t5 == $t5;

    // trace_local[i#237]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$track_local(57,8,7):", $t7} $t7 == $t7;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume !$abort_flag;

    // $t30 := <($t7, $t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:18+1
    call $t30 := $Lt($t7, $t29);

    // if ($t30) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
    if ($t30) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
L3:

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:22+1
    assume {:print "$at(18,9325,9326)"} true;
L4:

    // $t31 := vector::borrow<address>($t27, $t7) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:15+12
    assume {:print "$at(18,9318,9330)"} true;
    call $t31 := $1_vector_borrow'address'($t27, $t7);
    if ($abort_flag) {
        assume {:print "$at(18,9318,9330)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[shareholder#240]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:638:17+11
    assume {:print "$at(2,30410,30421)"} true;
    assume {:print "$track_local(57,8,10):", $t31} $t31 == $t31;

    // $t32 := pool_u64::shares($t26, $t31) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:639:26+41
    assume {:print "$at(2,30463,30504)"} true;
    call $t32 := $1_pool_u64_shares($t26, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,30463,30504)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[shares#241]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:639:17+6
    assume {:print "$track_local(57,8,11):", $t32} $t32 == $t32;

    // $t33 := pool_u64::shares_to_amount_with_total_coins($t26, $t32, $t21) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:640:26+90
    assume {:print "$at(2,30531,30621)"} true;
    call $t33 := $1_pool_u64_shares_to_amount_with_total_coins($t26, $t32, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,30531,30621)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[amount#242]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:640:17+6
    assume {:print "$track_local(57,8,4):", $t33} $t33 == $t33;

    // $t39 := borrow_local($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:48+10
    assume {:print "$at(2,30670,30680)"} true;
    $t39 := $Mutation($Local(5), EmptyVec(), $t5);

    // assume Identical($t40, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t40 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t34 := coin::extract<aptos_coin::AptosCoin>($t39, $t33) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:34+33
    assume {:print "$at(2,30656,30689)"} true;
    call $t34,$t39 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t39, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,30656,30689)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // write_back[LocalRoot($t5)@]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:34+33
    $t5 := $Dereference($t39);

    // trace_local[coins]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:34+33
    assume {:print "$track_local(57,8,5):", $t5} $t5 == $t5;

    // trace_local[share_of_coins#243]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:17+14
    assume {:print "$track_local(57,8,9):", $t34} $t34 == $t34;

    // $t35 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:642:52+31
    assume {:print "$at(2,30742,30773)"} true;
    $t35 := $Dereference($t17);

    // $t36 := vesting::get_beneficiary($t35, $t31) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:642:37+46
    call $t36 := $1_vesting_get_beneficiary($t35, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,30727,30773)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // assume Identical($t41, global<account::Account>($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.spec.move:200:9+39
    assume {:print "$at(81,9368,9407)"} true;
    assume ($t41 == $ResourceValue($1_account_Account_$memory, $t36));

    // aptos_account::deposit_coins<aptos_coin::AptosCoin>($t36, $t34) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:643:13+63
    assume {:print "$at(2,30787,30850)"} true;
    call $1_aptos_account_deposit_coins'$1_aptos_coin_AptosCoin'($t36, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,30787,30850)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // $t37 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:21+1
    assume {:print "$at(18,9353,9354)"} true;
    $t37 := 1;
    assume $IsValid'u64'($t37);

    // $t38 := +($t7, $t37) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:19+1
    call $t38 := $AddU64($t7, $t37);
    if ($abort_flag) {
        assume {:print "$at(18,9351,9352)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[i#237]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+1
    assume {:print "$track_local(57,8,7):", $t38} $t38 == $t38;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+9
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:9+182
    assume {:print "$at(2,30970,31152)"} true;
L2:

    // $t42 := copy($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:25+6
    assume {:print "$at(2,30986,30992)"} true;
    $t42 := $t5;

    // assume Identical($t43, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t43 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t44 := coin::value<aptos_coin::AptosCoin>($t42) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:13+19
    assume {:print "$at(2,30974,30993)"} true;
    call $t44 := $1_coin_value'$1_aptos_coin_AptosCoin'($t42);
    if ($abort_flag) {
        assume {:print "$at(2,30974,30993)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // $t45 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:35+1
    $t45 := 0;
    assume $IsValid'u64'($t45);

    // $t46 := >($t44, $t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:33+1
    call $t46 := $Gt($t44, $t45);

    // if ($t46) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:9+182
    if ($t46) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:42+16
    assume {:print "$at(2,31042,31058)"} true;
L7:

    // $t47 := get_field<vesting::VestingContract>.withdrawal_address($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:42+35
    assume {:print "$at(2,31042,31077)"} true;
    $t47 := $withdrawal_address#$1_vesting_VestingContract($Dereference($t17));

    // $t48 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:79+5
    $t48 := $t5;

    // assume Identical($t49, global<account::Account>($t47)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.spec.move:200:9+39
    assume {:print "$at(81,9368,9407)"} true;
    assume ($t49 == $ResourceValue($1_account_Account_$memory, $t47));

    // aptos_account::deposit_coins<aptos_coin::AptosCoin>($t47, $t48) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:13+72
    assume {:print "$at(2,31013,31085)"} true;
    call $1_aptos_account_deposit_coins'$1_aptos_coin_AptosCoin'($t47, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,31013,31085)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:85+1
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:650:32+5
    assume {:print "$at(2,31135,31140)"} true;
L6:

    // $t50 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:650:32+5
    assume {:print "$at(2,31135,31140)"} true;
    $t50 := $t5;

    // assume Identical($t51, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t51 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t50) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:650:13+25
    assume {:print "$at(2,31116,31141)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t50);
    if ($abort_flag) {
        assume {:print "$at(2,31116,31141)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:18+16
    assume {:print "$at(2,31192,31208)"} true;
L8:

    // $t52 := borrow_field<vesting::VestingContract>.distribute_events($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:13+39
    assume {:print "$at(2,31187,31226)"} true;
    $t52 := $ChildMutation($t17, 15, $distribute_events#$1_vesting_VestingContract($Dereference($t17)));

    // $t53 := get_field<vesting::VestingContract>.admin($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:656:24+22
    assume {:print "$at(2,31281,31303)"} true;
    $t53 := $admin#$1_vesting_VestingContract($Dereference($t17));

    // $t54 := pack vesting::DistributeEvent($t53, $t0, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:655:13+189
    assume {:print "$at(2,31240,31429)"} true;
    $t54 := $1_vesting_DistributeEvent($t53, $t0, $t21);

    // opaque begin: event::emit_event<vesting::DistributeEvent>($t52, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277
    assume {:print "$at(2,31163,31440)"} true;

    // opaque end: event::emit_event<vesting::DistributeEvent>($t52, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277

    // write_back[Reference($t17).distribute_events (event::EventHandle<vesting::DistributeEvent>)]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277
    $t17 := $UpdateMutation($t17, $Update'$1_vesting_VestingContract'_distribute_events($Dereference($t17), $Dereference($t52)));

    // pack_ref_deep($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277

    // write_back[vesting::VestingContract@]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:660:10+1
    assume {:print "$at(2,31440,31441)"} true;
    goto L10;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:18+16
    // Loop invariant checking block for the loop started with header: L5
    assume {:print "$at(2,31192,31208)"} true;
L9:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:18+16
    assume {:print "$at(2,31192,31208)"} true;
    assume false;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    assume {:print "$at(2,31446,31447)"} true;
L10:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    assume {:print "$at(2,31446,31447)"} true;
    return;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
L11:

    // abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    assume {:print "$at(2,31446,31447)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun vesting::distribute [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1779
procedure {:timeLimit 200} $1_vesting_distribute$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: Vec (int);
    var $t3: int;
    var $t4: int;
    var $t5: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t6: $1_pool_u64_Pool;
    var $t7: int;
    var $t8: int;
    var $t9: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: Vec (int);
    var $t14: $Mutation ($1_vesting_VestingContract);
    var $t15: $1_vesting_VestingContract;
    var $t16: int;
    var $t17: $Mutation ($1_vesting_VestingContract);
    var $t18: $1_vesting_VestingContract;
    var $t19: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t20: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t21: int;
    var $t22: int;
    var $t23: bool;
    var $t24: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t25: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t26: $1_pool_u64_Pool;
    var $t27: Vec (int);
    var $t28: int;
    var $t29: int;
    var $t30: bool;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t35: $1_vesting_VestingContract;
    var $t36: int;
    var $t37: int;
    var $t38: int;
    var $t39: $Mutation ($1_coin_Coin'$1_aptos_coin_AptosCoin');
    var $t40: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t41: $1_account_Account;
    var $t42: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t43: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t44: int;
    var $t45: int;
    var $t46: bool;
    var $t47: int;
    var $t48: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t49: $1_account_Account;
    var $t50: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t51: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t52: $Mutation ($1_event_EventHandle'$1_vesting_DistributeEvent');
    var $t53: int;
    var $t54: $1_vesting_DistributeEvent;
    var $t0: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_pool_u64_Pool': $1_pool_u64_Pool;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume {:print "$at(2,29668,29669)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<aptos_account::DirectTransferConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0);
    ($IsValid'$1_aptos_account_DirectTransferConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1779
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1779
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1779
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1779
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:623:5+1
    assume {:print "$track_local(57,8,0):", $t0} $t0 == $t0;

    // assume Identical($t15, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t15 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:624:9+48
    assume {:print "$at(2,29758,29806)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,29758,29806)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // $t17 := borrow_global<vesting::VestingContract>($t0) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:626:32+17
    assume {:print "$at(2,29840,29857)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t17 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(2,29840,29857)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[vesting_contract]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:626:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t17);
    assume {:print "$track_local(57,8,14):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t18 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:627:35+36
    assume {:print "$at(2,29928,29964)"} true;
    $t18 := $Dereference($t17);

    // $t5 := vesting::withdraw_stake($t18, $t0) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:627:21+50
    call $t5 := $1_vesting_withdraw_stake($t18, $t0);
    if ($abort_flag) {
        assume {:print "$at(2,29914,29964)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[coins]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:627:13+5
    assume {:print "$track_local(57,8,5):", $t5} $t5 == $t5;

    // $t19 := copy($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:628:53+6
    assume {:print "$at(2,30018,30024)"} true;
    $t19 := $t5;

    // assume Identical($t20, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t20 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t21 := coin::value<aptos_coin::AptosCoin>($t19) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:628:41+19
    assume {:print "$at(2,30006,30025)"} true;
    call $t21 := $1_coin_value'$1_aptos_coin_AptosCoin'($t19);
    if ($abort_flag) {
        assume {:print "$at(2,30006,30025)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[total_distribution_amount]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:628:13+25
    assume {:print "$track_local(57,8,12):", $t21} $t21 == $t21;

    // $t22 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:629:42+1
    assume {:print "$at(2,30068,30069)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := ==($t21, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:629:39+2
    $t23 := $IsEqual'u64'($t21, $t22);

    // if ($t23) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:629:9+105
    if ($t23) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25
    assume {:print "$at(2,30085,30110)"} true;
L1:

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t17)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), j)) ==> $IsEqual'num'(i, j))))))));

    // destroy($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25
    assume {:print "$at(2,30085,30110)"} true;

    // $t24 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:32+5
    $t24 := $t5;

    // assume Identical($t25, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t25 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t24) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:630:13+25
    assume {:print "$at(2,30085,30110)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t24);
    if ($abort_flag) {
        assume {:print "$at(2,30085,30110)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:631:13+6
    assume {:print "$at(2,30124,30130)"} true;
    goto L10;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:635:27+16
    assume {:print "$at(2,30242,30258)"} true;
L0:

    // $t26 := get_field<vesting::VestingContract>.grant_pool($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:635:26+28
    assume {:print "$at(2,30241,30269)"} true;
    $t26 := $grant_pool#$1_vesting_VestingContract($Dereference($t17));

    // trace_local[grant_pool]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:635:13+10
    assume {:print "$track_local(57,8,6):", $t26} $t26 == $t26;

    // $t27 := pool_u64::shareholders($t26) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:636:29+34
    assume {:print "$at(2,30299,30333)"} true;
    call $t27 := $1_pool_u64_shareholders($t26);
    if ($abort_flag) {
        assume {:print "$at(2,30299,30333)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[v#235]($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:637:9+519
    assume {:print "$at(2,30343,30862)"} true;
    assume {:print "$track_local(57,8,13):", $t27} $t27 == $t27;

    // $t28 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:17+1
    assume {:print "$at(18,9246,9247)"} true;
    $t28 := 0;
    assume $IsValid'u64'($t28);

    // trace_local[i#237]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:13+1
    assume {:print "$track_local(57,8,7):", $t28} $t28 == $t28;

    // $t29 := vector::length<address>($t27) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:19+9
    assume {:print "$at(18,9267,9276)"} true;
    call $t29 := $1_vector_length'address'($t27);
    if ($abort_flag) {
        assume {:print "$at(18,9267,9276)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[len#238]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:13+3
    assume {:print "$track_local(57,8,8):", $t29} $t29 == $t29;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
L5:

    // $t5 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
    havoc $t5;

    // assume WellFormed($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t5);

    // $t7 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t7;

    // assume WellFormed($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t7);

    // $t30 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t30;

    // assume WellFormed($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'bool'($t30);

    // $t31 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t31;

    // assume WellFormed($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t31);

    // $t32 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t32;

    // assume WellFormed($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t32);

    // $t33 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t33;

    // assume WellFormed($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t33);

    // $t34 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t34;

    // assume WellFormed($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($t34);

    // $t35 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t35;

    // assume And(WellFormed($t35), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t35)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t35)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume ($IsValid'$1_vesting_VestingContract'($t35) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t35)), j)) ==> $IsEqual'num'(i, j))))))))));

    // $t36 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t36;

    // assume WellFormed($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t36);

    // $t37 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t37;

    // assume WellFormed($t37) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t37);

    // $t38 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t38;

    // assume WellFormed($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t38);

    // $t39 := havoc[mut_all]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t39;

    // assume WellFormed($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'$1_coin_Coin'$1_aptos_coin_AptosCoin''($Dereference($t39));

    // trace_local[coins]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$info(): enter loop, variable(s) coins, i#237 havocked and reassigned"} true;
    assume {:print "$track_local(57,8,5):", $t5} $t5 == $t5;

    // trace_local[i#237]($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$track_local(57,8,7):", $t7} $t7 == $t7;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume !$abort_flag;

    // $t30 := <($t7, $t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:18+1
    call $t30 := $Lt($t7, $t29);

    // if ($t30) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
    if ($t30) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
L3:

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:22+1
    assume {:print "$at(18,9325,9326)"} true;
L4:

    // $t31 := vector::borrow<address>($t27, $t7) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:15+12
    assume {:print "$at(18,9318,9330)"} true;
    call $t31 := $1_vector_borrow'address'($t27, $t7);
    if ($abort_flag) {
        assume {:print "$at(18,9318,9330)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[shareholder#240]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:638:17+11
    assume {:print "$at(2,30410,30421)"} true;
    assume {:print "$track_local(57,8,10):", $t31} $t31 == $t31;

    // $t32 := pool_u64::shares($t26, $t31) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:639:26+41
    assume {:print "$at(2,30463,30504)"} true;
    call $t32 := $1_pool_u64_shares($t26, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,30463,30504)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[shares#241]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:639:17+6
    assume {:print "$track_local(57,8,11):", $t32} $t32 == $t32;

    // $t33 := pool_u64::shares_to_amount_with_total_coins($t26, $t32, $t21) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:640:26+90
    assume {:print "$at(2,30531,30621)"} true;
    call $t33 := $1_pool_u64_shares_to_amount_with_total_coins($t26, $t32, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,30531,30621)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[amount#242]($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:640:17+6
    assume {:print "$track_local(57,8,4):", $t33} $t33 == $t33;

    // $t39 := borrow_local($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:48+10
    assume {:print "$at(2,30670,30680)"} true;
    $t39 := $Mutation($Local(5), EmptyVec(), $t5);

    // assume Identical($t40, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t40 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t34 := coin::extract<aptos_coin::AptosCoin>($t39, $t33) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:34+33
    assume {:print "$at(2,30656,30689)"} true;
    call $t34,$t39 := $1_coin_extract'$1_aptos_coin_AptosCoin'($t39, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,30656,30689)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // write_back[LocalRoot($t5)@]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:34+33
    $t5 := $Dereference($t39);

    // trace_local[coins]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:34+33
    assume {:print "$track_local(57,8,5):", $t5} $t5 == $t5;

    // trace_local[share_of_coins#243]($t34) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:641:17+14
    assume {:print "$track_local(57,8,9):", $t34} $t34 == $t34;

    // $t35 := read_ref($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:642:52+31
    assume {:print "$at(2,30742,30773)"} true;
    $t35 := $Dereference($t17);

    // $t36 := vesting::get_beneficiary($t35, $t31) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:642:37+46
    call $t36 := $1_vesting_get_beneficiary($t35, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,30727,30773)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // assume Identical($t41, global<account::Account>($t36)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.spec.move:200:9+39
    assume {:print "$at(81,9368,9407)"} true;
    assume ($t41 == $ResourceValue($1_account_Account_$memory, $t36));

    // aptos_account::deposit_coins<aptos_coin::AptosCoin>($t36, $t34) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:643:13+63
    assume {:print "$at(2,30787,30850)"} true;
    call $1_aptos_account_deposit_coins'$1_aptos_coin_AptosCoin'($t36, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,30787,30850)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // $t37 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:21+1
    assume {:print "$at(18,9353,9354)"} true;
    $t37 := 1;
    assume $IsValid'u64'($t37);

    // $t38 := +($t7, $t37) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:19+1
    call $t38 := $AddU64($t7, $t37);
    if ($abort_flag) {
        assume {:print "$at(18,9351,9352)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // trace_local[i#237]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+1
    assume {:print "$track_local(57,8,7):", $t38} $t38 == $t38;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+9
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:9+182
    assume {:print "$at(2,30970,31152)"} true;
L2:

    // $t42 := copy($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:25+6
    assume {:print "$at(2,30986,30992)"} true;
    $t42 := $t5;

    // assume Identical($t43, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t43 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t44 := coin::value<aptos_coin::AptosCoin>($t42) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:13+19
    assume {:print "$at(2,30974,30993)"} true;
    call $t44 := $1_coin_value'$1_aptos_coin_AptosCoin'($t42);
    if ($abort_flag) {
        assume {:print "$at(2,30974,30993)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // $t45 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:35+1
    $t45 := 0;
    assume $IsValid'u64'($t45);

    // $t46 := >($t44, $t45) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:33+1
    call $t46 := $Gt($t44, $t45);

    // if ($t46) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:647:9+182
    if ($t46) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:42+16
    assume {:print "$at(2,31042,31058)"} true;
L7:

    // $t47 := get_field<vesting::VestingContract>.withdrawal_address($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:42+35
    assume {:print "$at(2,31042,31077)"} true;
    $t47 := $withdrawal_address#$1_vesting_VestingContract($Dereference($t17));

    // $t48 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:79+5
    $t48 := $t5;

    // assume Identical($t49, global<account::Account>($t47)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.spec.move:200:9+39
    assume {:print "$at(81,9368,9407)"} true;
    assume ($t49 == $ResourceValue($1_account_Account_$memory, $t47));

    // aptos_account::deposit_coins<aptos_coin::AptosCoin>($t47, $t48) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:13+72
    assume {:print "$at(2,31013,31085)"} true;
    call $1_aptos_account_deposit_coins'$1_aptos_coin_AptosCoin'($t47, $t48);
    if ($abort_flag) {
        assume {:print "$at(2,31013,31085)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:648:85+1
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:650:32+5
    assume {:print "$at(2,31135,31140)"} true;
L6:

    // $t50 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:650:32+5
    assume {:print "$at(2,31135,31140)"} true;
    $t50 := $t5;

    // assume Identical($t51, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t51 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t50) on_abort goto L11 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:650:13+25
    assume {:print "$at(2,31116,31141)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t50);
    if ($abort_flag) {
        assume {:print "$at(2,31116,31141)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,8):", $t16} $t16 == $t16;
        goto L11;
    }

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:18+16
    assume {:print "$at(2,31192,31208)"} true;
L8:

    // $t52 := borrow_field<vesting::VestingContract>.distribute_events($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:13+39
    assume {:print "$at(2,31187,31226)"} true;
    $t52 := $ChildMutation($t17, 15, $distribute_events#$1_vesting_VestingContract($Dereference($t17)));

    // $t53 := get_field<vesting::VestingContract>.admin($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:656:24+22
    assume {:print "$at(2,31281,31303)"} true;
    $t53 := $admin#$1_vesting_VestingContract($Dereference($t17));

    // $t54 := pack vesting::DistributeEvent($t53, $t0, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:655:13+189
    assume {:print "$at(2,31240,31429)"} true;
    $t54 := $1_vesting_DistributeEvent($t53, $t0, $t21);

    // opaque begin: event::emit_event<vesting::DistributeEvent>($t52, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277
    assume {:print "$at(2,31163,31440)"} true;

    // opaque end: event::emit_event<vesting::DistributeEvent>($t52, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277

    // write_back[Reference($t17).distribute_events (event::EventHandle<vesting::DistributeEvent>)]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277
    $t17 := $UpdateMutation($t17, $Update'$1_vesting_VestingContract'_distribute_events($Dereference($t17), $Dereference($t52)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t17)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t17)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t17))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:653:9+277
    assume {:print "$at(2,31163,31440)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t17),
        $Dereference($t17));

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:660:10+1
    assume {:print "$at(2,31440,31441)"} true;
    goto L10;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:18+16
    // Loop invariant checking block for the loop started with header: L5
    assume {:print "$at(2,31192,31208)"} true;
L9:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:654:18+16
    assume {:print "$at(2,31192,31208)"} true;
    assume false;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    assume {:print "$at(2,31446,31447)"} true;
L10:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    assume {:print "$at(2,31446,31447)"} true;
    assert {:msg "assert_failed(2,31446,31447): function does not abort under this condition"}
      !false;

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    return;

    // label L11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
L11:

    // abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:661:5+1
    assume {:print "$at(2,31446,31447)"} true;
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun vesting::reset_lockup [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+862
procedure {:timeLimit 200} $1_vesting_reset_lockup$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $Mutation ($1_vesting_VestingContract);
    var $t4: $1_vesting_VestingContract;
    var $t5: int;
    var $t6: int;
    var $t7: $1_staking_contract_Store;
    var $t8: $1_staking_contract_StakingContract;
    var $t9: int;
    var $t10: Table int ($1_staking_contract_StakingContract);
    var $t11: $1_staking_contract_Store;
    var $t12: $1_staking_contract_StakingContract;
    var $t13: int;
    var $t14: $1_staking_config_StakingConfig;
    var $t15: $1_stake_StakePool;
    var $t16: int;
    var $t17: int;
    var $t18: int;
    var $t19: $Mutation ($1_vesting_VestingContract);
    var $t20: int;
    var $t21: $1_vesting_VestingContract;
    var $t22: $1_vesting_VestingContract;
    var $t23: $signer;
    var $t24: $1_vesting_StakingInfo;
    var $t25: int;
    var $t26: int;
    var $t27: Table int ($1_staking_contract_StakingContract);
    var $t28: $1_staking_contract_Store;
    var $t29: $1_staking_contract_StakingContract;
    var $t30: int;
    var $t31: $1_staking_config_StakingConfig;
    var $t32: $1_stake_StakePool;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: $Mutation ($1_event_EventHandle'$1_vesting_ResetLockupEvent');
    var $t37: int;
    var $t38: $1_vesting_StakingInfo;
    var $t39: int;
    var $t40: $1_vesting_StakingInfo;
    var $t41: int;
    var $t42: int;
    var $t43: $1_vesting_ResetLockupEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_vesting_VestingContract_$memory#122: $Memory $1_vesting_VestingContract;
    var $1_staking_contract_Store_$memory#123: $Memory $1_staking_contract_Store;
    var $1_stake_StakePool_$memory#124: $Memory $1_stake_StakePool;
    var $1_staking_config_StakingConfig_$memory#125: $Memory $1_staking_config_StakingConfig;
    var $1_timestamp_CurrentTimeMicroseconds_$memory#126: $Memory $1_timestamp_CurrentTimeMicroseconds;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume {:print "$at(2,36776,36777)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_config::StakingConfig>(): And(WellFormed($rsc), And(And(Le(select staking_config::StakingConfig.rewards_rate($rsc), 1000000), Gt(select staking_config::StakingConfig.rewards_rate_denominator($rsc), 0)), Le(select staking_config::StakingConfig.rewards_rate($rsc), select staking_config::StakingConfig.rewards_rate_denominator($rsc)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_config_StakingConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_config_StakingConfig_$memory, $a_0);
    (($IsValid'$1_staking_config_StakingConfig'($rsc) && ((($rewards_rate#$1_staking_config_StakingConfig($rsc) <= 1000000) && ($rewards_rate_denominator#$1_staking_config_StakingConfig($rsc) > 0)) && ($rewards_rate#$1_staking_config_StakingConfig($rsc) <= $rewards_rate_denominator#$1_staking_config_StakingConfig($rsc)))))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+862
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), exists<staking_config::StakingConfig>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+862
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/configs/staking_config.spec.move:4:9+83
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_staking_config_StakingConfig_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+862
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+862
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Identical($t4, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:228:9+65
    assume {:print "$at(3,9240,9305)"} true;
    assume ($t4 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assume Identical($t5, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:231:9+49
    assume {:print "$at(3,9386,9435)"} true;
    assume ($t5 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t4)));

    // assume Identical($t6, select account::SignerCapability.account(select vesting::VestingContract.signer_cap($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:232:9+49
    assume {:print "$at(3,9444,9493)"} true;
    assume ($t6 == $account#$1_account_SignerCapability($signer_cap#$1_vesting_VestingContract($t4)));

    // assume Identical($t7, global<staking_contract::Store>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:237:9+52
    assume {:print "$at(3,9665,9717)"} true;
    assume ($t7 == $ResourceValue($1_staking_contract_Store_$memory, $t6));

    // assume Identical($t8, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t7), $t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:238:9+79
    assume {:print "$at(3,9726,9805)"} true;
    assume ($t8 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t7), $t5));

    // assume Identical($t9, select stake::OwnerCapability.pool_address(select staking_contract::StakingContract.owner_cap($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:239:9+59
    assume {:print "$at(3,9814,9873)"} true;
    assume ($t9 == $pool_address#$1_stake_OwnerCapability($owner_cap#$1_staking_contract_StakingContract($t8)));

    // assume Identical($t10, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t10 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t6)));

    // assume Identical($t11, global<staking_contract::Store>($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:316:9+34
    assume {:print "$at(134,13411,13445)"} true;
    assume ($t11 == $ResourceValue($1_staking_contract_Store_$memory, $t6));

    // assume Identical($t12, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t11), $t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:317:9+79
    assume {:print "$at(134,13454,13533)"} true;
    assume ($t12 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t11), $t5));

    // assume Identical($t13, select stake::OwnerCapability.pool_address(select staking_contract::StakingContract.owner_cap($t12))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:318:9+59
    assume {:print "$at(134,13542,13601)"} true;
    assume ($t13 == $pool_address#$1_stake_OwnerCapability($owner_cap#$1_staking_contract_StakingContract($t12)));

    // assume Identical($t14, global<staking_config::StakingConfig>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:323:9+69
    assume {:print "$at(134,13747,13816)"} true;
    assume ($t14 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t15, global<stake::StakePool>($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:324:9+56
    assume {:print "$at(134,13825,13881)"} true;
    assume ($t15 == $ResourceValue($1_stake_StakePool_$memory, $t13));

    // assume Identical($t16, select stake::StakePool.locked_until_secs($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:325:9+57
    assume {:print "$at(134,13890,13947)"} true;
    assume ($t16 == $locked_until_secs#$1_stake_StakePool($t15));

    // assume Identical($t17, Div(select timestamp::CurrentTimeMicroseconds.microseconds(global<timestamp::CurrentTimeMicroseconds>(0x1)), 1000000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:326:9+126
    assume {:print "$at(134,13956,14082)"} true;
    assume ($t17 == ($microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)) div 1000000));

    // assume Identical($t18, Add($t17, select staking_config::StakingConfig.recurring_lockup_duration_secs($t14))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:327:9+77
    assume {:print "$at(134,14091,14168)"} true;
    assume ($t18 == ($t17 + $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t14)));

    // @126 := save_mem(timestamp::CurrentTimeMicroseconds) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume {:print "$at(2,36776,36777)"} true;
    $1_timestamp_CurrentTimeMicroseconds_$memory#126 := $1_timestamp_CurrentTimeMicroseconds_$memory;

    // @125 := save_mem(staking_config::StakingConfig) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    $1_staking_config_StakingConfig_$memory#125 := $1_staking_config_StakingConfig_$memory;

    // @124 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    $1_stake_StakePool_$memory#124 := $1_stake_StakePool_$memory;

    // @123 := save_mem(staking_contract::Store) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    $1_staking_contract_Store_$memory#123 := $1_staking_contract_Store_$memory;

    // @122 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    $1_vesting_VestingContract_$memory#122 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume {:print "$track_local(57,19,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:787:5+1
    assume {:print "$track_local(57,19,1):", $t1} $t1 == $t1;

    // $t19 := borrow_global<vesting::VestingContract>($t1) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:791:32+17
    assume {:print "$at(2,36930,36947)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t19 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,36930,36947)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,19):", $t20} $t20 == $t20;
        goto L2;
    }

    // trace_local[vesting_contract]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:791:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t19);
    assume {:print "$track_local(57,19,3):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t21 := read_ref($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:792:21+25
    assume {:print "$at(2,37004,37029)"} true;
    $t21 := $Dereference($t19);

    // vesting::verify_admin($t0, $t21) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:792:9+37
    call $1_vesting_verify_admin($t0, $t21);
    if ($abort_flag) {
        assume {:print "$at(2,36992,37029)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,19):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t22 := read_ref($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:793:68+16
    assume {:print "$at(2,37098,37114)"} true;
    $t22 := $Dereference($t19);

    // $t23 := vesting::get_vesting_account_signer_internal($t22) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:793:32+53
    call $t23 := $1_vesting_get_vesting_account_signer_internal($t22);
    if ($abort_flag) {
        assume {:print "$at(2,37062,37115)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,19):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t24 := get_field<vesting::VestingContract>.staking($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:794:57+24
    assume {:print "$at(2,37173,37197)"} true;
    $t24 := $staking#$1_vesting_VestingContract($Dereference($t19));

    // $t25 := get_field<vesting::StakingInfo>.operator($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:794:57+33
    $t25 := $operator#$1_vesting_StakingInfo($t24);

    // assume Identical($t26, signer::$address_of($t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:106:9+48
    assume {:print "$at(134,4774,4822)"} true;
    assume ($t26 == $1_signer_$address_of($t23));

    // assume Identical($t27, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t26))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t27 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t26)));

    // assume Identical($t28, global<staking_contract::Store>($t26)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:316:9+34
    assume {:print "$at(134,13411,13445)"} true;
    assume ($t28 == $ResourceValue($1_staking_contract_Store_$memory, $t26));

    // assume Identical($t29, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t28), $t25)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:317:9+79
    assume {:print "$at(134,13454,13533)"} true;
    assume ($t29 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t28), $t25));

    // assume Identical($t30, select stake::OwnerCapability.pool_address(select staking_contract::StakingContract.owner_cap($t29))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:318:9+59
    assume {:print "$at(134,13542,13601)"} true;
    assume ($t30 == $pool_address#$1_stake_OwnerCapability($owner_cap#$1_staking_contract_StakingContract($t29)));

    // assume Identical($t31, global<staking_config::StakingConfig>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:323:9+69
    assume {:print "$at(134,13747,13816)"} true;
    assume ($t31 == $ResourceValue($1_staking_config_StakingConfig_$memory, 1));

    // assume Identical($t32, global<stake::StakePool>($t30)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:324:9+56
    assume {:print "$at(134,13825,13881)"} true;
    assume ($t32 == $ResourceValue($1_stake_StakePool_$memory, $t30));

    // assume Identical($t33, select stake::StakePool.locked_until_secs($t32)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:325:9+57
    assume {:print "$at(134,13890,13947)"} true;
    assume ($t33 == $locked_until_secs#$1_stake_StakePool($t32));

    // assume Identical($t34, Div(select timestamp::CurrentTimeMicroseconds.microseconds(global<timestamp::CurrentTimeMicroseconds>(0x1)), 1000000)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:326:9+126
    assume {:print "$at(134,13956,14082)"} true;
    assume ($t34 == ($microseconds#$1_timestamp_CurrentTimeMicroseconds($ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, 1)) div 1000000));

    // assume Identical($t35, Add($t34, select staking_config::StakingConfig.recurring_lockup_duration_secs($t31))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:327:9+77
    assume {:print "$at(134,14091,14168)"} true;
    assume ($t35 == ($t34 + $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t31)));

    // staking_contract::reset_lockup($t23, $t25) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:794:9+82
    assume {:print "$at(2,37125,37207)"} true;
    call $1_staking_contract_reset_lockup($t23, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,37125,37207)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,19):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t36 := borrow_field<vesting::VestingContract>.reset_lockup_events($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:797:13+41
    assume {:print "$at(2,37242,37283)"} true;
    $t36 := $ChildMutation($t19, 11, $reset_lockup_events#$1_vesting_VestingContract($Dereference($t19)));

    // $t37 := get_field<vesting::VestingContract>.admin($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:799:24+22
    assume {:print "$at(2,37339,37361)"} true;
    $t37 := $admin#$1_vesting_VestingContract($Dereference($t19));

    // $t38 := get_field<vesting::VestingContract>.staking($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:801:39+24
    assume {:print "$at(2,37461,37485)"} true;
    $t38 := $staking#$1_vesting_VestingContract($Dereference($t19));

    // $t39 := get_field<vesting::StakingInfo>.pool_address($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:801:39+37
    $t39 := $pool_address#$1_vesting_StakingInfo($t38);

    // $t40 := get_field<vesting::VestingContract>.staking($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:802:68+24
    assume {:print "$at(2,37567,37591)"} true;
    $t40 := $staking#$1_vesting_VestingContract($Dereference($t19));

    // $t41 := get_field<vesting::StakingInfo>.pool_address($t40) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:802:68+37
    $t41 := $pool_address#$1_vesting_StakingInfo($t40);

    // $t42 := stake::get_lockup_secs($t41) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:802:45+61
    call $t42 := $1_stake_get_lockup_secs($t41);
    if ($abort_flag) {
        assume {:print "$at(2,37544,37605)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,19):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t43 := pack vesting::ResetLockupEvent($t37, $t1, $t39, $t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:798:13+323
    assume {:print "$at(2,37297,37620)"} true;
    $t43 := $1_vesting_ResetLockupEvent($t37, $t1, $t39, $t42);

    // opaque begin: event::emit_event<vesting::ResetLockupEvent>($t36, $t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:796:9+413
    assume {:print "$at(2,37218,37631)"} true;

    // opaque end: event::emit_event<vesting::ResetLockupEvent>($t36, $t43) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:796:9+413

    // write_back[Reference($t19).reset_lockup_events (event::EventHandle<vesting::ResetLockupEvent>)]($t36) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:796:9+413
    $t19 := $UpdateMutation($t19, $Update'$1_vesting_VestingContract'_reset_lockup_events($Dereference($t19), $Dereference($t36)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t19)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t19)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t19))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t19))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t19)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t19)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t19)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t19)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t19))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t19))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t19))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t19))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:796:9+413
    assume {:print "$at(2,37218,37631)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t19),
        $Dereference($t19));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:805:5+1
    assume {:print "$at(2,37637,37638)"} true;
L1:

    // assert Not(Not(exists[@122]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:227:9+53
    assume {:print "$at(3,9178,9231)"} true;
    assert {:msg "assert_failed(3,9178,9231): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#122, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:229:9+62
    assume {:print "$at(3,9314,9376)"} true;
    assert {:msg "assert_failed(3,9314,9376): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t4));

    // assert Not(Not(exists[@123]<staking_contract::Store>($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:267:9+33
    assume {:print "$at(134,11439,11472)"} true;
    assert {:msg "assert_failed(134,11439,11472): function does not abort under this condition"}
      !!$ResourceExists($1_staking_contract_Store_$memory#123, $t6);

    // assert Not(Not(simple_map::spec_contains_key[]<address, staking_contract::StakingContract>($t10, $t5))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:269:9+70
    assume {:print "$at(134,11554,11624)"} true;
    assert {:msg "assert_failed(134,11554,11624): function does not abort under this condition"}
      !!$1_simple_map_spec_contains_key'address_$1_staking_contract_StakingContract'($t10, $t5);

    // assert Not(Not(stake::$stake_pool_exists[@124]($t13))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:320:9+50
    assume {:print "$at(134,13611,13661)"} true;
    assert {:msg "assert_failed(134,13611,13661): function does not abort under this condition"}
      !!$1_stake_$stake_pool_exists($1_stake_StakePool_$memory#124, $t13);

    // assert Not(Not(exists[@125]<staking_config::StakingConfig>(0x1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:321:9+67
    assume {:print "$at(134,13670,13737)"} true;
    assert {:msg "assert_failed(134,13670,13737): function does not abort under this condition"}
      !!$ResourceExists($1_staking_config_StakingConfig_$memory#125, 1);

    // assert Not(Gt(Add($t17, select staking_config::StakingConfig.recurring_lockup_duration_secs($t14)), 18446744073709551615)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:328:9+68
    assume {:print "$at(134,14177,14245)"} true;
    assert {:msg "assert_failed(134,14177,14245): function does not abort under this condition"}
      !(($t17 + $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t14)) > 18446744073709551615);

    // assert Not(Or(Gt($t16, $t18), Eq<u64>($t16, $t18))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:329:9+106
    assume {:print "$at(134,14254,14360)"} true;
    assert {:msg "assert_failed(134,14254,14360): function does not abort under this condition"}
      !(($t16 > $t18) || $IsEqual'u64'($t16, $t18));

    // assert Not(Not(exists[@126]<timestamp::CurrentTimeMicroseconds>(0x1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:330:9+72
    assume {:print "$at(134,14369,14441)"} true;
    assert {:msg "assert_failed(134,14369,14441): function does not abort under this condition"}
      !!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory#126, 1);

    // assert Not(Not(exists[@124]<stake::StakePool>(select vesting::StakingInfo.pool_address(select vesting::VestingContract.staking($t4))))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:240:9+75
    assume {:print "$at(3,9882,9957)"} true;
    assert {:msg "assert_failed(3,9882,9957): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#124, $pool_address#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t4)));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:240:9+75
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:805:5+1
    assume {:print "$at(2,37637,37638)"} true;
L2:

    // assert Or(Or(Or(Or(Or(Or(Or(Or(Or(Not(exists[@122]<vesting::VestingContract>($t1)), Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t4))), Not(exists[@123]<staking_contract::Store>($t6))), Not(simple_map::spec_contains_key[]<address, staking_contract::StakingContract>($t10, $t5))), Not(stake::$stake_pool_exists[@124]($t13))), Not(exists[@125]<staking_config::StakingConfig>(0x1))), Gt(Add($t17, select staking_config::StakingConfig.recurring_lockup_duration_secs($t14)), 18446744073709551615)), Or(Gt($t16, $t18), Eq<u64>($t16, $t18))), Not(exists[@126]<timestamp::CurrentTimeMicroseconds>(0x1))), Not(exists[@124]<stake::StakePool>(select vesting::StakingInfo.pool_address(select vesting::VestingContract.staking($t4))))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:223:5+879
    assume {:print "$at(3,9084,9963)"} true;
    assert {:msg "assert_failed(3,9084,9963): abort not covered by any of the `aborts_if` clauses"}
      (((((((((!$ResourceExists($1_vesting_VestingContract_$memory#122, $t1) || !$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t4))) || !$ResourceExists($1_staking_contract_Store_$memory#123, $t6)) || !$1_simple_map_spec_contains_key'address_$1_staking_contract_StakingContract'($t10, $t5)) || !$1_stake_$stake_pool_exists($1_stake_StakePool_$memory#124, $t13)) || !$ResourceExists($1_staking_config_StakingConfig_$memory#125, 1)) || (($t17 + $recurring_lockup_duration_secs#$1_staking_config_StakingConfig($t14)) > 18446744073709551615)) || (($t16 > $t18) || $IsEqual'u64'($t16, $t18))) || !$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory#126, 1)) || !$ResourceExists($1_stake_StakePool_$memory#124, $pool_address#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t4))));

    // abort($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:223:5+879
    $abort_code := $t20;
    $abort_flag := true;
    return;

}

// fun vesting::stake_pool_address [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:251:5+258
procedure {:timeLimit 200} $1_vesting_stake_pool_address$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_StakingInfo;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#58: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:251:5+1
    assume {:print "$at(2,11140,11141)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:251:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @58 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:251:5+1
    $1_vesting_VestingContract_$memory#58 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:251:5+1
    assume {:print "$track_local(57,25,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:252:9+56
    assume {:print "$at(2,11249,11305)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,11249,11305)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,25):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:253:9+13
    assume {:print "$at(2,11315,11328)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,11315,11328)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,25):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.staking($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:253:9+64
    $t3 := $staking#$1_vesting_VestingContract($t2);

    // $t4 := get_field<vesting::StakingInfo>.pool_address($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:253:9+77
    $t4 := $pool_address#$1_vesting_StakingInfo($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:253:9+77
    assume {:print "$track_return(57,25,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:254:5+1
    assume {:print "$at(2,11397,11398)"} true;
L1:

    // assert Not(Not(exists[@58]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:8:9+61
    assume {:print "$at(3,205,266)"} true;
    assert {:msg "assert_failed(3,205,266): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#58, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:8:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:254:5+1
    assume {:print "$at(2,11397,11398)"} true;
L2:

    // assert Not(exists[@58]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:7:5+145
    assume {:print "$at(3,127,272)"} true;
    assert {:msg "assert_failed(3,127,272): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#58, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:7:5+145
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::unlock_rewards [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:539:5+312
procedure {:inline 1} $1_vesting_unlock_rewards(_$t0: int) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: int;
    var $t4: int;
    var $t5: Table int ($1_staking_contract_StakingContract);
    var $t6: $1_staking_contract_StakingContract;
    var $t7: int;
    var $t8: $1_stake_StakePool;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: $1_vesting_VestingContract;
    var $t15: $1_vesting_VestingContract;
    var $t16: int;
    var $t17: int;
    var $t18: Table int ($1_staking_contract_StakingContract);
    var $t19: $1_staking_contract_StakingContract;
    var $t20: int;
    var $t21: $1_stake_StakePool;
    var $t22: int;
    var $t23: int;
    var $t24: int;
    var $t25: int;
    var $t26: int;
    var $t27: $1_vesting_VestingContract;
    var $t28: int;
    var $t29: int;
    var $t30: $1_vesting_VestingContract;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t2, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:60:9+73
    assume {:print "$at(3,2125,2198)"} true;
    assume ($t2 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume Identical($t3, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:62:9+38
    assume {:print "$at(3,2208,2246)"} true;
    assume ($t3 == $t0);

    // assume Identical($t4, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t2))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:63:9+49
    assume {:print "$at(3,2255,2304)"} true;
    assume ($t4 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t2)));

    // assume Identical($t5, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:64:9+82
    assume {:print "$at(3,2313,2395)"} true;
    assume ($t5 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t3)));

    // assume Identical($t6, simple_map::spec_get<address, staking_contract::StakingContract>($t5, $t4)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:65:9+73
    assume {:print "$at(3,2404,2477)"} true;
    assume ($t6 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t5, $t4));

    // assume Identical($t7, select staking_contract::StakingContract.pool_address($t6)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:70:9+49
    assume {:print "$at(3,2627,2676)"} true;
    assume ($t7 == $pool_address#$1_staking_contract_StakingContract($t6));

    // assume Identical($t8, global<stake::StakePool>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:71:9+63
    assume {:print "$at(3,2685,2748)"} true;
    assume ($t8 == $ResourceValue($1_stake_StakePool_$memory, $t7));

    // assume Identical($t9, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:72:9+44
    assume {:print "$at(3,2757,2801)"} true;
    assume ($t9 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t8)));

    // assume Identical($t10, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:73:9+60
    assume {:print "$at(3,2810,2870)"} true;
    assume ($t10 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t8)));

    // assume Identical($t11, Add($t9, $t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:74:9+49
    assume {:print "$at(3,2879,2928)"} true;
    assume ($t11 == ($t9 + $t10));

    // assume Identical($t12, Sub($t11, select staking_contract::StakingContract.principal($t6))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:75:9+74
    assume {:print "$at(3,2937,3011)"} true;
    assume ($t12 == ($t11 - $principal#$1_staking_contract_StakingContract($t6)));

    // assume Identical($t13, Div(Mul($t12, select staking_contract::StakingContract.commission_percentage($t6)), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:76:9+91
    assume {:print "$at(3,3020,3111)"} true;
    assume ($t13 == (($t12 * $commission_percentage#$1_staking_contract_StakingContract($t6)) div 100));

    // assume Identical($t14, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t14 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume And(Ge(select staking_contract::StakingContract.commission_percentage($t6), 0), Le(select staking_contract::StakingContract.commission_percentage($t6), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:57:9+102
    assume {:print "$at(3,1905,2007)"} true;
    assume (($commission_percentage#$1_staking_contract_StakingContract($t6) >= 0) && ($commission_percentage#$1_staking_contract_StakingContract($t6) <= 100));

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:539:5+1
    assume {:print "$at(2,25614,25615)"} true;
    assume {:print "$track_local(57,28,0):", $t0} $t0 == $t0;

    // assume Identical($t15, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:60:9+73
    assume {:print "$at(3,2125,2198)"} true;
    assume ($t15 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume Identical($t16, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:62:9+38
    assume {:print "$at(3,2208,2246)"} true;
    assume ($t16 == $t0);

    // assume Identical($t17, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t15))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:63:9+49
    assume {:print "$at(3,2255,2304)"} true;
    assume ($t17 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t15)));

    // assume Identical($t18, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:64:9+82
    assume {:print "$at(3,2313,2395)"} true;
    assume ($t18 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t16)));

    // assume Identical($t19, simple_map::spec_get<address, staking_contract::StakingContract>($t18, $t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:65:9+73
    assume {:print "$at(3,2404,2477)"} true;
    assume ($t19 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t18, $t17));

    // assume Identical($t20, select staking_contract::StakingContract.pool_address($t19)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:70:9+49
    assume {:print "$at(3,2627,2676)"} true;
    assume ($t20 == $pool_address#$1_staking_contract_StakingContract($t19));

    // assume Identical($t21, global<stake::StakePool>($t20)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:71:9+63
    assume {:print "$at(3,2685,2748)"} true;
    assume ($t21 == $ResourceValue($1_stake_StakePool_$memory, $t20));

    // assume Identical($t22, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t21))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:72:9+44
    assume {:print "$at(3,2757,2801)"} true;
    assume ($t22 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t21)));

    // assume Identical($t23, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t21))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:73:9+60
    assume {:print "$at(3,2810,2870)"} true;
    assume ($t23 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t21)));

    // assume Identical($t24, Add($t22, $t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:74:9+49
    assume {:print "$at(3,2879,2928)"} true;
    assume ($t24 == ($t22 + $t23));

    // assume Identical($t25, Sub($t24, select staking_contract::StakingContract.principal($t19))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:75:9+74
    assume {:print "$at(3,2937,3011)"} true;
    assume ($t25 == ($t24 - $principal#$1_staking_contract_StakingContract($t19)));

    // assume Identical($t26, Div(Mul($t25, select staking_contract::StakingContract.commission_percentage($t19)), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:76:9+91
    assume {:print "$at(3,3020,3111)"} true;
    assume ($t26 == (($t25 * $commission_percentage#$1_staking_contract_StakingContract($t19)) div 100));

    // assume Identical($t27, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t27 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // $t28 := vesting::total_accumulated_rewards($t0) on_abort goto L2 with $t29 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:540:35+43
    assume {:print "$at(2,25734,25777)"} true;
    call $t28 := $1_vesting_total_accumulated_rewards($t0);
    if ($abort_flag) {
        assume {:print "$at(2,25734,25777)"} true;
        $t29 := $abort_code;
        assume {:print "$track_abort(57,28):", $t29} $t29 == $t29;
        goto L2;
    }

    // trace_local[accumulated_rewards]($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:540:13+19
    assume {:print "$track_local(57,28,1):", $t28} $t28 == $t28;

    // $t30 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t29 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:541:32+13
    assume {:print "$at(2,25810,25823)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t30 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,25810,25823)"} true;
        $t29 := $abort_code;
        assume {:print "$track_abort(57,28):", $t29} $t29 == $t29;
        goto L2;
    }

    // vesting::unlock_stake($t30, $t28) on_abort goto L2 with $t29 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:542:9+51
    assume {:print "$at(2,25868,25919)"} true;
    call $1_vesting_unlock_stake($t30, $t28);
    if ($abort_flag) {
        assume {:print "$at(2,25868,25919)"} true;
        $t29 := $abort_code;
        assume {:print "$track_abort(57,28):", $t29} $t29 == $t29;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:543:5+1
    assume {:print "$at(2,25925,25926)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:543:5+1
    assume {:print "$at(2,25925,25926)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:543:5+1
L2:

    // abort($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:543:5+1
    assume {:print "$at(2,25925,25926)"} true;
    $abort_code := $t29;
    $abort_flag := true;
    return;

}

// fun vesting::unlock_stake [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+259
procedure {:inline 1} $1_vesting_unlock_stake(_$t0: $1_vesting_VestingContract, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: int;
    var $t5: $1_vesting_StakingInfo;
    var $t6: int;
    var $t0: $1_vesting_VestingContract;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[vesting_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume {:print "$at(2,44426,44427)"} true;
    assume {:print "$track_local(57,30,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume {:print "$track_local(57,30,1):", $t1} $t1 == $t1;

    // $t3 := vesting::get_vesting_account_signer_internal($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:952:32+53
    assume {:print "$at(2,44525,44578)"} true;
    call $t3 := $1_vesting_get_vesting_account_signer_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(2,44525,44578)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,30):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_field<vesting::VestingContract>.staking($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:953:57+24
    assume {:print "$at(2,44636,44660)"} true;
    $t5 := $staking#$1_vesting_VestingContract($t0);

    // $t6 := get_field<vesting::StakingInfo>.operator($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:953:57+33
    $t6 := $operator#$1_vesting_StakingInfo($t5);

    // staking_contract::unlock_stake($t3, $t6, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:953:9+90
    call $1_staking_contract_unlock_stake($t3, $t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,44588,44678)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,30):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    assume {:print "$at(2,44684,44685)"} true;
L1:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    assume {:print "$at(2,44684,44685)"} true;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    assume {:print "$at(2,44684,44685)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::unlock_stake [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+259
procedure {:timeLimit 200} $1_vesting_unlock_stake$verify(_$t0: $1_vesting_VestingContract, _$t1: int) returns ()
{
    // declare local variables
    var $t2: $signer;
    var $t3: $signer;
    var $t4: int;
    var $t5: $1_vesting_StakingInfo;
    var $t6: int;
    var $t0: $1_vesting_VestingContract;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume And(WellFormed($t0), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t0)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume {:print "$at(2,44426,44427)"} true;
    assume ($IsValid'$1_vesting_VestingContract'($t0) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), j)) ==> $IsEqual'num'(i, j))))))))));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume $IsValid'u64'($t1);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+259
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+259
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+259
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+259
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[vesting_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume {:print "$track_local(57,30,0):", $t0} $t0 == $t0;

    // trace_local[amount]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:951:5+1
    assume {:print "$track_local(57,30,1):", $t1} $t1 == $t1;

    // $t3 := vesting::get_vesting_account_signer_internal($t0) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:952:32+53
    assume {:print "$at(2,44525,44578)"} true;
    call $t3 := $1_vesting_get_vesting_account_signer_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(2,44525,44578)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,30):", $t4} $t4 == $t4;
        goto L2;
    }

    // $t5 := get_field<vesting::VestingContract>.staking($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:953:57+24
    assume {:print "$at(2,44636,44660)"} true;
    $t5 := $staking#$1_vesting_VestingContract($t0);

    // $t6 := get_field<vesting::StakingInfo>.operator($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:953:57+33
    $t6 := $operator#$1_vesting_StakingInfo($t5);

    // staking_contract::unlock_stake($t3, $t6, $t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:953:9+90
    call $1_staking_contract_unlock_stake($t3, $t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,44588,44678)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,30):", $t4} $t4 == $t4;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    assume {:print "$at(2,44684,44685)"} true;
L1:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    assume {:print "$at(2,44684,44685)"} true;
    assert {:msg "assert_failed(2,44684,44685): function does not abort under this condition"}
      !false;

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:954:5+1
    assume {:print "$at(2,44684,44685)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::update_voter [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+956
procedure {:timeLimit 200} $1_vesting_update_voter$verify(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $signer;
    var $t4: $signer;
    var $t5: int;
    var $t6: $Mutation ($1_vesting_VestingContract);
    var $t7: $1_vesting_VestingContract;
    var $t8: int;
    var $t9: int;
    var $t10: $1_vesting_VestingContract;
    var $t11: $1_staking_contract_Store;
    var $t12: $1_staking_contract_StakingContract;
    var $t13: int;
    var $t14: Table int ($1_staking_contract_StakingContract);
    var $t15: $Mutation ($1_vesting_VestingContract);
    var $t16: int;
    var $t17: $1_vesting_VestingContract;
    var $t18: $1_vesting_VestingContract;
    var $t19: $signer;
    var $t20: $1_vesting_StakingInfo;
    var $t21: int;
    var $t22: $1_vesting_StakingInfo;
    var $t23: int;
    var $t24: int;
    var $t25: $1_staking_contract_Store;
    var $t26: $1_staking_contract_StakingContract;
    var $t27: int;
    var $t28: Table int ($1_staking_contract_StakingContract);
    var $t29: $Mutation ($1_vesting_StakingInfo);
    var $t30: $Mutation (int);
    var $t31: $Mutation ($1_event_EventHandle'$1_vesting_UpdateVoterEvent');
    var $t32: int;
    var $t33: $1_vesting_StakingInfo;
    var $t34: int;
    var $t35: $1_vesting_UpdateVoterEvent;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_vesting_VestingContract_$memory#113: $Memory $1_vesting_VestingContract;
    var $1_stake_StakePool_$memory#114: $Memory $1_stake_StakePool;
    var $1_staking_contract_Store_$memory#115: $Memory $1_staking_contract_Store;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume {:print "$at(2,35814,35815)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume $IsValid'address'($t2);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+956
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t7, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:216:9+65
    assume {:print "$at(3,8837,8902)"} true;
    assume ($t7 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assume Identical($t8, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:217:9+49
    assume {:print "$at(3,8911,8960)"} true;
    assume ($t8 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t7)));

    // assume Identical($t9, select account::SignerCapability.account(select vesting::VestingContract.signer_cap($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:218:9+49
    assume {:print "$at(3,8969,9018)"} true;
    assume ($t9 == $account#$1_account_SignerCapability($signer_cap#$1_vesting_VestingContract($t7)));

    // assume Identical($t10, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:382:9+65
    assume {:print "$at(3,16064,16129)"} true;
    assume ($t10 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assume Identical($t11, global<staking_contract::Store>($t9)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:276:9+34
    assume {:print "$at(134,11729,11763)"} true;
    assume ($t11 == $ResourceValue($1_staking_contract_Store_$memory, $t9));

    // assume Identical($t12, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t11), $t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:277:9+79
    assume {:print "$at(134,11772,11851)"} true;
    assume ($t12 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t11), $t8));

    // assume Identical($t13, select staking_contract::StakingContract.pool_address($t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:278:9+49
    assume {:print "$at(134,11860,11909)"} true;
    assume ($t13 == $pool_address#$1_staking_contract_StakingContract($t12));

    // assume Identical($t14, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t14 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t9)));

    // @114 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume {:print "$at(2,35814,35815)"} true;
    $1_stake_StakePool_$memory#114 := $1_stake_StakePool_$memory;

    // @115 := save_mem(staking_contract::Store) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    $1_staking_contract_Store_$memory#115 := $1_staking_contract_Store_$memory;

    // @113 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    $1_vesting_VestingContract_$memory#113 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume {:print "$track_local(57,33,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume {:print "$track_local(57,33,1):", $t1} $t1 == $t1;

    // trace_local[new_voter]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:763:5+1
    assume {:print "$track_local(57,33,2):", $t2} $t2 == $t2;

    // $t15 := borrow_global<vesting::VestingContract>($t1) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:768:32+17
    assume {:print "$at(2,35996,36013)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,35996,36013)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,33):", $t16} $t16 == $t16;
        goto L2;
    }

    // trace_local[vesting_contract]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:768:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t15);
    assume {:print "$track_local(57,33,6):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t17 := read_ref($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:769:21+25
    assume {:print "$at(2,36070,36095)"} true;
    $t17 := $Dereference($t15);

    // vesting::verify_admin($t0, $t17) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:769:9+37
    call $1_vesting_verify_admin($t0, $t17);
    if ($abort_flag) {
        assume {:print "$at(2,36058,36095)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,33):", $t16} $t16 == $t16;
        goto L2;
    }

    // $t18 := read_ref($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:770:68+16
    assume {:print "$at(2,36164,36180)"} true;
    $t18 := $Dereference($t15);

    // $t19 := vesting::get_vesting_account_signer_internal($t18) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:770:32+53
    call $t19 := $1_vesting_get_vesting_account_signer_internal($t18);
    if ($abort_flag) {
        assume {:print "$at(2,36128,36181)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,33):", $t16} $t16 == $t16;
        goto L2;
    }

    // trace_local[contract_signer]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:770:13+15
    assume {:print "$track_local(57,33,4):", $t19} $t19 == $t19;

    // $t20 := get_field<vesting::VestingContract>.staking($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:771:25+24
    assume {:print "$at(2,36207,36231)"} true;
    $t20 := $staking#$1_vesting_VestingContract($Dereference($t15));

    // $t21 := get_field<vesting::StakingInfo>.voter($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:771:25+30
    $t21 := $voter#$1_vesting_StakingInfo($t20);

    // trace_local[old_voter]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:771:13+9
    assume {:print "$track_local(57,33,5):", $t21} $t21 == $t21;

    // $t22 := get_field<vesting::VestingContract>.staking($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:772:57+24
    assume {:print "$at(2,36295,36319)"} true;
    $t22 := $staking#$1_vesting_VestingContract($Dereference($t15));

    // $t23 := get_field<vesting::StakingInfo>.operator($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:772:57+33
    $t23 := $operator#$1_vesting_StakingInfo($t22);

    // assume Identical($t24, signer::$address_of($t19)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:99:9+48
    assume {:print "$at(134,4471,4519)"} true;
    assume ($t24 == $1_signer_$address_of($t19));

    // assume Identical($t25, global<staking_contract::Store>($t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:276:9+34
    assume {:print "$at(134,11729,11763)"} true;
    assume ($t25 == $ResourceValue($1_staking_contract_Store_$memory, $t24));

    // assume Identical($t26, simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($t25), $t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:277:9+79
    assume {:print "$at(134,11772,11851)"} true;
    assume ($t26 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($t25), $t23));

    // assume Identical($t27, select staking_contract::StakingContract.pool_address($t26)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:278:9+49
    assume {:print "$at(134,11860,11909)"} true;
    assume ($t27 == $pool_address#$1_staking_contract_StakingContract($t26));

    // assume Identical($t28, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t24))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t28 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t24)));

    // staking_contract::update_voter($t19, $t23, $t2) on_abort goto L2 with $t16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:772:9+93
    assume {:print "$at(2,36247,36340)"} true;
    call $1_staking_contract_update_voter($t19, $t23, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,36247,36340)"} true;
        $t16 := $abort_code;
        assume {:print "$track_abort(57,33):", $t16} $t16 == $t16;
        goto L2;
    }

    // $t29 := borrow_field<vesting::VestingContract>.staking($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:773:9+24
    assume {:print "$at(2,36350,36374)"} true;
    $t29 := $ChildMutation($t15, 6, $staking#$1_vesting_VestingContract($Dereference($t15)));

    // $t30 := borrow_field<vesting::StakingInfo>.voter($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:773:9+30
    $t30 := $ChildMutation($t29, 2, $voter#$1_vesting_StakingInfo($Dereference($t29)));

    // write_ref($t30, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:773:9+42
    $t30 := $UpdateMutation($t30, $t2);

    // write_back[Reference($t29).voter (address)]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:773:9+42
    $t29 := $UpdateMutation($t29, $Update'$1_vesting_StakingInfo'_voter($Dereference($t29), $Dereference($t30)));

    // write_back[Reference($t15).staking (vesting::StakingInfo)]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:773:9+42
    $t15 := $UpdateMutation($t15, $Update'$1_vesting_VestingContract'_staking($Dereference($t15), $Dereference($t29)));

    // $t31 := borrow_field<vesting::VestingContract>.update_voter_events($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:776:13+41
    assume {:print "$at(2,36427,36468)"} true;
    $t31 := $ChildMutation($t15, 10, $update_voter_events#$1_vesting_VestingContract($Dereference($t15)));

    // $t32 := get_field<vesting::VestingContract>.admin($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:778:24+22
    assume {:print "$at(2,36524,36546)"} true;
    $t32 := $admin#$1_vesting_VestingContract($Dereference($t15));

    // $t33 := get_field<vesting::VestingContract>.staking($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:780:39+24
    assume {:print "$at(2,36646,36670)"} true;
    $t33 := $staking#$1_vesting_VestingContract($Dereference($t15));

    // $t34 := get_field<vesting::StakingInfo>.pool_address($t33) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:780:39+37
    $t34 := $pool_address#$1_vesting_StakingInfo($t33);

    // $t35 := pack vesting::UpdateVoterEvent($t32, $t1, $t34, $t21, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:777:13+270
    assume {:print "$at(2,36482,36752)"} true;
    $t35 := $1_vesting_UpdateVoterEvent($t32, $t1, $t34, $t21, $t2);

    // opaque begin: event::emit_event<vesting::UpdateVoterEvent>($t31, $t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:775:9+360
    assume {:print "$at(2,36403,36763)"} true;

    // opaque end: event::emit_event<vesting::UpdateVoterEvent>($t31, $t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:775:9+360

    // write_back[Reference($t15).update_voter_events (event::EventHandle<vesting::UpdateVoterEvent>)]($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:775:9+360
    $t15 := $UpdateMutation($t15, $Update'$1_vesting_VestingContract'_update_voter_events($Dereference($t15), $Dereference($t31)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t15)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:775:9+360
    assume {:print "$at(2,36403,36763)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:785:5+1
    assume {:print "$at(2,36769,36770)"} true;
L1:

    // assert Not(Not(exists[@113]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:381:9+53
    assume {:print "$at(3,16002,16055)"} true;
    assert {:msg "assert_failed(3,16002,16055): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#113, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    assume {:print "$at(3,16138,16200)"} true;
    assert {:msg "assert_failed(3,16138,16200): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t10));

    // assert Not(Not(exists[@114]<stake::StakePool>($t13))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:279:9+50
    assume {:print "$at(134,11918,11968)"} true;
    assert {:msg "assert_failed(134,11918,11968): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#114, $t13);

    // assert Not(Not(exists[@114]<stake::StakePool>(select stake::OwnerCapability.pool_address(select staking_contract::StakingContract.owner_cap($t12))))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:280:9+77
    assume {:print "$at(134,11977,12054)"} true;
    assert {:msg "assert_failed(134,11977,12054): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#114, $pool_address#$1_stake_OwnerCapability($owner_cap#$1_staking_contract_StakingContract($t12)));

    // assert Not(Not(exists[@115]<staking_contract::Store>($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:267:9+33
    assume {:print "$at(134,11439,11472)"} true;
    assert {:msg "assert_failed(134,11439,11472): function does not abort under this condition"}
      !!$ResourceExists($1_staking_contract_Store_$memory#115, $t9);

    // assert Not(Not(simple_map::spec_contains_key[]<address, staking_contract::StakingContract>($t14, $t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:269:9+70
    assume {:print "$at(134,11554,11624)"} true;
    assert {:msg "assert_failed(134,11554,11624): function does not abort under this condition"}
      !!$1_simple_map_spec_contains_key'address_$1_staking_contract_StakingContract'($t14, $t8);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:269:9+70
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:785:5+1
    assume {:print "$at(2,36769,36770)"} true;
L2:

    // assert Or(Or(Or(Or(Or(Not(exists[@113]<vesting::VestingContract>($t1)), Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t10))), Not(exists[@114]<stake::StakePool>($t13))), Not(exists[@114]<stake::StakePool>(select stake::OwnerCapability.pool_address(select staking_contract::StakingContract.owner_cap($t12))))), Not(exists[@115]<staking_contract::Store>($t9))), Not(simple_map::spec_contains_key[]<address, staking_contract::StakingContract>($t14, $t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:209:5+401
    assume {:print "$at(3,8677,9078)"} true;
    assert {:msg "assert_failed(3,8677,9078): abort not covered by any of the `aborts_if` clauses"}
      (((((!$ResourceExists($1_vesting_VestingContract_$memory#113, $t1) || !$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t10))) || !$ResourceExists($1_stake_StakePool_$memory#114, $t13)) || !$ResourceExists($1_stake_StakePool_$memory#114, $pool_address#$1_stake_OwnerCapability($owner_cap#$1_staking_contract_StakingContract($t12)))) || !$ResourceExists($1_staking_contract_Store_$memory#115, $t9)) || !$1_simple_map_spec_contains_key'address_$1_staking_contract_StakingContract'($t14, $t8));

    // abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:209:5+401
    $abort_code := $t16;
    $abort_flag := true;
    return;

}

// fun vesting::admin_withdraw [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1003
procedure {:timeLimit 200} $1_vesting_admin_withdraw$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t5: $Mutation ($1_vesting_VestingContract);
    var $t6: $1_vesting_VestingContract;
    var $t7: $1_vesting_VestingContract;
    var $t8: $1_vesting_VestingContract;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: $Mutation ($1_vesting_VestingContract);
    var $t16: $1_vesting_VestingContract;
    var $t17: $1_vesting_VestingContract;
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t19: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t20: int;
    var $t21: int;
    var $t22: bool;
    var $t23: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t24: int;
    var $t25: $1_account_Account;
    var $t26: $Mutation ($1_event_EventHandle'$1_vesting_AdminWithdrawEvent');
    var $t27: int;
    var $t28: $1_vesting_AdminWithdrawEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $1_vesting_VestingContract_$memory#134: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume {:print "$at(2,33288,33289)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<aptos_account::DirectTransferConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0);
    ($IsValid'$1_aptos_account_DirectTransferConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1003
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1003
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1003
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1003
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Identical($t6, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:186:9+65
    assume {:print "$at(3,8025,8090)"} true;
    assume ($t6 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assume Identical($t7, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:382:9+65
    assume {:print "$at(3,16064,16129)"} true;
    assume ($t7 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // @134 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume {:print "$at(2,33288,33289)"} true;
    $1_vesting_VestingContract_$memory#134 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume {:print "$track_local(57,1,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:703:5+1
    assume {:print "$track_local(57,1,1):", $t1} $t1 == $t1;

    // $t8 := get_global<vesting::VestingContract>($t1) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:704:32+13
    assume {:print "$at(2,33421,33434)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_vesting_VestingContract_$memory, $t1);
    }
    if ($abort_flag) {
        assume {:print "$at(2,33421,33434)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // $t10 := get_field<vesting::VestingContract>.state($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:17+22
    assume {:print "$at(2,33487,33509)"} true;
    $t10 := $state#$1_vesting_VestingContract($t8);

    // $t11 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:43+23
    $t11 := 2;
    assume $IsValid'u64'($t11);

    // $t12 := ==($t10, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:40+2
    $t12 := $IsEqual'u64'($t10, $t11);

    // if ($t12) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
    if ($t12) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
    assume {:print "$at(2,33479,33591)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
L0:

    // $t13 := 9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:89+30
    assume {:print "$at(2,33559,33589)"} true;
    $t13 := 9;
    assume $IsValid'u64'($t13);

    // $t14 := error::invalid_state($t13) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:68+52
    call $t14 := $1_error_invalid_state($t13);
    if ($abort_flag) {
        assume {:print "$at(2,33538,33590)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // trace_abort($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
    assume {:print "$at(2,33479,33591)"} true;
    assume {:print "$track_abort(57,1):", $t14} $t14 == $t14;

    // $t9 := move($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
    $t9 := $t14;

    // goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:705:9+112
    goto L6;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:707:67+16
    assume {:print "$at(2,33660,33676)"} true;
L2:

    // $t15 := borrow_global<vesting::VestingContract>($t1) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:707:32+17
    assume {:print "$at(2,33625,33642)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t15 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,33625,33642)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // trace_local[vesting_contract#1]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:707:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t15);
    assume {:print "$track_local(57,1,5):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t16 := read_ref($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:708:21+25
    assume {:print "$at(2,33699,33724)"} true;
    $t16 := $Dereference($t15);

    // vesting::verify_admin($t0, $t16) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:708:9+37
    call $1_vesting_verify_admin($t0, $t16);
    if ($abort_flag) {
        assume {:print "$at(2,33687,33724)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // $t17 := read_ref($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:709:35+36
    assume {:print "$at(2,33760,33796)"} true;
    $t17 := $Dereference($t15);

    // $t18 := vesting::withdraw_stake($t17, $t1) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:709:21+50
    call $t18 := $1_vesting_withdraw_stake($t17, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,33746,33796)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // trace_local[coins]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:709:13+5
    assume {:print "$track_local(57,1,4):", $t18} $t18 == $t18;

    // assume Identical($t19, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t19 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t20 := coin::value<aptos_coin::AptosCoin>($t18) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:710:22+19
    assume {:print "$at(2,33819,33838)"} true;
    call $t20 := $1_coin_value'$1_aptos_coin_AptosCoin'($t18);
    if ($abort_flag) {
        assume {:print "$at(2,33819,33838)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // trace_local[amount]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:710:13+6
    assume {:print "$track_local(57,1,3):", $t20} $t20 == $t20;

    // $t21 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:711:23+1
    assume {:print "$at(2,33862,33863)"} true;
    $t21 := 0;
    assume $IsValid'u64'($t21);

    // $t22 := ==($t20, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:711:20+2
    $t22 := $IsEqual'u64'($t20, $t21);

    // if ($t22) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:711:9+86
    if ($t22) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:712:13+25
    assume {:print "$at(2,33879,33904)"} true;
L4:

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t15)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), j)) ==> $IsEqual'num'(i, j))))))));

    // destroy($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:712:13+25
    assume {:print "$at(2,33879,33904)"} true;

    // assume Identical($t23, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t23 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // coin::destroy_zero<aptos_coin::AptosCoin>($t18) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:712:13+25
    assume {:print "$at(2,33879,33904)"} true;
    call $1_coin_destroy_zero'$1_aptos_coin_AptosCoin'($t18);
    if ($abort_flag) {
        assume {:print "$at(2,33879,33904)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:713:13+6
    assume {:print "$at(2,33918,33924)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:715:38+16
    assume {:print "$at(2,33973,33989)"} true;
L3:

    // $t24 := get_field<vesting::VestingContract>.withdrawal_address($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:715:38+35
    assume {:print "$at(2,33973,34008)"} true;
    $t24 := $withdrawal_address#$1_vesting_VestingContract($Dereference($t15));

    // assume Identical($t25, global<account::Account>($t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/aptos_account.spec.move:200:9+39
    assume {:print "$at(81,9368,9407)"} true;
    assume ($t25 == $ResourceValue($1_account_Account_$memory, $t24));

    // aptos_account::deposit_coins<aptos_coin::AptosCoin>($t24, $t18) on_abort goto L6 with $t9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:715:9+72
    assume {:print "$at(2,33944,34016)"} true;
    call $1_aptos_account_deposit_coins'$1_aptos_coin_AptosCoin'($t24, $t18);
    if ($abort_flag) {
        assume {:print "$at(2,33944,34016)"} true;
        $t9 := $abort_code;
        assume {:print "$track_abort(57,1):", $t9} $t9 == $t9;
        goto L6;
    }

    // $t26 := borrow_field<vesting::VestingContract>.admin_withdraw_events($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:718:13+43
    assume {:print "$at(2,34051,34094)"} true;
    $t26 := $ChildMutation($t15, 17, $admin_withdraw_events#$1_vesting_VestingContract($Dereference($t15)));

    // $t27 := get_field<vesting::VestingContract>.admin($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:720:24+22
    assume {:print "$at(2,34152,34174)"} true;
    $t27 := $admin#$1_vesting_VestingContract($Dereference($t15));

    // $t28 := pack vesting::AdminWithdrawEvent($t27, $t1, $t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:719:13+165
    assume {:print "$at(2,34108,34273)"} true;
    $t28 := $1_vesting_AdminWithdrawEvent($t27, $t1, $t20);

    // opaque begin: event::emit_event<vesting::AdminWithdrawEvent>($t26, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:717:9+257
    assume {:print "$at(2,34027,34284)"} true;

    // opaque end: event::emit_event<vesting::AdminWithdrawEvent>($t26, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:717:9+257

    // write_back[Reference($t15).admin_withdraw_events (event::EventHandle<vesting::AdminWithdrawEvent>)]($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:717:9+257
    $t15 := $UpdateMutation($t15, $Update'$1_vesting_VestingContract'_admin_withdraw_events($Dereference($t15), $Dereference($t26)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t15)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t15)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t15))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:717:9+257
    assume {:print "$at(2,34027,34284)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t15),
        $Dereference($t15));

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:725:5+1
    assume {:print "$at(2,34290,34291)"} true;
L5:

    // assert Not(Not(exists[@134]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:381:9+53
    assume {:print "$at(3,16002,16055)"} true;
    assert {:msg "assert_failed(3,16002,16055): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#134, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    assume {:print "$at(3,16138,16200)"} true;
    assert {:msg "assert_failed(3,16138,16200): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t7));

    // assert Not(Neq<u64>(select vesting::VestingContract.state($t6), 2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:187:9+60
    assume {:print "$at(3,8099,8159)"} true;
    assert {:msg "assert_failed(3,8099,8159): function does not abort under this condition"}
      !!$IsEqual'u64'($state#$1_vesting_VestingContract($t6), 2);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:187:9+60
    return;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:725:5+1
    assume {:print "$at(2,34290,34291)"} true;
L6:

    // abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:725:5+1
    assume {:print "$at(2,34290,34291)"} true;
    $abort_code := $t9;
    $abort_flag := true;
    return;

}

// fun vesting::assert_active_vesting_contract [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+349
procedure {:inline 1} $1_vesting_assert_active_vesting_contract(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $1_vesting_VestingContract;
    var $t2: int;
    var $t3: $1_vesting_VestingContract;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t1, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t1 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+1
    assume {:print "$at(2,44071,44072)"} true;
    assume {:print "$track_local(57,2,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:946:9+48
    assume {:print "$at(2,44168,44216)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,44168,44216)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t3 := get_global<vesting::VestingContract>($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:947:32+13
    assume {:print "$at(2,44249,44262)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,44249,44262)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t4 := get_field<vesting::VestingContract>.state($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:17+22
    assume {:print "$at(2,44315,44337)"} true;
    $t4 := $state#$1_vesting_VestingContract($t3);

    // $t5 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:43+19
    $t5 := 1;
    assume $IsValid'u64'($t5);

    // $t6 := ==($t4, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:40+2
    $t6 := $IsEqual'u64'($t4, $t5);

    // if ($t6) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    assume {:print "$at(2,44307,44413)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:85+28
L0:

    // $t7 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:85+28
    assume {:print "$at(2,44383,44411)"} true;
    $t7 := 8;
    assume $IsValid'u64'($t7);

    // $t8 := error::invalid_state($t7) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:64+50
    call $t8 := $1_error_invalid_state($t7);
    if ($abort_flag) {
        assume {:print "$at(2,44362,44412)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    assume {:print "$at(2,44307,44413)"} true;
    assume {:print "$track_abort(57,2):", $t8} $t8 == $t8;

    // $t2 := move($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    $t2 := $t8;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:115+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:949:5+1
    assume {:print "$at(2,44419,44420)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:949:5+1
    assume {:print "$at(2,44419,44420)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:949:5+1
L4:

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:949:5+1
    assume {:print "$at(2,44419,44420)"} true;
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun vesting::assert_active_vesting_contract [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+349
procedure {:timeLimit 200} $1_vesting_assert_active_vesting_contract$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $1_vesting_VestingContract;
    var $t2: int;
    var $t3: $1_vesting_VestingContract;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#61: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+1
    assume {:print "$at(2,44071,44072)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t1, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t1 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // @61 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+1
    assume {:print "$at(2,44071,44072)"} true;
    $1_vesting_VestingContract_$memory#61 := $1_vesting_VestingContract_$memory;

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:945:5+1
    assume {:print "$track_local(57,2,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:946:9+48
    assume {:print "$at(2,44168,44216)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,44168,44216)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t3 := get_global<vesting::VestingContract>($t0) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:947:32+13
    assume {:print "$at(2,44249,44262)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,44249,44262)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // $t4 := get_field<vesting::VestingContract>.state($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:17+22
    assume {:print "$at(2,44315,44337)"} true;
    $t4 := $state#$1_vesting_VestingContract($t3);

    // $t5 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:43+19
    $t5 := 1;
    assume $IsValid'u64'($t5);

    // $t6 := ==($t4, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:40+2
    $t6 := $IsEqual'u64'($t4, $t5);

    // if ($t6) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    assume {:print "$at(2,44307,44413)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:85+28
L0:

    // $t7 := 8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:85+28
    assume {:print "$at(2,44383,44411)"} true;
    $t7 := 8;
    assume $IsValid'u64'($t7);

    // $t8 := error::invalid_state($t7) on_abort goto L4 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:64+50
    call $t8 := $1_error_invalid_state($t7);
    if ($abort_flag) {
        assume {:print "$at(2,44362,44412)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,2):", $t2} $t2 == $t2;
        goto L4;
    }

    // trace_abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    assume {:print "$at(2,44307,44413)"} true;
    assume {:print "$track_abort(57,2):", $t8} $t8 == $t8;

    // $t2 := move($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    $t2 := $t8;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:9+106
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:948:115+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:949:5+1
    assume {:print "$at(2,44419,44420)"} true;
L3:

    // assert Not(Not(exists[@61]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:388:9+53
    assume {:print "$at(3,16316,16369)"} true;
    assert {:msg "assert_failed(3,16316,16369): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#61, $t0);

    // assert Not(Neq<u64>(select vesting::VestingContract.state($t1), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    assume {:print "$at(3,16452,16508)"} true;
    assert {:msg "assert_failed(3,16452,16508): function does not abort under this condition"}
      !!$IsEqual'u64'($state#$1_vesting_VestingContract($t1), 1);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:949:5+1
    assume {:print "$at(2,44419,44420)"} true;
L4:

    // assert Or(Not(exists[@61]<vesting::VestingContract>($t0)), Neq<u64>(select vesting::VestingContract.state($t1), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:351:5+134
    assume {:print "$at(3,14757,14891)"} true;
    assert {:msg "assert_failed(3,14757,14891): abort not covered by any of the `aborts_if` clauses"}
      (!$ResourceExists($1_vesting_VestingContract_$memory#61, $t0) || !$IsEqual'u64'($state#$1_vesting_VestingContract($t1), 1));

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:351:5+134
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun vesting::assert_vesting_contract_exists [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+176
procedure {:inline 1} $1_vesting_assert_vesting_contract_exists(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+1
    assume {:print "$at(2,43889,43890)"} true;
    assume {:print "$track_local(57,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<vesting::VestingContract>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:17+6
    assume {:print "$at(2,43969,43975)"} true;
    $t1 := $ResourceExists($1_vesting_VestingContract_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    assume {:print "$at(2,43961,44058)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:77+27
L0:

    // $t2 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:77+27
    assume {:print "$at(2,44029,44056)"} true;
    $t2 := 10;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:60+45
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(2,44012,44057)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,3):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    assume {:print "$at(2,43961,44058)"} true;
    assume {:print "$track_abort(57,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    $t4 := $t3;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:106+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:943:5+1
    assume {:print "$at(2,44064,44065)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:943:5+1
    assume {:print "$at(2,44064,44065)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:943:5+1
L4:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:943:5+1
    assume {:print "$at(2,44064,44065)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::assert_vesting_contract_exists [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+176
procedure {:timeLimit 200} $1_vesting_assert_vesting_contract_exists$verify(_$t0: int) returns ()
{
    // declare local variables
    var $t1: bool;
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#31: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+1
    assume {:print "$at(2,43889,43890)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @31 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+1
    $1_vesting_VestingContract_$memory#31 := $1_vesting_VestingContract_$memory;

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:941:5+1
    assume {:print "$track_local(57,3,0):", $t0} $t0 == $t0;

    // $t1 := exists<vesting::VestingContract>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:17+6
    assume {:print "$at(2,43969,43975)"} true;
    $t1 := $ResourceExists($1_vesting_VestingContract_$memory, $t0);

    // if ($t1) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    if ($t1) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    assume {:print "$at(2,43961,44058)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:77+27
L0:

    // $t2 := 10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:77+27
    assume {:print "$at(2,44029,44056)"} true;
    $t2 := 10;
    assume $IsValid'u64'($t2);

    // $t3 := error::not_found($t2) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:60+45
    call $t3 := $1_error_not_found($t2);
    if ($abort_flag) {
        assume {:print "$at(2,44012,44057)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,3):", $t4} $t4 == $t4;
        goto L4;
    }

    // trace_abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    assume {:print "$at(2,43961,44058)"} true;
    assume {:print "$track_abort(57,3):", $t3} $t3 == $t3;

    // $t4 := move($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    $t4 := $t3;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:9+97
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:942:106+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:943:5+1
    assume {:print "$at(2,44064,44065)"} true;
L3:

    // assert Not(Not(exists[@31]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:348:9+53
    assume {:print "$at(3,14692,14745)"} true;
    assert {:msg "assert_failed(3,14692,14745): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#31, $t0);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:348:9+53
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:943:5+1
    assume {:print "$at(2,44064,44065)"} true;
L4:

    // assert Not(exists[@31]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:347:5+132
    assume {:print "$at(3,14619,14751)"} true;
    assert {:msg "assert_failed(3,14619,14751): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#31, $t0);

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:347:5+132
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::beneficiary [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+282
procedure {:timeLimit 200} $1_vesting_beneficiary$verify(_$t0: int, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: $1_vesting_VestingContract;
    var $t4: int;
    var $t0: int;
    var $t1: int;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#104: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+1
    assume {:print "$at(2,13591,13592)"} true;
    assume $IsValid'address'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @104 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+1
    $1_vesting_VestingContract_$memory#104 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+1
    assume {:print "$track_local(57,4,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:293:5+1
    assume {:print "$track_local(57,4,1):", $t1} $t1 == $t1;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:294:9+56
    assume {:print "$at(2,13715,13771)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,13715,13771)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,4):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t3 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:295:25+13
    assume {:print "$at(2,13797,13810)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t3 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,13797,13810)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,4):", $t2} $t2 == $t2;
        goto L2;
    }

    // $t4 := vesting::get_beneficiary($t3, $t1) on_abort goto L2 with $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:295:9+86
    call $t4 := $1_vesting_get_beneficiary($t3, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,13781,13867)"} true;
        $t2 := $abort_code;
        assume {:print "$track_abort(57,4):", $t2} $t2 == $t2;
        goto L2;
    }

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:295:9+86
    assume {:print "$track_return(57,4,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:296:5+1
    assume {:print "$at(2,13872,13873)"} true;
L1:

    // assert Not(Not(exists[@104]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:24:9+61
    assume {:print "$at(3,811,872)"} true;
    assert {:msg "assert_failed(3,811,872): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#104, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:24:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:296:5+1
    assume {:print "$at(2,13872,13873)"} true;
L2:

    // assert Not(exists[@104]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:23:5+160
    assume {:print "$at(3,718,878)"} true;
    assert {:msg "assert_failed(3,718,878): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#104, $t0);

    // abort($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:23:5+160
    $abort_code := $t2;
    $abort_flag := true;
    return;

}

// fun vesting::vesting_schedule [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:346:5+260
procedure {:timeLimit 200} $1_vesting_vesting_schedule$verify(_$t0: int) returns ($ret0: $1_vesting_VestingSchedule)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_VestingSchedule;
    var $t0: int;
    var $temp_0'$1_vesting_VestingSchedule': $1_vesting_VestingSchedule;
    var $temp_0'address': int;
    var $1_vesting_VestingContract_$memory#57: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:346:5+1
    assume {:print "$at(2,16253,16254)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:346:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @57 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:346:5+1
    $1_vesting_VestingContract_$memory#57 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:346:5+1
    assume {:print "$track_local(57,38,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:347:9+56
    assume {:print "$at(2,16368,16424)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,16368,16424)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,38):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:348:9+13
    assume {:print "$at(2,16434,16447)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,16434,16447)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,38):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.vesting_schedule($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:348:9+73
    $t3 := $vesting_schedule#$1_vesting_VestingContract($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:348:9+73
    assume {:print "$track_return(57,38,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:349:5+1
    assume {:print "$at(2,16512,16513)"} true;
L1:

    // assert Not(Not(exists[@57]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:44:9+61
    assume {:print "$at(3,1500,1561)"} true;
    assert {:msg "assert_failed(3,1500,1561): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#57, $t0);

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:44:9+61
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:349:5+1
    assume {:print "$at(2,16512,16513)"} true;
L2:

    // assert Not(exists[@57]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:43:5+151
    assume {:print "$at(3,1416,1567)"} true;
    assert {:msg "assert_failed(3,1416,1567): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#57, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:43:5+151
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::create_vesting_contract_account [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1075
procedure {:timeLimit 200} $1_vesting_create_vesting_contract_account$verify(_$t0: $signer, _$t1: Vec (int)) returns ($ret0: $signer, $ret1: $1_account_SignerCapability)
{
    // declare local variables
    var $t2: int;
    var $t3: $signer;
    var $t4: $Mutation ($1_vesting_AdminStore);
    var $t5: Vec (int);
    var $t6: $1_account_SignerCapability;
    var $t7: int;
    var $t8: $1_vesting_AdminStore;
    var $t9: Vec (int);
    var $t10: Vec (int);
    var $t11: Vec (int);
    var $t12: Vec (int);
    var $t13: Vec (int);
    var $t14: int;
    var $t15: bool;
    var $t16: $1_account_Account;
    var $t17: $1_account_Account;
    var $t18: Vec (int);
    var $t19: int;
    var $t20: int;
    var $t21: $Mutation ($1_vesting_AdminStore);
    var $t22: int;
    var $t23: $Mutation (Vec (int));
    var $t24: int;
    var $t25: Vec (int);
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: $Mutation (int);
    var $t30: $Mutation (Vec (int));
    var $t31: Vec (int);
    var $t32: $Mutation (Vec (int));
    var $t33: Vec (int);
    var $t34: int;
    var $t35: int;
    var $t36: $1_account_Account;
    var $t37: Vec (int);
    var $t38: $signer;
    var $t39: $1_account_SignerCapability;
    var $t40: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t41: int;
    var $t42: $1_account_Account;
    var $t43: $1_account_Account;
    var $t0: $signer;
    var $t1: Vec (int);
    var $temp_0'$1_account_SignerCapability': $1_account_SignerCapability;
    var $temp_0'$1_vesting_AdminStore': $1_vesting_AdminStore;
    var $temp_0'signer': $signer;
    var $temp_0'vec'u8'': Vec (int);
    var $1_vesting_AdminStore_$memory#98: $Memory $1_vesting_AdminStore;
    var $1_account_Account_$memory#99: $Memory $1_account_Account;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume {:print "$at(2,42620,42621)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume $IsValid'vec'u8''($t1);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<vesting::AdminStore>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_AdminStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_AdminStore_$memory, $a_0);
    ($IsValid'$1_vesting_AdminStore'($rsc))));

    // assume Identical($t7, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:316:9+43
    assume {:print "$at(3,12878,12921)"} true;
    assume ($t7 == $1_signer_$address_of($t0));

    // assume Identical($t8, global<vesting::AdminStore>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:317:9+49
    assume {:print "$at(3,12930,12979)"} true;
    assume ($t8 == $ResourceValue($1_vesting_AdminStore_$memory, $t7));

    // assume Identical($t9, bcs::$to_bytes<address>($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:318:9+37
    assume {:print "$at(3,12988,13025)"} true;
    assume ($t9 == $1_bcs_$to_bytes'address'($t7));

    // assume Identical($t10, bcs::$to_bytes<u64>(select vesting::AdminStore.nonce($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:319:9+45
    assume {:print "$at(3,13034,13079)"} true;
    assume ($t10 == $1_bcs_$to_bytes'u64'($nonce#$1_vesting_AdminStore($t8)));

    // assume Identical($t11, ConcatVec<u8>($t9, $t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:321:9+32
    assume {:print "$at(3,13089,13121)"} true;
    assume ($t11 == ConcatVec($t9, $t10));

    // assume Identical($t12, ConcatVec<u8>($t11, [97, 112, 116, 111, 115, 95, 102, 114, 97, 109, 101, 119, 111, 114, 107, 58, 58, 118, 101, 115, 116, 105, 110, 103])) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:322:9+46
    assume {:print "$at(3,13130,13176)"} true;
    assume ($t12 == ConcatVec($t11, ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(97, 112, 116, 111), MakeVec4(115, 95, 102, 114)), MakeVec4(97, 109, 101, 119)), MakeVec4(111, 114, 107, 58)), MakeVec4(58, 118, 101, 115)), MakeVec4(116, 105, 110, 103))));

    // assume Identical($t13, ConcatVec<u8>($t12, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:323:9+49
    assume {:print "$at(3,13185,13234)"} true;
    assume ($t13 == ConcatVec($t12, $t1));

    // assume Identical($t14, account::spec_create_resource_address($t7, $t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:325:9+75
    assume {:print "$at(3,13244,13319)"} true;
    assume ($t14 == $1_account_spec_create_resource_address($t7, $t13));

    // assume Identical($t15, account::$exists_at($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:329:9+43
    assume {:print "$at(3,13483,13526)"} true;
    assume ($t15 == $1_account_$exists_at($1_account_Account_$memory, $t14));

    // assume Identical($t16, global<account::Account>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:332:9+50
    assume {:print "$at(3,13658,13708)"} true;
    assume ($t16 == $ResourceValue($1_account_Account_$memory, $t14));

    // assume Identical($t17, global<account::Account>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:464:9+45
    assume {:print "$at(73,22404,22449)"} true;
    assume ($t17 == $ResourceValue($1_account_Account_$memory, $t14));

    // assume Identical($t18, bcs::$to_bytes<address>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t18 == $1_bcs_$to_bytes'address'($t14));

    // @99 := save_mem(account::Account) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume {:print "$at(2,42620,42621)"} true;
    $1_account_Account_$memory#99 := $1_account_Account_$memory;

    // @100 := save_mem(coin::CoinStore<aptos_coin::AptosCoin>) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100 := $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory;

    // @98 := save_mem(vesting::AdminStore) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    $1_vesting_AdminStore_$memory#98 := $1_vesting_AdminStore_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume {:print "$track_local(57,6,0):", $t0} $t0 == $t0;

    // trace_local[contract_creation_seed]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:915:5+1
    assume {:print "$track_local(57,6,1):", $t1} $t1 == $t1;

    // $t19 := signer::address_of($t0) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:919:57+25
    assume {:print "$at(2,42837,42862)"} true;
    call $t19 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,42837,42862)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t21 := borrow_global<vesting::AdminStore>($t19) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:919:27+17
    if (!$ResourceExists($1_vesting_AdminStore_$memory, $t19)) {
        call $ExecFailureAbort();
    } else {
        $t21 := $Mutation($Global($t19), EmptyVec(), $ResourceValue($1_vesting_AdminStore_$memory, $t19));
    }
    if ($abort_flag) {
        assume {:print "$at(2,42807,42824)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // trace_local[admin_store]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:919:13+11
    $temp_0'$1_vesting_AdminStore' := $Dereference($t21);
    assume {:print "$track_local(57,6,4):", $temp_0'$1_vesting_AdminStore'} $temp_0'$1_vesting_AdminStore' == $temp_0'$1_vesting_AdminStore';

    // $t22 := signer::address_of($t0) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:920:35+25
    assume {:print "$at(2,42899,42924)"} true;
    call $t22 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,42899,42924)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t5 := bcs::to_bytes<address>($t22) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:920:20+41
    call $t5 := $1_bcs_to_bytes'address'($t22);
    if ($abort_flag) {
        assume {:print "$at(2,42884,42925)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // trace_local[seed]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:920:13+4
    assume {:print "$track_local(57,6,5):", $t5} $t5 == $t5;

    // $t23 := borrow_local($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:921:24+9
    assume {:print "$at(2,42950,42959)"} true;
    $t23 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t24 := get_field<vesting::AdminStore>.nonce($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:921:49+18
    $t24 := $nonce#$1_vesting_AdminStore($Dereference($t21));

    // $t25 := bcs::to_bytes<u64>($t24) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:921:35+33
    call $t25 := $1_bcs_to_bytes'u64'($t24);
    if ($abort_flag) {
        assume {:print "$at(2,42961,42994)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // vector::append<u8>($t23, $t25) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:921:9+60
    call $t23 := $1_vector_append'u8'($t23, $t25);
    if ($abort_flag) {
        assume {:print "$at(2,42935,42995)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // write_back[LocalRoot($t5)@]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:921:9+60
    $t5 := $Dereference($t23);

    // trace_local[seed]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:921:9+60
    assume {:print "$track_local(57,6,5):", $t5} $t5 == $t5;

    // $t26 := get_field<vesting::AdminStore>.nonce($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:29+17
    assume {:print "$at(2,43025,43042)"} true;
    $t26 := $nonce#$1_vesting_AdminStore($Dereference($t21));

    // $t27 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:49+1
    $t27 := 1;
    assume $IsValid'u64'($t27);

    // $t28 := +($t26, $t27) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:47+1
    call $t28 := $AddU64($t26, $t27);
    if ($abort_flag) {
        assume {:print "$at(2,43043,43044)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // $t29 := borrow_field<vesting::AdminStore>.nonce($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:9+17
    $t29 := $ChildMutation($t21, 1, $nonce#$1_vesting_AdminStore($Dereference($t21)));

    // write_ref($t29, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:9+41
    $t29 := $UpdateMutation($t29, $t28);

    // write_back[Reference($t21).nonce (u64)]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:9+41
    $t21 := $UpdateMutation($t21, $Update'$1_vesting_AdminStore'_nonce($Dereference($t21), $Dereference($t29)));

    // write_back[vesting::AdminStore@]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:922:9+41
    $1_vesting_AdminStore_$memory := $ResourceUpdate($1_vesting_AdminStore_$memory, $GlobalLocationAddress($t21),
        $Dereference($t21));

    // $t30 := borrow_local($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:926:24+9
    assume {:print "$at(2,43254,43263)"} true;
    $t30 := $Mutation($Local(5), EmptyVec(), $t5);

    // $t31 := [97, 112, 116, 111, 115, 95, 102, 114, 97, 109, 101, 119, 111, 114, 107, 58, 58, 118, 101, 115, 116, 105, 110, 103] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:926:35+17
    $t31 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(97, 112, 116, 111), MakeVec4(115, 95, 102, 114)), MakeVec4(97, 109, 101, 119)), MakeVec4(111, 114, 107, 58)), MakeVec4(58, 118, 101, 115)), MakeVec4(116, 105, 110, 103));
    assume $IsValid'vec'u8''($t31);

    // vector::append<u8>($t30, $t31) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:926:9+44
    call $t30 := $1_vector_append'u8'($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,43239,43283)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // write_back[LocalRoot($t5)@]($t30) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:926:9+44
    $t5 := $Dereference($t30);

    // trace_local[seed]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:926:9+44
    assume {:print "$track_local(57,6,5):", $t5} $t5 == $t5;

    // $t32 := borrow_local($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:927:24+9
    assume {:print "$at(2,43308,43317)"} true;
    $t32 := $Mutation($Local(5), EmptyVec(), $t5);

    // vector::append<u8>($t32, $t1) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:927:9+49
    call $t32 := $1_vector_append'u8'($t32, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,43293,43342)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // write_back[LocalRoot($t5)@]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:927:9+49
    $t5 := $Dereference($t32);

    // trace_local[seed]($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:927:9+49
    assume {:print "$track_local(57,6,5):", $t5} $t5 == $t5;

    // $t33 := move($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:929:84+4
    assume {:print "$at(2,43428,43432)"} true;
    $t33 := $t5;

    // assume Identical($t34, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:396:9+45
    assume {:print "$at(73,19766,19811)"} true;
    assume ($t34 == $1_signer_$address_of($t0));

    // assume Identical($t35, account::spec_create_resource_address($t34, $t33)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:397:9+68
    assume {:print "$at(73,19820,19888)"} true;
    assume ($t35 == $1_account_spec_create_resource_address($t34, $t33));

    // assume Identical($t36, global<account::Account>($t35)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:464:9+45
    assume {:print "$at(73,22404,22449)"} true;
    assume ($t36 == $ResourceValue($1_account_Account_$memory, $t35));

    // assume Identical($t37, bcs::$to_bytes<address>($t35)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:34:9+45
    assume {:print "$at(73,1495,1540)"} true;
    assume ($t37 == $1_bcs_$to_bytes'address'($t35));

    // ($t38, $t39) := account::create_resource_account($t0, $t33) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:929:44+45
    assume {:print "$at(2,43388,43433)"} true;
    call $t38,$t39 := $1_account_create_resource_account($t0, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,43388,43433)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // trace_local[signer_cap]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:929:30+10
    assume {:print "$track_local(57,6,6):", $t39} $t39 == $t39;

    // trace_local[account_signer]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:929:14+14
    assume {:print "$track_local(57,6,3):", $t38} $t38 == $t38;

    // assume Identical($t40, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t40 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t41, signer::$address_of($t38)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:342:9+47
    assume {:print "$at(95,14541,14588)"} true;
    assume ($t41 == $1_signer_$address_of($t38));

    // assume Identical($t42, global<account::Account>($t41)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:343:9+49
    assume {:print "$at(95,14597,14646)"} true;
    assume ($t42 == $ResourceValue($1_account_Account_$memory, $t41));

    // coin::register<aptos_coin::AptosCoin>($t38) on_abort goto L2 with $t20 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:932:9+42
    assume {:print "$at(2,43608,43650)"} true;
    call $1_coin_register'$1_aptos_coin_AptosCoin'($t38);
    if ($abort_flag) {
        assume {:print "$at(2,43608,43650)"} true;
        $t20 := $abort_code;
        assume {:print "$track_abort(57,6):", $t20} $t20 == $t20;
        goto L2;
    }

    // trace_return[0]($t38) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:934:9+28
    assume {:print "$at(2,43661,43689)"} true;
    assume {:print "$track_return(57,6,0):", $t38} $t38 == $t38;

    // trace_return[1]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:934:9+28
    assume {:print "$track_return(57,6,1):", $t39} $t39 == $t39;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:935:5+1
    assume {:print "$at(2,43694,43695)"} true;
L1:

    // assume Identical($t43, global<account::Account>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:333:9+60
    assume {:print "$at(3,13717,13777)"} true;
    assume ($t43 == $ResourceValue($1_account_Account_$memory, $t14));

    // assert Not(Not(exists[@98]<vesting::AdminStore>($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:326:9+42
    assume {:print "$at(3,13328,13370)"} true;
    assert {:msg "assert_failed(3,13328,13370): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_AdminStore_$memory#98, $t7);

    // assert Not(Neq<num>(Len<u8>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 32)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:327:9+44
    assume {:print "$at(3,13379,13423)"} true;
    assert {:msg "assert_failed(3,13379,13423): function does not abort under this condition"}
      !!$IsEqual'num'(LenVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0))), 32);

    // assert Not(Gt(Add(select vesting::AdminStore.nonce($t8), 1), 18446744073709551615)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:328:9+42
    assume {:print "$at(3,13432,13474)"} true;
    assert {:msg "assert_failed(3,13432,13474): function does not abort under this condition"}
      !(($nonce#$1_vesting_AdminStore($t8) + 1) > 18446744073709551615);

    // assert Not(And($t15, Neq<num>(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($t17)))), 0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:465:9+60
    assume {:print "$at(73,22458,22518)"} true;
    assert {:msg "assert_failed(73,22458,22518): function does not abort under this condition"}
      !($t15 && !$IsEqual'num'(LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($t17)))), 0));

    // assert Not(And($t15, Neq<u64>(select account::Account.sequence_number($t17), 0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:466:9+39
    assume {:print "$at(73,22527,22566)"} true;
    assert {:msg "assert_failed(73,22527,22566): function does not abort under this condition"}
      !($t15 && !$IsEqual'u64'($sequence_number#$1_account_Account($t17), 0));

    // assert Not(And(Not($t15), Neq<num>(Len<u8>($t18), 32))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:35:9+40
    assume {:print "$at(73,1549,1589)"} true;
    assert {:msg "assert_failed(73,1549,1589): function does not abort under this condition"}
      !(!$t15 && !$IsEqual'num'(LenVec($t18), 32));

    // assert Not(And(Not($t15), exists[@99]<account::Account>($t14))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:36:9+32
    assume {:print "$at(73,1598,1630)"} true;
    assert {:msg "assert_failed(73,1598,1630): function does not abort under this condition"}
      !(!$t15 && $ResourceExists($1_account_Account_$memory#99, $t14));

    // assert Not(And(Not(exists[@100]<coin::CoinStore<aptos_coin::AptosCoin>>($t14)), Not(type_info::spec_is_struct[]<aptos_coin::AptosCoin>()))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:334:9+115
    assume {:print "$at(3,13786,13901)"} true;
    assert {:msg "assert_failed(3,13786,13901): function does not abort under this condition"}
      !(!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100, $t14) && !true);

    // assert Not(And(And(Not(exists[@100]<coin::CoinStore<aptos_coin::AptosCoin>>($t14)), $t15), Gt(Add(select account::Account.guid_creation_num($t16), 2), 18446744073709551615))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:335:9+106
    assume {:print "$at(3,13910,14016)"} true;
    assert {:msg "assert_failed(3,13910,14016): function does not abort under this condition"}
      !((!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100, $t14) && $t15) && (($guid_creation_num#$1_account_Account($t16) + 2) > 18446744073709551615));

    // assert Not(And(And(Not(exists[@100]<coin::CoinStore<aptos_coin::AptosCoin>>($t14)), $t15), Ge(Add(select account::Account.guid_creation_num($t16), 2), 1125899906842624))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:336:9+130
    assume {:print "$at(3,14025,14155)"} true;
    assert {:msg "assert_failed(3,14025,14155): function does not abort under this condition"}
      !((!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100, $t14) && $t15) && (($guid_creation_num#$1_account_Account($t16) + 2) >= 1125899906842624));

    // assert And(And(exists<account::Account>($t14), Eq<vector<u8>>(select account::Account.authentication_key($t43), [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])), exists<coin::CoinStore<aptos_coin::AptosCoin>>($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:337:9+175
    assume {:print "$at(3,14164,14339)"} true;
    assert {:msg "assert_failed(3,14164,14339): post-condition does not hold"}
      (($ResourceExists($1_account_Account_$memory, $t14) && $IsEqual'vec'u8''($authentication_key#$1_account_Account($t43), ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)))) && $ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t14));

    // assert Eq<address>(signer::$address_of($t38), $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:339:9+54
    assume {:print "$at(3,14348,14402)"} true;
    assert {:msg "assert_failed(3,14348,14402): post-condition does not hold"}
      $IsEqual'address'($1_signer_$address_of($t38), $t14);

    // assert Eq<address>(select account::SignerCapability.account($t39), $t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:340:9+42
    assume {:print "$at(3,14411,14453)"} true;
    assert {:msg "assert_failed(3,14411,14453): post-condition does not hold"}
      $IsEqual'address'($account#$1_account_SignerCapability($t39), $t14);

    // return ($t38, $t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:340:9+42
    $ret0 := $t38;
    $ret1 := $t39;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:935:5+1
    assume {:print "$at(2,43694,43695)"} true;
L2:

    // assert Or(Or(Or(Or(Or(Or(Or(Or(Or(Not(exists[@98]<vesting::AdminStore>($t7)), Neq<num>(Len<u8>([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]), 32)), Gt(Add(select vesting::AdminStore.nonce($t8), 1), 18446744073709551615)), And($t15, Neq<num>(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($t17)))), 0))), And($t15, Neq<u64>(select account::Account.sequence_number($t17), 0))), And(Not($t15), Neq<num>(Len<u8>($t18), 32))), And(Not($t15), exists[@99]<account::Account>($t14))), And(Not(exists[@100]<coin::CoinStore<aptos_coin::AptosCoin>>($t14)), Not(type_info::spec_is_struct[]<aptos_coin::AptosCoin>()))), And(And(Not(exists[@100]<coin::CoinStore<aptos_coin::AptosCoin>>($t14)), $t15), Gt(Add(select account::Account.guid_creation_num($t16), 2), 18446744073709551615))), And(And(Not(exists[@100]<coin::CoinStore<aptos_coin::AptosCoin>>($t14)), $t15), Ge(Add(select account::Account.guid_creation_num($t16), 2), 1125899906842624))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:312:5+1731
    assume {:print "$at(3,12728,14459)"} true;
    assert {:msg "assert_failed(3,12728,14459): abort not covered by any of the `aborts_if` clauses"}
      (((((((((!$ResourceExists($1_vesting_AdminStore_$memory#98, $t7) || !$IsEqual'num'(LenVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(0, 0, 0, 0), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0)), MakeVec4(0, 0, 0, 0))), 32)) || (($nonce#$1_vesting_AdminStore($t8) + 1) > 18446744073709551615)) || ($t15 && !$IsEqual'num'(LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($t17)))), 0))) || ($t15 && !$IsEqual'u64'($sequence_number#$1_account_Account($t17), 0))) || (!$t15 && !$IsEqual'num'(LenVec($t18), 32))) || (!$t15 && $ResourceExists($1_account_Account_$memory#99, $t14))) || (!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100, $t14) && !true)) || ((!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100, $t14) && $t15) && (($guid_creation_num#$1_account_Account($t16) + 2) > 18446744073709551615))) || ((!$ResourceExists($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#100, $t14) && $t15) && (($guid_creation_num#$1_account_Account($t16) + 2) >= 1125899906842624)));

    // abort($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:312:5+1731
    $abort_code := $t20;
    $abort_flag := true;
    return;

}

// fun vesting::create_vesting_schedule [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+672
procedure {:timeLimit 200} $1_vesting_create_vesting_schedule$verify(_$t0: Vec ($1_fixed_point32_FixedPoint32), _$t1: int, _$t2: int) returns ($ret0: $1_vesting_VestingSchedule)
{
    // declare local variables
    var $t3: int;
    var $t4: int;
    var $t5: int;
    var $t6: bool;
    var $t7: int;
    var $t8: int;
    var $t9: int;
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: bool;
    var $t15: int;
    var $t16: int;
    var $t17: int;
    var $t18: $1_vesting_VestingSchedule;
    var $t0: Vec ($1_fixed_point32_FixedPoint32);
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_vesting_VestingSchedule': $1_vesting_VestingSchedule;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_fixed_point32_FixedPoint32'': Vec ($1_fixed_point32_FixedPoint32);
    var $1_timestamp_CurrentTimeMicroseconds_$memory#45: $Memory $1_timestamp_CurrentTimeMicroseconds;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume {:print "$at(2,20152,20153)"} true;
    assume $IsValid'vec'$1_fixed_point32_FixedPoint32''($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume $IsValid'u64'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume $IsValid'u64'($t2);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+672
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+672
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // @45 := save_mem(timestamp::CurrentTimeMicroseconds) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    $1_timestamp_CurrentTimeMicroseconds_$memory#45 := $1_timestamp_CurrentTimeMicroseconds_$memory;

    // trace_local[schedule]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume {:print "$track_local(57,7,0):", $t0} $t0 == $t0;

    // trace_local[start_timestamp_secs]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume {:print "$track_local(57,7,1):", $t1} $t1 == $t1;

    // trace_local[period_duration]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:418:5+1
    assume {:print "$track_local(57,7,2):", $t2} $t2 == $t2;

    // $t3 := vector::length<fixed_point32::FixedPoint32>($t0) on_abort goto L10 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:17+25
    assume {:print "$at(2,20334,20359)"} true;
    call $t3 := $1_vector_length'$1_fixed_point32_FixedPoint32'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,20334,20359)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,7):", $t4} $t4 == $t4;
        goto L10;
    }

    // $t5 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:45+1
    $t5 := 0;
    assume $IsValid'u64'($t5);

    // $t6 := >($t3, $t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:43+1
    call $t6 := $Gt($t3, $t5);

    // if ($t6) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:9+88
    if ($t6) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:9+88
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:9+88
    assume {:print "$at(2,20326,20414)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:72+23
L0:

    // $t7 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:72+23
    assume {:print "$at(2,20389,20412)"} true;
    $t7 := 2;
    assume $IsValid'u64'($t7);

    // $t8 := error::invalid_argument($t7) on_abort goto L10 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:48+48
    call $t8 := $1_error_invalid_argument($t7);
    if ($abort_flag) {
        assume {:print "$at(2,20365,20413)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,7):", $t4} $t4 == $t4;
        goto L10;
    }

    // trace_abort($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:9+88
    assume {:print "$at(2,20326,20414)"} true;
    assume {:print "$track_abort(57,7):", $t8} $t8 == $t8;

    // $t4 := move($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:9+88
    $t4 := $t8;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:423:9+88
    goto L10;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:17+15
    assume {:print "$at(2,20432,20447)"} true;
L2:

    // $t9 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:35+1
    assume {:print "$at(2,20450,20451)"} true;
    $t9 := 0;
    assume $IsValid'u64'($t9);

    // $t10 := >($t2, $t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:33+1
    call $t10 := $Gt($t2, $t9);

    // if ($t10) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:9+84
    if ($t10) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:9+84
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:9+84
    assume {:print "$at(2,20424,20508)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:62+29
L3:

    // $t11 := 3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:62+29
    assume {:print "$at(2,20477,20506)"} true;
    $t11 := 3;
    assume $IsValid'u64'($t11);

    // $t12 := error::invalid_argument($t11) on_abort goto L10 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:38+54
    call $t12 := $1_error_invalid_argument($t11);
    if ($abort_flag) {
        assume {:print "$at(2,20453,20507)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,7):", $t4} $t4 == $t4;
        goto L10;
    }

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:9+84
    assume {:print "$at(2,20424,20508)"} true;
    assume {:print "$track_abort(57,7):", $t12} $t12 == $t12;

    // $t4 := move($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:9+84
    $t4 := $t12;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:424:9+84
    goto L10;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:426:13+20
    assume {:print "$at(2,20539,20559)"} true;
L5:

    // $t13 := timestamp::now_seconds() on_abort goto L10 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:426:37+24
    assume {:print "$at(2,20563,20587)"} true;
    call $t13 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,20563,20587)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,7):", $t4} $t4 == $t4;
        goto L10;
    }

    // $t14 := >=($t1, $t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:426:34+2
    call $t14 := $Ge($t1, $t13);

    // if ($t14) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:425:9+142
    assume {:print "$at(2,20518,20660)"} true;
    if ($t14) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:425:9+142
L7:

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:425:9+142
    assume {:print "$at(2,20518,20660)"} true;
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:427:37+23
    assume {:print "$at(2,20625,20648)"} true;
L6:

    // $t15 := 6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:427:37+23
    assume {:print "$at(2,20625,20648)"} true;
    $t15 := 6;
    assume $IsValid'u64'($t15);

    // $t16 := error::invalid_argument($t15) on_abort goto L10 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:427:13+48
    call $t16 := $1_error_invalid_argument($t15);
    if ($abort_flag) {
        assume {:print "$at(2,20601,20649)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,7):", $t4} $t4 == $t4;
        goto L10;
    }

    // trace_abort($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:425:9+142
    assume {:print "$at(2,20518,20660)"} true;
    assume {:print "$track_abort(57,7):", $t16} $t16 == $t16;

    // $t4 := move($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:425:9+142
    $t4 := $t16;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:425:9+142
    goto L10;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:431:13+8
    assume {:print "$at(2,20701,20709)"} true;
L8:

    // $t17 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:434:33+1
    assume {:print "$at(2,20806,20807)"} true;
    $t17 := 0;
    assume $IsValid'u64'($t17);

    // $t18 := pack vesting::VestingSchedule($t0, $t1, $t2, $t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:430:9+147
    assume {:print "$at(2,20671,20818)"} true;
    $t18 := $1_vesting_VestingSchedule($t0, $t1, $t2, $t17);

    // trace_return[0]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:430:9+147
    assume {:print "$track_return(57,7,0):", $t18} $t18 == $t18;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:436:5+1
    assume {:print "$at(2,20823,20824)"} true;
L9:

    // assert Not(Not(Gt(Len<fixed_point32::FixedPoint32>($t0), 0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:131:9+31
    assume {:print "$at(3,6115,6146)"} true;
    assert {:msg "assert_failed(3,6115,6146): function does not abort under this condition"}
      !!(LenVec($t0) > 0);

    // assert Not(Not(Gt($t2, 0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:132:9+33
    assume {:print "$at(3,6155,6188)"} true;
    assert {:msg "assert_failed(3,6155,6188): function does not abort under this condition"}
      !!($t2 > 0);

    // assert Not(Not(exists[@45]<timestamp::CurrentTimeMicroseconds>(0x1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:133:9+72
    assume {:print "$at(3,6197,6269)"} true;
    assert {:msg "assert_failed(3,6197,6269): function does not abort under this condition"}
      !!$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory#45, 1);

    // assert Not(Not(Ge($t1, timestamp::$now_seconds[@45]()))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:134:9+62
    assume {:print "$at(3,6278,6340)"} true;
    assert {:msg "assert_failed(3,6278,6340): function does not abort under this condition"}
      !!($t1 >= $1_timestamp_$now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory#45));

    // return $t18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:134:9+62
    $ret0 := $t18;
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:436:5+1
    assume {:print "$at(2,20823,20824)"} true;
L10:

    // assert Or(Or(Or(Not(Gt(Len<fixed_point32::FixedPoint32>($t0), 0)), Not(Gt($t2, 0))), Not(exists[@45]<timestamp::CurrentTimeMicroseconds>(0x1))), Not(Ge($t1, timestamp::$now_seconds[@45]()))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:126:5+399
    assume {:print "$at(3,5947,6346)"} true;
    assert {:msg "assert_failed(3,5947,6346): abort not covered by any of the `aborts_if` clauses"}
      (((!(LenVec($t0) > 0) || !($t2 > 0)) || !$ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory#45, 1)) || !($t1 >= $1_timestamp_$now_seconds($1_timestamp_CurrentTimeMicroseconds_$memory#45)));

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:126:5+399
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::distribute_many [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+420
procedure {:timeLimit 200} $1_vesting_distribute_many$verify(_$t0: Vec (int)) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: Vec (int);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t0: Vec (int);
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume {:print "$at(2,31507,31508)"} true;
    assume $IsValid'vec'address''($t0);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<aptos_account::DirectTransferConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0);
    ($IsValid'$1_aptos_account_DirectTransferConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+420
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+420
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+420
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+420
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[contract_addresses]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:664:5+1
    assume {:print "$track_local(57,9,0):", $t0} $t0 == $t0;

    // $t4 := vector::length<address>($t0) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:665:19+35
    assume {:print "$at(2,31622,31657)"} true;
    call $t4 := $1_vector_length'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,31622,31657)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,9):", $t5} $t5 == $t5;
        goto L9;
    }

    // $t6 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:24+1
    assume {:print "$at(2,31683,31684)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := !=($t4, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:21+2
    $t7 := !$IsEqual'u64'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:9+72
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:9+72
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:9+72
    assume {:print "$at(2,31668,31740)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:51+28
L0:

    // $t8 := 16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:51+28
    assume {:print "$at(2,31710,31738)"} true;
    $t8 := 16;
    assume $IsValid'u64'($t8);

    // $t9 := error::invalid_argument($t8) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:27+53
    call $t9 := $1_error_invalid_argument($t8);
    if ($abort_flag) {
        assume {:print "$at(2,31686,31739)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,9):", $t5} $t5 == $t5;
        goto L9;
    }

    // trace_abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:9+72
    assume {:print "$at(2,31668,31740)"} true;
    assume {:print "$track_abort(57,9):", $t9} $t9 == $t9;

    // $t5 := move($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:9+72
    $t5 := $t9;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:667:9+72
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:669:30+19
    assume {:print "$at(2,31772,31791)"} true;
L2:

    // trace_local[v#245]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:669:9+169
    assume {:print "$at(2,31751,31920)"} true;
    assume {:print "$track_local(57,9,3):", $t0} $t0 == $t0;

    // $t10 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:17+1
    assume {:print "$at(18,9246,9247)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_local[i#247]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:13+1
    assume {:print "$track_local(57,9,1):", $t10} $t10 == $t10;

    // $t11 := vector::length<address>($t0) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:19+9
    assume {:print "$at(18,9267,9276)"} true;
    call $t11 := $1_vector_length'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(18,9267,9276)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,9):", $t5} $t5 == $t5;
        goto L9;
    }

    // trace_local[len#248]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:13+3
    assume {:print "$track_local(57,9,2):", $t11} $t11 == $t11;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
L6:

    // $t1 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t1);

    // $t12 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t12;

    // assume WellFormed($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t13;

    // assume WellFormed($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t13);

    // $t14 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t14;

    // assume WellFormed($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t14);

    // $t15 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t15;

    // assume WellFormed($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t15);

    // trace_local[i#247]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$info(): enter loop, variable(s) i#247 havocked and reassigned"} true;
    assume {:print "$track_local(57,9,1):", $t1} $t1 == $t1;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume !$abort_flag;

    // $t12 := <($t1, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:18+1
    call $t12 := $Lt($t1, $t11);

    // if ($t12) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
L4:

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:22+1
    assume {:print "$at(18,9325,9326)"} true;
L5:

    // $t13 := vector::borrow<address>($t0, $t1) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:15+12
    assume {:print "$at(18,9318,9330)"} true;
    call $t13 := $1_vector_borrow'address'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(18,9318,9330)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,9):", $t5} $t5 == $t5;
        goto L9;
    }

    // vesting::distribute($t13) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:671:13+28
    assume {:print "$at(2,31880,31908)"} true;
    call $1_vesting_distribute($t13);
    if ($abort_flag) {
        assume {:print "$at(2,31880,31908)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,9):", $t5} $t5 == $t5;
        goto L9;
    }

    // $t14 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:21+1
    assume {:print "$at(18,9353,9354)"} true;
    $t14 := 1;
    assume $IsValid'u64'($t14);

    // $t15 := +($t1, $t14) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:19+1
    call $t15 := $AddU64($t1, $t14);
    if ($abort_flag) {
        assume {:print "$at(18,9351,9352)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,9):", $t5} $t5 == $t5;
        goto L9;
    }

    // trace_local[i#247]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+1
    assume {:print "$track_local(57,9,1):", $t15} $t15 == $t15;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+9
    goto L7;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:672:11+1
    assume {:print "$at(2,31920,31921)"} true;
L3:

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:672:11+1
    assume {:print "$at(2,31920,31921)"} true;
    goto L8;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:672:11+1
    // Loop invariant checking block for the loop started with header: L6
L7:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:672:11+1
    assume {:print "$at(2,31920,31921)"} true;
    assume false;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:673:5+1
    assume {:print "$at(2,31926,31927)"} true;
L8:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:673:5+1
    assume {:print "$at(2,31926,31927)"} true;
    assert {:msg "assert_failed(2,31926,31927): function does not abort under this condition"}
      !false;

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:673:5+1
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:673:5+1
L9:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:673:5+1
    assume {:print "$at(2,31926,31927)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun vesting::get_beneficiary [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+287
procedure {:inline 1} $1_vesting_get_beneficiary(_$t0: $1_vesting_VestingContract, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: Table int (int);
    var $t4: bool;
    var $t5: int;
    var $t6: Table int (int);
    var $t0: $1_vesting_VestingContract;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+1
    assume {:print "$at(2,45284,45285)"} true;
    assume {:print "$track_local(57,10,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+1
    assume {:print "$track_local(57,10,1):", $t1} $t1 == $t1;

    // $t3 := get_field<vesting::VestingContract>.beneficiaries($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:38+23
    assume {:print "$at(2,45402,45425)"} true;
    $t3 := $beneficiaries#$1_vesting_VestingContract($t0);

    // $t4 := simple_map::contains_key<address, address>($t3, $t1) on_abort goto L4 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:13+63
    call $t4 := $1_simple_map_contains_key'address_address'($t3, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,45377,45440)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:967:34+8
    assume {:print "$at(2,45477,45485)"} true;
L1:

    // $t6 := get_field<vesting::VestingContract>.beneficiaries($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:967:33+23
    assume {:print "$at(2,45476,45499)"} true;
    $t6 := $beneficiaries#$1_vesting_VestingContract($t0);

    // $t2 := simple_map::borrow<address, address>($t6, $t1) on_abort goto L4 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:967:14+57
    call $t2 := $1_simple_map_borrow'address_address'($t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,45457,45514)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    assume {:print "$at(2,45373,45565)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
L0:

    // $t2 := $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    assume {:print "$at(2,45373,45565)"} true;
    $t2 := $t1;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
L2:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    assume {:print "$at(2,45373,45565)"} true;
    assume {:print "$track_return(57,10,0):", $t2} $t2 == $t2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:971:5+1
    assume {:print "$at(2,45570,45571)"} true;
L3:

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:971:5+1
    assume {:print "$at(2,45570,45571)"} true;
    $ret0 := $t2;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:971:5+1
L4:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:971:5+1
    assume {:print "$at(2,45570,45571)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun vesting::get_beneficiary [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+287
procedure {:timeLimit 200} $1_vesting_get_beneficiary$verify(_$t0: $1_vesting_VestingContract, _$t1: int) returns ($ret0: int)
{
    // declare local variables
    var $t2: int;
    var $t3: Table int (int);
    var $t4: bool;
    var $t5: int;
    var $t6: Table int (int);
    var $t0: $1_vesting_VestingContract;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume And(WellFormed($t0), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t0)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+1
    assume {:print "$at(2,45284,45285)"} true;
    assume ($IsValid'$1_vesting_VestingContract'($t0) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), j)) ==> $IsEqual'num'(i, j))))))))));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+1
    assume $IsValid'address'($t1);

    // trace_local[contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+1
    assume {:print "$track_local(57,10,0):", $t0} $t0 == $t0;

    // trace_local[shareholder]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:965:5+1
    assume {:print "$track_local(57,10,1):", $t1} $t1 == $t1;

    // $t3 := get_field<vesting::VestingContract>.beneficiaries($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:38+23
    assume {:print "$at(2,45402,45425)"} true;
    $t3 := $beneficiaries#$1_vesting_VestingContract($t0);

    // $t4 := simple_map::contains_key<address, address>($t3, $t1) on_abort goto L4 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:13+63
    call $t4 := $1_simple_map_contains_key'address_address'($t3, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,45377,45440)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:967:34+8
    assume {:print "$at(2,45477,45485)"} true;
L1:

    // $t6 := get_field<vesting::VestingContract>.beneficiaries($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:967:33+23
    assume {:print "$at(2,45476,45499)"} true;
    $t6 := $beneficiaries#$1_vesting_VestingContract($t0);

    // $t2 := simple_map::borrow<address, address>($t6, $t1) on_abort goto L4 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:967:14+57
    call $t2 := $1_simple_map_borrow'address_address'($t6, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,45457,45514)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,10):", $t5} $t5 == $t5;
        goto L4;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    assume {:print "$at(2,45373,45565)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
L0:

    // $t2 := $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    assume {:print "$at(2,45373,45565)"} true;
    $t2 := $t1;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
L2:

    // trace_return[0]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:966:9+192
    assume {:print "$at(2,45373,45565)"} true;
    assume {:print "$track_return(57,10,0):", $t2} $t2 == $t2;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:971:5+1
    assume {:print "$at(2,45570,45571)"} true;
L3:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:366:9+16
    assume {:print "$at(3,15410,15426)"} true;
    assert {:msg "assert_failed(3,15410,15426): function does not abort under this condition"}
      !false;

    // return $t2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:366:9+16
    $ret0 := $t2;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:971:5+1
    assume {:print "$at(2,45570,45571)"} true;
L4:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:365:5+112
    assume {:print "$at(3,15320,15432)"} true;
    assert {:msg "assert_failed(3,15320,15432): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:365:5+112
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun vesting::get_role_holder [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+456
procedure {:inline 1} $1_vesting_get_role_holder(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: Table int (int);
    var $t3: Table int (int);
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_vesting_VestingAccountManagement;
    var $t9: Table int (int);
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'': Table int (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // assume Identical($t3, select vesting::VestingAccountManagement.roles(global<vesting::VestingAccountManagement>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:298:9+69
    assume {:print "$at(3,12239,12308)"} true;
    assume ($t3 == $roles#$1_vesting_VestingAccountManagement($ResourceValue($1_vesting_VestingAccountManagement_$memory, $t0)));

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume {:print "$at(2,41215,41216)"} true;
    assume {:print "$track_local(57,11,0):", $t0} $t0 == $t0;

    // trace_local[role]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume {:print "$track_local(57,11,1):", $t1} $t1 == $t1;

    // $t4 := exists<vesting::VestingAccountManagement>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:17+6
    assume {:print "$at(2,41344,41350)"} true;
    $t4 := $ResourceExists($1_vesting_VestingAccountManagement_$memory, $t0);

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    assume {:print "$at(2,41336,41444)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:86+29
L0:

    // $t5 := 13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:86+29
    assume {:print "$at(2,41413,41442)"} true;
    $t5 := 13;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:69+47
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(2,41396,41443)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    assume {:print "$at(2,41336,41444)"} true;
    assume {:print "$track_abort(57,11):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    $t7 := $t6;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:62+16
    assume {:print "$at(2,41507,41523)"} true;
L2:

    // $t8 := get_global<vesting::VestingAccountManagement>($t0) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:22+13
    assume {:print "$at(2,41467,41480)"} true;
    if (!$ResourceExists($1_vesting_VestingAccountManagement_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_vesting_VestingAccountManagement_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,41467,41480)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t9 := get_field<vesting::VestingAccountManagement>.roles($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:21+64
    $t9 := $roles#$1_vesting_VestingAccountManagement($t8);

    // trace_local[roles]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:13+5
    assume {:print "$track_local(57,11,2):", $t9} $t9 == $t9;

    // $t10 := simple_map::contains_key<string::String, address>($t9, $t1) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:17+38
    assume {:print "$at(2,41548,41586)"} true;
    call $t10 := $1_simple_map_contains_key'$1_string_String_address'($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,41548,41586)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // if ($t10) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    if ($t10) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    assume {:print "$at(2,41540,41622)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
L3:

    // $t11 := 14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:74+15
    assume {:print "$at(2,41605,41620)"} true;
    $t11 := 14;
    assume $IsValid'u64'($t11);

    // $t12 := error::not_found($t11) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:57+33
    call $t12 := $1_error_not_found($t11);
    if ($abort_flag) {
        assume {:print "$at(2,41588,41621)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    assume {:print "$at(2,41540,41622)"} true;
    assume {:print "$track_abort(57,11):", $t12} $t12 == $t12;

    // $t7 := move($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    $t7 := $t12;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:897:29+5
    assume {:print "$at(2,41652,41657)"} true;
L5:

    // $t13 := simple_map::borrow<string::String, address>($t9, $t1) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:897:10+32
    assume {:print "$at(2,41633,41665)"} true;
    call $t13 := $1_simple_map_borrow'$1_string_String_address'($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,41633,41665)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_return[0]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:897:9+33
    assume {:print "$track_return(57,11,0):", $t13} $t13 == $t13;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:898:5+1
    assume {:print "$at(2,41670,41671)"} true;
L6:

    // return $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:898:5+1
    assume {:print "$at(2,41670,41671)"} true;
    $ret0 := $t13;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:898:5+1
L7:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:898:5+1
    assume {:print "$at(2,41670,41671)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun vesting::get_role_holder [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+456
procedure {:timeLimit 200} $1_vesting_get_role_holder$verify(_$t0: int, _$t1: $1_string_String) returns ($ret0: int)
{
    // declare local variables
    var $t2: Table int (int);
    var $t3: Table int (int);
    var $t4: bool;
    var $t5: int;
    var $t6: int;
    var $t7: int;
    var $t8: $1_vesting_VestingAccountManagement;
    var $t9: Table int (int);
    var $t10: bool;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t0: int;
    var $t1: $1_string_String;
    var $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'': Table int (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'address': int;
    var $1_vesting_VestingAccountManagement_$memory#87: $Memory $1_vesting_VestingAccountManagement;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume {:print "$at(2,41215,41216)"} true;
    assume $IsValid'address'($t0);

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume $IsValid'$1_string_String'($t1);

    // assume forall $rsc: ResourceDomain<vesting::VestingAccountManagement>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0);
    ($IsValid'$1_vesting_VestingAccountManagement'($rsc))));

    // assume Identical($t3, select vesting::VestingAccountManagement.roles(global<vesting::VestingAccountManagement>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:298:9+69
    assume {:print "$at(3,12239,12308)"} true;
    assume ($t3 == $roles#$1_vesting_VestingAccountManagement($ResourceValue($1_vesting_VestingAccountManagement_$memory, $t0)));

    // @87 := save_mem(vesting::VestingAccountManagement) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume {:print "$at(2,41215,41216)"} true;
    $1_vesting_VestingAccountManagement_$memory#87 := $1_vesting_VestingAccountManagement_$memory;

    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume {:print "$track_local(57,11,0):", $t0} $t0 == $t0;

    // trace_local[role]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:893:5+1
    assume {:print "$track_local(57,11,1):", $t1} $t1 == $t1;

    // $t4 := exists<vesting::VestingAccountManagement>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:17+6
    assume {:print "$at(2,41344,41350)"} true;
    $t4 := $ResourceExists($1_vesting_VestingAccountManagement_$memory, $t0);

    // if ($t4) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    if ($t4) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    assume {:print "$at(2,41336,41444)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:86+29
L0:

    // $t5 := 13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:86+29
    assume {:print "$at(2,41413,41442)"} true;
    $t5 := 13;
    assume $IsValid'u64'($t5);

    // $t6 := error::not_found($t5) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:69+47
    call $t6 := $1_error_not_found($t5);
    if ($abort_flag) {
        assume {:print "$at(2,41396,41443)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    assume {:print "$at(2,41336,41444)"} true;
    assume {:print "$track_abort(57,11):", $t6} $t6 == $t6;

    // $t7 := move($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    $t7 := $t6;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:894:9+108
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:62+16
    assume {:print "$at(2,41507,41523)"} true;
L2:

    // $t8 := get_global<vesting::VestingAccountManagement>($t0) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:22+13
    assume {:print "$at(2,41467,41480)"} true;
    if (!$ResourceExists($1_vesting_VestingAccountManagement_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $ResourceValue($1_vesting_VestingAccountManagement_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,41467,41480)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // $t9 := get_field<vesting::VestingAccountManagement>.roles($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:21+64
    $t9 := $roles#$1_vesting_VestingAccountManagement($t8);

    // trace_local[roles]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:895:13+5
    assume {:print "$track_local(57,11,2):", $t9} $t9 == $t9;

    // $t10 := simple_map::contains_key<string::String, address>($t9, $t1) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:17+38
    assume {:print "$at(2,41548,41586)"} true;
    call $t10 := $1_simple_map_contains_key'$1_string_String_address'($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,41548,41586)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // if ($t10) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    if ($t10) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    assume {:print "$at(2,41540,41622)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
L3:

    // $t11 := 14 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:74+15
    assume {:print "$at(2,41605,41620)"} true;
    $t11 := 14;
    assume $IsValid'u64'($t11);

    // $t12 := error::not_found($t11) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:57+33
    call $t12 := $1_error_not_found($t11);
    if ($abort_flag) {
        assume {:print "$at(2,41588,41621)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_abort($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    assume {:print "$at(2,41540,41622)"} true;
    assume {:print "$track_abort(57,11):", $t12} $t12 == $t12;

    // $t7 := move($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    $t7 := $t12;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:896:9+82
    goto L7;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:897:29+5
    assume {:print "$at(2,41652,41657)"} true;
L5:

    // $t13 := simple_map::borrow<string::String, address>($t9, $t1) on_abort goto L7 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:897:10+32
    assume {:print "$at(2,41633,41665)"} true;
    call $t13 := $1_simple_map_borrow'$1_string_String_address'($t9, $t1);
    if ($abort_flag) {
        assume {:print "$at(2,41633,41665)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,11):", $t7} $t7 == $t7;
        goto L7;
    }

    // trace_return[0]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:897:9+33
    assume {:print "$track_return(57,11,0):", $t13} $t13 == $t13;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:898:5+1
    assume {:print "$at(2,41670,41671)"} true;
L6:

    // assert Not(Not(exists[@87]<vesting::VestingAccountManagement>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:297:9+62
    assume {:print "$at(3,12168,12230)"} true;
    assert {:msg "assert_failed(3,12168,12230): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingAccountManagement_$memory#87, $t0);

    // assert Not(Not(simple_map::spec_contains_key[]<string::String, address>($t3, $t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:299:9+53
    assume {:print "$at(3,12317,12370)"} true;
    assert {:msg "assert_failed(3,12317,12370): function does not abort under this condition"}
      !!$1_simple_map_spec_contains_key'$1_string_String_address'($t3, $t1);

    // return $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:299:9+53
    $ret0 := $t13;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:898:5+1
    assume {:print "$at(2,41670,41671)"} true;
L7:

    // assert Or(Not(exists[@87]<vesting::VestingAccountManagement>($t0)), Not(simple_map::spec_contains_key[]<string::String, address>($t3, $t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:296:5+289
    assume {:print "$at(3,12087,12376)"} true;
    assert {:msg "assert_failed(3,12087,12376): abort not covered by any of the `aborts_if` clauses"}
      (!$ResourceExists($1_vesting_VestingAccountManagement_$memory#87, $t0) || !$1_simple_map_spec_contains_key'$1_string_String_address'($t3, $t1));

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:296:5+289
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun vesting::get_vesting_account_signer [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+315
procedure {:timeLimit 200} $1_vesting_get_vesting_account_signer$verify(_$t0: $signer, _$t1: int) returns ($ret0: $signer)
{
    // declare local variables
    var $t2: $Mutation ($1_vesting_VestingContract);
    var $t3: $1_vesting_VestingContract;
    var $t4: $Mutation ($1_vesting_VestingContract);
    var $t5: int;
    var $t6: $1_vesting_VestingContract;
    var $t7: $1_vesting_VestingContract;
    var $t8: $signer;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_vesting_VestingContract_$memory#74: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+1
    assume {:print "$at(2,41923,41924)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t3, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:382:9+65
    assume {:print "$at(3,16064,16129)"} true;
    assume ($t3 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // @74 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+1
    assume {:print "$at(2,41923,41924)"} true;
    $1_vesting_VestingContract_$memory#74 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+1
    assume {:print "$track_local(57,12,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:903:5+1
    assume {:print "$track_local(57,12,1):", $t1} $t1 == $t1;

    // $t4 := borrow_global<vesting::VestingContract>($t1) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:904:32+17
    assume {:print "$at(2,42070,42087)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t4 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,42070,42087)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,12):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_local[vesting_contract]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:904:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t4);
    assume {:print "$track_local(57,12,2):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t6 := read_ref($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:905:21+25
    assume {:print "$at(2,42144,42169)"} true;
    $t6 := $Dereference($t4);

    // vesting::verify_admin($t0, $t6) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:905:9+37
    call $1_vesting_verify_admin($t0, $t6);
    if ($abort_flag) {
        assume {:print "$at(2,42132,42169)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,12):", $t5} $t5 == $t5;
        goto L2;
    }

    // $t7 := read_ref($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:906:45+16
    assume {:print "$at(2,42215,42231)"} true;
    $t7 := $Dereference($t4);

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t4)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t4)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t4))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t4))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t4)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t4)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t4)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t4)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t4))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t4))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t4))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t4))), j)) ==> $IsEqual'num'(i, j))))))));

    // $t8 := vesting::get_vesting_account_signer_internal($t7) on_abort goto L2 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:906:9+53
    assume {:print "$at(2,42179,42232)"} true;
    call $t8 := $1_vesting_get_vesting_account_signer_internal($t7);
    if ($abort_flag) {
        assume {:print "$at(2,42179,42232)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,12):", $t5} $t5 == $t5;
        goto L2;
    }

    // trace_return[0]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:906:9+53
    assume {:print "$track_return(57,12,0):", $t8} $t8 == $t8;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:907:5+1
    assume {:print "$at(2,42237,42238)"} true;
L1:

    // assert Not(Not(exists[@74]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:381:9+53
    assume {:print "$at(3,16002,16055)"} true;
    assert {:msg "assert_failed(3,16002,16055): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#74, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    assume {:print "$at(3,16138,16200)"} true;
    assert {:msg "assert_failed(3,16138,16200): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t3));

    // return $t8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    $ret0 := $t8;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:907:5+1
    assume {:print "$at(2,42237,42238)"} true;
L2:

    // assert Or(Not(exists[@74]<vesting::VestingContract>($t1)), Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:302:5+127
    assume {:print "$at(3,12382,12509)"} true;
    assert {:msg "assert_failed(3,12382,12509): abort not covered by any of the `aborts_if` clauses"}
      (!$ResourceExists($1_vesting_VestingContract_$memory#74, $t1) || !$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t3)));

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:302:5+127
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun vesting::get_vesting_account_signer_internal [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:909:5+168
procedure {:inline 1} $1_vesting_get_vesting_account_signer_internal(_$t0: $1_vesting_VestingContract) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: $1_account_SignerCapability;
    var $t2: int;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_vesting_VestingContract;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[vesting_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:909:5+1
    assume {:print "$at(2,42244,42245)"} true;
    assume {:print "$track_local(57,13,0):", $t0} $t0 == $t0;

    // $t1 := get_field<vesting::VestingContract>.signer_cap($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:910:48+28
    assume {:print "$at(2,42377,42405)"} true;
    $t1 := $signer_cap#$1_vesting_VestingContract($t0);

    // assume Identical($t2, select account::SignerCapability.account($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:458:9+30
    assume {:print "$at(73,22226,22256)"} true;
    assume ($t2 == $account#$1_account_SignerCapability($t1));

    // $t3 := account::create_signer_with_capability($t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:910:9+68
    assume {:print "$at(2,42338,42406)"} true;
    call $t3 := $1_account_create_signer_with_capability($t1);
    if ($abort_flag) {
        assume {:print "$at(2,42338,42406)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,13):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:910:9+68
    assume {:print "$track_return(57,13,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:911:5+1
    assume {:print "$at(2,42411,42412)"} true;
L1:

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:911:5+1
    assume {:print "$at(2,42411,42412)"} true;
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:911:5+1
L2:

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:911:5+1
    assume {:print "$at(2,42411,42412)"} true;
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::get_vesting_account_signer_internal [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:909:5+168
procedure {:timeLimit 200} $1_vesting_get_vesting_account_signer_internal$verify(_$t0: $1_vesting_VestingContract) returns ($ret0: $signer)
{
    // declare local variables
    var $t1: $1_account_SignerCapability;
    var $t2: int;
    var $t3: $signer;
    var $t4: int;
    var $t0: $1_vesting_VestingContract;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'signer': $signer;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume And(WellFormed($t0), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t0)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:909:5+1
    assume {:print "$at(2,42244,42245)"} true;
    assume ($IsValid'$1_vesting_VestingContract'($t0) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), j)) ==> $IsEqual'num'(i, j))))))))));

    // trace_local[vesting_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:909:5+1
    assume {:print "$track_local(57,13,0):", $t0} $t0 == $t0;

    // $t1 := get_field<vesting::VestingContract>.signer_cap($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:910:48+28
    assume {:print "$at(2,42377,42405)"} true;
    $t1 := $signer_cap#$1_vesting_VestingContract($t0);

    // assume Identical($t2, select account::SignerCapability.account($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/account.spec.move:458:9+30
    assume {:print "$at(73,22226,22256)"} true;
    assume ($t2 == $account#$1_account_SignerCapability($t1));

    // $t3 := account::create_signer_with_capability($t1) on_abort goto L2 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:910:9+68
    assume {:print "$at(2,42338,42406)"} true;
    call $t3 := $1_account_create_signer_with_capability($t1);
    if ($abort_flag) {
        assume {:print "$at(2,42338,42406)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,13):", $t4} $t4 == $t4;
        goto L2;
    }

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:910:9+68
    assume {:print "$track_return(57,13,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:911:5+1
    assume {:print "$at(2,42411,42412)"} true;
L1:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:307:9+16
    assume {:print "$at(3,12610,12626)"} true;
    assert {:msg "assert_failed(3,12610,12626): function does not abort under this condition"}
      !false;

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:307:9+16
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:911:5+1
    assume {:print "$at(2,42411,42412)"} true;
L2:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:306:5+117
    assume {:print "$at(3,12515,12632)"} true;
    assert {:msg "assert_failed(3,12515,12632): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:306:5+117
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::operator_commission_percentage [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:302:5+275
procedure {:timeLimit 200} $1_vesting_operator_commission_percentage$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_StakingInfo;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_vesting_VestingContract_$memory#53: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:302:5+1
    assume {:print "$at(2,14085,14086)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:302:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @53 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:302:5+1
    $1_vesting_VestingContract_$memory#53 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:302:5+1
    assume {:print "$track_local(57,15,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:303:9+56
    assume {:print "$at(2,14202,14258)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,14202,14258)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,15):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:304:9+13
    assume {:print "$at(2,14268,14281)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,14268,14281)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,15):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.staking($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:304:9+64
    $t3 := $staking#$1_vesting_VestingContract($t2);

    // $t4 := get_field<vesting::StakingInfo>.commission_percentage($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:304:9+86
    $t4 := $commission_percentage#$1_vesting_StakingInfo($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:304:9+86
    assume {:print "$track_return(57,15,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:305:5+1
    assume {:print "$at(2,14359,14360)"} true;
L1:

    // assert Not(Not(exists[@53]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:28:9+61
    assume {:print "$at(3,970,1031)"} true;
    assert {:msg "assert_failed(3,970,1031): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#53, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:28:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:305:5+1
    assume {:print "$at(2,14359,14360)"} true;
L2:

    // assert Not(exists[@53]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:27:5+153
    assume {:print "$at(3,884,1037)"} true;
    assert {:msg "assert_failed(3,884,1037): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#53, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:27:5+153
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::period_duration_secs [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:271:5+268
procedure {:timeLimit 200} $1_vesting_period_duration_secs$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_VestingSchedule;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_vesting_VestingContract_$memory#56: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:271:5+1
    assume {:print "$at(2,12272,12273)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:271:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @56 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:271:5+1
    $1_vesting_VestingContract_$memory#56 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:271:5+1
    assume {:print "$track_local(57,16,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:272:9+56
    assume {:print "$at(2,12379,12435)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,12379,12435)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,16):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:273:9+13
    assume {:print "$at(2,12445,12458)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,12445,12458)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,16):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.vesting_schedule($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:273:9+73
    $t3 := $vesting_schedule#$1_vesting_VestingContract($t2);

    // $t4 := get_field<vesting::VestingSchedule>.period_duration($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:273:9+89
    $t4 := $period_duration#$1_vesting_VestingSchedule($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:273:9+89
    assume {:print "$track_return(57,16,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:274:5+1
    assume {:print "$at(2,12539,12540)"} true;
L1:

    // assert Not(Not(exists[@56]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:16:9+61
    assume {:print "$at(3,501,562)"} true;
    assert {:msg "assert_failed(3,501,562): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#56, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:16:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:274:5+1
    assume {:print "$at(2,12539,12540)"} true;
L2:

    // assert Not(exists[@56]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:15:5+143
    assume {:print "$at(3,425,568)"} true;
    assert {:msg "assert_failed(3,425,568): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#56, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:15:5+143
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::remaining_grant [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:283:5+246
procedure {:timeLimit 200} $1_vesting_remaining_grant$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_vesting_VestingContract_$memory#55: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:283:5+1
    assume {:print "$at(2,13028,13029)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:283:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @55 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:283:5+1
    $1_vesting_VestingContract_$memory#55 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:283:5+1
    assume {:print "$track_local(57,17,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:284:9+56
    assume {:print "$at(2,13130,13186)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,13130,13186)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:285:9+13
    assume {:print "$at(2,13196,13209)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,13196,13209)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,17):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.remaining_grant($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:285:9+72
    $t3 := $remaining_grant#$1_vesting_VestingContract($t2);

    // trace_return[0]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:285:9+72
    assume {:print "$track_return(57,17,0):", $t3} $t3 == $t3;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:286:5+1
    assume {:print "$at(2,13273,13274)"} true;
L1:

    // assert Not(Not(exists[@55]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:20:9+61
    assume {:print "$at(3,645,706)"} true;
    assert {:msg "assert_failed(3,645,706): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#55, $t0);

    // return $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:20:9+61
    $ret0 := $t3;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:286:5+1
    assume {:print "$at(2,13273,13274)"} true;
L2:

    // assert Not(exists[@55]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:19:5+138
    assume {:print "$at(3,574,712)"} true;
    assert {:msg "assert_failed(3,574,712): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#55, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:19:5+138
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::reset_beneficiary [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+755
procedure {:timeLimit 200} $1_vesting_reset_beneficiary$verify(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: bool;
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation (Table int (int));
    var $t7: $Mutation ($1_vesting_VestingContract);
    var $t8: int;
    var $t9: $1_vesting_VestingContract;
    var $t10: Table int (int);
    var $t11: $1_string_String;
    var $t12: $Mutation ($1_vesting_VestingContract);
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: bool;
    var $t17: bool;
    var $t18: Vec (int);
    var $t19: $1_string_String;
    var $t20: Table int (int);
    var $t21: int;
    var $t22: int;
    var $t23: int;
    var $t24: $Mutation (Table int (int));
    var $t25: Table int (int);
    var $t26: bool;
    var $t27: int;
    var $t28: int;
    var $t29: $1_vesting_VestingContract;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'$1_simple_map_SimpleMap'address_address'': Table int (int);
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_vesting_VestingContract_$memory#102: $Memory $1_vesting_VestingContract;
    var $1_vesting_VestingAccountManagement_$memory#103: $Memory $1_vesting_VestingAccountManagement;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume {:print "$at(2,39177,39178)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume $IsValid'address'($t2);

    // assume forall $rsc: ResourceDomain<vesting::VestingAccountManagement>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0);
    ($IsValid'$1_vesting_VestingAccountManagement'($rsc))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t8, signer::$address_of($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:263:9+39
    assume {:print "$at(3,10667,10706)"} true;
    assume ($t8 == $1_signer_$address_of($t0));

    // assume Identical($t9, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:264:9+65
    assume {:print "$at(3,10715,10780)"} true;
    assume ($t9 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assume Identical($t10, select vesting::VestingAccountManagement.roles(global<vesting::VestingAccountManagement>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:267:9+69
    assume {:print "$at(3,11013,11082)"} true;
    assume ($t10 == $roles#$1_vesting_VestingAccountManagement($ResourceValue($1_vesting_VestingAccountManagement_$memory, $t1)));

    // assume Identical($t11, string::spec_utf8([82, 79, 76, 69, 95, 66, 69, 78, 69, 70, 73, 67, 73, 65, 82, 89, 95, 82, 69, 83, 69, 84, 84, 69, 82])) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:268:9+61
    assume {:print "$at(3,11091,11152)"} true;
    assume ($t11 == $1_string_spec_utf8(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 79, 76, 69), MakeVec4(95, 66, 69, 78)), MakeVec4(69, 70, 73, 67)), MakeVec4(73, 65, 82, 89)), MakeVec4(95, 82, 69, 83)), MakeVec4(69, 84, 84, 69)), MakeVec1(82))));

    // @103 := save_mem(vesting::VestingAccountManagement) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume {:print "$at(2,39177,39178)"} true;
    $1_vesting_VestingAccountManagement_$memory#103 := $1_vesting_VestingAccountManagement_$memory;

    // @102 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    $1_vesting_VestingContract_$memory#102 := $1_vesting_VestingContract_$memory;

    // trace_local[account]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume {:print "$track_local(57,18,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume {:print "$track_local(57,18,1):", $t1} $t1 == $t1;

    // trace_local[shareholder]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:843:5+1
    assume {:print "$track_local(57,18,2):", $t2} $t2 == $t2;

    // $t12 := borrow_global<vesting::VestingContract>($t1) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:848:32+17
    assume {:print "$at(2,39394,39411)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,39394,39411)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // trace_local[vesting_contract]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:848:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t12);
    assume {:print "$track_local(57,18,7):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t14 := signer::address_of($t0) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:849:20+27
    assume {:print "$at(2,39467,39494)"} true;
    call $t14 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,39467,39494)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // trace_local[addr]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:849:13+4
    assume {:print "$track_local(57,18,5):", $t14} $t14 == $t14;

    // $t15 := get_field<vesting::VestingContract>.admin($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:21+22
    assume {:print "$at(2,39533,39555)"} true;
    $t15 := $admin#$1_vesting_VestingContract($Dereference($t12));

    // $t16 := ==($t14, $t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:18+2
    $t16 := $IsEqual'address'($t14, $t15);

    // if ($t16) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:13+124
    if ($t16) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:13+124
L1:

    // $t17 := true at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:13+124
    assume {:print "$at(2,39525,39649)"} true;
    $t17 := true;
    assume $IsValid'bool'($t17);

    // $t3 := $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:13+124
    $t3 := $t17;

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:13+124
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:852:17+4
    assume {:print "$at(2,39575,39579)"} true;
L0:

    // $t18 := [82, 79, 76, 69, 95, 66, 69, 78, 69, 70, 73, 67, 73, 65, 82, 89, 95, 82, 69, 83, 69, 84, 84, 69, 82] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:852:64+25
    assume {:print "$at(2,39622,39647)"} true;
    $t18 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 79, 76, 69), MakeVec4(95, 66, 69, 78)), MakeVec4(69, 70, 73, 67)), MakeVec4(73, 65, 82, 89)), MakeVec4(95, 82, 69, 83)), MakeVec4(69, 84, 84, 69)), MakeVec1(82));
    assume $IsValid'vec'u8''($t18);

    // $t19 := string::utf8($t18) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:852:59+31
    call $t19 := $1_string_utf8($t18);
    if ($abort_flag) {
        assume {:print "$at(2,39617,39648)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // assume Identical($t20, select vesting::VestingAccountManagement.roles(global<vesting::VestingAccountManagement>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:298:9+69
    assume {:print "$at(3,12239,12308)"} true;
    assume ($t20 == $roles#$1_vesting_VestingAccountManagement($ResourceValue($1_vesting_VestingAccountManagement_$memory, $t1)));

    // $t21 := vesting::get_role_holder($t1, $t19) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:852:25+66
    assume {:print "$at(2,39583,39649)"} true;
    call $t21 := $1_vesting_get_role_holder($t1, $t19);
    if ($abort_flag) {
        assume {:print "$at(2,39583,39649)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // $t3 := ==($t14, $t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:852:22+2
    $t3 := $IsEqual'address'($t14, $t21);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:851:13+124
    assume {:print "$at(2,39525,39649)"} true;
L2:

    // if ($t3) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
    assume {:print "$at(2,39504,39718)"} true;
    if ($t3) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
L4:

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
    assume {:print "$at(2,39504,39718)"} true;
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
L3:

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t12)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), j)) ==> $IsEqual'num'(i, j))))))));

    // destroy($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
    assume {:print "$at(2,39504,39718)"} true;

    // $t22 := 15 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:853:38+18
    assume {:print "$at(2,39688,39706)"} true;
    $t22 := 15;
    assume $IsValid'u64'($t22);

    // $t23 := error::permission_denied($t22) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:853:13+44
    call $t23 := $1_error_permission_denied($t22);
    if ($abort_flag) {
        assume {:print "$at(2,39663,39707)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // trace_abort($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
    assume {:print "$at(2,39504,39718)"} true;
    assume {:print "$track_abort(57,18):", $t23} $t23 == $t23;

    // $t13 := move($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
    $t13 := $t23;

    // goto L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:850:9+214
    goto L10;

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:856:34+16
    assume {:print "$at(2,39754,39770)"} true;
L5:

    // $t24 := borrow_field<vesting::VestingContract>.beneficiaries($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:856:29+35
    assume {:print "$at(2,39749,39784)"} true;
    $t24 := $ChildMutation($t12, 3, $beneficiaries#$1_vesting_VestingContract($Dereference($t12)));

    // trace_local[beneficiaries]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:856:13+13
    $temp_0'$1_simple_map_SimpleMap'address_address'' := $Dereference($t24);
    assume {:print "$track_local(57,18,6):", $temp_0'$1_simple_map_SimpleMap'address_address''} $temp_0'$1_simple_map_SimpleMap'address_address'' == $temp_0'$1_simple_map_SimpleMap'address_address'';

    // $t25 := read_ref($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:857:37+29
    assume {:print "$at(2,39822,39851)"} true;
    $t25 := $Dereference($t24);

    // $t26 := simple_map::contains_key<address, address>($t25, $t2) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:857:13+53
    call $t26 := $1_simple_map_contains_key'address_address'($t25, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,39798,39851)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // if ($t26) goto L7 else goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:857:9+131
    if ($t26) { goto L7; } else { goto L6; }

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:32+13
    assume {:print "$at(2,39886,39899)"} true;
L7:

    // ($t27, $t28) := simple_map::remove<address, address>($t24, $t2) on_abort goto L10 with $t13 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:13+47
    assume {:print "$at(2,39867,39914)"} true;
    call $t27,$t28,$t24 := $1_simple_map_remove'address_address'($t24, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,39867,39914)"} true;
        $t13 := $abort_code;
        assume {:print "$track_abort(57,18):", $t13} $t13 == $t13;
        goto L10;
    }

    // write_back[Reference($t12).beneficiaries (simple_map::SimpleMap<address, address>)]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:13+47
    $t12 := $UpdateMutation($t12, $Update'$1_vesting_VestingContract'_beneficiaries($Dereference($t12), $Dereference($t24)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t12)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:13+47
    assume {:print "$at(2,39867,39914)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // destroy($t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:13+47

    // destroy($t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:13+47

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:858:60+1
    goto L8;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:857:9+131
    assume {:print "$at(2,39794,39925)"} true;
L6:

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t12)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), j)) ==> $IsEqual'num'(i, j))))))));

    // destroy($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:857:9+131
    assume {:print "$at(2,39794,39925)"} true;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:859:10+1
    assume {:print "$at(2,39925,39926)"} true;
L8:

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:860:5+1
    assume {:print "$at(2,39931,39932)"} true;
L9:

    // assume Identical($t29, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:272:9+75
    assume {:print "$at(3,11354,11429)"} true;
    assume ($t29 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assert Not(Not(exists[@102]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:261:9+53
    assume {:print "$at(3,10604,10657)"} true;
    assert {:msg "assert_failed(3,10604,10657): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#102, $t1);

    // assert Not(And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Not(string::spec_internal_check_utf8[]([82, 79, 76, 69, 95, 66, 69, 78, 69, 70, 73, 67, 73, 65, 82, 89, 95, 82, 69, 83, 69, 84, 84, 69, 82])))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:265:9+110
    assume {:print "$at(3,10789,10899)"} true;
    assert {:msg "assert_failed(3,10789,10899): function does not abort under this condition"}
      !(!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$1_string_spec_internal_check_utf8(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 79, 76, 69), MakeVec4(95, 66, 69, 78)), MakeVec4(69, 70, 73, 67)), MakeVec4(73, 65, 82, 89)), MakeVec4(95, 82, 69, 83)), MakeVec4(69, 84, 84, 69)), MakeVec1(82))));

    // assert Not(And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Not(exists[@103]<vesting::VestingAccountManagement>($t1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:266:9+96
    assume {:print "$at(3,10908,11004)"} true;
    assert {:msg "assert_failed(3,10908,11004): function does not abort under this condition"}
      !(!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$ResourceExists($1_vesting_VestingAccountManagement_$memory#103, $t1));

    // assert Not(And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Not(simple_map::spec_contains_key[]<string::String, address>($t10, $t11)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:269:9+88
    assume {:print "$at(3,11161,11249)"} true;
    assert {:msg "assert_failed(3,11161,11249): function does not abort under this condition"}
      !(!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$1_simple_map_spec_contains_key'$1_string_String_address'($t10, $t11));

    // assert Not(And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Neq<address>($t8, simple_map::spec_get[]<string::String, address>($t10, $t11)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:270:9+86
    assume {:print "$at(3,11258,11344)"} true;
    assert {:msg "assert_failed(3,11258,11344): function does not abort under this condition"}
      !(!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$IsEqual'address'($t8, $1_simple_map_spec_get'$1_string_String_address'($t10, $t11)));

    // assert Not(simple_map::spec_contains_key<address, address>(select vesting::VestingContract.beneficiaries($t29), $t2)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:273:9+88
    assume {:print "$at(3,11438,11526)"} true;
    assert {:msg "assert_failed(3,11438,11526): post-condition does not hold"}
      !$1_simple_map_spec_contains_key'address_address'($beneficiaries#$1_vesting_VestingContract($t29), $t2);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:273:9+88
    return;

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:860:5+1
    assume {:print "$at(2,39931,39932)"} true;
L10:

    // assert Or(Or(Or(Or(Not(exists[@102]<vesting::VestingContract>($t1)), And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Not(string::spec_internal_check_utf8[]([82, 79, 76, 69, 95, 66, 69, 78, 69, 70, 73, 67, 73, 65, 82, 89, 95, 82, 69, 83, 69, 84, 84, 69, 82])))), And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Not(exists[@103]<vesting::VestingAccountManagement>($t1)))), And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Not(simple_map::spec_contains_key[]<string::String, address>($t10, $t11)))), And(Neq<address>($t8, select vesting::VestingContract.admin($t9)), Neq<address>($t8, simple_map::spec_get[]<string::String, address>($t10, $t11)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:256:5+1060
    assume {:print "$at(3,10472,11532)"} true;
    assert {:msg "assert_failed(3,10472,11532): abort not covered by any of the `aborts_if` clauses"}
      ((((!$ResourceExists($1_vesting_VestingContract_$memory#102, $t1) || (!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$1_string_spec_internal_check_utf8(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 79, 76, 69), MakeVec4(95, 66, 69, 78)), MakeVec4(69, 70, 73, 67)), MakeVec4(73, 65, 82, 89)), MakeVec4(95, 82, 69, 83)), MakeVec4(69, 84, 84, 69)), MakeVec1(82))))) || (!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$ResourceExists($1_vesting_VestingAccountManagement_$memory#103, $t1))) || (!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$1_simple_map_spec_contains_key'$1_string_String_address'($t10, $t11))) || (!$IsEqual'address'($t8, $admin#$1_vesting_VestingContract($t9)) && !$IsEqual'address'($t8, $1_simple_map_spec_get'$1_string_String_address'($t10, $t11))));

    // abort($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:256:5+1060
    $abort_code := $t13;
    $abort_flag := true;
    return;

}

// fun vesting::set_beneficiary [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1396
procedure {:timeLimit 200} $1_vesting_set_beneficiary$verify(_$t0: $signer, _$t1: int, _$t2: int, _$t3: int) returns ()
{
    // declare local variables
    var $t4: int;
    var $t5: int;
    var $t6: $Mutation (Table int (int));
    var $t7: $Mutation (int);
    var $t8: int;
    var $t9: $Mutation ($1_vesting_VestingContract);
    var $t10: $1_vesting_VestingContract;
    var $t11: int;
    var $t12: $Mutation ($1_vesting_VestingContract);
    var $t13: $1_vesting_VestingContract;
    var $t14: $1_vesting_VestingContract;
    var $t15: int;
    var $t16: $Mutation (Table int (int));
    var $t17: Table int (int);
    var $t18: bool;
    var $t19: $Mutation (int);
    var $t20: $Mutation ($1_event_EventHandle'$1_vesting_SetBeneficiaryEvent');
    var $t21: int;
    var $t22: $1_vesting_SetBeneficiaryEvent;
    var $t23: $1_vesting_VestingContract;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_simple_map_SimpleMap'address_address'': Table int (int);
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_account_Account_$memory#106: $Memory $1_account_Account;
    var $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#107: $Memory $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $1_vesting_VestingContract_$memory#108: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume {:print "$at(2,37644,37645)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume $IsValid'address'($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume $IsValid'address'($t3);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t10, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:382:9+65
    assume {:print "$at(3,16064,16129)"} true;
    assume ($t10 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // @106 := save_mem(account::Account) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume {:print "$at(2,37644,37645)"} true;
    $1_account_Account_$memory#106 := $1_account_Account_$memory;

    // @107 := save_mem(coin::CoinStore<aptos_coin::AptosCoin>) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#107 := $1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory;

    // @108 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    $1_vesting_VestingContract_$memory#108 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume {:print "$track_local(57,20,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume {:print "$track_local(57,20,1):", $t1} $t1 == $t1;

    // trace_local[shareholder]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume {:print "$track_local(57,20,2):", $t2} $t2 == $t2;

    // trace_local[new_beneficiary]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:807:5+1
    assume {:print "$track_local(57,20,3):", $t3} $t3 == $t3;

    // aptos_account::assert_account_is_registered_for_apt($t3) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:815:9+53
    assume {:print "$at(2,38064,38117)"} true;
    call $1_aptos_account_assert_account_is_registered_for_apt($t3);
    if ($abort_flag) {
        assume {:print "$at(2,38064,38117)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // $t12 := borrow_global<vesting::VestingContract>($t1) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:817:32+17
    assume {:print "$at(2,38151,38168)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t12 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,38151,38168)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // trace_local[vesting_contract]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:817:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t12);
    assume {:print "$track_local(57,20,9):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t13 := read_ref($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:818:21+25
    assume {:print "$at(2,38225,38250)"} true;
    $t13 := $Dereference($t12);

    // vesting::verify_admin($t0, $t13) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:818:9+37
    call $1_vesting_verify_admin($t0, $t13);
    if ($abort_flag) {
        assume {:print "$at(2,38213,38250)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // $t14 := read_ref($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:820:46+31
    assume {:print "$at(2,38298,38329)"} true;
    $t14 := $Dereference($t12);

    // $t15 := vesting::get_beneficiary($t14, $t2) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:820:31+46
    call $t15 := $1_vesting_get_beneficiary($t14, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,38283,38329)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // trace_local[old_beneficiary]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:820:13+15
    assume {:print "$track_local(57,20,8):", $t15} $t15 == $t15;

    // $t16 := borrow_field<vesting::VestingContract>.beneficiaries($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:821:29+35
    assume {:print "$at(2,38359,38394)"} true;
    $t16 := $ChildMutation($t12, 3, $beneficiaries#$1_vesting_VestingContract($Dereference($t12)));

    // trace_local[beneficiaries]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:821:13+13
    $temp_0'$1_simple_map_SimpleMap'address_address'' := $Dereference($t16);
    assume {:print "$track_local(57,20,6):", $temp_0'$1_simple_map_SimpleMap'address_address''} $temp_0'$1_simple_map_SimpleMap'address_address'' == $temp_0'$1_simple_map_SimpleMap'address_address'';

    // $t17 := read_ref($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:822:37+29
    assume {:print "$at(2,38432,38461)"} true;
    $t17 := $Dereference($t16);

    // $t18 := simple_map::contains_key<address, address>($t17, $t2) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:822:13+53
    call $t18 := $1_simple_map_contains_key'address_address'($t17, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,38408,38461)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // if ($t18) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:822:9+288
    if ($t18) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:823:54+13
    assume {:print "$at(2,38518,38531)"} true;
L1:

    // $t19 := simple_map::borrow_mut<address, address>($t16, $t2) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:823:31+51
    assume {:print "$at(2,38495,38546)"} true;
    call $t19,$t16 := $1_simple_map_borrow_mut'address_address'($t16, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,38495,38546)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // trace_local[beneficiary]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:823:17+11
    $temp_0'address' := $Dereference($t19);
    assume {:print "$track_local(57,20,7):", $temp_0'address'} $temp_0'address' == $temp_0'address';

    // write_ref($t19, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:824:13+30
    assume {:print "$at(2,38560,38590)"} true;
    $t19 := $UpdateMutation($t19, $t3);

    // write_back[Reference($t16)[]]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:824:13+30
    $t16 := $UpdateMutation($t16, UpdateTable($Dereference($t16), ReadVec(p#$Mutation($t19), LenVec(p#$Mutation($t16))), $Dereference($t19)));

    // write_back[Reference($t12).beneficiaries (simple_map::SimpleMap<address, address>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:824:13+30
    $t12 := $UpdateMutation($t12, $Update'$1_vesting_VestingContract'_beneficiaries($Dereference($t12), $Dereference($t16)));

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:824:43+1
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:826:29+13
    assume {:print "$at(2,38637,38650)"} true;
L0:

    // simple_map::add<address, address>($t16, $t2, $t3) on_abort goto L4 with $t11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:826:13+60
    assume {:print "$at(2,38621,38681)"} true;
    call $t16 := $1_simple_map_add'address_address'($t16, $t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,38621,38681)"} true;
        $t11 := $abort_code;
        assume {:print "$track_abort(57,20):", $t11} $t11 == $t11;
        goto L4;
    }

    // write_back[Reference($t12).beneficiaries (simple_map::SimpleMap<address, address>)]($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:826:13+60
    $t12 := $UpdateMutation($t12, $Update'$1_vesting_VestingContract'_beneficiaries($Dereference($t12), $Dereference($t16)));

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:830:18+16
    assume {:print "$at(2,38732,38748)"} true;
L2:

    // $t20 := borrow_field<vesting::VestingContract>.set_beneficiary_events($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:830:13+44
    assume {:print "$at(2,38727,38771)"} true;
    $t20 := $ChildMutation($t12, 12, $set_beneficiary_events#$1_vesting_VestingContract($Dereference($t12)));

    // $t21 := get_field<vesting::VestingContract>.admin($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:832:24+22
    assume {:print "$at(2,38830,38852)"} true;
    $t21 := $admin#$1_vesting_VestingContract($Dereference($t12));

    // $t22 := pack vesting::SetBeneficiaryEvent($t21, $t1, $t2, $t15, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:831:13+237
    assume {:print "$at(2,38785,39022)"} true;
    $t22 := $1_vesting_SetBeneficiaryEvent($t21, $t1, $t2, $t15, $t3);

    // opaque begin: event::emit_event<vesting::SetBeneficiaryEvent>($t20, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:829:9+330
    assume {:print "$at(2,38703,39033)"} true;

    // opaque end: event::emit_event<vesting::SetBeneficiaryEvent>($t20, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:829:9+330

    // write_back[Reference($t12).set_beneficiary_events (event::EventHandle<vesting::SetBeneficiaryEvent>)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:829:9+330
    $t12 := $UpdateMutation($t12, $Update'$1_vesting_VestingContract'_set_beneficiary_events($Dereference($t12), $Dereference($t20)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t12)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t12)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t12))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:829:9+330
    assume {:print "$at(2,38703,39033)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t12),
        $Dereference($t12));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:839:5+1
    assume {:print "$at(2,39039,39040)"} true;
L3:

    // assume Identical($t23, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:252:9+70
    assume {:print "$at(3,10299,10369)"} true;
    assume ($t23 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // assert Not(Not(account::$exists_at[@106]($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:249:9+47
    assume {:print "$at(3,10130,10177)"} true;
    assert {:msg "assert_failed(3,10130,10177): function does not abort under this condition"}
      !!$1_account_$exists_at($1_account_Account_$memory#106, $t3);

    // assert Not(Not(coin::$is_account_registered[@107]<aptos_coin::AptosCoin>($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:250:9+67
    assume {:print "$at(3,10186,10253)"} true;
    assert {:msg "assert_failed(3,10186,10253): function does not abort under this condition"}
      !!$1_coin_$is_account_registered'$1_aptos_coin_AptosCoin'($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#107, $t3);

    // assert Not(Not(exists[@108]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:381:9+53
    assume {:print "$at(3,16002,16055)"} true;
    assert {:msg "assert_failed(3,16002,16055): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#108, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    assume {:print "$at(3,16138,16200)"} true;
    assert {:msg "assert_failed(3,16138,16200): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t10));

    // assert simple_map::spec_contains_key<address, address>(select vesting::VestingContract.beneficiaries($t23), $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:253:9+82
    assume {:print "$at(3,10378,10460)"} true;
    assert {:msg "assert_failed(3,10378,10460): post-condition does not hold"}
      $1_simple_map_spec_contains_key'address_address'($beneficiaries#$1_vesting_VestingContract($t23), $t2);

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:253:9+82
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:839:5+1
    assume {:print "$at(2,39039,39040)"} true;
L4:

    // assert Or(Or(Or(Not(account::$exists_at[@106]($t3)), Not(coin::$is_account_registered[@107]<aptos_coin::AptosCoin>($t3))), Not(exists[@108]<vesting::VestingContract>($t1))), Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:243:5+497
    assume {:print "$at(3,9969,10466)"} true;
    assert {:msg "assert_failed(3,9969,10466): abort not covered by any of the `aborts_if` clauses"}
      (((!$1_account_$exists_at($1_account_Account_$memory#106, $t3) || !$1_coin_$is_account_registered'$1_aptos_coin_AptosCoin'($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory#107, $t3)) || !$ResourceExists($1_vesting_VestingContract_$memory#108, $t1)) || !$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t10)));

    // abort($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:243:5+497
    $abort_code := $t11;
    $abort_flag := true;
    return;

}

// fun vesting::set_beneficiary_resetter [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+314
procedure {:timeLimit 200} $1_vesting_set_beneficiary_resetter$verify(_$t0: $signer, _$t1: int, _$t2: int) returns ()
{
    // declare local variables
    var $t3: $1_vesting_VestingContract;
    var $t4: Vec (int);
    var $t5: $1_string_String;
    var $t6: int;
    var $t7: $1_vesting_VestingContract;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_vesting_VestingContract_$memory#101: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume {:print "$at(2,40895,40896)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume $IsValid'address'($t2);

    // assume forall $rsc: ResourceDomain<vesting::VestingAccountManagement>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0);
    ($IsValid'$1_vesting_VestingAccountManagement'($rsc))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t3, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:373:9+65
    assume {:print "$at(3,15606,15671)"} true;
    assume ($t3 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // @101 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume {:print "$at(2,40895,40896)"} true;
    $1_vesting_VestingContract_$memory#101 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume {:print "$track_local(57,21,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume {:print "$track_local(57,21,1):", $t1} $t1 == $t1;

    // trace_local[beneficiary_resetter]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:885:5+1
    assume {:print "$track_local(57,21,2):", $t2} $t2 == $t2;

    // $t4 := [82, 79, 76, 69, 95, 66, 69, 78, 69, 70, 73, 67, 73, 65, 82, 89, 95, 82, 69, 83, 69, 84, 84, 69, 82] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:890:59+25
    assume {:print "$at(2,41153,41178)"} true;
    $t4 := ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 79, 76, 69), MakeVec4(95, 66, 69, 78)), MakeVec4(69, 70, 73, 67)), MakeVec4(73, 65, 82, 89)), MakeVec4(95, 82, 69, 83)), MakeVec4(69, 84, 84, 69)), MakeVec1(82));
    assume $IsValid'vec'u8''($t4);

    // $t5 := string::utf8($t4) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:890:54+31
    call $t5 := $1_string_utf8($t4);
    if ($abort_flag) {
        assume {:print "$at(2,41148,41179)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(57,21):", $t6} $t6 == $t6;
        goto L2;
    }

    // assume Identical($t7, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:373:9+65
    assume {:print "$at(3,15606,15671)"} true;
    assume ($t7 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // vesting::set_management_role($t0, $t1, $t5, $t2) on_abort goto L2 with $t6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:890:9+99
    assume {:print "$at(2,41103,41202)"} true;
    call $1_vesting_set_management_role($t0, $t1, $t5, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,41103,41202)"} true;
        $t6 := $abort_code;
        assume {:print "$track_abort(57,21):", $t6} $t6 == $t6;
        goto L2;
    }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:891:5+1
    assume {:print "$at(2,41208,41209)"} true;
L1:

    // assert Not(Not(string::spec_internal_check_utf8[]([82, 79, 76, 69, 95, 66, 69, 78, 69, 70, 73, 67, 73, 65, 82, 89, 95, 82, 69, 83, 69, 84, 84, 69, 82]))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:292:9+76
    assume {:print "$at(3,11956,12032)"} true;
    assert {:msg "assert_failed(3,11956,12032): function does not abort under this condition"}
      !!$1_string_spec_internal_check_utf8(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(ConcatVec(MakeVec4(82, 79, 76, 69), MakeVec4(95, 66, 69, 78)), MakeVec4(69, 70, 73, 67)), MakeVec4(73, 65, 82, 89)), MakeVec4(95, 82, 69, 83)), MakeVec4(69, 84, 84, 69)), MakeVec1(82)));

    // assert Not(Not(exists[@101]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:372:9+53
    assume {:print "$at(3,15544,15597)"} true;
    assert {:msg "assert_failed(3,15544,15597): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#101, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:375:9+62
    assume {:print "$at(3,15828,15890)"} true;
    assert {:msg "assert_failed(3,15828,15890): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t3));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:375:9+62
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:891:5+1
    assume {:print "$at(2,41208,41209)"} true;
L2:

    // abort($t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:891:5+1
    assume {:print "$at(2,41208,41209)"} true;
    $abort_code := $t6;
    $abort_flag := true;
    return;

}

// fun vesting::set_management_role [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+951
procedure {:inline 1} $1_vesting_set_management_role(_$t0: $signer, _$t1: int, _$t2: $1_string_String, _$t3: int) returns ()
{
    // declare local variables
    var $t4: $signer;
    var $t5: $1_string_String;
    var $t6: $Mutation (Table int (int));
    var $t7: $Mutation ($1_vesting_VestingContract);
    var $t8: $1_vesting_VestingContract;
    var $t9: $Mutation ($1_vesting_VestingContract);
    var $t10: int;
    var $t11: $1_vesting_VestingContract;
    var $t12: bool;
    var $t13: bool;
    var $t14: $1_vesting_VestingContract;
    var $t15: $signer;
    var $t16: Table int (int);
    var $t17: $1_vesting_VestingAccountManagement;
    var $t18: $Mutation ($1_vesting_VestingAccountManagement);
    var $t19: $Mutation (Table int (int));
    var $t20: Table int (int);
    var $t21: bool;
    var $t22: $Mutation (int);
    var $t0: $signer;
    var $t1: int;
    var $t2: $1_string_String;
    var $t3: int;
    var $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'': Table int (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // bytecode translation starts here
    // assume Identical($t8, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:373:9+65
    assume {:print "$at(3,15606,15671)"} true;
    assume ($t8 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$at(2,39938,39939)"} true;
    assume {:print "$track_local(57,22,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,1):", $t1} $t1 == $t1;

    // trace_local[role]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,2):", $t2} $t2 == $t2;

    // trace_local[role_holder]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,3):", $t3} $t3 == $t3;

    // $t9 := borrow_global<vesting::VestingContract>($t1) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:868:32+17
    assume {:print "$at(2,40177,40194)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,40177,40194)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[vesting_contract]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:868:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t9);
    assume {:print "$track_local(57,22,7):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t11 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:869:21+25
    assume {:print "$at(2,40251,40276)"} true;
    $t11 := $Dereference($t9);

    // vesting::verify_admin($t0, $t11) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:869:9+37
    call $1_vesting_verify_admin($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,40239,40276)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t12 := exists<vesting::VestingAccountManagement>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:14+6
    assume {:print "$at(2,40292,40298)"} true;
    $t12 := $ResourceExists($1_vesting_VestingAccountManagement_$memory, $t1);

    // $t13 := !($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:13+1
    call $t13 := $Not($t12);

    // if ($t13) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:72+16
    assume {:print "$at(2,40417,40433)"} true;
L1:

    // $t14 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:72+16
    assume {:print "$at(2,40417,40433)"} true;
    $t14 := $Dereference($t9);

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:72+16

    // $t15 := vesting::get_vesting_account_signer_internal($t14) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:36+53
    call $t15 := $1_vesting_get_vesting_account_signer_internal($t14);
    if ($abort_flag) {
        assume {:print "$at(2,40381,40434)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t16 := simple_map::create<string::String, address>() on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:874:24+37
    assume {:print "$at(2,40523,40560)"} true;
    call $t16 := $1_simple_map_create'$1_string_String_address'();
    if ($abort_flag) {
        assume {:print "$at(2,40523,40560)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t17 := pack vesting::VestingAccountManagement($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:873:38+102
    assume {:print "$at(2,40473,40575)"} true;
    $t17 := $1_vesting_VestingAccountManagement($t16);

    // move_to<vesting::VestingAccountManagement>($t17, $t15) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:873:13+7
    if ($ResourceExists($1_vesting_VestingAccountManagement_$memory, $addr#$signer($t15))) {
        call $ExecFailureAbort();
    } else {
        $1_vesting_VestingAccountManagement_$memory := $ResourceUpdate($1_vesting_VestingAccountManagement_$memory, $addr#$signer($t15), $t17);
    }
    if ($abort_flag) {
        assume {:print "$at(2,40448,40455)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:873:13+128
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299
    assume {:print "$at(2,40287,40586)"} true;
L0:

    // pack_ref_deep($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299
    assume {:print "$at(2,40287,40586)"} true;

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:70+16
    assume {:print "$at(2,40657,40673)"} true;
L2:

    // $t18 := borrow_global<vesting::VestingAccountManagement>($t1) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:26+17
    assume {:print "$at(2,40613,40630)"} true;
    if (!$ResourceExists($1_vesting_VestingAccountManagement_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingAccountManagement_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,40613,40630)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t19 := borrow_field<vesting::VestingAccountManagement>.roles($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:21+72
    $t19 := $ChildMutation($t18, 0, $roles#$1_vesting_VestingAccountManagement($Dereference($t18)));

    // trace_local[roles]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:13+5
    $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'' := $Dereference($t19);
    assume {:print "$track_local(57,22,6):", $temp_0'$1_simple_map_SimpleMap'$1_string_String_address''} $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'' == $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'';

    // $t20 := read_ref($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:878:37+14
    assume {:print "$at(2,40718,40732)"} true;
    $t20 := $Dereference($t19);

    // $t21 := simple_map::contains_key<string::String, address>($t20, $t2) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:878:13+38
    call $t21 := $1_simple_map_contains_key'$1_string_String_address'($t20, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,40694,40732)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // if ($t21) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:878:9+192
    if ($t21) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:53+11
    assume {:print "$at(2,40788,40799)"} true;
L4:

    // $t22 := simple_map::borrow_mut<string::String, address>($t19, $t2) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:14+36
    assume {:print "$at(2,40749,40785)"} true;
    call $t22,$t19 := $1_simple_map_borrow_mut'$1_string_String_address'($t19, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,40749,40785)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // write_ref($t22, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $t22 := $UpdateMutation($t22, $t3);

    // write_back[Reference($t19)[]]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $t19 := $UpdateMutation($t19, UpdateTable($Dereference($t19), ReadVec(p#$Mutation($t22), LenVec(p#$Mutation($t19))), $Dereference($t22)));

    // write_back[Reference($t18).roles (simple_map::SimpleMap<string::String, address>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $t18 := $UpdateMutation($t18, $Update'$1_vesting_VestingAccountManagement'_roles($Dereference($t18), $Dereference($t19)));

    // write_back[vesting::VestingAccountManagement@]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $1_vesting_VestingAccountManagement_$memory := $ResourceUpdate($1_vesting_VestingAccountManagement_$memory, $GlobalLocationAddress($t18),
        $Dereference($t18));

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:64+1
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:29+5
    assume {:print "$at(2,40846,40851)"} true;
L3:

    // simple_map::add<string::String, address>($t19, $t2, $t3) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:13+41
    assume {:print "$at(2,40830,40871)"} true;
    call $t19 := $1_simple_map_add'$1_string_String_address'($t19, $t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,40830,40871)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // write_back[Reference($t18).roles (simple_map::SimpleMap<string::String, address>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:13+41
    $t18 := $UpdateMutation($t18, $Update'$1_vesting_VestingAccountManagement'_roles($Dereference($t18), $Dereference($t19)));

    // write_back[vesting::VestingAccountManagement@]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:13+41
    $1_vesting_VestingAccountManagement_$memory := $ResourceUpdate($1_vesting_VestingAccountManagement_$memory, $GlobalLocationAddress($t18),
        $Dereference($t18));

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:882:10+1
    assume {:print "$at(2,40882,40883)"} true;
L5:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
    assume {:print "$at(2,40888,40889)"} true;
L6:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
    assume {:print "$at(2,40888,40889)"} true;
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
L7:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
    assume {:print "$at(2,40888,40889)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun vesting::set_management_role [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+951
procedure {:timeLimit 200} $1_vesting_set_management_role$verify(_$t0: $signer, _$t1: int, _$t2: $1_string_String, _$t3: int) returns ()
{
    // declare local variables
    var $t4: $signer;
    var $t5: $1_string_String;
    var $t6: $Mutation (Table int (int));
    var $t7: $Mutation ($1_vesting_VestingContract);
    var $t8: $1_vesting_VestingContract;
    var $t9: $Mutation ($1_vesting_VestingContract);
    var $t10: int;
    var $t11: $1_vesting_VestingContract;
    var $t12: bool;
    var $t13: bool;
    var $t14: $1_vesting_VestingContract;
    var $t15: $signer;
    var $t16: Table int (int);
    var $t17: $1_vesting_VestingAccountManagement;
    var $t18: $Mutation ($1_vesting_VestingAccountManagement);
    var $t19: $Mutation (Table int (int));
    var $t20: Table int (int);
    var $t21: bool;
    var $t22: $Mutation (int);
    var $t0: $signer;
    var $t1: int;
    var $t2: $1_string_String;
    var $t3: int;
    var $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'': Table int (int);
    var $temp_0'$1_string_String': $1_string_String;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $1_vesting_VestingContract_$memory#85: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$at(2,39938,39939)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume $IsValid'$1_string_String'($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume $IsValid'address'($t3);

    // assume forall $rsc: ResourceDomain<vesting::VestingAccountManagement>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingAccountManagement_$memory, $a_0);
    ($IsValid'$1_vesting_VestingAccountManagement'($rsc))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Identical($t8, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:373:9+65
    assume {:print "$at(3,15606,15671)"} true;
    assume ($t8 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // @85 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$at(2,39938,39939)"} true;
    $1_vesting_VestingContract_$memory#85 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,1):", $t1} $t1 == $t1;

    // trace_local[role]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,2):", $t2} $t2 == $t2;

    // trace_local[role_holder]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:862:5+1
    assume {:print "$track_local(57,22,3):", $t3} $t3 == $t3;

    // $t9 := borrow_global<vesting::VestingContract>($t1) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:868:32+17
    assume {:print "$at(2,40177,40194)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,40177,40194)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // trace_local[vesting_contract]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:868:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t9);
    assume {:print "$track_local(57,22,7):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t11 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:869:21+25
    assume {:print "$at(2,40251,40276)"} true;
    $t11 := $Dereference($t9);

    // vesting::verify_admin($t0, $t11) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:869:9+37
    call $1_vesting_verify_admin($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,40239,40276)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t12 := exists<vesting::VestingAccountManagement>($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:14+6
    assume {:print "$at(2,40292,40298)"} true;
    $t12 := $ResourceExists($1_vesting_VestingAccountManagement_$memory, $t1);

    // $t13 := !($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:13+1
    call $t13 := $Not($t12);

    // if ($t13) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299
    if ($t13) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:72+16
    assume {:print "$at(2,40417,40433)"} true;
L1:

    // $t14 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:72+16
    assume {:print "$at(2,40417,40433)"} true;
    $t14 := $Dereference($t9);

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t9)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), j)) ==> $IsEqual'num'(i, j))))))));

    // $t15 := vesting::get_vesting_account_signer_internal($t14) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:872:36+53
    assume {:print "$at(2,40381,40434)"} true;
    call $t15 := $1_vesting_get_vesting_account_signer_internal($t14);
    if ($abort_flag) {
        assume {:print "$at(2,40381,40434)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t16 := simple_map::create<string::String, address>() on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:874:24+37
    assume {:print "$at(2,40523,40560)"} true;
    call $t16 := $1_simple_map_create'$1_string_String_address'();
    if ($abort_flag) {
        assume {:print "$at(2,40523,40560)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t17 := pack vesting::VestingAccountManagement($t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:873:38+102
    assume {:print "$at(2,40473,40575)"} true;
    $t17 := $1_vesting_VestingAccountManagement($t16);

    // move_to<vesting::VestingAccountManagement>($t17, $t15) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:873:13+7
    if ($ResourceExists($1_vesting_VestingAccountManagement_$memory, $addr#$signer($t15))) {
        call $ExecFailureAbort();
    } else {
        $1_vesting_VestingAccountManagement_$memory := $ResourceUpdate($1_vesting_VestingAccountManagement_$memory, $addr#$signer($t15), $t17);
    }
    if ($abort_flag) {
        assume {:print "$at(2,40448,40455)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:873:13+128
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299
    assume {:print "$at(2,40287,40586)"} true;
L0:

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t9)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), j)) ==> $IsEqual'num'(i, j))))))));

    // destroy($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:871:9+299
    assume {:print "$at(2,40287,40586)"} true;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:70+16
    assume {:print "$at(2,40657,40673)"} true;
L2:

    // $t18 := borrow_global<vesting::VestingAccountManagement>($t1) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:26+17
    assume {:print "$at(2,40613,40630)"} true;
    if (!$ResourceExists($1_vesting_VestingAccountManagement_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingAccountManagement_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,40613,40630)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // $t19 := borrow_field<vesting::VestingAccountManagement>.roles($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:21+72
    $t19 := $ChildMutation($t18, 0, $roles#$1_vesting_VestingAccountManagement($Dereference($t18)));

    // trace_local[roles]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:877:13+5
    $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'' := $Dereference($t19);
    assume {:print "$track_local(57,22,6):", $temp_0'$1_simple_map_SimpleMap'$1_string_String_address''} $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'' == $temp_0'$1_simple_map_SimpleMap'$1_string_String_address'';

    // $t20 := read_ref($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:878:37+14
    assume {:print "$at(2,40718,40732)"} true;
    $t20 := $Dereference($t19);

    // $t21 := simple_map::contains_key<string::String, address>($t20, $t2) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:878:13+38
    call $t21 := $1_simple_map_contains_key'$1_string_String_address'($t20, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,40694,40732)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // if ($t21) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:878:9+192
    if ($t21) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:53+11
    assume {:print "$at(2,40788,40799)"} true;
L4:

    // $t22 := simple_map::borrow_mut<string::String, address>($t19, $t2) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:14+36
    assume {:print "$at(2,40749,40785)"} true;
    call $t22,$t19 := $1_simple_map_borrow_mut'$1_string_String_address'($t19, $t2);
    if ($abort_flag) {
        assume {:print "$at(2,40749,40785)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // write_ref($t22, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $t22 := $UpdateMutation($t22, $t3);

    // write_back[Reference($t19)[]]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $t19 := $UpdateMutation($t19, UpdateTable($Dereference($t19), ReadVec(p#$Mutation($t22), LenVec(p#$Mutation($t19))), $Dereference($t22)));

    // write_back[Reference($t18).roles (simple_map::SimpleMap<string::String, address>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $t18 := $UpdateMutation($t18, $Update'$1_vesting_VestingAccountManagement'_roles($Dereference($t18), $Dereference($t19)));

    // write_back[vesting::VestingAccountManagement@]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:13+51
    $1_vesting_VestingAccountManagement_$memory := $ResourceUpdate($1_vesting_VestingAccountManagement_$memory, $GlobalLocationAddress($t18),
        $Dereference($t18));

    // goto L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:879:64+1
    goto L5;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:29+5
    assume {:print "$at(2,40846,40851)"} true;
L3:

    // simple_map::add<string::String, address>($t19, $t2, $t3) on_abort goto L7 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:13+41
    assume {:print "$at(2,40830,40871)"} true;
    call $t19 := $1_simple_map_add'$1_string_String_address'($t19, $t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,40830,40871)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,22):", $t10} $t10 == $t10;
        goto L7;
    }

    // write_back[Reference($t18).roles (simple_map::SimpleMap<string::String, address>)]($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:13+41
    $t18 := $UpdateMutation($t18, $Update'$1_vesting_VestingAccountManagement'_roles($Dereference($t18), $Dereference($t19)));

    // write_back[vesting::VestingAccountManagement@]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:881:13+41
    $1_vesting_VestingAccountManagement_$memory := $ResourceUpdate($1_vesting_VestingAccountManagement_$memory, $GlobalLocationAddress($t18),
        $Dereference($t18));

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:882:10+1
    assume {:print "$at(2,40882,40883)"} true;
L5:

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
    assume {:print "$at(2,40888,40889)"} true;
L6:

    // assert Not(Not(exists[@85]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:372:9+53
    assume {:print "$at(3,15544,15597)"} true;
    assert {:msg "assert_failed(3,15544,15597): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#85, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:375:9+62
    assume {:print "$at(3,15828,15890)"} true;
    assert {:msg "assert_failed(3,15828,15890): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t8));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:375:9+62
    return;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
    assume {:print "$at(2,40888,40889)"} true;
L7:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:883:5+1
    assume {:print "$at(2,40888,40889)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun vesting::terminate_vesting_contract [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1102
procedure {:timeLimit 200} $1_vesting_terminate_vesting_contract$verify(_$t0: $signer, _$t1: int) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: $Mutation ($1_vesting_VestingContract);
    var $t6: $1_vesting_VestingContract;
    var $t7: int;
    var $t8: $Mutation ($1_vesting_VestingContract);
    var $t9: $1_vesting_VestingContract;
    var $t10: $1_vesting_StakingInfo;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t16: int;
    var $t17: bool;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: $Mutation (int);
    var $t22: int;
    var $t23: $Mutation (int);
    var $t24: $1_vesting_VestingContract;
    var $t25: $Mutation ($1_event_EventHandle'$1_vesting_TerminateEvent');
    var $t26: int;
    var $t27: $1_vesting_TerminateEvent;
    var $t0: $signer;
    var $t1: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume {:print "$at(2,32023,32024)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<account::Account>(): And(WellFormed($rsc), And(Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.rotation_capability_offer($rsc)))), 1), Le(Len<address>(select option::Option.vec(select account::CapabilityOffer.for(select account::Account.signer_capability_offer($rsc)))), 1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_account_Account_$memory, $a_0)}(var $rsc := $ResourceValue($1_account_Account_$memory, $a_0);
    (($IsValid'$1_account_Account'($rsc) && ((LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_RotationCapability'($rotation_capability_offer#$1_account_Account($rsc)))) <= 1) && (LenVec($vec#$1_option_Option'address'($for#$1_account_CapabilityOffer'$1_account_SignerCapability'($signer_capability_offer#$1_account_Account($rsc)))) <= 1))))));

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<aptos_account::DirectTransferConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_aptos_account_DirectTransferConfig_$memory, $a_0);
    ($IsValid'$1_aptos_account_DirectTransferConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1102
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1102
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1102
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1102
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume {:print "$track_local(57,26,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:676:5+1
    assume {:print "$track_local(57,26,1):", $t1} $t1 == $t1;

    // assume Identical($t6, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t6 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // vesting::assert_active_vesting_contract($t1) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:677:9+48
    assume {:print "$at(2,32145,32193)"} true;
    call $1_vesting_assert_active_vesting_contract($t1);
    if ($abort_flag) {
        assume {:print "$at(2,32145,32193)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // vesting::distribute($t1) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:680:9+28
    assume {:print "$at(2,32315,32343)"} true;
    call $1_vesting_distribute($t1);
    if ($abort_flag) {
        assume {:print "$at(2,32315,32343)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t8 := borrow_global<vesting::VestingContract>($t1) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:682:32+17
    assume {:print "$at(2,32377,32394)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t8 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,32377,32394)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_local[vesting_contract]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:682:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t8);
    assume {:print "$track_local(57,26,5):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t9 := read_ref($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:683:21+25
    assume {:print "$at(2,32451,32476)"} true;
    $t9 := $Dereference($t8);

    // vesting::verify_admin($t0, $t9) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:683:9+37
    call $1_vesting_verify_admin($t0, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,32439,32476)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t10 := get_field<vesting::VestingContract>.staking($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:75+24
    assume {:print "$at(2,32552,32576)"} true;
    $t10 := $staking#$1_vesting_VestingContract($Dereference($t8));

    // $t11 := get_field<vesting::StakingInfo>.pool_address($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:75+37
    $t11 := $pool_address#$1_vesting_StakingInfo($t10);

    // ($t12, $t13, $t14, $t15) := stake::get_stake($t11) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:58+55
    call $t12,$t13,$t14,$t15 := $1_stake_get_stake($t11);
    if ($abort_flag) {
        assume {:print "$at(2,32535,32590)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // destroy($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:53+1

    // trace_local[pending_active_stake]($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:31+20
    assume {:print "$track_local(57,26,4):", $t14} $t14 == $t14;

    // destroy($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:28+1

    // trace_local[active_stake]($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:684:14+12
    assume {:print "$track_local(57,26,3):", $t12} $t12 == $t12;

    // $t16 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:41+1
    assume {:print "$at(2,32632,32633)"} true;
    $t16 := 0;
    assume $IsValid'u64'($t16);

    // $t17 := ==($t14, $t16) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:38+2
    $t17 := $IsEqual'u64'($t14, $t16);

    // if ($t17) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
    if ($t17) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
    assume {:print "$at(2,32600,32678)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
L0:

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t8)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), j)) ==> $IsEqual'num'(i, j))))))));

    // destroy($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
    assume {:print "$at(2,32600,32678)"} true;

    // $t18 := 11 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:65+20
    $t18 := 11;
    assume $IsValid'u64'($t18);

    // $t19 := error::invalid_state($t18) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:44+42
    call $t19 := $1_error_invalid_state($t18);
    if ($abort_flag) {
        assume {:print "$at(2,32635,32677)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // trace_abort($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
    assume {:print "$at(2,32600,32678)"} true;
    assume {:print "$track_abort(57,26):", $t19} $t19 == $t19;

    // $t7 := move($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
    $t7 := $t19;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:685:9+78
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:688:34+23
    assume {:print "$at(2,32760,32783)"} true;
L2:

    // $t20 := 2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:688:34+23
    assume {:print "$at(2,32760,32783)"} true;
    $t20 := 2;
    assume $IsValid'u64'($t20);

    // $t21 := borrow_field<vesting::VestingContract>.state($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:688:9+22
    $t21 := $ChildMutation($t8, 0, $state#$1_vesting_VestingContract($Dereference($t8)));

    // write_ref($t21, $t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:688:9+48
    $t21 := $UpdateMutation($t21, $t20);

    // write_back[Reference($t8).state (u64)]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:688:9+48
    $t8 := $UpdateMutation($t8, $Update'$1_vesting_VestingContract'_state($Dereference($t8), $Dereference($t21)));

    // $t22 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:689:44+1
    assume {:print "$at(2,32828,32829)"} true;
    $t22 := 0;
    assume $IsValid'u64'($t22);

    // $t23 := borrow_field<vesting::VestingContract>.remaining_grant($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:689:9+32
    $t23 := $ChildMutation($t8, 7, $remaining_grant#$1_vesting_VestingContract($Dereference($t8)));

    // write_ref($t23, $t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:689:9+36
    $t23 := $UpdateMutation($t23, $t22);

    // write_back[Reference($t8).remaining_grant (u64)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:689:9+36
    $t8 := $UpdateMutation($t8, $Update'$1_vesting_VestingContract'_remaining_grant($Dereference($t8), $Dereference($t23)));

    // $t24 := read_ref($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:690:21+32
    assume {:print "$at(2,32851,32883)"} true;
    $t24 := $Dereference($t8);

    // vesting::unlock_stake($t24, $t12) on_abort goto L4 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:690:9+44
    call $1_vesting_unlock_stake($t24, $t12);
    if ($abort_flag) {
        assume {:print "$at(2,32839,32883)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,26):", $t7} $t7 == $t7;
        goto L4;
    }

    // $t25 := borrow_field<vesting::VestingContract>.terminate_events($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:693:13+38
    assume {:print "$at(2,32918,32956)"} true;
    $t25 := $ChildMutation($t8, 16, $terminate_events#$1_vesting_VestingContract($Dereference($t8)));

    // $t26 := get_field<vesting::VestingContract>.admin($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:695:24+22
    assume {:print "$at(2,33010,33032)"} true;
    $t26 := $admin#$1_vesting_VestingContract($Dereference($t8));

    // $t27 := pack vesting::TerminateEvent($t26, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:694:13+137
    assume {:print "$at(2,32970,33107)"} true;
    $t27 := $1_vesting_TerminateEvent($t26, $t1);

    // opaque begin: event::emit_event<vesting::TerminateEvent>($t25, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:692:9+224
    assume {:print "$at(2,32894,33118)"} true;

    // opaque end: event::emit_event<vesting::TerminateEvent>($t25, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:692:9+224

    // write_back[Reference($t8).terminate_events (event::EventHandle<vesting::TerminateEvent>)]($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:692:9+224
    $t8 := $UpdateMutation($t8, $Update'$1_vesting_VestingContract'_terminate_events($Dereference($t8), $Dereference($t25)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t8)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t8)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t8))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t8) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:692:9+224
    assume {:print "$at(2,32894,33118)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t8),
        $Dereference($t8));

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:699:5+1
    assume {:print "$at(2,33124,33125)"} true;
L3:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:699:5+1
    assume {:print "$at(2,33124,33125)"} true;
    assert {:msg "assert_failed(2,33124,33125): function does not abort under this condition"}
      !false;

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:699:5+1
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:699:5+1
L4:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:699:5+1
    assume {:print "$at(2,33124,33125)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun vesting::total_accumulated_rewards [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+521
procedure {:inline 1} $1_vesting_total_accumulated_rewards(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_VestingContract;
    var $t4: int;
    var $t5: int;
    var $t6: Table int ($1_staking_contract_StakingContract);
    var $t7: $1_staking_contract_StakingContract;
    var $t8: int;
    var $t9: $1_stake_StakePool;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $1_vesting_VestingContract;
    var $t16: $1_vesting_VestingContract;
    var $t17: int;
    var $t18: $1_vesting_VestingContract;
    var $t19: $1_vesting_StakingInfo;
    var $t20: int;
    var $t21: Table int ($1_staking_contract_StakingContract);
    var $t22: $1_staking_contract_StakingContract;
    var $t23: Table int ($1_staking_contract_StakingContract);
    var $t24: int;
    var $t25: $1_stake_StakePool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t0: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;

    // bytecode translation starts here
    // assume Identical($t3, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:60:9+73
    assume {:print "$at(3,2125,2198)"} true;
    assume ($t3 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume Identical($t4, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:62:9+38
    assume {:print "$at(3,2208,2246)"} true;
    assume ($t4 == $t0);

    // assume Identical($t5, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:63:9+49
    assume {:print "$at(3,2255,2304)"} true;
    assume ($t5 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t3)));

    // assume Identical($t6, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:64:9+82
    assume {:print "$at(3,2313,2395)"} true;
    assume ($t6 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t4)));

    // assume Identical($t7, simple_map::spec_get<address, staking_contract::StakingContract>($t6, $t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:65:9+73
    assume {:print "$at(3,2404,2477)"} true;
    assume ($t7 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t6, $t5));

    // assume Identical($t8, select staking_contract::StakingContract.pool_address($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:70:9+49
    assume {:print "$at(3,2627,2676)"} true;
    assume ($t8 == $pool_address#$1_staking_contract_StakingContract($t7));

    // assume Identical($t9, global<stake::StakePool>($t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:71:9+63
    assume {:print "$at(3,2685,2748)"} true;
    assume ($t9 == $ResourceValue($1_stake_StakePool_$memory, $t8));

    // assume Identical($t10, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:72:9+44
    assume {:print "$at(3,2757,2801)"} true;
    assume ($t10 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t9)));

    // assume Identical($t11, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:73:9+60
    assume {:print "$at(3,2810,2870)"} true;
    assume ($t11 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t9)));

    // assume Identical($t12, Add($t10, $t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:74:9+49
    assume {:print "$at(3,2879,2928)"} true;
    assume ($t12 == ($t10 + $t11));

    // assume Identical($t13, Sub($t12, select staking_contract::StakingContract.principal($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:75:9+74
    assume {:print "$at(3,2937,3011)"} true;
    assume ($t13 == ($t12 - $principal#$1_staking_contract_StakingContract($t7)));

    // assume Identical($t14, Div(Mul($t13, select staking_contract::StakingContract.commission_percentage($t7)), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:76:9+91
    assume {:print "$at(3,3020,3111)"} true;
    assume ($t14 == (($t13 * $commission_percentage#$1_staking_contract_StakingContract($t7)) div 100));

    // assume Identical($t15, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t15 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume And(Ge(select staking_contract::StakingContract.commission_percentage($t7), 0), Le(select staking_contract::StakingContract.commission_percentage($t7), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:57:9+102
    assume {:print "$at(3,1905,2007)"} true;
    assume (($commission_percentage#$1_staking_contract_StakingContract($t7) >= 0) && ($commission_percentage#$1_staking_contract_StakingContract($t7) <= 100));

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume {:print "$at(2,16826,16827)"} true;
    assume {:print "$track_local(57,27,0):", $t0} $t0 == $t0;

    // assume Identical($t16, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t16 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:357:9+56
    assume {:print "$at(2,16938,16994)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,16938,16994)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // $t18 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:359:32+13
    assume {:print "$at(2,17028,17041)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,17028,17041)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[vesting_contract]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:359:13+16
    assume {:print "$track_local(57,27,2):", $t18} $t18 == $t18;

    // $t19 := get_field<vesting::VestingContract>.staking($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:361:82+24
    assume {:print "$at(2,17224,17248)"} true;
    $t19 := $staking#$1_vesting_VestingContract($t18);

    // $t20 := get_field<vesting::StakingInfo>.operator($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:361:82+33
    $t20 := $operator#$1_vesting_StakingInfo($t19);

    // assume Identical($t21, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:25:9+64
    assume {:print "$at(134,958,1022)"} true;
    assume ($t21 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // assume Identical($t22, simple_map::spec_get<address, staking_contract::StakingContract>($t21, $t20)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:26:9+73
    assume {:print "$at(134,1031,1104)"} true;
    assume ($t22 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t21, $t20));

    // assume Identical($t23, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:259:9+64
    assume {:print "$at(134,11186,11250)"} true;
    assume ($t23 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // assume Identical($t24, select staking_contract::StakingContract.pool_address($t22)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t24 == $pool_address#$1_staking_contract_StakingContract($t22));

    // assume Identical($t25, global<stake::StakePool>($t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t25 == $ResourceValue($1_stake_StakePool_$memory, $t24));

    // assume Identical($t26, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t25))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t26 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t25)));

    // assume Identical($t27, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t25))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t27 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t25)));

    // assume Identical($t28, Add($t26, $t27)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t28 == ($t26 + $t27));

    // assume Identical($t29, Sub($t28, select staking_contract::StakingContract.principal($t22))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t29 == ($t28 - $principal#$1_staking_contract_StakingContract($t22)));

    // ($t30, $t31, $t32) := staking_contract::staking_contract_amounts($t0, $t20) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:361:13+103
    assume {:print "$at(2,17155,17258)"} true;
    call $t30,$t31,$t32 := $1_staking_contract_staking_contract_amounts($t0, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,17155,17258)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[commission_amount]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:360:37+17
    assume {:print "$at(2,17122,17139)"} true;
    assume {:print "$track_local(57,27,1):", $t32} $t32 == $t32;

    // destroy($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:360:34+1

    // $t33 := get_field<vesting::VestingContract>.remaining_grant($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:30+32
    assume {:print "$at(2,17289,17321)"} true;
    $t33 := $remaining_grant#$1_vesting_VestingContract($t18);

    // $t34 := -($t30, $t33) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:28+1
    call $t34 := $Sub($t30, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,17287,17288)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // $t35 := -($t34, $t32) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:63+1
    call $t35 := $Sub($t34, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,17322,17323)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_return[0]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:9+73
    assume {:print "$track_return(57,27,0):", $t35} $t35 == $t35;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
    assume {:print "$at(2,17346,17347)"} true;
L1:

    // return $t35 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
    assume {:print "$at(2,17346,17347)"} true;
    $ret0 := $t35;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
L2:

    // abort($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
    assume {:print "$at(2,17346,17347)"} true;
    $abort_code := $t17;
    $abort_flag := true;
    return;

}

// fun vesting::total_accumulated_rewards [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+521
procedure {:timeLimit 200} $1_vesting_total_accumulated_rewards$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_VestingContract;
    var $t4: int;
    var $t5: int;
    var $t6: Table int ($1_staking_contract_StakingContract);
    var $t7: $1_staking_contract_StakingContract;
    var $t8: int;
    var $t9: $1_stake_StakePool;
    var $t10: int;
    var $t11: int;
    var $t12: int;
    var $t13: int;
    var $t14: int;
    var $t15: $1_vesting_VestingContract;
    var $t16: $1_vesting_VestingContract;
    var $t17: int;
    var $t18: $1_vesting_VestingContract;
    var $t19: $1_vesting_StakingInfo;
    var $t20: int;
    var $t21: Table int ($1_staking_contract_StakingContract);
    var $t22: $1_staking_contract_StakingContract;
    var $t23: Table int ($1_staking_contract_StakingContract);
    var $t24: int;
    var $t25: $1_stake_StakePool;
    var $t26: int;
    var $t27: int;
    var $t28: int;
    var $t29: int;
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t0: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_staking_contract_Store_$memory#116: $Memory $1_staking_contract_Store;
    var $1_stake_StakePool_$memory#117: $Memory $1_stake_StakePool;
    var $1_vesting_VestingContract_$memory#118: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume {:print "$at(2,16826,16827)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+521
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Identical($t3, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:60:9+73
    assume {:print "$at(3,2125,2198)"} true;
    assume ($t3 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume Identical($t4, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:62:9+38
    assume {:print "$at(3,2208,2246)"} true;
    assume ($t4 == $t0);

    // assume Identical($t5, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:63:9+49
    assume {:print "$at(3,2255,2304)"} true;
    assume ($t5 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t3)));

    // assume Identical($t6, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:64:9+82
    assume {:print "$at(3,2313,2395)"} true;
    assume ($t6 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t4)));

    // assume Identical($t7, simple_map::spec_get<address, staking_contract::StakingContract>($t6, $t5)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:65:9+73
    assume {:print "$at(3,2404,2477)"} true;
    assume ($t7 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t6, $t5));

    // assume Identical($t8, select staking_contract::StakingContract.pool_address($t7)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:70:9+49
    assume {:print "$at(3,2627,2676)"} true;
    assume ($t8 == $pool_address#$1_staking_contract_StakingContract($t7));

    // assume Identical($t9, global<stake::StakePool>($t8)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:71:9+63
    assume {:print "$at(3,2685,2748)"} true;
    assume ($t9 == $ResourceValue($1_stake_StakePool_$memory, $t8));

    // assume Identical($t10, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:72:9+44
    assume {:print "$at(3,2757,2801)"} true;
    assume ($t10 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t9)));

    // assume Identical($t11, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t9))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:73:9+60
    assume {:print "$at(3,2810,2870)"} true;
    assume ($t11 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t9)));

    // assume Identical($t12, Add($t10, $t11)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:74:9+49
    assume {:print "$at(3,2879,2928)"} true;
    assume ($t12 == ($t10 + $t11));

    // assume Identical($t13, Sub($t12, select staking_contract::StakingContract.principal($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:75:9+74
    assume {:print "$at(3,2937,3011)"} true;
    assume ($t13 == ($t12 - $principal#$1_staking_contract_StakingContract($t7)));

    // assume Identical($t14, Div(Mul($t13, select staking_contract::StakingContract.commission_percentage($t7)), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:76:9+91
    assume {:print "$at(3,3020,3111)"} true;
    assume ($t14 == (($t13 * $commission_percentage#$1_staking_contract_StakingContract($t7)) div 100));

    // assume Identical($t15, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t15 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume And(Ge(select staking_contract::StakingContract.commission_percentage($t7), 0), Le(select staking_contract::StakingContract.commission_percentage($t7), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:57:9+102
    assume {:print "$at(3,1905,2007)"} true;
    assume (($commission_percentage#$1_staking_contract_StakingContract($t7) >= 0) && ($commission_percentage#$1_staking_contract_StakingContract($t7) <= 100));

    // @117 := save_mem(stake::StakePool) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:57:9+102
    $1_stake_StakePool_$memory#117 := $1_stake_StakePool_$memory;

    // @116 := save_mem(staking_contract::Store) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:57:9+102
    $1_staking_contract_Store_$memory#116 := $1_staking_contract_Store_$memory;

    // @118 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:57:9+102
    $1_vesting_VestingContract_$memory#118 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:356:5+1
    assume {:print "$at(2,16826,16827)"} true;
    assume {:print "$track_local(57,27,0):", $t0} $t0 == $t0;

    // assume Identical($t16, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t16 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::assert_active_vesting_contract($t0) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:357:9+56
    assume {:print "$at(2,16938,16994)"} true;
    call $1_vesting_assert_active_vesting_contract($t0);
    if ($abort_flag) {
        assume {:print "$at(2,16938,16994)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // $t18 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:359:32+13
    assume {:print "$at(2,17028,17041)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t18 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,17028,17041)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[vesting_contract]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:359:13+16
    assume {:print "$track_local(57,27,2):", $t18} $t18 == $t18;

    // $t19 := get_field<vesting::VestingContract>.staking($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:361:82+24
    assume {:print "$at(2,17224,17248)"} true;
    $t19 := $staking#$1_vesting_VestingContract($t18);

    // $t20 := get_field<vesting::StakingInfo>.operator($t19) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:361:82+33
    $t20 := $operator#$1_vesting_StakingInfo($t19);

    // assume Identical($t21, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:25:9+64
    assume {:print "$at(134,958,1022)"} true;
    assume ($t21 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // assume Identical($t22, simple_map::spec_get<address, staking_contract::StakingContract>($t21, $t20)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:26:9+73
    assume {:print "$at(134,1031,1104)"} true;
    assume ($t22 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t21, $t20));

    // assume Identical($t23, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:259:9+64
    assume {:print "$at(134,11186,11250)"} true;
    assume ($t23 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t0)));

    // assume Identical($t24, select staking_contract::StakingContract.pool_address($t22)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:299:9+49
    assume {:print "$at(134,12621,12670)"} true;
    assume ($t24 == $pool_address#$1_staking_contract_StakingContract($t22));

    // assume Identical($t25, global<stake::StakePool>($t24)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:300:9+56
    assume {:print "$at(134,12679,12735)"} true;
    assume ($t25 == $ResourceValue($1_stake_StakePool_$memory, $t24));

    // assume Identical($t26, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t25))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:301:9+44
    assume {:print "$at(134,12744,12788)"} true;
    assume ($t26 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t25)));

    // assume Identical($t27, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t25))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:302:9+60
    assume {:print "$at(134,12797,12857)"} true;
    assume ($t27 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t25)));

    // assume Identical($t28, Add($t26, $t27)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:303:9+49
    assume {:print "$at(134,12866,12915)"} true;
    assume ($t28 == ($t26 + $t27));

    // assume Identical($t29, Sub($t28, select staking_contract::StakingContract.principal($t22))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:304:9+74
    assume {:print "$at(134,12924,12998)"} true;
    assume ($t29 == ($t28 - $principal#$1_staking_contract_StakingContract($t22)));

    // ($t30, $t31, $t32) := staking_contract::staking_contract_amounts($t0, $t20) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:361:13+103
    assume {:print "$at(2,17155,17258)"} true;
    call $t30,$t31,$t32 := $1_staking_contract_staking_contract_amounts($t0, $t20);
    if ($abort_flag) {
        assume {:print "$at(2,17155,17258)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_local[commission_amount]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:360:37+17
    assume {:print "$at(2,17122,17139)"} true;
    assume {:print "$track_local(57,27,1):", $t32} $t32 == $t32;

    // destroy($t31) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:360:34+1

    // $t33 := get_field<vesting::VestingContract>.remaining_grant($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:30+32
    assume {:print "$at(2,17289,17321)"} true;
    $t33 := $remaining_grant#$1_vesting_VestingContract($t18);

    // $t34 := -($t30, $t33) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:28+1
    call $t34 := $Sub($t30, $t33);
    if ($abort_flag) {
        assume {:print "$at(2,17287,17288)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // $t35 := -($t34, $t32) on_abort goto L2 with $t17 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:63+1
    call $t35 := $Sub($t34, $t32);
    if ($abort_flag) {
        assume {:print "$at(2,17322,17323)"} true;
        $t17 := $abort_code;
        assume {:print "$track_abort(57,27):", $t17} $t17 == $t17;
        goto L2;
    }

    // trace_return[0]($t35) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:362:9+73
    assume {:print "$track_return(57,27,0):", $t35} $t35 == $t35;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
    assume {:print "$at(2,17346,17347)"} true;
L1:

    // assert Not(Not(exists[@116]<staking_contract::Store>($t4))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:67:9+51
    assume {:print "$at(3,2487,2538)"} true;
    assert {:msg "assert_failed(3,2487,2538): function does not abort under this condition"}
      !!$ResourceExists($1_staking_contract_Store_$memory#116, $t4);

    // assert Not(Not(simple_map::spec_contains_key[]<address, staking_contract::StakingContract>($t6, $t5))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:68:9+70
    assume {:print "$at(3,2547,2617)"} true;
    assert {:msg "assert_failed(3,2547,2617): function does not abort under this condition"}
      !!$1_simple_map_spec_contains_key'address_$1_staking_contract_StakingContract'($t6, $t5);

    // assert Not(Not(exists[@117]<stake::StakePool>($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:77:9+50
    assume {:print "$at(3,3120,3170)"} true;
    assert {:msg "assert_failed(3,3120,3170): function does not abort under this condition"}
      !!$ResourceExists($1_stake_StakePool_$memory#117, $t8);

    // assert Not(Gt(Add($t10, $t11), 18446744073709551615)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:78:9+44
    assume {:print "$at(3,3179,3223)"} true;
    assert {:msg "assert_failed(3,3179,3223): function does not abort under this condition"}
      !(($t10 + $t11) > 18446744073709551615);

    // assert Not(Lt($t12, select staking_contract::StakingContract.principal($t7))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:79:9+58
    assume {:print "$at(3,3232,3290)"} true;
    assert {:msg "assert_failed(3,3232,3290): function does not abort under this condition"}
      !($t12 < $principal#$1_staking_contract_StakingContract($t7));

    // assert Not(Gt(Mul($t13, select staking_contract::StakingContract.commission_percentage($t7)), 18446744073709551615)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:80:9+81
    assume {:print "$at(3,3299,3380)"} true;
    assert {:msg "assert_failed(3,3299,3380): function does not abort under this condition"}
      !(($t13 * $commission_percentage#$1_staking_contract_StakingContract($t7)) > 18446744073709551615);

    // assert Not(Gt(Add(select vesting::VestingContract.remaining_grant($t3), $t14), $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:81:9+86
    assume {:print "$at(3,3389,3475)"} true;
    assert {:msg "assert_failed(3,3389,3475): function does not abort under this condition"}
      !(($remaining_grant#$1_vesting_VestingContract($t3) + $t14) > $t12);

    // assert Not(Lt($t12, select vesting::VestingContract.remaining_grant($t3))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:82:9+64
    assume {:print "$at(3,3484,3548)"} true;
    assert {:msg "assert_failed(3,3484,3548): function does not abort under this condition"}
      !($t12 < $remaining_grant#$1_vesting_VestingContract($t3));

    // assert Not(Not(exists[@118]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:388:9+53
    assume {:print "$at(3,16316,16369)"} true;
    assert {:msg "assert_failed(3,16316,16369): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#118, $t0);

    // assert Not(Neq<u64>(select vesting::VestingContract.state($t15), 1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    assume {:print "$at(3,16452,16508)"} true;
    assert {:msg "assert_failed(3,16452,16508): function does not abort under this condition"}
      !!$IsEqual'u64'($state#$1_vesting_VestingContract($t15), 1);

    // return $t35 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:390:9+56
    $ret0 := $t35;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
    assume {:print "$at(2,17346,17347)"} true;
L2:

    // abort($t17) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:363:5+1
    assume {:print "$at(2,17346,17347)"} true;
    $abort_code := $t17;
    $abort_flag := true;
    return;

}

// fun vesting::update_operator [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1149
procedure {:timeLimit 200} $1_vesting_update_operator$verify(_$t0: $signer, _$t1: int, _$t2: int, _$t3: int) returns ()
{
    // declare local variables
    var $t4: $signer;
    var $t5: $signer;
    var $t6: int;
    var $t7: $Mutation ($1_vesting_VestingContract);
    var $t8: $1_vesting_VestingContract;
    var $t9: $Mutation ($1_vesting_VestingContract);
    var $t10: int;
    var $t11: $1_vesting_VestingContract;
    var $t12: $1_vesting_VestingContract;
    var $t13: $signer;
    var $t14: $1_vesting_StakingInfo;
    var $t15: int;
    var $t16: int;
    var $t17: $1_staking_contract_Store;
    var $t18: Table int ($1_staking_contract_StakingContract);
    var $t19: Table int ($1_staking_contract_StakingContract);
    var $t20: $Mutation ($1_vesting_StakingInfo);
    var $t21: $Mutation (int);
    var $t22: $Mutation ($1_vesting_StakingInfo);
    var $t23: $Mutation (int);
    var $t24: $Mutation ($1_event_EventHandle'$1_vesting_UpdateOperatorEvent');
    var $t25: int;
    var $t26: $1_vesting_StakingInfo;
    var $t27: int;
    var $t28: $1_vesting_UpdateOperatorEvent;
    var $t0: $signer;
    var $t1: int;
    var $t2: int;
    var $t3: int;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'signer': $signer;
    var $temp_0'u64': int;
    var $1_vesting_VestingContract_$memory#133: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;
    $t1 := _$t1;
    $t2 := _$t2;
    $t3 := _$t3;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume {:print "$at(2,34297,34298)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume $IsValid'address'($t1);

    // assume WellFormed($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume $IsValid'address'($t2);

    // assume WellFormed($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume $IsValid'u64'($t3);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1149
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1149
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1149
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1149
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // assume Identical($t8, global<vesting::VestingContract>($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:382:9+65
    assume {:print "$at(3,16064,16129)"} true;
    assume ($t8 == $ResourceValue($1_vesting_VestingContract_$memory, $t1));

    // @133 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume {:print "$at(2,34297,34298)"} true;
    $1_vesting_VestingContract_$memory#133 := $1_vesting_VestingContract_$memory;

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume {:print "$track_local(57,31,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume {:print "$track_local(57,31,1):", $t1} $t1 == $t1;

    // trace_local[new_operator]($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume {:print "$track_local(57,31,2):", $t2} $t2 == $t2;

    // trace_local[commission_percentage]($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:727:5+1
    assume {:print "$track_local(57,31,3):", $t3} $t3 == $t3;

    // $t9 := borrow_global<vesting::VestingContract>($t1) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:733:32+17
    assume {:print "$at(2,34521,34538)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t1)) {
        call $ExecFailureAbort();
    } else {
        $t9 := $Mutation($Global($t1), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t1));
    }
    if ($abort_flag) {
        assume {:print "$at(2,34521,34538)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,31):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[vesting_contract]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:733:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t9);
    assume {:print "$track_local(57,31,7):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t11 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:734:21+25
    assume {:print "$at(2,34595,34620)"} true;
    $t11 := $Dereference($t9);

    // vesting::verify_admin($t0, $t11) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:734:9+37
    call $1_vesting_verify_admin($t0, $t11);
    if ($abort_flag) {
        assume {:print "$at(2,34583,34620)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,31):", $t10} $t10 == $t10;
        goto L2;
    }

    // $t12 := read_ref($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:735:68+16
    assume {:print "$at(2,34689,34705)"} true;
    $t12 := $Dereference($t9);

    // $t13 := vesting::get_vesting_account_signer_internal($t12) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:735:32+53
    call $t13 := $1_vesting_get_vesting_account_signer_internal($t12);
    if ($abort_flag) {
        assume {:print "$at(2,34653,34706)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,31):", $t10} $t10 == $t10;
        goto L2;
    }

    // trace_local[contract_signer]($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:735:13+15
    assume {:print "$track_local(57,31,5):", $t13} $t13 == $t13;

    // $t14 := get_field<vesting::VestingContract>.staking($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:736:28+24
    assume {:print "$at(2,34735,34759)"} true;
    $t14 := $staking#$1_vesting_VestingContract($Dereference($t9));

    // $t15 := get_field<vesting::StakingInfo>.operator($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:736:28+33
    $t15 := $operator#$1_vesting_StakingInfo($t14);

    // trace_local[old_operator]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:736:13+12
    assume {:print "$track_local(57,31,6):", $t15} $t15 == $t15;

    // assume Identical($t16, signer::$address_of($t13)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:170:9+48
    assume {:print "$at(134,7475,7523)"} true;
    assume ($t16 == $1_signer_$address_of($t13));

    // assume Identical($t17, global<staking_contract::Store>($t16)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:172:9+42
    assume {:print "$at(134,7620,7662)"} true;
    assume ($t17 == $ResourceValue($1_staking_contract_Store_$memory, $t16));

    // assume Identical($t18, select staking_contract::Store.staking_contracts($t17)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:173:9+48
    assume {:print "$at(134,7671,7719)"} true;
    assume ($t18 == $staking_contracts#$1_staking_contract_Store($t17));

    // assume Identical($t19, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t19 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t16)));

    // staking_contract::switch_operator($t13, $t15, $t2, $t3) on_abort goto L2 with $t10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:737:9+101
    assume {:print "$at(2,34778,34879)"} true;
    call $1_staking_contract_switch_operator($t13, $t15, $t2, $t3);
    if ($abort_flag) {
        assume {:print "$at(2,34778,34879)"} true;
        $t10 := $abort_code;
        assume {:print "$track_abort(57,31):", $t10} $t10 == $t10;
        goto L2;
    }

    // $t20 := borrow_field<vesting::VestingContract>.staking($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:738:9+24
    assume {:print "$at(2,34889,34913)"} true;
    $t20 := $ChildMutation($t9, 6, $staking#$1_vesting_VestingContract($Dereference($t9)));

    // $t21 := borrow_field<vesting::StakingInfo>.operator($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:738:9+33
    $t21 := $ChildMutation($t20, 1, $operator#$1_vesting_StakingInfo($Dereference($t20)));

    // write_ref($t21, $t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:738:9+48
    $t21 := $UpdateMutation($t21, $t2);

    // write_back[Reference($t20).operator (address)]($t21) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:738:9+48
    $t20 := $UpdateMutation($t20, $Update'$1_vesting_StakingInfo'_operator($Dereference($t20), $Dereference($t21)));

    // write_back[Reference($t9).staking (vesting::StakingInfo)]($t20) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:738:9+48
    $t9 := $UpdateMutation($t9, $Update'$1_vesting_VestingContract'_staking($Dereference($t9), $Dereference($t20)));

    // $t22 := borrow_field<vesting::VestingContract>.staking($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:739:9+24
    assume {:print "$at(2,34947,34971)"} true;
    $t22 := $ChildMutation($t9, 6, $staking#$1_vesting_VestingContract($Dereference($t9)));

    // $t23 := borrow_field<vesting::StakingInfo>.commission_percentage($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:739:9+46
    $t23 := $ChildMutation($t22, 3, $commission_percentage#$1_vesting_StakingInfo($Dereference($t22)));

    // write_ref($t23, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:739:9+70
    $t23 := $UpdateMutation($t23, $t3);

    // write_back[Reference($t22).commission_percentage (u64)]($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:739:9+70
    $t22 := $UpdateMutation($t22, $Update'$1_vesting_StakingInfo'_commission_percentage($Dereference($t22), $Dereference($t23)));

    // write_back[Reference($t9).staking (vesting::StakingInfo)]($t22) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:739:9+70
    $t9 := $UpdateMutation($t9, $Update'$1_vesting_VestingContract'_staking($Dereference($t9), $Dereference($t22)));

    // $t24 := borrow_field<vesting::VestingContract>.update_operator_events($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:742:13+44
    assume {:print "$at(2,35052,35096)"} true;
    $t24 := $ChildMutation($t9, 9, $update_operator_events#$1_vesting_VestingContract($Dereference($t9)));

    // $t25 := get_field<vesting::VestingContract>.admin($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:744:24+22
    assume {:print "$at(2,35155,35177)"} true;
    $t25 := $admin#$1_vesting_VestingContract($Dereference($t9));

    // $t26 := get_field<vesting::VestingContract>.staking($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:746:39+24
    assume {:print "$at(2,35277,35301)"} true;
    $t26 := $staking#$1_vesting_VestingContract($Dereference($t9));

    // $t27 := get_field<vesting::StakingInfo>.pool_address($t26) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:746:39+37
    $t27 := $pool_address#$1_vesting_StakingInfo($t26);

    // $t28 := pack vesting::UpdateOperatorEvent($t25, $t1, $t27, $t15, $t2, $t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:743:13+318
    assume {:print "$at(2,35110,35428)"} true;
    $t28 := $1_vesting_UpdateOperatorEvent($t25, $t1, $t27, $t15, $t2, $t3);

    // opaque begin: event::emit_event<vesting::UpdateOperatorEvent>($t24, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:741:9+411
    assume {:print "$at(2,35028,35439)"} true;

    // opaque end: event::emit_event<vesting::UpdateOperatorEvent>($t24, $t28) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:741:9+411

    // write_back[Reference($t9).update_operator_events (event::EventHandle<vesting::UpdateOperatorEvent>)]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:741:9+411
    $t9 := $UpdateMutation($t9, $Update'$1_vesting_VestingContract'_update_operator_events($Dereference($t9), $Dereference($t24)));

    // assert forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t9)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), addr)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:16:9+135
    assume {:print "$at(59,538,673)"} true;
    assert {:msg "assert_failed(59,538,673): data invariant does not hold"}
      (forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), addr))));

    // assert forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t9)), j)), Eq<num>(i, j)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    // data invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/sources/pool_u64.spec.move:20:9+129
    assume {:print "$at(59,738,867)"} true;
    assert {:msg "assert_failed(59,738,867): data invariant does not hold"}
      (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($Dereference($t9))), j)) ==> $IsEqual'num'(i, j))))))));

    // write_back[vesting::VestingContract@]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:741:9+411
    assume {:print "$at(2,35028,35439)"} true;
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t9),
        $Dereference($t9));

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:752:5+1
    assume {:print "$at(2,35445,35446)"} true;
L1:

    // assert Not(Not(exists[@133]<vesting::VestingContract>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:381:9+53
    assume {:print "$at(3,16002,16055)"} true;
    assert {:msg "assert_failed(3,16002,16055): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#133, $t1);

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t8))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    assume {:print "$at(3,16138,16200)"} true;
    assert {:msg "assert_failed(3,16138,16200): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t8));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:383:9+62
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:752:5+1
    assume {:print "$at(2,35445,35446)"} true;
L2:

    // abort($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:752:5+1
    assume {:print "$at(2,35445,35446)"} true;
    $abort_code := $t10;
    $abort_flag := true;
    return;

}

// fun vesting::verify_admin [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+182
procedure {:inline 1} $1_vesting_verify_admin(_$t0: $signer, _$t1: $1_vesting_VestingContract) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t0: $signer;
    var $t1: $1_vesting_VestingContract;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+1
    assume {:print "$at(2,43701,43702)"} true;
    assume {:print "$track_local(57,34,0):", $t0} $t0 == $t0;

    // trace_local[vesting_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+1
    assume {:print "$track_local(57,34,1):", $t1} $t1 == $t1;

    // $t2 := signer::address_of($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:17+25
    assume {:print "$at(2,43788,43813)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,43788,43813)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t4 := get_field<vesting::VestingContract>.admin($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:46+22
    $t4 := $admin#$1_vesting_VestingContract($t1);

    // $t5 := ==($t2, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:43+2
    $t5 := $IsEqual'address'($t2, $t4);

    // if ($t5) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    assume {:print "$at(2,43780,43876)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:93+10
L0:

    // $t6 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:93+10
    assume {:print "$at(2,43864,43874)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::unauthenticated($t6) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:70+34
    call $t7 := $1_error_unauthenticated($t6);
    if ($abort_flag) {
        assume {:print "$at(2,43841,43875)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    assume {:print "$at(2,43780,43876)"} true;
    assume {:print "$track_abort(57,34):", $t7} $t7 == $t7;

    // $t3 := move($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    $t3 := $t7;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:105+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:939:5+1
    assume {:print "$at(2,43882,43883)"} true;
L3:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:939:5+1
    assume {:print "$at(2,43882,43883)"} true;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:939:5+1
L4:

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:939:5+1
    assume {:print "$at(2,43882,43883)"} true;
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun vesting::verify_admin [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+182
procedure {:timeLimit 200} $1_vesting_verify_admin$verify(_$t0: $signer, _$t1: $1_vesting_VestingContract) returns ()
{
    // declare local variables
    var $t2: int;
    var $t3: int;
    var $t4: int;
    var $t5: bool;
    var $t6: int;
    var $t7: int;
    var $t0: $signer;
    var $t1: $1_vesting_VestingContract;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'signer': $signer;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+1
    assume {:print "$at(2,43701,43702)"} true;
    assume $IsValid'signer'($t0) && $1_signer_is_txn_signer($t0) && $1_signer_is_txn_signer_addr($addr#$signer($t0));

    // assume And(WellFormed($t1), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t1)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t1)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t1)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t1)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t1)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t1)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+1
    assume ($IsValid'$1_vesting_VestingContract'($t1) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t1)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t1)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t1)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t1)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t1)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t1)), j)) ==> $IsEqual'num'(i, j))))))))));

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+1
    assume {:print "$track_local(57,34,0):", $t0} $t0 == $t0;

    // trace_local[vesting_contract]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:937:5+1
    assume {:print "$track_local(57,34,1):", $t1} $t1 == $t1;

    // $t2 := signer::address_of($t0) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:17+25
    assume {:print "$at(2,43788,43813)"} true;
    call $t2 := $1_signer_address_of($t0);
    if ($abort_flag) {
        assume {:print "$at(2,43788,43813)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // $t4 := get_field<vesting::VestingContract>.admin($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:46+22
    $t4 := $admin#$1_vesting_VestingContract($t1);

    // $t5 := ==($t2, $t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:43+2
    $t5 := $IsEqual'address'($t2, $t4);

    // if ($t5) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    if ($t5) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    assume {:print "$at(2,43780,43876)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:93+10
L0:

    // $t6 := 7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:93+10
    assume {:print "$at(2,43864,43874)"} true;
    $t6 := 7;
    assume $IsValid'u64'($t6);

    // $t7 := error::unauthenticated($t6) on_abort goto L4 with $t3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:70+34
    call $t7 := $1_error_unauthenticated($t6);
    if ($abort_flag) {
        assume {:print "$at(2,43841,43875)"} true;
        $t3 := $abort_code;
        assume {:print "$track_abort(57,34):", $t3} $t3 == $t3;
        goto L4;
    }

    // trace_abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    assume {:print "$at(2,43780,43876)"} true;
    assume {:print "$track_abort(57,34):", $t7} $t7 == $t7;

    // $t3 := move($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    $t3 := $t7;

    // goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:9+96
    goto L4;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:938:105+1
L2:

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:939:5+1
    assume {:print "$at(2,43882,43883)"} true;
L3:

    // assert Not(Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:344:9+62
    assume {:print "$at(3,14545,14607)"} true;
    assert {:msg "assert_failed(3,14545,14607): function does not abort under this condition"}
      !!$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t1));

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:344:9+62
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:939:5+1
    assume {:print "$at(2,43882,43883)"} true;
L4:

    // assert Neq<address>(signer::$address_of[]($t0), select vesting::VestingContract.admin($t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:343:5+148
    assume {:print "$at(3,14465,14613)"} true;
    assert {:msg "assert_failed(3,14465,14613): abort not covered by any of the `aborts_if` clauses"}
      !$IsEqual'address'($1_signer_$address_of($t0), $admin#$1_vesting_VestingContract($t1));

    // abort($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:343:5+148
    $abort_code := $t3;
    $abort_flag := true;
    return;

}

// fun vesting::vest [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:558:5+2656
procedure {:inline 1} $1_vesting_vest(_$t0: int) returns ()
{
    // declare local variables
    var $t1: $1_fixed_point32_FixedPoint32;
    var $t2: int;
    var $t3: int;
    var $t4: Vec ($1_fixed_point32_FixedPoint32);
    var $t5: int;
    var $t6: int;
    var $t7: $Mutation ($1_vesting_VestingContract);
    var $t8: $1_fixed_point32_FixedPoint32;
    var $t9: $Mutation ($1_vesting_VestingSchedule);
    var $t10: $1_vesting_VestingContract;
    var $t11: int;
    var $t12: int;
    var $t13: Table int ($1_staking_contract_StakingContract);
    var $t14: $1_staking_contract_StakingContract;
    var $t15: int;
    var $t16: $1_stake_StakePool;
    var $t17: int;
    var $t18: int;
    var $t19: int;
    var $t20: int;
    var $t21: int;
    var $t22: $1_vesting_VestingContract;
    var $t23: int;
    var $t24: $Mutation ($1_vesting_VestingContract);
    var $t25: $1_vesting_VestingSchedule;
    var $t26: int;
    var $t27: int;
    var $t28: bool;
    var $t29: $Mutation ($1_vesting_VestingSchedule);
    var $t30: int;
    var $t31: int;
    var $t32: int;
    var $t33: int;
    var $t34: int;
    var $t35: int;
    var $t36: int;
    var $t37: int;
    var $t38: bool;
    var $t39: Vec ($1_fixed_point32_FixedPoint32);
    var $t40: int;
    var $t41: int;
    var $t42: int;
    var $t43: bool;
    var $t44: int;
    var $t45: int;
    var $t46: int;
    var $t47: $1_pool_u64_Pool;
    var $t48: int;
    var $t49: int;
    var $t50: bool;
    var $t51: int;
    var $t52: int;
    var $t53: int;
    var $t54: int;
    var $t55: $Mutation (int);
    var $t56: $Mutation (int);
    var $t57: $1_vesting_VestingContract;
    var $t58: $Mutation ($1_event_EventHandle'$1_vesting_VestEvent');
    var $t59: int;
    var $t60: $1_vesting_StakingInfo;
    var $t61: int;
    var $t62: $1_vesting_VestEvent;
    var $t0: int;
    var $temp_0'$1_fixed_point32_FixedPoint32': $1_fixed_point32_FixedPoint32;
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'$1_vesting_VestingSchedule': $1_vesting_VestingSchedule;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $temp_0'vec'$1_fixed_point32_FixedPoint32'': Vec ($1_fixed_point32_FixedPoint32);
    $t0 := _$t0;

    // bytecode translation starts here
    // trace_local[contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:558:5+1
    assume {:print "$at(2,26481,26482)"} true;
    assume {:print "$track_local(57,35,0):", $t0} $t0 == $t0;

    // assume Identical($t10, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:60:9+73
    assume {:print "$at(3,2125,2198)"} true;
    assume ($t10 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // assume Identical($t11, $t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:62:9+38
    assume {:print "$at(3,2208,2246)"} true;
    assume ($t11 == $t0);

    // assume Identical($t12, select vesting::StakingInfo.operator(select vesting::VestingContract.staking($t10))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:63:9+49
    assume {:print "$at(3,2255,2304)"} true;
    assume ($t12 == $operator#$1_vesting_StakingInfo($staking#$1_vesting_VestingContract($t10)));

    // assume Identical($t13, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t11))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:64:9+82
    assume {:print "$at(3,2313,2395)"} true;
    assume ($t13 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t11)));

    // assume Identical($t14, simple_map::spec_get<address, staking_contract::StakingContract>($t13, $t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:65:9+73
    assume {:print "$at(3,2404,2477)"} true;
    assume ($t14 == $1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($t13, $t12));

    // assume Identical($t15, select staking_contract::StakingContract.pool_address($t14)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:70:9+49
    assume {:print "$at(3,2627,2676)"} true;
    assume ($t15 == $pool_address#$1_staking_contract_StakingContract($t14));

    // assume Identical($t16, global<stake::StakePool>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:71:9+63
    assume {:print "$at(3,2685,2748)"} true;
    assume ($t16 == $ResourceValue($1_stake_StakePool_$memory, $t15));

    // assume Identical($t17, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.active($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:72:9+44
    assume {:print "$at(3,2757,2801)"} true;
    assume ($t17 == $1_coin_$value'$1_aptos_coin_AptosCoin'($active#$1_stake_StakePool($t16)));

    // assume Identical($t18, coin::$value<aptos_coin::AptosCoin>(select stake::StakePool.pending_active($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:73:9+60
    assume {:print "$at(3,2810,2870)"} true;
    assume ($t18 == $1_coin_$value'$1_aptos_coin_AptosCoin'($pending_active#$1_stake_StakePool($t16)));

    // assume Identical($t19, Add($t17, $t18)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:74:9+49
    assume {:print "$at(3,2879,2928)"} true;
    assume ($t19 == ($t17 + $t18));

    // assume Identical($t20, Sub($t19, select staking_contract::StakingContract.principal($t14))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:75:9+74
    assume {:print "$at(3,2937,3011)"} true;
    assume ($t20 == ($t19 - $principal#$1_staking_contract_StakingContract($t14)));

    // assume Identical($t21, Div(Mul($t20, select staking_contract::StakingContract.commission_percentage($t14)), 100)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:76:9+91
    assume {:print "$at(3,3020,3111)"} true;
    assume ($t21 == (($t20 * $commission_percentage#$1_staking_contract_StakingContract($t14)) div 100));

    // assume Identical($t22, global<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:389:9+65
    assume {:print "$at(3,16378,16443)"} true;
    assume ($t22 == $ResourceValue($1_vesting_VestingContract_$memory, $t0));

    // vesting::unlock_rewards($t0) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:560:9+32
    assume {:print "$at(2,26610,26642)"} true;
    call $1_vesting_unlock_rewards($t0);
    if ($abort_flag) {
        assume {:print "$at(2,26610,26642)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t24 := borrow_global<vesting::VestingContract>($t0) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:564:32+17
    assume {:print "$at(2,26810,26827)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t24 := $Mutation($Global($t0), EmptyVec(), $ResourceValue($1_vesting_VestingContract_$memory, $t0));
    }
    if ($abort_flag) {
        assume {:print "$at(2,26810,26827)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // trace_local[vesting_contract]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:564:13+16
    $temp_0'$1_vesting_VestingContract' := $Dereference($t24);
    assume {:print "$track_local(57,35,7):", $temp_0'$1_vesting_VestingContract'} $temp_0'$1_vesting_VestingContract' == $temp_0'$1_vesting_VestingContract';

    // $t25 := get_field<vesting::VestingContract>.vesting_schedule($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:566:13+33
    assume {:print "$at(2,26932,26965)"} true;
    $t25 := $vesting_schedule#$1_vesting_VestingContract($Dereference($t24));

    // $t26 := get_field<vesting::VestingSchedule>.start_timestamp_secs($t25) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:566:13+54
    $t26 := $start_timestamp_secs#$1_vesting_VestingSchedule($t25);

    // $t27 := timestamp::now_seconds() on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:566:70+24
    call $t27 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,26989,27013)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t28 := >($t26, $t27) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:566:68+1
    call $t28 := $Gt($t26, $t27);

    // if ($t28) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:566:9+117
    if ($t28) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:567:13+6
    assume {:print "$at(2,27029,27035)"} true;
L1:

    // pack_ref_deep($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:567:13+6
    assume {:print "$at(2,27029,27035)"} true;

    // destroy($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:567:13+6

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:567:13+6
    goto L7;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:571:37+16
    assume {:print "$at(2,27200,27216)"} true;
L0:

    // $t29 := borrow_field<vesting::VestingContract>.vesting_schedule($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:571:32+38
    assume {:print "$at(2,27195,27233)"} true;
    $t29 := $ChildMutation($t24, 4, $vesting_schedule#$1_vesting_VestingContract($Dereference($t24)));

    // trace_local[vesting_schedule]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:571:13+16
    $temp_0'$1_vesting_VestingSchedule' := $Dereference($t29);
    assume {:print "$track_local(57,35,9):", $temp_0'$1_vesting_VestingSchedule'} $temp_0'$1_vesting_VestingSchedule' == $temp_0'$1_vesting_VestingSchedule';

    // $t30 := get_field<vesting::VestingSchedule>.last_vested_period($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:572:34+35
    assume {:print "$at(2,27268,27303)"} true;
    $t30 := $last_vested_period#$1_vesting_VestingSchedule($Dereference($t29));

    // $t31 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:573:56+1
    assume {:print "$at(2,27360,27361)"} true;
    $t31 := 1;
    assume $IsValid'u64'($t31);

    // $t32 := +($t30, $t31) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:573:54+1
    call $t32 := $AddU64($t30, $t31);
    if ($abort_flag) {
        assume {:print "$at(2,27358,27359)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // trace_local[next_period_to_vest]($t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:573:13+19
    assume {:print "$track_local(57,35,3):", $t32} $t32 == $t32;

    // $t33 := timestamp::now_seconds() on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:575:14+24
    assume {:print "$at(2,27412,27436)"} true;
    call $t33 := $1_timestamp_now_seconds();
    if ($abort_flag) {
        assume {:print "$at(2,27412,27436)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t34 := get_field<vesting::VestingSchedule>.start_timestamp_secs($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:575:41+37
    $t34 := $start_timestamp_secs#$1_vesting_VestingSchedule($Dereference($t29));

    // $t35 := -($t33, $t34) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:575:39+1
    call $t35 := $Sub($t33, $t34);
    if ($abort_flag) {
        assume {:print "$at(2,27437,27438)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t36 := get_field<vesting::VestingSchedule>.period_duration($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:575:82+32
    $t36 := $period_duration#$1_vesting_VestingSchedule($Dereference($t29));

    // $t37 := /($t35, $t36) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:575:80+1
    call $t37 := $Div($t35, $t36);
    if ($abort_flag) {
        assume {:print "$at(2,27478,27479)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t38 := <($t37, $t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:576:35+1
    assume {:print "$at(2,27548,27549)"} true;
    call $t38 := $Lt($t37, $t32);

    // if ($t38) goto L3 else goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:576:9+79
    if ($t38) { goto L3; } else { goto L2; }

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:577:13+6
    assume {:print "$at(2,27585,27591)"} true;
L3:

    // destroy($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:577:13+6
    assume {:print "$at(2,27585,27591)"} true;

    // pack_ref_deep($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:577:13+6

    // destroy($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:577:13+6

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:577:13+6
    goto L7;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:582:25+16
    assume {:print "$at(2,27767,27783)"} true;
L2:

    // $t39 := get_field<vesting::VestingSchedule>.schedule($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:582:24+26
    assume {:print "$at(2,27766,27792)"} true;
    $t39 := $schedule#$1_vesting_VestingSchedule($Dereference($t29));

    // trace_local[schedule]($t39) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:582:13+8
    assume {:print "$track_local(57,35,4):", $t39} $t39 == $t39;

    // $t40 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:583:52+1
    assume {:print "$at(2,27845,27846)"} true;
    $t40 := 1;
    assume $IsValid'u64'($t40);

    // $t41 := -($t32, $t40) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:583:50+1
    call $t41 := $Sub($t32, $t40);
    if ($abort_flag) {
        assume {:print "$at(2,27843,27844)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // trace_local[schedule_index]($t41) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:583:13+14
    assume {:print "$track_local(57,35,5):", $t41} $t41 == $t41;

    // $t42 := vector::length<fixed_point32::FixedPoint32>($t39) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:584:53+24
    assume {:print "$at(2,27900,27924)"} true;
    call $t42 := $1_vector_length'$1_fixed_point32_FixedPoint32'($t39);
    if ($abort_flag) {
        assume {:print "$at(2,27900,27924)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t43 := <($t41, $t42) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:584:51+1
    call $t43 := $Lt($t41, $t42);

    // if ($t43) goto L5 else goto L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:584:32+281
    if ($t43) { goto L5; } else { goto L4; }

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:585:29+8
    assume {:print "$at(2,27956,27964)"} true;
L5:

    // $t1 := vector::borrow<fixed_point32::FixedPoint32>($t39, $t41) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:585:14+40
    assume {:print "$at(2,27941,27981)"} true;
    call $t1 := $1_vector_borrow'$1_fixed_point32_FixedPoint32'($t39, $t41);
    if ($abort_flag) {
        assume {:print "$at(2,27941,27981)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // goto L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:584:32+281
    assume {:print "$at(2,27879,28160)"} true;
    goto L6;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:588:29+8
    assume {:print "$at(2,28111,28119)"} true;
L4:

    // $t44 := vector::length<fixed_point32::FixedPoint32>($t39) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:588:39+24
    assume {:print "$at(2,28121,28145)"} true;
    call $t44 := $1_vector_length'$1_fixed_point32_FixedPoint32'($t39);
    if ($abort_flag) {
        assume {:print "$at(2,28121,28145)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t45 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:588:66+1
    $t45 := 1;
    assume $IsValid'u64'($t45);

    // $t46 := -($t44, $t45) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:588:64+1
    call $t46 := $Sub($t44, $t45);
    if ($abort_flag) {
        assume {:print "$at(2,28146,28147)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t1 := vector::borrow<fixed_point32::FixedPoint32>($t39, $t46) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:588:14+54
    call $t1 := $1_vector_borrow'$1_fixed_point32_FixedPoint32'($t39, $t46);
    if ($abort_flag) {
        assume {:print "$at(2,28096,28150)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:584:32+281
    assume {:print "$at(2,27879,28160)"} true;
L6:

    // trace_local[vesting_fraction]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:584:13+16
    assume {:print "$at(2,27860,27876)"} true;
    assume {:print "$track_local(57,35,8):", $t1} $t1 == $t1;

    // $t47 := get_field<vesting::VestingContract>.grant_pool($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:590:49+28
    assume {:print "$at(2,28210,28238)"} true;
    $t47 := $grant_pool#$1_vesting_VestingContract($Dereference($t24));

    // $t48 := pool_u64::total_coins($t47) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:590:27+51
    call $t48 := $1_pool_u64_total_coins($t47);
    if ($abort_flag) {
        assume {:print "$at(2,28188,28239)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t49 := opaque begin: fixed_point32::multiply_u64($t48, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    assume {:print "$at(2,28269,28327)"} true;

    // assume Identical($t50, Gt(fixed_point32::spec_multiply_u64($t48, $t1), 18446744073709551615)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    assume ($t50 == ($1_fixed_point32_spec_multiply_u64($t48, $t1) > 18446744073709551615));

    // if ($t50) goto L11 else goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    if ($t50) { goto L11; } else { goto L9; }

    // label L10 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
L10:

    // assume And(Gt(fixed_point32::spec_multiply_u64($t48, $t1), 18446744073709551615), Eq(131075, $t23)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    assume {:print "$at(2,28269,28327)"} true;
    assume (($1_fixed_point32_spec_multiply_u64($t48, $t1) > 18446744073709551615) && $IsEqual'num'(131075, $t23));

    // trace_abort($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    assume {:print "$at(2,28269,28327)"} true;
    assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    goto L8;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
L9:

    // assume WellFormed($t49) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    assume {:print "$at(2,28269,28327)"} true;
    assume $IsValid'u64'($t49);

    // assume Eq<u64>($t49, fixed_point32::spec_multiply_u64($t48, $t1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58
    assume $IsEqual'u64'($t49, $1_fixed_point32_spec_multiply_u64($t48, $t1));

    // $t49 := opaque end: fixed_point32::multiply_u64($t48, $t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:591:29+58

    // $t51 := get_field<vesting::VestingContract>.remaining_grant($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:593:44+32
    assume {:print "$at(2,28489,28521)"} true;
    $t51 := $remaining_grant#$1_vesting_VestingContract($Dereference($t24));

    // $t52 := math64::min($t49, $t51) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:593:25+52
    call $t52 := $1_math64_min($t49, $t51);
    if ($abort_flag) {
        assume {:print "$at(2,28470,28522)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // trace_local[vested_amount]($t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:593:9+13
    assume {:print "$track_local(57,35,6):", $t52} $t52 == $t52;

    // $t53 := get_field<vesting::VestingContract>.remaining_grant($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:594:44+32
    assume {:print "$at(2,28567,28599)"} true;
    $t53 := $remaining_grant#$1_vesting_VestingContract($Dereference($t24));

    // $t54 := -($t53, $t52) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:594:77+1
    call $t54 := $Sub($t53, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,28600,28601)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t55 := borrow_field<vesting::VestingContract>.remaining_grant($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:594:9+32
    $t55 := $ChildMutation($t24, 7, $remaining_grant#$1_vesting_VestingContract($Dereference($t24)));

    // write_ref($t55, $t54) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:594:9+83
    $t55 := $UpdateMutation($t55, $t54);

    // write_back[Reference($t24).remaining_grant (u64)]($t55) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:594:9+83
    $t24 := $UpdateMutation($t24, $Update'$1_vesting_VestingContract'_remaining_grant($Dereference($t24), $Dereference($t55)));

    // $t56 := borrow_field<vesting::VestingSchedule>.last_vested_period($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:595:9+35
    assume {:print "$at(2,28625,28660)"} true;
    $t56 := $ChildMutation($t29, 3, $last_vested_period#$1_vesting_VestingSchedule($Dereference($t29)));

    // write_ref($t56, $t32) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:595:9+57
    $t56 := $UpdateMutation($t56, $t32);

    // write_back[Reference($t29).last_vested_period (u64)]($t56) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:595:9+57
    $t29 := $UpdateMutation($t29, $Update'$1_vesting_VestingSchedule'_last_vested_period($Dereference($t29), $Dereference($t56)));

    // write_back[Reference($t24).vesting_schedule (vesting::VestingSchedule)]($t29) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:595:9+57
    $t24 := $UpdateMutation($t24, $Update'$1_vesting_VestingContract'_vesting_schedule($Dereference($t24), $Dereference($t29)));

    // $t57 := read_ref($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:596:21+33
    assume {:print "$at(2,28704,28737)"} true;
    $t57 := $Dereference($t24);

    // vesting::unlock_stake($t57, $t52) on_abort goto L8 with $t23 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:596:9+45
    call $1_vesting_unlock_stake($t57, $t52);
    if ($abort_flag) {
        assume {:print "$at(2,28692,28737)"} true;
        $t23 := $abort_code;
        assume {:print "$track_abort(57,35):", $t23} $t23 == $t23;
        goto L8;
    }

    // $t58 := borrow_field<vesting::VestingContract>.vest_events($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:599:13+33
    assume {:print "$at(2,28772,28805)"} true;
    $t58 := $ChildMutation($t24, 14, $vest_events#$1_vesting_VestingContract($Dereference($t24)));

    // $t59 := get_field<vesting::VestingContract>.admin($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:601:24+22
    assume {:print "$at(2,28854,28876)"} true;
    $t59 := $admin#$1_vesting_VestingContract($Dereference($t24));

    // $t60 := get_field<vesting::VestingContract>.staking($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:603:39+24
    assume {:print "$at(2,28976,29000)"} true;
    $t60 := $staking#$1_vesting_VestingContract($Dereference($t24));

    // $t61 := get_field<vesting::StakingInfo>.pool_address($t60) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:603:39+37
    $t61 := $pool_address#$1_vesting_StakingInfo($t60);

    // $t62 := pack vesting::VestEvent($t59, $t0, $t61, $t32, $t52) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:600:13+300
    assume {:print "$at(2,28819,29119)"} true;
    $t62 := $1_vesting_VestEvent($t59, $t0, $t61, $t32, $t52);

    // opaque begin: event::emit_event<vesting::VestEvent>($t58, $t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:598:9+382
    assume {:print "$at(2,28748,29130)"} true;

    // opaque end: event::emit_event<vesting::VestEvent>($t58, $t62) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:598:9+382

    // write_back[Reference($t24).vest_events (event::EventHandle<vesting::VestEvent>)]($t58) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:598:9+382
    $t24 := $UpdateMutation($t24, $Update'$1_vesting_VestingContract'_vest_events($Dereference($t24), $Dereference($t58)));

    // pack_ref_deep($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:598:9+382

    // write_back[vesting::VestingContract@]($t24) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:598:9+382
    $1_vesting_VestingContract_$memory := $ResourceUpdate($1_vesting_VestingContract_$memory, $GlobalLocationAddress($t24),
        $Dereference($t24));

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:608:5+1
    assume {:print "$at(2,29136,29137)"} true;
L7:

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:608:5+1
    assume {:print "$at(2,29136,29137)"} true;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:608:5+1
L8:

    // abort($t23) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:608:5+1
    assume {:print "$at(2,29136,29137)"} true;
    $abort_code := $t23;
    $abort_flag := true;
    return;

    // label L11 at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;
L11:

    // destroy($t24) at <internal>:1:1+10
    assume {:print "$at(1,0,10)"} true;

    // destroy($t29) at <internal>:1:1+10

    // goto L10 at <internal>:1:1+10
    goto L10;

}

// fun vesting::vest_many [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+408
procedure {:timeLimit 200} $1_vesting_vest_many$verify(_$t0: Vec (int)) returns ()
{
    // declare local variables
    var $t1: int;
    var $t2: int;
    var $t3: Vec (int);
    var $t4: int;
    var $t5: int;
    var $t6: int;
    var $t7: bool;
    var $t8: int;
    var $t9: int;
    var $t10: int;
    var $t11: int;
    var $t12: bool;
    var $t13: int;
    var $t14: int;
    var $t15: int;
    var $t0: Vec (int);
    var $temp_0'u64': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume {:print "$at(2,29191,29192)"} true;
    assume $IsValid'vec'address''($t0);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+408
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+408
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+408
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+408
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[contract_addresses]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:611:5+1
    assume {:print "$track_local(57,36,0):", $t0} $t0 == $t0;

    // $t4 := vector::length<address>($t0) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:612:19+35
    assume {:print "$at(2,29300,29335)"} true;
    call $t4 := $1_vector_length'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(2,29300,29335)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,36):", $t5} $t5 == $t5;
        goto L9;
    }

    // $t6 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:24+1
    assume {:print "$at(2,29361,29362)"} true;
    $t6 := 0;
    assume $IsValid'u64'($t6);

    // $t7 := !=($t4, $t6) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:21+2
    $t7 := !$IsEqual'u64'($t4, $t6);

    // if ($t7) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:9+72
    if ($t7) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:9+72
L1:

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:9+72
    assume {:print "$at(2,29346,29418)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:51+28
L0:

    // $t8 := 16 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:51+28
    assume {:print "$at(2,29388,29416)"} true;
    $t8 := 16;
    assume $IsValid'u64'($t8);

    // $t9 := error::invalid_argument($t8) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:27+53
    call $t9 := $1_error_invalid_argument($t8);
    if ($abort_flag) {
        assume {:print "$at(2,29364,29417)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,36):", $t5} $t5 == $t5;
        goto L9;
    }

    // trace_abort($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:9+72
    assume {:print "$at(2,29346,29418)"} true;
    assume {:print "$track_abort(57,36):", $t9} $t9 == $t9;

    // $t5 := move($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:9+72
    $t5 := $t9;

    // goto L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:614:9+72
    goto L9;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:616:30+19
    assume {:print "$at(2,29450,29469)"} true;
L2:

    // trace_local[v#262]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:616:9+163
    assume {:print "$at(2,29429,29592)"} true;
    assume {:print "$track_local(57,36,3):", $t0} $t0 == $t0;

    // $t10 := 0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:17+1
    assume {:print "$at(18,9246,9247)"} true;
    $t10 := 0;
    assume $IsValid'u64'($t10);

    // trace_local[i#264]($t10) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:261:13+1
    assume {:print "$track_local(57,36,1):", $t10} $t10 == $t10;

    // $t11 := vector::length<address>($t0) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:19+9
    assume {:print "$at(18,9267,9276)"} true;
    call $t11 := $1_vector_length'address'($t0);
    if ($abort_flag) {
        assume {:print "$at(18,9267,9276)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,36):", $t5} $t5 == $t5;
        goto L9;
    }

    // trace_local[len#265]($t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:262:13+3
    assume {:print "$track_local(57,36,2):", $t11} $t11 == $t11;

    // label L6 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
L6:

    // $t1 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$at(18,9293,9294)"} true;
    havoc $t1;

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t1);

    // $t12 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t12;

    // assume WellFormed($t12) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'bool'($t12);

    // $t13 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t13;

    // assume WellFormed($t13) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'address'($t13);

    // $t14 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t14;

    // assume WellFormed($t14) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t14);

    // $t15 := havoc[val]() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    havoc $t15;

    // assume WellFormed($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume $IsValid'u64'($t15);

    // trace_local[i#264]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume {:print "$info(): enter loop, variable(s) i#264 havocked and reassigned"} true;
    assume {:print "$track_local(57,36,1):", $t1} $t1 == $t1;

    // assume Not(AbortFlag()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:16+1
    assume !$abort_flag;

    // $t12 := <($t1, $t11) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:18+1
    call $t12 := $Lt($t1, $t11);

    // if ($t12) goto L4 else goto L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
    if ($t12) { goto L4; } else { goto L3; }

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:263:9+78
L4:

    // label L5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:22+1
    assume {:print "$at(18,9325,9326)"} true;
L5:

    // $t13 := vector::borrow<address>($t0, $t1) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:264:15+12
    assume {:print "$at(18,9318,9330)"} true;
    call $t13 := $1_vector_borrow'address'($t0, $t1);
    if ($abort_flag) {
        assume {:print "$at(18,9318,9330)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,36):", $t5} $t5 == $t5;
        goto L9;
    }

    // vesting::vest($t13) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:618:13+22
    assume {:print "$at(2,29558,29580)"} true;
    call $1_vesting_vest($t13);
    if ($abort_flag) {
        assume {:print "$at(2,29558,29580)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,36):", $t5} $t5 == $t5;
        goto L9;
    }

    // $t14 := 1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:21+1
    assume {:print "$at(18,9353,9354)"} true;
    $t14 := 1;
    assume $IsValid'u64'($t14);

    // $t15 := +($t1, $t14) on_abort goto L9 with $t5 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:19+1
    call $t15 := $AddU64($t1, $t14);
    if ($abort_flag) {
        assume {:print "$at(18,9351,9352)"} true;
        $t5 := $abort_code;
        assume {:print "$track_abort(57,36):", $t5} $t5 == $t5;
        goto L9;
    }

    // trace_local[i#264]($t15) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+1
    assume {:print "$track_local(57,36,1):", $t15} $t15 == $t15;

    // goto L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/../aptos-stdlib/../move-stdlib/sources/vector.move:265:13+9
    goto L7;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:619:11+1
    assume {:print "$at(2,29592,29593)"} true;
L3:

    // goto L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:619:11+1
    assume {:print "$at(2,29592,29593)"} true;
    goto L8;

    // label L7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:619:11+1
    // Loop invariant checking block for the loop started with header: L6
L7:

    // stop() at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:619:11+1
    assume {:print "$at(2,29592,29593)"} true;
    assume false;
    return;

    // label L8 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:620:5+1
    assume {:print "$at(2,29598,29599)"} true;
L8:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:620:5+1
    assume {:print "$at(2,29598,29599)"} true;
    assert {:msg "assert_failed(2,29598,29599): function does not abort under this condition"}
      !false;

    // return () at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:620:5+1
    return;

    // label L9 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:620:5+1
L9:

    // abort($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:620:5+1
    assume {:print "$at(2,29598,29599)"} true;
    $abort_code := $t5;
    $abort_flag := true;
    return;

}

// fun vesting::vesting_contracts [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:309:5+258
procedure {:timeLimit 200} $1_vesting_vesting_contracts$verify(_$t0: int) returns ($ret0: Vec (int))
{
    // declare local variables
    var $t1: Vec (int);
    var $t2: bool;
    var $t3: bool;
    var $t4: int;
    var $t5: $1_vesting_AdminStore;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'vec'address'': Vec (int);
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:309:5+1
    assume {:print "$at(2,14451,14452)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::AdminStore>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:309:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_AdminStore_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_AdminStore_$memory, $a_0);
    ($IsValid'$1_vesting_AdminStore'($rsc))));

    // trace_local[admin]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:309:5+1
    assume {:print "$track_local(57,37,0):", $t0} $t0 == $t0;

    // $t2 := exists<vesting::AdminStore>($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:310:14+6
    assume {:print "$at(2,14548,14554)"} true;
    $t2 := $ResourceExists($1_vesting_AdminStore_$memory, $t0);

    // $t3 := !($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:310:13+1
    call $t3 := $Not($t2);

    // if ($t3) goto L1 else goto L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:310:9+160
    if ($t3) { goto L1; } else { goto L0; }

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:311:13+24
    assume {:print "$at(2,14589,14613)"} true;
L1:

    // $t1 := vector::empty<address>() on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:311:13+24
    assume {:print "$at(2,14589,14613)"} true;
    call $t1 := $1_vector_empty'address'();
    if ($abort_flag) {
        assume {:print "$at(2,14589,14613)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,37):", $t4} $t4 == $t4;
        goto L4;
    }

    // goto L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:310:9+160
    assume {:print "$at(2,14543,14703)"} true;
    goto L2;

    // label L0 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:313:39+5
    assume {:print "$at(2,14669,14674)"} true;
L0:

    // $t5 := get_global<vesting::AdminStore>($t0) on_abort goto L4 with $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:313:13+13
    assume {:print "$at(2,14643,14656)"} true;
    if (!$ResourceExists($1_vesting_AdminStore_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t5 := $ResourceValue($1_vesting_AdminStore_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,14643,14656)"} true;
        $t4 := $abort_code;
        assume {:print "$track_abort(57,37):", $t4} $t4 == $t4;
        goto L4;
    }

    // $t1 := get_field<vesting::AdminStore>.vesting_contracts($t5) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:313:13+50
    $t1 := $vesting_contracts#$1_vesting_AdminStore($t5);

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:310:9+160
    assume {:print "$at(2,14543,14703)"} true;
L2:

    // trace_return[0]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:310:9+160
    assume {:print "$at(2,14543,14703)"} true;
    assume {:print "$track_return(57,37,0):", $t1} $t1 == $t1;

    // label L3 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:315:5+1
    assume {:print "$at(2,14708,14709)"} true;
L3:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:32:9+16
    assume {:print "$at(3,1109,1125)"} true;
    assert {:msg "assert_failed(3,1109,1125): function does not abort under this condition"}
      !false;

    // return $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:32:9+16
    $ret0 := $t1;
    return;

    // label L4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:315:5+1
    assume {:print "$at(2,14708,14709)"} true;
L4:

    // assert false at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:31:5+88
    assume {:print "$at(3,1043,1131)"} true;
    assert {:msg "assert_failed(3,1043,1131): abort not covered by any of the `aborts_if` clauses"}
      false;

    // abort($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:31:5+88
    $abort_code := $t4;
    $abort_flag := true;
    return;

}

// fun vesting::vesting_start_secs [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:261:5+271
procedure {:timeLimit 200} $1_vesting_vesting_start_secs$verify(_$t0: int) returns ($ret0: int)
{
    // declare local variables
    var $t1: int;
    var $t2: $1_vesting_VestingContract;
    var $t3: $1_vesting_VestingSchedule;
    var $t4: int;
    var $t0: int;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    var $1_vesting_VestingContract_$memory#54: $Memory $1_vesting_VestingContract;
    $t0 := _$t0;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume WellFormed($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:261:5+1
    assume {:print "$at(2,11707,11708)"} true;
    assume $IsValid'address'($t0);

    // assume forall $rsc: ResourceDomain<vesting::VestingContract>(): And(WellFormed($rsc), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($rsc)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($rsc)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:261:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_vesting_VestingContract_$memory, $a_0)}(var $rsc := $ResourceValue($1_vesting_VestingContract_$memory, $a_0);
    (($IsValid'$1_vesting_VestingContract'($rsc) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), addr)))) && (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)))); (forall $i_3: int, $i_4: int :: $InRange($range_1, $i_3) ==> $InRange($range_2, $i_4) ==> (var i := $i_3;
    (var j := $i_4;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($rsc)), j)) ==> $IsEqual'num'(i, j)))))))))))));

    // @54 := save_mem(vesting::VestingContract) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:261:5+1
    $1_vesting_VestingContract_$memory#54 := $1_vesting_VestingContract_$memory;

    // trace_local[vesting_contract_address]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:261:5+1
    assume {:print "$track_local(57,39,0):", $t0} $t0 == $t0;

    // vesting::assert_vesting_contract_exists($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:262:9+56
    assume {:print "$at(2,11812,11868)"} true;
    call $1_vesting_assert_vesting_contract_exists($t0);
    if ($abort_flag) {
        assume {:print "$at(2,11812,11868)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,39):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t2 := get_global<vesting::VestingContract>($t0) on_abort goto L2 with $t1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:263:9+13
    assume {:print "$at(2,11878,11891)"} true;
    if (!$ResourceExists($1_vesting_VestingContract_$memory, $t0)) {
        call $ExecFailureAbort();
    } else {
        $t2 := $ResourceValue($1_vesting_VestingContract_$memory, $t0);
    }
    if ($abort_flag) {
        assume {:print "$at(2,11878,11891)"} true;
        $t1 := $abort_code;
        assume {:print "$track_abort(57,39):", $t1} $t1 == $t1;
        goto L2;
    }

    // $t3 := get_field<vesting::VestingContract>.vesting_schedule($t2) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:263:9+73
    $t3 := $vesting_schedule#$1_vesting_VestingContract($t2);

    // $t4 := get_field<vesting::VestingSchedule>.start_timestamp_secs($t3) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:263:9+94
    $t4 := $start_timestamp_secs#$1_vesting_VestingSchedule($t3);

    // trace_return[0]($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:263:9+94
    assume {:print "$track_return(57,39,0):", $t4} $t4 == $t4;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:264:5+1
    assume {:print "$at(2,11977,11978)"} true;
L1:

    // assert Not(Not(exists[@54]<vesting::VestingContract>($t0))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:12:9+61
    assume {:print "$at(3,352,413)"} true;
    assert {:msg "assert_failed(3,352,413): function does not abort under this condition"}
      !!$ResourceExists($1_vesting_VestingContract_$memory#54, $t0);

    // return $t4 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:12:9+61
    $ret0 := $t4;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:264:5+1
    assume {:print "$at(2,11977,11978)"} true;
L2:

    // assert Not(exists[@54]<vesting::VestingContract>($t0)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:11:5+141
    assume {:print "$at(3,278,419)"} true;
    assert {:msg "assert_failed(3,278,419): abort not covered by any of the `aborts_if` clauses"}
      !$ResourceExists($1_vesting_VestingContract_$memory#54, $t0);

    // abort($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.spec.move:11:5+141
    $abort_code := $t1;
    $abort_flag := true;
    return;

}

// fun vesting::withdraw_stake [baseline] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+587
procedure {:inline 1} $1_vesting_withdraw_stake(_$t0: $1_vesting_VestingContract, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: $signer;
    var $t3: int;
    var $t4: $1_vesting_StakingInfo;
    var $t5: int;
    var $t6: Table int ($1_staking_contract_StakingContract);
    var $t7: int;
    var $t8: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t9: int;
    var $t10: $signer;
    var $t11: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t12: int;
    var $t13: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t14: int;
    var $t15: int;
    var $t16: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t17: int;
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_vesting_VestingContract;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // bytecode translation starts here
    // trace_local[vesting_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume {:print "$at(2,44691,44692)"} true;
    assume {:print "$track_local(57,41,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume {:print "$track_local(57,41,1):", $t1} $t1 == $t1;

    // $t4 := get_field<vesting::VestingContract>.staking($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:959:56+24
    assume {:print "$at(2,45009,45033)"} true;
    $t4 := $staking#$1_vesting_VestingContract($t0);

    // $t5 := get_field<vesting::StakingInfo>.operator($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:959:56+33
    $t5 := $operator#$1_vesting_StakingInfo($t4);

    // assume Identical($t6, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t6 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t1)));

    // staking_contract::distribute($t1, $t5) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:959:9+81
    assume {:print "$at(2,44962,45043)"} true;
    call $1_staking_contract_distribute($t1, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,44962,45043)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // assume Identical($t8, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t8 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t9 := coin::balance<aptos_coin::AptosCoin>($t1) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:960:31+42
    assume {:print "$at(2,45075,45117)"} true;
    call $t9 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,45075,45117)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[withdrawn_coins]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:960:13+15
    assume {:print "$track_local(57,41,3):", $t9} $t9 == $t9;

    // $t10 := vesting::get_vesting_account_signer_internal($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:961:32+53
    assume {:print "$at(2,45150,45203)"} true;
    call $t10 := $1_vesting_get_vesting_account_signer_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(2,45150,45203)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // assume Identical($t11, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t11 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t12, signer::$address_of($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:384:9+47
    assume {:print "$at(95,16622,16669)"} true;
    assume ($t12 == $1_signer_$address_of($t10));

    // assume Identical($t13, global<coin::CoinStore<aptos_coin::AptosCoin>>($t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:385:9+59
    assume {:print "$at(95,16678,16737)"} true;
    assume ($t13 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t12));

    // assume Identical($t14, select coin::Coin.value(select coin::CoinStore.coin($t13))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:386:9+36
    assume {:print "$at(95,16746,16782)"} true;
    assume ($t14 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t13)));

    // assume Identical($t15, signer::$address_of($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:394:9+47
    assume {:print "$at(95,17076,17123)"} true;
    assume ($t15 == $1_signer_$address_of($t10));

    // assume Identical($t16, global<coin::CoinStore<aptos_coin::AptosCoin>>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:395:9+59
    assume {:print "$at(95,17132,17191)"} true;
    assume ($t16 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t15));

    // assume Identical($t17, select coin::Coin.value(select coin::CoinStore.coin($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:396:9+36
    assume {:print "$at(95,17200,17236)"} true;
    assume ($t17 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t16)));

    // $t18 := coin::withdraw<aptos_coin::AptosCoin>($t10, $t9) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:962:9+59
    assume {:print "$at(2,45213,45272)"} true;
    call $t18 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t10, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,45213,45272)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:962:9+59
    assume {:print "$track_return(57,41,0):", $t18} $t18 == $t18;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    assume {:print "$at(2,45277,45278)"} true;
L1:

    // return $t18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    assume {:print "$at(2,45277,45278)"} true;
    $ret0 := $t18;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    assume {:print "$at(2,45277,45278)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}

// fun vesting::withdraw_stake [verification] at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+587
procedure {:timeLimit 200} $1_vesting_withdraw_stake$verify(_$t0: $1_vesting_VestingContract, _$t1: int) returns ($ret0: $1_coin_Coin'$1_aptos_coin_AptosCoin')
{
    // declare local variables
    var $t2: $signer;
    var $t3: int;
    var $t4: $1_vesting_StakingInfo;
    var $t5: int;
    var $t6: Table int ($1_staking_contract_StakingContract);
    var $t7: int;
    var $t8: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t9: int;
    var $t10: $signer;
    var $t11: $1_option_Option'$1_optional_aggregator_OptionalAggregator';
    var $t12: int;
    var $t13: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t14: int;
    var $t15: int;
    var $t16: $1_coin_CoinStore'$1_aptos_coin_AptosCoin';
    var $t17: int;
    var $t18: $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $t0: $1_vesting_VestingContract;
    var $t1: int;
    var $temp_0'$1_coin_Coin'$1_aptos_coin_AptosCoin'': $1_coin_Coin'$1_aptos_coin_AptosCoin';
    var $temp_0'$1_vesting_VestingContract': $1_vesting_VestingContract;
    var $temp_0'address': int;
    var $temp_0'u64': int;
    $t0 := _$t0;
    $t1 := _$t1;

    // verification entrypoint assumptions
    call $InitVerification();

    // bytecode translation starts here
    // assume And(WellFormed($t0), And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select vesting::VestingContract.grant_pool($t0)), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), i), Index(select pool_u64::Pool.shareholders(select vesting::VestingContract.grant_pool($t0)), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume {:print "$at(2,44691,44692)"} true;
    assume ($IsValid'$1_vesting_VestingContract'($t0) && ((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), addr)))) && (var $range_0 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (var $range_1 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)))); (forall $i_2: int, $i_3: int :: $InRange($range_0, $i_2) ==> $InRange($range_1, $i_3) ==> (var i := $i_2;
    (var j := $i_3;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), i), ReadVec($shareholders#$1_pool_u64_Pool($grant_pool#$1_vesting_VestingContract($t0)), j)) ==> $IsEqual'num'(i, j))))))))));

    // assume WellFormed($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume $IsValid'address'($t1);

    // assume forall $rsc: ResourceDomain<coin::CoinInfo<aptos_coin::AptosCoin>>(): And(WellFormed($rsc), And(Le(Len<optional_aggregator::OptionalAggregator>(select option::Option.vec(select coin::CoinInfo.supply($rsc))), 1), forall $elem: select option::Option.vec(select coin::CoinInfo.supply($rsc)): And(And(And(And(And(Iff(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), option::$is_none<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), Iff(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), option::$is_none<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))), Implies(option::$is_some<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)), Le(select optional_aggregator::Integer.value(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem))), select optional_aggregator::Integer.limit(option::$borrow<optional_aggregator::Integer>(select optional_aggregator::OptionalAggregator.integer($elem)))))), Implies(option::$is_some<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)), Le(aggregator::spec_aggregator_get_val(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem))), aggregator::spec_get_limit(option::$borrow<aggregator::Aggregator>(select optional_aggregator::OptionalAggregator.aggregator($elem)))))), Le(Len<aggregator::Aggregator>(select option::Option.vec(select optional_aggregator::OptionalAggregator.aggregator($elem))), 1)), Le(Len<optional_aggregator::Integer>(select option::Option.vec(select optional_aggregator::OptionalAggregator.integer($elem))), 1)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    (($IsValid'$1_coin_CoinInfo'$1_aptos_coin_AptosCoin''($rsc) && ((LenVec($vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc))) <= 1) && (var $range_1 := $vec#$1_option_Option'$1_optional_aggregator_OptionalAggregator'($supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($rsc)); (forall $i_2: int :: InRangeVec($range_1, $i_2) ==> (var $elem := ReadVec($range_1, $i_2);
    ((((((($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) <==> $1_option_$is_none'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))) && ($1_option_$is_some'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($value#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= $limit#$1_optional_aggregator_Integer($1_option_$borrow'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem)))))) && ($1_option_$is_some'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)) ==> ($1_aggregator_spec_aggregator_get_val($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= $1_aggregator_spec_get_limit($1_option_$borrow'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem)))))) && (LenVec($vec#$1_option_Option'$1_aggregator_Aggregator'($aggregator#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)) && (LenVec($vec#$1_option_Option'$1_optional_aggregator_Integer'($integer#$1_optional_aggregator_OptionalAggregator($elem))) <= 1)))))))))));

    // assume forall $rsc: ResourceDomain<coin::CoinStore<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_CoinStore'$1_aptos_coin_AptosCoin''($rsc))));

    // assume forall $rsc: ResourceDomain<coin::Ghost$supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume $ResourceExists($1_coin_Ghost$supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0)}(var $rsc := $ResourceValue($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, $a_0);
    ($IsValid'$1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin''($rsc))));

    // assume exists<coin::Ghost$aggregate_supply<aptos_coin::AptosCoin>>(0x0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume $ResourceExists($1_coin_Ghost$aggregate_supply'$1_aptos_coin_AptosCoin'_$memory, 0);

    // assume forall $rsc: ResourceDomain<chain_status::GenesisEndMarker>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0)}(var $rsc := $ResourceValue($1_chain_status_GenesisEndMarker_$memory, $a_0);
    ($IsValid'$1_chain_status_GenesisEndMarker'($rsc))));

    // assume forall $rsc: ResourceDomain<timestamp::CurrentTimeMicroseconds>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0)}(var $rsc := $ResourceValue($1_timestamp_CurrentTimeMicroseconds_$memory, $a_0);
    ($IsValid'$1_timestamp_CurrentTimeMicroseconds'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::StakePool>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_StakePool_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_StakePool_$memory, $a_0);
    ($IsValid'$1_stake_StakePool'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorConfig>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorConfig_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorConfig_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorConfig'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorPerformance>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorPerformance_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorPerformance'($rsc))));

    // assume forall $rsc: ResourceDomain<stake::ValidatorSet>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_stake_ValidatorSet_$memory, $a_0)}(var $rsc := $ResourceValue($1_stake_ValidatorSet_$memory, $a_0);
    ($IsValid'$1_stake_ValidatorSet'($rsc))));

    // assume forall $rsc: ResourceDomain<reconfiguration::Configuration>(): WellFormed($rsc) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_reconfiguration_Configuration_$memory, $a_0)}(var $rsc := $ResourceValue($1_reconfiguration_Configuration_$memory, $a_0);
    ($IsValid'$1_reconfiguration_Configuration'($rsc))));

    // assume forall $rsc: ResourceDomain<staking_contract::Store>(): And(WellFormed($rsc), forall $key: select staking_contract::Store.staking_contracts($rsc): And(forall addr: TypeDomain<address>(): Eq<bool>(simple_map::spec_contains_key<address, u64>(select pool_u64::Pool.shares(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr), vector::spec_contains<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), addr)), forall i: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))), j: Range(0, Len<address>(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))))): Implies(Eq<address>(Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), i), Index(select pool_u64::Pool.shareholders(select staking_contract::StakingContract.distribution_pool(simple_map::spec_get<address, staking_contract::StakingContract>(select staking_contract::Store.staking_contracts($rsc), $key))), j)), Eq<num>(i, j)))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume (forall $a_0: int :: {$ResourceValue($1_staking_contract_Store_$memory, $a_0)}(var $rsc := $ResourceValue($1_staking_contract_Store_$memory, $a_0);
    (($IsValid'$1_staking_contract_Store'($rsc) && (var $range_1 := $staking_contracts#$1_staking_contract_Store($rsc); (forall $key: int :: ContainsTable($range_1, $EncodeKey'address'($key)) ==> (((forall addr: int :: $IsValid'address'(addr) ==> ($IsEqual'bool'($1_simple_map_spec_contains_key'address_u64'($shares#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr), $1_vector_spec_contains'address'($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), addr)))) && (var $range_2 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (var $range_3 := $Range(0, LenVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))))); (forall $i_4: int, $i_5: int :: $InRange($range_2, $i_4) ==> $InRange($range_3, $i_5) ==> (var i := $i_4;
    (var j := $i_5;
    (($IsEqual'address'(ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), i), ReadVec($shareholders#$1_pool_u64_Pool($distribution_pool#$1_staking_contract_StakingContract($1_simple_map_spec_get'address_$1_staking_contract_StakingContract'($staking_contracts#$1_staking_contract_Store($rsc), $key))), j)) ==> $IsEqual'num'(i, j))))))))))))))));

    // assume Implies(chain_status::$is_operating(), exists<timestamp::CurrentTimeMicroseconds>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+587
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/timestamp.spec.move:4:9+93
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_timestamp_CurrentTimeMicroseconds_$memory, 1));

    // assume Implies(exists<stake::ValidatorSet>(0x1), stake::validator_set_is_valid()) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+587
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:8:9+92
    assume ($ResourceExists($1_stake_ValidatorSet_$memory, 1) ==> $1_stake_validator_set_is_valid($1_stake_StakePool_$memory, $1_stake_ValidatorConfig_$memory, $1_stake_ValidatorPerformance_$memory, $1_stake_ValidatorSet_$memory));

    // assume Implies(chain_status::$is_operating(), exists<stake::ValidatorSet>(0x1)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+587
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/stake.spec.move:12:9+96
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> $ResourceExists($1_stake_ValidatorSet_$memory, 1));

    // assume Implies(chain_status::$is_operating(), Ge(timestamp::spec_now_microseconds(), reconfiguration::$last_reconfiguration_time())) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+587
    // global invariant at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/reconfiguration.spec.move:8:9+137
    assume ($1_chain_status_$is_operating($1_chain_status_GenesisEndMarker_$memory) ==> ($1_timestamp_spec_now_microseconds($1_timestamp_CurrentTimeMicroseconds_$memory) >= $1_reconfiguration_$last_reconfiguration_time($1_reconfiguration_Configuration_$memory)));

    // trace_local[vesting_contract]($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume {:print "$track_local(57,41,0):", $t0} $t0 == $t0;

    // trace_local[contract_address]($t1) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:956:5+1
    assume {:print "$track_local(57,41,1):", $t1} $t1 == $t1;

    // $t4 := get_field<vesting::VestingContract>.staking($t0) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:959:56+24
    assume {:print "$at(2,45009,45033)"} true;
    $t4 := $staking#$1_vesting_VestingContract($t0);

    // $t5 := get_field<vesting::StakingInfo>.operator($t4) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:959:56+33
    $t5 := $operator#$1_vesting_StakingInfo($t4);

    // assume Identical($t6, select staking_contract::Store.staking_contracts(global<staking_contract::Store>($t1))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/staking_contract.spec.move:268:9+64
    assume {:print "$at(134,11481,11545)"} true;
    assume ($t6 == $staking_contracts#$1_staking_contract_Store($ResourceValue($1_staking_contract_Store_$memory, $t1)));

    // staking_contract::distribute($t1, $t5) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:959:9+81
    assume {:print "$at(2,44962,45043)"} true;
    call $1_staking_contract_distribute($t1, $t5);
    if ($abort_flag) {
        assume {:print "$at(2,44962,45043)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // assume Identical($t8, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t8 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // $t9 := coin::balance<aptos_coin::AptosCoin>($t1) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:960:31+42
    assume {:print "$at(2,45075,45117)"} true;
    call $t9 := $1_coin_balance'$1_aptos_coin_AptosCoin'($t1);
    if ($abort_flag) {
        assume {:print "$at(2,45075,45117)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_local[withdrawn_coins]($t9) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:960:13+15
    assume {:print "$track_local(57,41,3):", $t9} $t9 == $t9;

    // $t10 := vesting::get_vesting_account_signer_internal($t0) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:961:32+53
    assume {:print "$at(2,45150,45203)"} true;
    call $t10 := $1_vesting_get_vesting_account_signer_internal($t0);
    if ($abort_flag) {
        assume {:print "$at(2,45150,45203)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // assume Identical($t11, select coin::CoinInfo.supply(global<coin::CoinInfo<aptos_coin::AptosCoin>>(select type_info::TypeInfo.account_address(type_info::$type_of<aptos_coin::AptosCoin>())))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:32:9+99
    assume {:print "$at(95,1664,1763)"} true;
    assume ($t11 == $supply#$1_coin_CoinInfo'$1_aptos_coin_AptosCoin'($ResourceValue($1_coin_CoinInfo'$1_aptos_coin_AptosCoin'_$memory, $account_address#$1_type_info_TypeInfo($1_type_info_TypeInfo(1, Vec(DefaultVecMap()[0 := 97][1 := 112][2 := 116][3 := 111][4 := 115][5 := 95][6 := 99][7 := 111][8 := 105][9 := 110], 10), Vec(DefaultVecMap()[0 := 65][1 := 112][2 := 116][3 := 111][4 := 115][5 := 67][6 := 111][7 := 105][8 := 110], 9))))));

    // assume Identical($t12, signer::$address_of($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:384:9+47
    assume {:print "$at(95,16622,16669)"} true;
    assume ($t12 == $1_signer_$address_of($t10));

    // assume Identical($t13, global<coin::CoinStore<aptos_coin::AptosCoin>>($t12)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:385:9+59
    assume {:print "$at(95,16678,16737)"} true;
    assume ($t13 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t12));

    // assume Identical($t14, select coin::Coin.value(select coin::CoinStore.coin($t13))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:386:9+36
    assume {:print "$at(95,16746,16782)"} true;
    assume ($t14 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t13)));

    // assume Identical($t15, signer::$address_of($t10)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:394:9+47
    assume {:print "$at(95,17076,17123)"} true;
    assume ($t15 == $1_signer_$address_of($t10));

    // assume Identical($t16, global<coin::CoinStore<aptos_coin::AptosCoin>>($t15)) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:395:9+59
    assume {:print "$at(95,17132,17191)"} true;
    assume ($t16 == $ResourceValue($1_coin_CoinStore'$1_aptos_coin_AptosCoin'_$memory, $t15));

    // assume Identical($t17, select coin::Coin.value(select coin::CoinStore.coin($t16))) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/coin.spec.move:396:9+36
    assume {:print "$at(95,17200,17236)"} true;
    assume ($t17 == $value#$1_coin_Coin'$1_aptos_coin_AptosCoin'($coin#$1_coin_CoinStore'$1_aptos_coin_AptosCoin'($t16)));

    // $t18 := coin::withdraw<aptos_coin::AptosCoin>($t10, $t9) on_abort goto L2 with $t7 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:962:9+59
    assume {:print "$at(2,45213,45272)"} true;
    call $t18 := $1_coin_withdraw'$1_aptos_coin_AptosCoin'($t10, $t9);
    if ($abort_flag) {
        assume {:print "$at(2,45213,45272)"} true;
        $t7 := $abort_code;
        assume {:print "$track_abort(57,41):", $t7} $t7 == $t7;
        goto L2;
    }

    // trace_return[0]($t18) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:962:9+59
    assume {:print "$track_return(57,41,0):", $t18} $t18 == $t18;

    // label L1 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    assume {:print "$at(2,45277,45278)"} true;
L1:

    // assert Not(false) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    assume {:print "$at(2,45277,45278)"} true;
    assert {:msg "assert_failed(2,45277,45278): function does not abort under this condition"}
      !false;

    // return $t18 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    $ret0 := $t18;
    return;

    // label L2 at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
L2:

    // abort($t7) at /home/r/Downloads/Gitrepo/move_bit/aptos-core/aptos-move/framework/aptos-framework/sources/vesting.move:963:5+1
    assume {:print "$at(2,45277,45278)"} true;
    $abort_code := $t7;
    $abort_flag := true;
    return;

}
